/*! For license information please see main.300c1b59.js.LICENSE.txt */
!(function () {
  var e = {
      3361: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return ie;
          },
        });
        var r = (function () {
            function e(e) {
              var t = this;
              (this._insertTag = function (e) {
                var n;
                (n =
                  0 === t.tags.length
                    ? t.insertionPoint
                      ? t.insertionPoint.nextSibling
                      : t.prepend
                      ? t.container.firstChild
                      : t.before
                    : t.tags[t.tags.length - 1].nextSibling),
                  t.container.insertBefore(e, n),
                  t.tags.push(e);
              }),
                (this.isSpeedy = void 0 === e.speedy || e.speedy),
                (this.tags = []),
                (this.ctr = 0),
                (this.nonce = e.nonce),
                (this.key = e.key),
                (this.container = e.container),
                (this.prepend = e.prepend),
                (this.insertionPoint = e.insertionPoint),
                (this.before = null);
            }
            var t = e.prototype;
            return (
              (t.hydrate = function (e) {
                e.forEach(this._insertTag);
              }),
              (t.insert = function (e) {
                this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 &&
                  this._insertTag(
                    (function (e) {
                      var t = document.createElement("style");
                      return (
                        t.setAttribute("data-emotion", e.key),
                        void 0 !== e.nonce && t.setAttribute("nonce", e.nonce),
                        t.appendChild(document.createTextNode("")),
                        t.setAttribute("data-s", ""),
                        t
                      );
                    })(this)
                  );
                var t = this.tags[this.tags.length - 1];
                if (this.isSpeedy) {
                  var n = (function (e) {
                    if (e.sheet) return e.sheet;
                    for (var t = 0; t < document.styleSheets.length; t++)
                      if (document.styleSheets[t].ownerNode === e)
                        return document.styleSheets[t];
                  })(t);
                  try {
                    n.insertRule(e, n.cssRules.length);
                  } catch (r) {
                    0;
                  }
                } else t.appendChild(document.createTextNode(e));
                this.ctr++;
              }),
              (t.flush = function () {
                this.tags.forEach(function (e) {
                  return e.parentNode && e.parentNode.removeChild(e);
                }),
                  (this.tags = []),
                  (this.ctr = 0);
              }),
              e
            );
          })(),
          i = Math.abs,
          a = String.fromCharCode,
          o = Object.assign;
        function s(e) {
          return e.trim();
        }
        function l(e, t, n) {
          return e.replace(t, n);
        }
        function u(e, t) {
          return e.indexOf(t);
        }
        function c(e, t) {
          return 0 | e.charCodeAt(t);
        }
        function d(e, t, n) {
          return e.slice(t, n);
        }
        function f(e) {
          return e.length;
        }
        function h(e) {
          return e.length;
        }
        function p(e, t) {
          return t.push(e), e;
        }
        var v = 1,
          m = 1,
          g = 0,
          y = 0,
          b = 0,
          _ = "";
        function x(e, t, n, r, i, a, o) {
          return {
            value: e,
            root: t,
            parent: n,
            type: r,
            props: i,
            children: a,
            line: v,
            column: m,
            length: o,
            return: "",
          };
        }
        function S(e, t) {
          return o(
            x("", null, null, "", null, null, 0),
            e,
            { length: -e.length },
            t
          );
        }
        function w() {
          return (
            (b = y > 0 ? c(_, --y) : 0), m--, 10 === b && ((m = 1), v--), b
          );
        }
        function M() {
          return (
            (b = y < g ? c(_, y++) : 0), m++, 10 === b && ((m = 1), v++), b
          );
        }
        function E() {
          return c(_, y);
        }
        function k() {
          return y;
        }
        function T(e, t) {
          return d(_, e, t);
        }
        function A(e) {
          switch (e) {
            case 0:
            case 9:
            case 10:
            case 13:
            case 32:
              return 5;
            case 33:
            case 43:
            case 44:
            case 47:
            case 62:
            case 64:
            case 126:
            case 59:
            case 123:
            case 125:
              return 4;
            case 58:
              return 3;
            case 34:
            case 39:
            case 40:
            case 91:
              return 2;
            case 41:
            case 93:
              return 1;
          }
          return 0;
        }
        function C(e) {
          return (v = m = 1), (g = f((_ = e))), (y = 0), [];
        }
        function P(e) {
          return (_ = ""), e;
        }
        function R(e) {
          return s(T(y - 1, N(91 === e ? e + 2 : 40 === e ? e + 1 : e)));
        }
        function L(e) {
          for (; (b = E()) && b < 33; ) M();
          return A(e) > 2 || A(b) > 3 ? "" : " ";
        }
        function I(e, t) {
          for (
            ;
            --t &&
            M() &&
            !(b < 48 || b > 102 || (b > 57 && b < 65) || (b > 70 && b < 97));

          );
          return T(e, k() + (t < 6 && 32 == E() && 32 == M()));
        }
        function N(e) {
          for (; M(); )
            switch (b) {
              case e:
                return y;
              case 34:
              case 39:
                34 !== e && 39 !== e && N(b);
                break;
              case 40:
                41 === e && N(e);
                break;
              case 92:
                M();
            }
          return y;
        }
        function O(e, t) {
          for (; M() && e + b !== 57 && (e + b !== 84 || 47 !== E()); );
          return "/*" + T(t, y - 1) + "*" + a(47 === e ? e : M());
        }
        function D(e) {
          for (; !A(E()); ) M();
          return T(e, y);
        }
        var U = "-ms-",
          z = "-moz-",
          F = "-webkit-",
          B = "comm",
          Z = "rule",
          H = "decl",
          V = "@keyframes";
        function G(e, t) {
          for (var n = "", r = h(e), i = 0; i < r; i++)
            n += t(e[i], i, e, t) || "";
          return n;
        }
        function W(e, t, n, r) {
          switch (e.type) {
            case "@layer":
              if (e.children.length) break;
            case "@import":
            case H:
              return (e.return = e.return || e.value);
            case B:
              return "";
            case V:
              return (e.return = e.value + "{" + G(e.children, r) + "}");
            case Z:
              e.value = e.props.join(",");
          }
          return f((n = G(e.children, r)))
            ? (e.return = e.value + "{" + n + "}")
            : "";
        }
        function j(e) {
          return P(X("", null, null, null, [""], (e = C(e)), 0, [0], e));
        }
        function X(e, t, n, r, i, o, s, d, h) {
          for (
            var v = 0,
              m = 0,
              g = s,
              y = 0,
              b = 0,
              _ = 0,
              x = 1,
              S = 1,
              T = 1,
              A = 0,
              C = "",
              P = i,
              N = o,
              U = r,
              z = C;
            S;

          )
            switch (((_ = A), (A = M()))) {
              case 40:
                if (108 != _ && 58 == c(z, g - 1)) {
                  -1 != u((z += l(R(A), "&", "&\f")), "&\f") && (T = -1);
                  break;
                }
              case 34:
              case 39:
              case 91:
                z += R(A);
                break;
              case 9:
              case 10:
              case 13:
              case 32:
                z += L(_);
                break;
              case 92:
                z += I(k() - 1, 7);
                continue;
              case 47:
                switch (E()) {
                  case 42:
                  case 47:
                    p(Y(O(M(), k()), t, n), h);
                    break;
                  default:
                    z += "/";
                }
                break;
              case 123 * x:
                d[v++] = f(z) * T;
              case 125 * x:
              case 59:
              case 0:
                switch (A) {
                  case 0:
                  case 125:
                    S = 0;
                  case 59 + m:
                    -1 == T && (z = l(z, /\f/g, "")),
                      b > 0 &&
                        f(z) - g &&
                        p(
                          b > 32
                            ? K(z + ";", r, n, g - 1)
                            : K(l(z, " ", "") + ";", r, n, g - 2),
                          h
                        );
                    break;
                  case 59:
                    z += ";";
                  default:
                    if (
                      (p(
                        (U = q(z, t, n, v, m, i, d, C, (P = []), (N = []), g)),
                        o
                      ),
                      123 === A)
                    )
                      if (0 === m) X(z, t, U, U, P, o, g, d, N);
                      else
                        switch (99 === y && 110 === c(z, 3) ? 100 : y) {
                          case 100:
                          case 108:
                          case 109:
                          case 115:
                            X(
                              e,
                              U,
                              U,
                              r &&
                                p(q(e, U, U, 0, 0, i, d, C, i, (P = []), g), N),
                              i,
                              N,
                              g,
                              d,
                              r ? P : N
                            );
                            break;
                          default:
                            X(z, U, U, U, [""], N, 0, d, N);
                        }
                }
                (v = m = b = 0), (x = T = 1), (C = z = ""), (g = s);
                break;
              case 58:
                (g = 1 + f(z)), (b = _);
              default:
                if (x < 1)
                  if (123 == A) --x;
                  else if (125 == A && 0 == x++ && 125 == w()) continue;
                switch (((z += a(A)), A * x)) {
                  case 38:
                    T = m > 0 ? 1 : ((z += "\f"), -1);
                    break;
                  case 44:
                    (d[v++] = (f(z) - 1) * T), (T = 1);
                    break;
                  case 64:
                    45 === E() && (z += R(M())),
                      (y = E()),
                      (m = g = f((C = z += D(k())))),
                      A++;
                    break;
                  case 45:
                    45 === _ && 2 == f(z) && (x = 0);
                }
            }
          return o;
        }
        function q(e, t, n, r, a, o, u, c, f, p, v) {
          for (
            var m = a - 1,
              g = 0 === a ? o : [""],
              y = h(g),
              b = 0,
              _ = 0,
              S = 0;
            b < r;
            ++b
          )
            for (
              var w = 0, M = d(e, m + 1, (m = i((_ = u[b])))), E = e;
              w < y;
              ++w
            )
              (E = s(_ > 0 ? g[w] + " " + M : l(M, /&\f/g, g[w]))) &&
                (f[S++] = E);
          return x(e, t, n, 0 === a ? Z : c, f, p, v);
        }
        function Y(e, t, n) {
          return x(e, t, n, B, a(b), d(e, 2, -2), 0);
        }
        function K(e, t, n, r) {
          return x(e, t, n, H, d(e, 0, r), d(e, r + 1, -1), r);
        }
        var $ = function (e, t, n) {
            for (
              var r = 0, i = 0;
              (r = i), (i = E()), 38 === r && 12 === i && (t[n] = 1), !A(i);

            )
              M();
            return T(e, y);
          },
          J = function (e, t) {
            return P(
              (function (e, t) {
                var n = -1,
                  r = 44;
                do {
                  switch (A(r)) {
                    case 0:
                      38 === r && 12 === E() && (t[n] = 1),
                        (e[n] += $(y - 1, t, n));
                      break;
                    case 2:
                      e[n] += R(r);
                      break;
                    case 4:
                      if (44 === r) {
                        (e[++n] = 58 === E() ? "&\f" : ""),
                          (t[n] = e[n].length);
                        break;
                      }
                    default:
                      e[n] += a(r);
                  }
                } while ((r = M()));
                return e;
              })(C(e), t)
            );
          },
          Q = new WeakMap(),
          ee = function (e) {
            if ("rule" === e.type && e.parent && !(e.length < 1)) {
              for (
                var t = e.value,
                  n = e.parent,
                  r = e.column === n.column && e.line === n.line;
                "rule" !== n.type;

              )
                if (!(n = n.parent)) return;
              if (
                (1 !== e.props.length || 58 === t.charCodeAt(0) || Q.get(n)) &&
                !r
              ) {
                Q.set(e, !0);
                for (
                  var i = [], a = J(t, i), o = n.props, s = 0, l = 0;
                  s < a.length;
                  s++
                )
                  for (var u = 0; u < o.length; u++, l++)
                    e.props[l] = i[s]
                      ? a[s].replace(/&\f/g, o[u])
                      : o[u] + " " + a[s];
              }
            }
          },
          te = function (e) {
            if ("decl" === e.type) {
              var t = e.value;
              108 === t.charCodeAt(0) &&
                98 === t.charCodeAt(2) &&
                ((e.return = ""), (e.value = ""));
            }
          };
        function ne(e, t) {
          switch (
            (function (e, t) {
              return 45 ^ c(e, 0)
                ? (((((((t << 2) ^ c(e, 0)) << 2) ^ c(e, 1)) << 2) ^ c(e, 2)) <<
                    2) ^
                    c(e, 3)
                : 0;
            })(e, t)
          ) {
            case 5103:
              return F + "print-" + e + e;
            case 5737:
            case 4201:
            case 3177:
            case 3433:
            case 1641:
            case 4457:
            case 2921:
            case 5572:
            case 6356:
            case 5844:
            case 3191:
            case 6645:
            case 3005:
            case 6391:
            case 5879:
            case 5623:
            case 6135:
            case 4599:
            case 4855:
            case 4215:
            case 6389:
            case 5109:
            case 5365:
            case 5621:
            case 3829:
              return F + e + e;
            case 5349:
            case 4246:
            case 4810:
            case 6968:
            case 2756:
              return F + e + z + e + U + e + e;
            case 6828:
            case 4268:
              return F + e + U + e + e;
            case 6165:
              return F + e + U + "flex-" + e + e;
            case 5187:
              return (
                F +
                e +
                l(e, /(\w+).+(:[^]+)/, F + "box-$1$2" + U + "flex-$1$2") +
                e
              );
            case 5443:
              return F + e + U + "flex-item-" + l(e, /flex-|-self/, "") + e;
            case 4675:
              return (
                F +
                e +
                U +
                "flex-line-pack" +
                l(e, /align-content|flex-|-self/, "") +
                e
              );
            case 5548:
              return F + e + U + l(e, "shrink", "negative") + e;
            case 5292:
              return F + e + U + l(e, "basis", "preferred-size") + e;
            case 6060:
              return (
                F +
                "box-" +
                l(e, "-grow", "") +
                F +
                e +
                U +
                l(e, "grow", "positive") +
                e
              );
            case 4554:
              return F + l(e, /([^-])(transform)/g, "$1" + F + "$2") + e;
            case 6187:
              return (
                l(
                  l(l(e, /(zoom-|grab)/, F + "$1"), /(image-set)/, F + "$1"),
                  e,
                  ""
                ) + e
              );
            case 5495:
            case 3959:
              return l(e, /(image-set\([^]*)/, F + "$1$`$1");
            case 4968:
              return (
                l(
                  l(
                    e,
                    /(.+:)(flex-)?(.*)/,
                    F + "box-pack:$3" + U + "flex-pack:$3"
                  ),
                  /s.+-b[^;]+/,
                  "justify"
                ) +
                F +
                e +
                e
              );
            case 4095:
            case 3583:
            case 4068:
            case 2532:
              return l(e, /(.+)-inline(.+)/, F + "$1$2") + e;
            case 8116:
            case 7059:
            case 5753:
            case 5535:
            case 5445:
            case 5701:
            case 4933:
            case 4677:
            case 5533:
            case 5789:
            case 5021:
            case 4765:
              if (f(e) - 1 - t > 6)
                switch (c(e, t + 1)) {
                  case 109:
                    if (45 !== c(e, t + 4)) break;
                  case 102:
                    return (
                      l(
                        e,
                        /(.+:)(.+)-([^]+)/,
                        "$1" +
                          F +
                          "$2-$3$1" +
                          z +
                          (108 == c(e, t + 3) ? "$3" : "$2-$3")
                      ) + e
                    );
                  case 115:
                    return ~u(e, "stretch")
                      ? ne(l(e, "stretch", "fill-available"), t) + e
                      : e;
                }
              break;
            case 4949:
              if (115 !== c(e, t + 1)) break;
            case 6444:
              switch (c(e, f(e) - 3 - (~u(e, "!important") && 10))) {
                case 107:
                  return l(e, ":", ":" + F) + e;
                case 101:
                  return (
                    l(
                      e,
                      /(.+:)([^;!]+)(;|!.+)?/,
                      "$1" +
                        F +
                        (45 === c(e, 14) ? "inline-" : "") +
                        "box$3$1" +
                        F +
                        "$2$3$1" +
                        U +
                        "$2box$3"
                    ) + e
                  );
              }
              break;
            case 5936:
              switch (c(e, t + 11)) {
                case 114:
                  return F + e + U + l(e, /[svh]\w+-[tblr]{2}/, "tb") + e;
                case 108:
                  return F + e + U + l(e, /[svh]\w+-[tblr]{2}/, "tb-rl") + e;
                case 45:
                  return F + e + U + l(e, /[svh]\w+-[tblr]{2}/, "lr") + e;
              }
              return F + e + U + e + e;
          }
          return e;
        }
        var re = [
            function (e, t, n, r) {
              if (e.length > -1 && !e.return)
                switch (e.type) {
                  case H:
                    e.return = ne(e.value, e.length);
                    break;
                  case V:
                    return G([S(e, { value: l(e.value, "@", "@" + F) })], r);
                  case Z:
                    if (e.length)
                      return (function (e, t) {
                        return e.map(t).join("");
                      })(e.props, function (t) {
                        switch (
                          (function (e, t) {
                            return (e = t.exec(e)) ? e[0] : e;
                          })(t, /(::plac\w+|:read-\w+)/)
                        ) {
                          case ":read-only":
                          case ":read-write":
                            return G(
                              [
                                S(e, {
                                  props: [l(t, /:(read-\w+)/, ":-moz-$1")],
                                }),
                              ],
                              r
                            );
                          case "::placeholder":
                            return G(
                              [
                                S(e, {
                                  props: [
                                    l(t, /:(plac\w+)/, ":" + F + "input-$1"),
                                  ],
                                }),
                                S(e, {
                                  props: [l(t, /:(plac\w+)/, ":-moz-$1")],
                                }),
                                S(e, {
                                  props: [l(t, /:(plac\w+)/, U + "input-$1")],
                                }),
                              ],
                              r
                            );
                        }
                        return "";
                      });
                }
            },
          ],
          ie = function (e) {
            var t = e.key;
            if ("css" === t) {
              var n = document.querySelectorAll(
                "style[data-emotion]:not([data-s])"
              );
              Array.prototype.forEach.call(n, function (e) {
                -1 !== e.getAttribute("data-emotion").indexOf(" ") &&
                  (document.head.appendChild(e), e.setAttribute("data-s", ""));
              });
            }
            var i = e.stylisPlugins || re;
            var a,
              o,
              s = {},
              l = [];
            (a = e.container || document.head),
              Array.prototype.forEach.call(
                document.querySelectorAll('style[data-emotion^="' + t + ' "]'),
                function (e) {
                  for (
                    var t = e.getAttribute("data-emotion").split(" "), n = 1;
                    n < t.length;
                    n++
                  )
                    s[t[n]] = !0;
                  l.push(e);
                }
              );
            var u,
              c,
              d = [
                W,
                ((c = function (e) {
                  u.insert(e);
                }),
                function (e) {
                  e.root || ((e = e.return) && c(e));
                }),
              ],
              f = (function (e) {
                var t = h(e);
                return function (n, r, i, a) {
                  for (var o = "", s = 0; s < t; s++)
                    o += e[s](n, r, i, a) || "";
                  return o;
                };
              })([ee, te].concat(i, d));
            o = function (e, t, n, r) {
              (u = n),
                G(j(e ? e + "{" + t.styles + "}" : t.styles), f),
                r && (p.inserted[t.name] = !0);
            };
            var p = {
              key: t,
              sheet: new r({
                key: t,
                container: a,
                nonce: e.nonce,
                speedy: e.speedy,
                prepend: e.prepend,
                insertionPoint: e.insertionPoint,
              }),
              nonce: e.nonce,
              inserted: s,
              registered: {},
              insert: o,
            };
            return p.sheet.hydrate(l), p;
          };
      },
      9797: function (e, t, n) {
        "use strict";
        function r(e) {
          var t = Object.create(null);
          return function (n) {
            return void 0 === t[n] && (t[n] = e(n)), t[n];
          };
        }
        n.d(t, {
          Z: function () {
            return r;
          },
        });
      },
      2564: function (e, t, n) {
        "use strict";
        n.d(t, {
          T: function () {
            return l;
          },
          i: function () {
            return a;
          },
          w: function () {
            return s;
          },
        });
        var r = n(2791),
          i = n(3361),
          a = (n(9140), n(2561), !0),
          o = r.createContext(
            "undefined" !== typeof HTMLElement ? (0, i.Z)({ key: "css" }) : null
          );
        o.Provider;
        var s = function (e) {
          return (0, r.forwardRef)(function (t, n) {
            var i = (0, r.useContext)(o);
            return e(t, i, n);
          });
        };
        a ||
          (s = function (e) {
            return function (t) {
              var n = (0, r.useContext)(o);
              return null === n
                ? ((n = (0, i.Z)({ key: "css" })),
                  r.createElement(o.Provider, { value: n }, e(t, n)))
                : e(t, n);
            };
          });
        var l = r.createContext({});
      },
      9140: function (e, t, n) {
        "use strict";
        n.d(t, {
          O: function () {
            return p;
          },
        });
        var r = {
            animationIterationCount: 1,
            aspectRatio: 1,
            borderImageOutset: 1,
            borderImageSlice: 1,
            borderImageWidth: 1,
            boxFlex: 1,
            boxFlexGroup: 1,
            boxOrdinalGroup: 1,
            columnCount: 1,
            columns: 1,
            flex: 1,
            flexGrow: 1,
            flexPositive: 1,
            flexShrink: 1,
            flexNegative: 1,
            flexOrder: 1,
            gridRow: 1,
            gridRowEnd: 1,
            gridRowSpan: 1,
            gridRowStart: 1,
            gridColumn: 1,
            gridColumnEnd: 1,
            gridColumnSpan: 1,
            gridColumnStart: 1,
            msGridRow: 1,
            msGridRowSpan: 1,
            msGridColumn: 1,
            msGridColumnSpan: 1,
            fontWeight: 1,
            lineHeight: 1,
            opacity: 1,
            order: 1,
            orphans: 1,
            tabSize: 1,
            widows: 1,
            zIndex: 1,
            zoom: 1,
            WebkitLineClamp: 1,
            fillOpacity: 1,
            floodOpacity: 1,
            stopOpacity: 1,
            strokeDasharray: 1,
            strokeDashoffset: 1,
            strokeMiterlimit: 1,
            strokeOpacity: 1,
            strokeWidth: 1,
          },
          i = n(9797),
          a = /[A-Z]|^ms/g,
          o = /_EMO_([^_]+?)_([^]*?)_EMO_/g,
          s = function (e) {
            return 45 === e.charCodeAt(1);
          },
          l = function (e) {
            return null != e && "boolean" !== typeof e;
          },
          u = (0, i.Z)(function (e) {
            return s(e) ? e : e.replace(a, "-$&").toLowerCase();
          }),
          c = function (e, t) {
            switch (e) {
              case "animation":
              case "animationName":
                if ("string" === typeof t)
                  return t.replace(o, function (e, t, n) {
                    return (f = { name: t, styles: n, next: f }), t;
                  });
            }
            return 1 === r[e] || s(e) || "number" !== typeof t || 0 === t
              ? t
              : t + "px";
          };
        function d(e, t, n) {
          if (null == n) return "";
          if (void 0 !== n.__emotion_styles) return n;
          switch (typeof n) {
            case "boolean":
              return "";
            case "object":
              if (1 === n.anim)
                return (
                  (f = { name: n.name, styles: n.styles, next: f }), n.name
                );
              if (void 0 !== n.styles) {
                var r = n.next;
                if (void 0 !== r)
                  for (; void 0 !== r; )
                    (f = { name: r.name, styles: r.styles, next: f }),
                      (r = r.next);
                return n.styles + ";";
              }
              return (function (e, t, n) {
                var r = "";
                if (Array.isArray(n))
                  for (var i = 0; i < n.length; i++) r += d(e, t, n[i]) + ";";
                else
                  for (var a in n) {
                    var o = n[a];
                    if ("object" !== typeof o)
                      null != t && void 0 !== t[o]
                        ? (r += a + "{" + t[o] + "}")
                        : l(o) && (r += u(a) + ":" + c(a, o) + ";");
                    else if (
                      !Array.isArray(o) ||
                      "string" !== typeof o[0] ||
                      (null != t && void 0 !== t[o[0]])
                    ) {
                      var s = d(e, t, o);
                      switch (a) {
                        case "animation":
                        case "animationName":
                          r += u(a) + ":" + s + ";";
                          break;
                        default:
                          r += a + "{" + s + "}";
                      }
                    } else
                      for (var f = 0; f < o.length; f++)
                        l(o[f]) && (r += u(a) + ":" + c(a, o[f]) + ";");
                  }
                return r;
              })(e, t, n);
            case "function":
              if (void 0 !== e) {
                var i = f,
                  a = n(e);
                return (f = i), d(e, t, a);
              }
          }
          if (null == t) return n;
          var o = t[n];
          return void 0 !== o ? o : n;
        }
        var f,
          h = /label:\s*([^\s;\n{]+)\s*(;|$)/g;
        var p = function (e, t, n) {
          if (
            1 === e.length &&
            "object" === typeof e[0] &&
            null !== e[0] &&
            void 0 !== e[0].styles
          )
            return e[0];
          var r = !0,
            i = "";
          f = void 0;
          var a = e[0];
          null == a || void 0 === a.raw
            ? ((r = !1), (i += d(n, t, a)))
            : (i += a[0]);
          for (var o = 1; o < e.length; o++)
            (i += d(n, t, e[o])), r && (i += a[o]);
          h.lastIndex = 0;
          for (var s, l = ""; null !== (s = h.exec(i)); ) l += "-" + s[1];
          var u =
            (function (e) {
              for (var t, n = 0, r = 0, i = e.length; i >= 4; ++r, i -= 4)
                (t =
                  1540483477 *
                    (65535 &
                      (t =
                        (255 & e.charCodeAt(r)) |
                        ((255 & e.charCodeAt(++r)) << 8) |
                        ((255 & e.charCodeAt(++r)) << 16) |
                        ((255 & e.charCodeAt(++r)) << 24))) +
                  ((59797 * (t >>> 16)) << 16)),
                  (n =
                    (1540483477 * (65535 & (t ^= t >>> 24)) +
                      ((59797 * (t >>> 16)) << 16)) ^
                    (1540483477 * (65535 & n) + ((59797 * (n >>> 16)) << 16)));
              switch (i) {
                case 3:
                  n ^= (255 & e.charCodeAt(r + 2)) << 16;
                case 2:
                  n ^= (255 & e.charCodeAt(r + 1)) << 8;
                case 1:
                  n =
                    1540483477 * (65535 & (n ^= 255 & e.charCodeAt(r))) +
                    ((59797 * (n >>> 16)) << 16);
              }
              return (
                ((n =
                  1540483477 * (65535 & (n ^= n >>> 13)) +
                  ((59797 * (n >>> 16)) << 16)) ^
                  (n >>> 15)) >>>
                0
              ).toString(36);
            })(i) + l;
          return { name: u, styles: i, next: f };
        };
      },
      2561: function (e, t, n) {
        "use strict";
        var r;
        n.d(t, {
          L: function () {
            return o;
          },
          j: function () {
            return s;
          },
        });
        var i = n(2791),
          a =
            !!(r || (r = n.t(i, 2))).useInsertionEffect &&
            (r || (r = n.t(i, 2))).useInsertionEffect,
          o =
            a ||
            function (e) {
              return e();
            },
          s = a || i.useLayoutEffect;
      },
      5438: function (e, t, n) {
        "use strict";
        n.d(t, {
          My: function () {
            return a;
          },
          fp: function () {
            return r;
          },
          hC: function () {
            return i;
          },
        });
        function r(e, t, n) {
          var r = "";
          return (
            n.split(" ").forEach(function (n) {
              void 0 !== e[n] ? t.push(e[n] + ";") : (r += n + " ");
            }),
            r
          );
        }
        var i = function (e, t, n) {
            var r = e.key + "-" + t.name;
            !1 === n &&
              void 0 === e.registered[r] &&
              (e.registered[r] = t.styles);
          },
          a = function (e, t, n) {
            i(e, t, n);
            var r = e.key + "-" + t.name;
            if (void 0 === e.inserted[t.name]) {
              var a = t;
              do {
                e.insert(t === a ? "." + r : "", a, e.sheet, !0), (a = a.next);
              } while (void 0 !== a);
            }
          };
      },
      5936: function (e, t, n) {
        "use strict";
        var r = n(4836);
        t.Z = void 0;
        var i = r(n(5649)),
          a = n(184),
          o = (0, i.default)(
            (0, a.jsx)("path", {
              d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z",
            }),
            "AddBox"
          );
        t.Z = o;
      },
      5130: function (e, t, n) {
        "use strict";
        var r = n(4836);
        t.Z = void 0;
        var i = r(n(5649)),
          a = n(184),
          o = (0, i.default)(
            (0, a.jsx)("path", {
              d: "M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z",
            }),
            "Clear"
          );
        t.Z = o;
      },
      7247: function (e, t, n) {
        "use strict";
        var r = n(4836);
        t.Z = void 0;
        var i = r(n(5649)),
          a = n(184),
          o = (0, i.default)(
            (0, a.jsx)("path", {
              d: "M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z",
            }),
            "Delete"
          );
        t.Z = o;
      },
      5418: function (e, t, n) {
        "use strict";
        var r = n(4836);
        t.Z = void 0;
        var i = r(n(5649)),
          a = n(184),
          o = (0, i.default)(
            [
              (0, a.jsx)(
                "path",
                {
                  d: "M3.81 6.28C2.67 7.9 2 9.87 2 12s.67 4.1 1.81 5.72C6.23 16.95 8 14.68 8 12S6.23 7.05 3.81 6.28zm16.38 0C17.77 7.05 16 9.32 16 12s1.77 4.95 4.19 5.72C21.33 16.1 22 14.13 22 12s-.67-4.1-1.81-5.72z",
                },
                "0"
              ),
              (0, a.jsx)(
                "path",
                {
                  d: "M14 12c0-3.28 1.97-6.09 4.79-7.33C17.01 3.02 14.63 2 12 2S6.99 3.02 5.21 4.67C8.03 5.91 10 8.72 10 12s-1.97 6.09-4.79 7.33C6.99 20.98 9.37 22 12 22s5.01-1.02 6.79-2.67C15.97 18.09 14 15.28 14 12z",
                },
                "1"
              ),
            ],
            "SportsBaseball"
          );
        t.Z = o;
      },
      5649: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          Object.defineProperty(t, "default", {
            enumerable: !0,
            get: function () {
              return r.createSvgIcon;
            },
          });
        var r = n(6447);
      },
      6532: function (e, t) {
        "use strict";
        var n,
          r = Symbol.for("react.element"),
          i = Symbol.for("react.portal"),
          a = Symbol.for("react.fragment"),
          o = Symbol.for("react.strict_mode"),
          s = Symbol.for("react.profiler"),
          l = Symbol.for("react.provider"),
          u = Symbol.for("react.context"),
          c = Symbol.for("react.server_context"),
          d = Symbol.for("react.forward_ref"),
          f = Symbol.for("react.suspense"),
          h = Symbol.for("react.suspense_list"),
          p = Symbol.for("react.memo"),
          v = Symbol.for("react.lazy"),
          m = Symbol.for("react.offscreen");
        function g(e) {
          if ("object" === typeof e && null !== e) {
            var t = e.$$typeof;
            switch (t) {
              case r:
                switch ((e = e.type)) {
                  case a:
                  case s:
                  case o:
                  case f:
                  case h:
                    return e;
                  default:
                    switch ((e = e && e.$$typeof)) {
                      case c:
                      case u:
                      case d:
                      case v:
                      case p:
                      case l:
                        return e;
                      default:
                        return t;
                    }
                }
              case i:
                return t;
            }
          }
        }
        n = Symbol.for("react.module.reference");
      },
      8457: function (e, t, n) {
        "use strict";
        n(6532);
      },
      4591: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return Z;
          },
        });
        var r = n(7462),
          i = n(3366),
          a = n(6189),
          o = n(2466),
          s = n(5080),
          l = n(7416),
          u = n(104),
          c = n(4942);
        function d(e, t) {
          var n;
          return (0, r.Z)(
            {
              toolbar:
                ((n = { minHeight: 56 }),
                (0, c.Z)(n, e.up("xs"), {
                  "@media (orientation: landscape)": { minHeight: 48 },
                }),
                (0, c.Z)(n, e.up("sm"), { minHeight: 64 }),
                n),
            },
            t
          );
        }
        var f = n(2065),
          h = { black: "#000", white: "#fff" },
          p = {
            50: "#fafafa",
            100: "#f5f5f5",
            200: "#eeeeee",
            300: "#e0e0e0",
            400: "#bdbdbd",
            500: "#9e9e9e",
            600: "#757575",
            700: "#616161",
            800: "#424242",
            900: "#212121",
            A100: "#f5f5f5",
            A200: "#eeeeee",
            A400: "#bdbdbd",
            A700: "#616161",
          },
          v = {
            50: "#f3e5f5",
            100: "#e1bee7",
            200: "#ce93d8",
            300: "#ba68c8",
            400: "#ab47bc",
            500: "#9c27b0",
            600: "#8e24aa",
            700: "#7b1fa2",
            800: "#6a1b9a",
            900: "#4a148c",
            A100: "#ea80fc",
            A200: "#e040fb",
            A400: "#d500f9",
            A700: "#aa00ff",
          },
          m = {
            50: "#ffebee",
            100: "#ffcdd2",
            200: "#ef9a9a",
            300: "#e57373",
            400: "#ef5350",
            500: "#f44336",
            600: "#e53935",
            700: "#d32f2f",
            800: "#c62828",
            900: "#b71c1c",
            A100: "#ff8a80",
            A200: "#ff5252",
            A400: "#ff1744",
            A700: "#d50000",
          },
          g = {
            50: "#fff3e0",
            100: "#ffe0b2",
            200: "#ffcc80",
            300: "#ffb74d",
            400: "#ffa726",
            500: "#ff9800",
            600: "#fb8c00",
            700: "#f57c00",
            800: "#ef6c00",
            900: "#e65100",
            A100: "#ffd180",
            A200: "#ffab40",
            A400: "#ff9100",
            A700: "#ff6d00",
          },
          y = {
            50: "#e3f2fd",
            100: "#bbdefb",
            200: "#90caf9",
            300: "#64b5f6",
            400: "#42a5f5",
            500: "#2196f3",
            600: "#1e88e5",
            700: "#1976d2",
            800: "#1565c0",
            900: "#0d47a1",
            A100: "#82b1ff",
            A200: "#448aff",
            A400: "#2979ff",
            A700: "#2962ff",
          },
          b = {
            50: "#e1f5fe",
            100: "#b3e5fc",
            200: "#81d4fa",
            300: "#4fc3f7",
            400: "#29b6f6",
            500: "#03a9f4",
            600: "#039be5",
            700: "#0288d1",
            800: "#0277bd",
            900: "#01579b",
            A100: "#80d8ff",
            A200: "#40c4ff",
            A400: "#00b0ff",
            A700: "#0091ea",
          },
          _ = {
            50: "#e8f5e9",
            100: "#c8e6c9",
            200: "#a5d6a7",
            300: "#81c784",
            400: "#66bb6a",
            500: "#4caf50",
            600: "#43a047",
            700: "#388e3c",
            800: "#2e7d32",
            900: "#1b5e20",
            A100: "#b9f6ca",
            A200: "#69f0ae",
            A400: "#00e676",
            A700: "#00c853",
          },
          x = ["mode", "contrastThreshold", "tonalOffset"],
          S = {
            text: {
              primary: "rgba(0, 0, 0, 0.87)",
              secondary: "rgba(0, 0, 0, 0.6)",
              disabled: "rgba(0, 0, 0, 0.38)",
            },
            divider: "rgba(0, 0, 0, 0.12)",
            background: { paper: h.white, default: h.white },
            action: {
              active: "rgba(0, 0, 0, 0.54)",
              hover: "rgba(0, 0, 0, 0.04)",
              hoverOpacity: 0.04,
              selected: "rgba(0, 0, 0, 0.08)",
              selectedOpacity: 0.08,
              disabled: "rgba(0, 0, 0, 0.26)",
              disabledBackground: "rgba(0, 0, 0, 0.12)",
              disabledOpacity: 0.38,
              focus: "rgba(0, 0, 0, 0.12)",
              focusOpacity: 0.12,
              activatedOpacity: 0.12,
            },
          },
          w = {
            text: {
              primary: h.white,
              secondary: "rgba(255, 255, 255, 0.7)",
              disabled: "rgba(255, 255, 255, 0.5)",
              icon: "rgba(255, 255, 255, 0.5)",
            },
            divider: "rgba(255, 255, 255, 0.12)",
            background: { paper: "#121212", default: "#121212" },
            action: {
              active: h.white,
              hover: "rgba(255, 255, 255, 0.08)",
              hoverOpacity: 0.08,
              selected: "rgba(255, 255, 255, 0.16)",
              selectedOpacity: 0.16,
              disabled: "rgba(255, 255, 255, 0.3)",
              disabledBackground: "rgba(255, 255, 255, 0.12)",
              disabledOpacity: 0.38,
              focus: "rgba(255, 255, 255, 0.12)",
              focusOpacity: 0.12,
              activatedOpacity: 0.24,
            },
          };
        function M(e, t, n, r) {
          var i = r.light || r,
            a = r.dark || 1.5 * r;
          e[t] ||
            (e.hasOwnProperty(n)
              ? (e[t] = e[n])
              : "light" === t
              ? (e.light = (0, f.$n)(e.main, i))
              : "dark" === t && (e.dark = (0, f._j)(e.main, a)));
        }
        function E(e) {
          var t = e.mode,
            n = void 0 === t ? "light" : t,
            s = e.contrastThreshold,
            l = void 0 === s ? 3 : s,
            u = e.tonalOffset,
            c = void 0 === u ? 0.2 : u,
            d = (0, i.Z)(e, x),
            E =
              e.primary ||
              (function () {
                return "dark" ===
                  (arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : "light")
                  ? { main: y[200], light: y[50], dark: y[400] }
                  : { main: y[700], light: y[400], dark: y[800] };
              })(n),
            k =
              e.secondary ||
              (function () {
                return "dark" ===
                  (arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : "light")
                  ? { main: v[200], light: v[50], dark: v[400] }
                  : { main: v[500], light: v[300], dark: v[700] };
              })(n),
            T =
              e.error ||
              (function () {
                return "dark" ===
                  (arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : "light")
                  ? { main: m[500], light: m[300], dark: m[700] }
                  : { main: m[700], light: m[400], dark: m[800] };
              })(n),
            A =
              e.info ||
              (function () {
                return "dark" ===
                  (arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : "light")
                  ? { main: b[400], light: b[300], dark: b[700] }
                  : { main: b[700], light: b[500], dark: b[900] };
              })(n),
            C =
              e.success ||
              (function () {
                return "dark" ===
                  (arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : "light")
                  ? { main: _[400], light: _[300], dark: _[700] }
                  : { main: _[800], light: _[500], dark: _[900] };
              })(n),
            P =
              e.warning ||
              (function () {
                return "dark" ===
                  (arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : "light")
                  ? { main: g[400], light: g[300], dark: g[700] }
                  : { main: "#ed6c02", light: g[500], dark: g[900] };
              })(n);
          function R(e) {
            return (0, f.mi)(e, w.text.primary) >= l
              ? w.text.primary
              : S.text.primary;
          }
          var L = function (e) {
              var t = e.color,
                n = e.name,
                i = e.mainShade,
                o = void 0 === i ? 500 : i,
                s = e.lightShade,
                l = void 0 === s ? 300 : s,
                u = e.darkShade,
                d = void 0 === u ? 700 : u;
              if (
                (!(t = (0, r.Z)({}, t)).main && t[o] && (t.main = t[o]),
                !t.hasOwnProperty("main"))
              )
                throw new Error((0, a.Z)(11, n ? " (".concat(n, ")") : "", o));
              if ("string" !== typeof t.main)
                throw new Error(
                  (0, a.Z)(
                    12,
                    n ? " (".concat(n, ")") : "",
                    JSON.stringify(t.main)
                  )
                );
              return (
                M(t, "light", l, c),
                M(t, "dark", d, c),
                t.contrastText || (t.contrastText = R(t.main)),
                t
              );
            },
            I = { dark: w, light: S };
          return (0, o.Z)(
            (0, r.Z)(
              {
                common: (0, r.Z)({}, h),
                mode: n,
                primary: L({ color: E, name: "primary" }),
                secondary: L({
                  color: k,
                  name: "secondary",
                  mainShade: "A400",
                  lightShade: "A200",
                  darkShade: "A700",
                }),
                error: L({ color: T, name: "error" }),
                warning: L({ color: P, name: "warning" }),
                info: L({ color: A, name: "info" }),
                success: L({ color: C, name: "success" }),
                grey: p,
                contrastThreshold: l,
                getContrastText: R,
                augmentColor: L,
                tonalOffset: c,
              },
              I[n]
            ),
            d
          );
        }
        var k = [
          "fontFamily",
          "fontSize",
          "fontWeightLight",
          "fontWeightRegular",
          "fontWeightMedium",
          "fontWeightBold",
          "htmlFontSize",
          "allVariants",
          "pxToRem",
        ];
        var T = { textTransform: "uppercase" },
          A = '"Roboto", "Helvetica", "Arial", sans-serif';
        function C(e, t) {
          var n = "function" === typeof t ? t(e) : t,
            a = n.fontFamily,
            s = void 0 === a ? A : a,
            l = n.fontSize,
            u = void 0 === l ? 14 : l,
            c = n.fontWeightLight,
            d = void 0 === c ? 300 : c,
            f = n.fontWeightRegular,
            h = void 0 === f ? 400 : f,
            p = n.fontWeightMedium,
            v = void 0 === p ? 500 : p,
            m = n.fontWeightBold,
            g = void 0 === m ? 700 : m,
            y = n.htmlFontSize,
            b = void 0 === y ? 16 : y,
            _ = n.allVariants,
            x = n.pxToRem,
            S = (0, i.Z)(n, k);
          var w = u / 14,
            M =
              x ||
              function (e) {
                return "".concat((e / b) * w, "rem");
              },
            E = function (e, t, n, i, a) {
              return (0, r.Z)(
                { fontFamily: s, fontWeight: e, fontSize: M(t), lineHeight: n },
                s === A
                  ? {
                      letterSpacing: "".concat(
                        ((o = i / t), Math.round(1e5 * o) / 1e5),
                        "em"
                      ),
                    }
                  : {},
                a,
                _
              );
              var o;
            },
            C = {
              h1: E(d, 96, 1.167, -1.5),
              h2: E(d, 60, 1.2, -0.5),
              h3: E(h, 48, 1.167, 0),
              h4: E(h, 34, 1.235, 0.25),
              h5: E(h, 24, 1.334, 0),
              h6: E(v, 20, 1.6, 0.15),
              subtitle1: E(h, 16, 1.75, 0.15),
              subtitle2: E(v, 14, 1.57, 0.1),
              body1: E(h, 16, 1.5, 0.15),
              body2: E(h, 14, 1.43, 0.15),
              button: E(v, 14, 1.75, 0.4, T),
              caption: E(h, 12, 1.66, 0.4),
              overline: E(h, 12, 2.66, 1, T),
              inherit: {
                fontFamily: "inherit",
                fontWeight: "inherit",
                fontSize: "inherit",
                lineHeight: "inherit",
                letterSpacing: "inherit",
              },
            };
          return (0, o.Z)(
            (0, r.Z)(
              {
                htmlFontSize: b,
                pxToRem: M,
                fontFamily: s,
                fontSize: u,
                fontWeightLight: d,
                fontWeightRegular: h,
                fontWeightMedium: v,
                fontWeightBold: g,
              },
              C
            ),
            S,
            { clone: !1 }
          );
        }
        function P() {
          return [
            ""
              .concat(arguments.length <= 0 ? void 0 : arguments[0], "px ")
              .concat(arguments.length <= 1 ? void 0 : arguments[1], "px ")
              .concat(arguments.length <= 2 ? void 0 : arguments[2], "px ")
              .concat(
                arguments.length <= 3 ? void 0 : arguments[3],
                "px rgba(0,0,0,"
              )
              .concat(0.2, ")"),
            ""
              .concat(arguments.length <= 4 ? void 0 : arguments[4], "px ")
              .concat(arguments.length <= 5 ? void 0 : arguments[5], "px ")
              .concat(arguments.length <= 6 ? void 0 : arguments[6], "px ")
              .concat(
                arguments.length <= 7 ? void 0 : arguments[7],
                "px rgba(0,0,0,"
              )
              .concat(0.14, ")"),
            ""
              .concat(arguments.length <= 8 ? void 0 : arguments[8], "px ")
              .concat(arguments.length <= 9 ? void 0 : arguments[9], "px ")
              .concat(arguments.length <= 10 ? void 0 : arguments[10], "px ")
              .concat(
                arguments.length <= 11 ? void 0 : arguments[11],
                "px rgba(0,0,0,"
              )
              .concat(0.12, ")"),
          ].join(",");
        }
        var R = [
            "none",
            P(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0),
            P(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0),
            P(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0),
            P(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0),
            P(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0),
            P(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0),
            P(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1),
            P(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2),
            P(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2),
            P(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3),
            P(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3),
            P(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4),
            P(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4),
            P(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4),
            P(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5),
            P(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5),
            P(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5),
            P(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6),
            P(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6),
            P(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7),
            P(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7),
            P(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7),
            P(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8),
            P(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8),
          ],
          L = ["duration", "easing", "delay"],
          I = {
            easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
            easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
            easeIn: "cubic-bezier(0.4, 0, 1, 1)",
            sharp: "cubic-bezier(0.4, 0, 0.6, 1)",
          },
          N = {
            shortest: 150,
            shorter: 200,
            short: 250,
            standard: 300,
            complex: 375,
            enteringScreen: 225,
            leavingScreen: 195,
          };
        function O(e) {
          return "".concat(Math.round(e), "ms");
        }
        function D(e) {
          if (!e) return 0;
          var t = e / 36;
          return Math.round(10 * (4 + 15 * Math.pow(t, 0.25) + t / 5));
        }
        function U(e) {
          var t = (0, r.Z)({}, I, e.easing),
            n = (0, r.Z)({}, N, e.duration);
          return (0, r.Z)(
            {
              getAutoHeightDuration: D,
              create: function () {
                var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : ["all"],
                  r =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {},
                  a = r.duration,
                  o = void 0 === a ? n.standard : a,
                  s = r.easing,
                  l = void 0 === s ? t.easeInOut : s,
                  u = r.delay,
                  c = void 0 === u ? 0 : u;
                (0, i.Z)(r, L);
                return (Array.isArray(e) ? e : [e])
                  .map(function (e) {
                    return ""
                      .concat(e, " ")
                      .concat("string" === typeof o ? o : O(o), " ")
                      .concat(l, " ")
                      .concat("string" === typeof c ? c : O(c));
                  })
                  .join(",");
              },
            },
            e,
            { easing: t, duration: n }
          );
        }
        var z = {
            mobileStepper: 1e3,
            fab: 1050,
            speedDial: 1050,
            appBar: 1100,
            drawer: 1200,
            modal: 1300,
            snackbar: 1400,
            tooltip: 1500,
          },
          F = [
            "breakpoints",
            "mixins",
            "spacing",
            "palette",
            "transitions",
            "typography",
            "shape",
          ];
        function B() {
          var e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t = e.mixins,
            n = void 0 === t ? {} : t,
            c = e.palette,
            f = void 0 === c ? {} : c,
            h = e.transitions,
            p = void 0 === h ? {} : h,
            v = e.typography,
            m = void 0 === v ? {} : v,
            g = (0, i.Z)(e, F);
          if (e.vars) throw new Error((0, a.Z)(18));
          var y = E(f),
            b = (0, s.Z)(e),
            _ = (0, o.Z)(b, {
              mixins: d(b.breakpoints, n),
              palette: y,
              shadows: R.slice(),
              typography: C(y, m),
              transitions: U(p),
              zIndex: (0, r.Z)({}, z),
            });
          _ = (0, o.Z)(_, g);
          for (
            var x = arguments.length, S = new Array(x > 1 ? x - 1 : 0), w = 1;
            w < x;
            w++
          )
            S[w - 1] = arguments[w];
          return (
            ((_ = S.reduce(function (e, t) {
              return (0, o.Z)(e, t);
            }, _)).unstable_sxConfig = (0, r.Z)(
              {},
              l.Z,
              null == g ? void 0 : g.unstable_sxConfig
            )),
            (_.unstable_sx = function (e) {
              return (0, u.Z)({ sx: e, theme: this });
            }),
            _
          );
        }
        var Z = B();
      },
      988: function (e, t) {
        "use strict";
        t.Z = "$$material";
      },
      4923: function (e, t, n) {
        "use strict";
        n.d(t, {
          ZP: function () {
            return D;
          },
          FO: function () {
            return I;
          },
          Dz: function () {
            return N;
          },
        });
        var r = n(3433),
          i = n(9439),
          a = n(3366),
          o = n(7462),
          s = n(2791),
          l = n(9797),
          u =
            /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,
          c = (0, l.Z)(function (e) {
            return (
              u.test(e) ||
              (111 === e.charCodeAt(0) &&
                110 === e.charCodeAt(1) &&
                e.charCodeAt(2) < 91)
            );
          }),
          d = n(2564),
          f = n(5438),
          h = n(9140),
          p = n(2561),
          v = c,
          m = function (e) {
            return "theme" !== e;
          },
          g = function (e) {
            return "string" === typeof e && e.charCodeAt(0) > 96 ? v : m;
          },
          y = function (e, t, n) {
            var r;
            if (t) {
              var i = t.shouldForwardProp;
              r =
                e.__emotion_forwardProp && i
                  ? function (t) {
                      return e.__emotion_forwardProp(t) && i(t);
                    }
                  : i;
            }
            return (
              "function" !== typeof r && n && (r = e.__emotion_forwardProp), r
            );
          },
          b = function (e) {
            var t = e.cache,
              n = e.serialized,
              r = e.isStringTag;
            return (
              (0, f.hC)(t, n, r),
              (0, p.L)(function () {
                return (0, f.My)(t, n, r);
              }),
              null
            );
          },
          _ = function e(t, n) {
            var r,
              i,
              a = t.__emotion_real === t,
              l = (a && t.__emotion_base) || t;
            void 0 !== n && ((r = n.label), (i = n.target));
            var u = y(t, n, a),
              c = u || g(l),
              p = !c("as");
            return function () {
              var v = arguments,
                m =
                  a && void 0 !== t.__emotion_styles
                    ? t.__emotion_styles.slice(0)
                    : [];
              if (
                (void 0 !== r && m.push("label:" + r + ";"),
                null == v[0] || void 0 === v[0].raw)
              )
                m.push.apply(m, v);
              else {
                0, m.push(v[0][0]);
                for (var _ = v.length, x = 1; x < _; x++) m.push(v[x], v[0][x]);
              }
              var S = (0, d.w)(function (e, t, n) {
                var r = (p && e.as) || l,
                  a = "",
                  o = [],
                  v = e;
                if (null == e.theme) {
                  for (var y in ((v = {}), e)) v[y] = e[y];
                  v.theme = s.useContext(d.T);
                }
                "string" === typeof e.className
                  ? (a = (0, f.fp)(t.registered, o, e.className))
                  : null != e.className && (a = e.className + " ");
                var _ = (0, h.O)(m.concat(o), t.registered, v);
                (a += t.key + "-" + _.name), void 0 !== i && (a += " " + i);
                var x = p && void 0 === u ? g(r) : c,
                  S = {};
                for (var w in e) (p && "as" === w) || (x(w) && (S[w] = e[w]));
                return (
                  (S.className = a),
                  (S.ref = n),
                  s.createElement(
                    s.Fragment,
                    null,
                    s.createElement(b, {
                      cache: t,
                      serialized: _,
                      isStringTag: "string" === typeof r,
                    }),
                    s.createElement(r, S)
                  )
                );
              });
              return (
                (S.displayName =
                  void 0 !== r
                    ? r
                    : "Styled(" +
                      ("string" === typeof l
                        ? l
                        : l.displayName || l.name || "Component") +
                      ")"),
                (S.defaultProps = t.defaultProps),
                (S.__emotion_real = S),
                (S.__emotion_base = l),
                (S.__emotion_styles = m),
                (S.__emotion_forwardProp = u),
                Object.defineProperty(S, "toString", {
                  value: function () {
                    return "." + i;
                  },
                }),
                (S.withComponent = function (t, r) {
                  return e(
                    t,
                    (0, o.Z)({}, n, r, { shouldForwardProp: y(S, r, !0) })
                  ).apply(void 0, m);
                }),
                S
              );
            };
          }.bind();
        [
          "a",
          "abbr",
          "address",
          "area",
          "article",
          "aside",
          "audio",
          "b",
          "base",
          "bdi",
          "bdo",
          "big",
          "blockquote",
          "body",
          "br",
          "button",
          "canvas",
          "caption",
          "cite",
          "code",
          "col",
          "colgroup",
          "data",
          "datalist",
          "dd",
          "del",
          "details",
          "dfn",
          "dialog",
          "div",
          "dl",
          "dt",
          "em",
          "embed",
          "fieldset",
          "figcaption",
          "figure",
          "footer",
          "form",
          "h1",
          "h2",
          "h3",
          "h4",
          "h5",
          "h6",
          "head",
          "header",
          "hgroup",
          "hr",
          "html",
          "i",
          "iframe",
          "img",
          "input",
          "ins",
          "kbd",
          "keygen",
          "label",
          "legend",
          "li",
          "link",
          "main",
          "map",
          "mark",
          "marquee",
          "menu",
          "menuitem",
          "meta",
          "meter",
          "nav",
          "noscript",
          "object",
          "ol",
          "optgroup",
          "option",
          "output",
          "p",
          "param",
          "picture",
          "pre",
          "progress",
          "q",
          "rp",
          "rt",
          "ruby",
          "s",
          "samp",
          "script",
          "section",
          "select",
          "small",
          "source",
          "span",
          "strong",
          "style",
          "sub",
          "summary",
          "sup",
          "table",
          "tbody",
          "td",
          "textarea",
          "tfoot",
          "th",
          "thead",
          "time",
          "title",
          "tr",
          "track",
          "u",
          "ul",
          "var",
          "video",
          "wbr",
          "circle",
          "clipPath",
          "defs",
          "ellipse",
          "foreignObject",
          "g",
          "image",
          "line",
          "linearGradient",
          "mask",
          "path",
          "pattern",
          "polygon",
          "polyline",
          "radialGradient",
          "rect",
          "stop",
          "svg",
          "text",
          "tspan",
        ].forEach(function (e) {
          _[e] = _(e);
        });
        var x = n(5080),
          S = n(7312),
          w = ["variant"];
        function M(e) {
          return 0 === e.length;
        }
        function E(e) {
          var t = e.variant,
            n = (0, a.Z)(e, w),
            r = t || "";
          return (
            Object.keys(n)
              .sort()
              .forEach(function (t) {
                r +=
                  "color" === t
                    ? M(r)
                      ? e[t]
                      : (0, S.Z)(e[t])
                    : ""
                        .concat(M(r) ? t : (0, S.Z)(t))
                        .concat((0, S.Z)(e[t].toString()));
              }),
            r
          );
        }
        var k = n(104),
          T = [
            "name",
            "slot",
            "skipVariantsResolver",
            "skipSx",
            "overridesResolver",
          ];
        function A(e) {
          return (
            "ownerState" !== e && "theme" !== e && "sx" !== e && "as" !== e
          );
        }
        var C = (0, x.Z)();
        function P(e) {
          var t,
            n = e.defaultTheme,
            r = e.theme,
            i = e.themeId;
          return (t = r), 0 === Object.keys(t).length ? n : r[i] || r;
        }
        var R = n(4591),
          L = n(988),
          I = function (e) {
            return A(e) && "classes" !== e;
          },
          N = A,
          O = (function () {
            var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {},
              t = e.themeId,
              n = e.defaultTheme,
              s = void 0 === n ? C : n,
              l = e.rootShouldForwardProp,
              u = void 0 === l ? A : l,
              c = e.slotShouldForwardProp,
              d = void 0 === c ? A : c,
              f = function (e) {
                return (0, k.Z)(
                  (0, o.Z)({}, e, {
                    theme: P((0, o.Z)({}, e, { defaultTheme: s, themeId: t })),
                  })
                );
              };
            return (
              (f.__mui_systemSx = !0),
              function (e) {
                var n =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : {};
                !(function (e, t) {
                  Array.isArray(e.__emotion_styles) &&
                    (e.__emotion_styles = t(e.__emotion_styles));
                })(e, function (e) {
                  return e.filter(function (e) {
                    return !(null != e && e.__mui_systemSx);
                  });
                });
                var l = n.name,
                  c = n.slot,
                  h = n.skipVariantsResolver,
                  p = n.skipSx,
                  v = n.overridesResolver,
                  m = (0, a.Z)(n, T),
                  g = void 0 !== h ? h : (c && "Root" !== c) || !1,
                  y = p || !1;
                var b = A;
                "Root" === c
                  ? (b = u)
                  : c
                  ? (b = d)
                  : (function (e) {
                      return "string" === typeof e && e.charCodeAt(0) > 96;
                    })(e) && (b = void 0);
                var x = (function (e, t) {
                    return _(e, t);
                  })(
                    e,
                    (0, o.Z)({ shouldForwardProp: b, label: undefined }, m)
                  ),
                  S = function (n) {
                    for (
                      var a = arguments.length,
                        u = new Array(a > 1 ? a - 1 : 0),
                        c = 1;
                      c < a;
                      c++
                    )
                      u[c - 1] = arguments[c];
                    var d = u
                        ? u.map(function (e) {
                            return "function" === typeof e &&
                              e.__emotion_real !== e
                              ? function (n) {
                                  return e(
                                    (0, o.Z)({}, n, {
                                      theme: P(
                                        (0, o.Z)({}, n, {
                                          defaultTheme: s,
                                          themeId: t,
                                        })
                                      ),
                                    })
                                  );
                                }
                              : e;
                          })
                        : [],
                      h = n;
                    l &&
                      v &&
                      d.push(function (e) {
                        var n = P(
                            (0, o.Z)({}, e, { defaultTheme: s, themeId: t })
                          ),
                          r = (function (e, t) {
                            return t.components &&
                              t.components[e] &&
                              t.components[e].styleOverrides
                              ? t.components[e].styleOverrides
                              : null;
                          })(l, n);
                        if (r) {
                          var a = {};
                          return (
                            Object.entries(r).forEach(function (t) {
                              var r = (0, i.Z)(t, 2),
                                s = r[0],
                                l = r[1];
                              a[s] =
                                "function" === typeof l
                                  ? l((0, o.Z)({}, e, { theme: n }))
                                  : l;
                            }),
                            v(e, a)
                          );
                        }
                        return null;
                      }),
                      l &&
                        !g &&
                        d.push(function (e) {
                          var n = P(
                            (0, o.Z)({}, e, { defaultTheme: s, themeId: t })
                          );
                          return (function (e, t, n, r) {
                            var i,
                              a,
                              o = e.ownerState,
                              s = void 0 === o ? {} : o,
                              l = [],
                              u =
                                null == n ||
                                null == (i = n.components) ||
                                null == (a = i[r])
                                  ? void 0
                                  : a.variants;
                            return (
                              u &&
                                u.forEach(function (n) {
                                  var r = !0;
                                  Object.keys(n.props).forEach(function (t) {
                                    s[t] !== n.props[t] &&
                                      e[t] !== n.props[t] &&
                                      (r = !1);
                                  }),
                                    r && l.push(t[E(n.props)]);
                                }),
                              l
                            );
                          })(
                            e,
                            (function (e, t) {
                              var n = [];
                              t &&
                                t.components &&
                                t.components[e] &&
                                t.components[e].variants &&
                                (n = t.components[e].variants);
                              var r = {};
                              return (
                                n.forEach(function (e) {
                                  var t = E(e.props);
                                  r[t] = e.style;
                                }),
                                r
                              );
                            })(l, n),
                            n,
                            l
                          );
                        }),
                      y || d.push(f);
                    var p = d.length - u.length;
                    if (Array.isArray(n) && p > 0) {
                      var m = new Array(p).fill("");
                      (h = [].concat((0, r.Z)(n), (0, r.Z)(m))).raw = [].concat(
                        (0, r.Z)(n.raw),
                        (0, r.Z)(m)
                      );
                    } else
                      "function" === typeof n &&
                        n.__emotion_real !== n &&
                        (h = function (e) {
                          return n(
                            (0, o.Z)({}, e, {
                              theme: P(
                                (0, o.Z)({}, e, { defaultTheme: s, themeId: t })
                              ),
                            })
                          );
                        });
                    var b = x.apply(void 0, [h].concat((0, r.Z)(d)));
                    return e.muiName && (b.muiName = e.muiName), b;
                  };
                return x.withConfig && (S.withConfig = x.withConfig), S;
              }
            );
          })({ themeId: L.Z, defaultTheme: R.Z, rootShouldForwardProp: I }),
          D = O;
      },
      551: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return u;
          },
        });
        var r = n(1413);
        function i(e, t) {
          var n = (0, r.Z)({}, t);
          return (
            Object.keys(e).forEach(function (a) {
              if (a.toString().match(/^(components|slots)$/))
                n[a] = (0, r.Z)((0, r.Z)({}, e[a]), n[a]);
              else if (a.toString().match(/^(componentsProps|slotProps)$/)) {
                var o = e[a] || {},
                  s = t[a];
                (n[a] = {}),
                  s && Object.keys(s)
                    ? o && Object.keys(o)
                      ? ((n[a] = (0, r.Z)({}, s)),
                        Object.keys(o).forEach(function (e) {
                          n[a][e] = i(o[e], s[e]);
                        }))
                      : (n[a] = s)
                    : (n[a] = o);
              } else void 0 === n[a] && (n[a] = e[a]);
            }),
            n
          );
        }
        function a(e) {
          var t = e.theme,
            n = e.name,
            r = e.props;
          return t &&
            t.components &&
            t.components[n] &&
            t.components[n].defaultProps
            ? i(t.components[n].defaultProps, r)
            : r;
        }
        var o = n(3459);
        var s = n(4591),
          l = n(988);
        function u(e) {
          return (function (e) {
            var t = e.props,
              n = e.name,
              r = e.defaultTheme,
              i = e.themeId,
              s = (0, o.Z)(r);
            return i && (s = s[i] || s), a({ theme: s, name: n, props: t });
          })({ props: e.props, name: e.name, defaultTheme: s.Z, themeId: l.Z });
        }
      },
      4036: function (e, t, n) {
        "use strict";
        var r = n(7312);
        t.Z = r.Z;
      },
      9201: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return b;
          },
        });
        var r = n(7462),
          i = n(2791),
          a = n(3366),
          o = n(8182),
          s = n(4419),
          l = n(4036),
          u = n(551),
          c = n(4923),
          d = n(5878),
          f = n(1217);
        function h(e) {
          return (0, f.Z)("MuiSvgIcon", e);
        }
        (0, d.Z)("MuiSvgIcon", [
          "root",
          "colorPrimary",
          "colorSecondary",
          "colorAction",
          "colorError",
          "colorDisabled",
          "fontSizeInherit",
          "fontSizeSmall",
          "fontSizeMedium",
          "fontSizeLarge",
        ]);
        var p = n(184),
          v = [
            "children",
            "className",
            "color",
            "component",
            "fontSize",
            "htmlColor",
            "inheritViewBox",
            "titleAccess",
            "viewBox",
          ],
          m = (0, c.ZP)("svg", {
            name: "MuiSvgIcon",
            slot: "Root",
            overridesResolver: function (e, t) {
              var n = e.ownerState;
              return [
                t.root,
                "inherit" !== n.color && t["color".concat((0, l.Z)(n.color))],
                t["fontSize".concat((0, l.Z)(n.fontSize))],
              ];
            },
          })(function (e) {
            var t,
              n,
              r,
              i,
              a,
              o,
              s,
              l,
              u,
              c,
              d,
              f,
              h,
              p,
              v,
              m,
              g,
              y = e.theme,
              b = e.ownerState;
            return {
              userSelect: "none",
              width: "1em",
              height: "1em",
              display: "inline-block",
              fill: "currentColor",
              flexShrink: 0,
              transition:
                null == (t = y.transitions) || null == (n = t.create)
                  ? void 0
                  : n.call(t, "fill", {
                      duration:
                        null == (r = y.transitions) || null == (i = r.duration)
                          ? void 0
                          : i.shorter,
                    }),
              fontSize: {
                inherit: "inherit",
                small:
                  (null == (a = y.typography) || null == (o = a.pxToRem)
                    ? void 0
                    : o.call(a, 20)) || "1.25rem",
                medium:
                  (null == (s = y.typography) || null == (l = s.pxToRem)
                    ? void 0
                    : l.call(s, 24)) || "1.5rem",
                large:
                  (null == (u = y.typography) || null == (c = u.pxToRem)
                    ? void 0
                    : c.call(u, 35)) || "2.1875rem",
              }[b.fontSize],
              color:
                null !=
                (d =
                  null == (f = (y.vars || y).palette) ||
                  null == (h = f[b.color])
                    ? void 0
                    : h.main)
                  ? d
                  : {
                      action:
                        null == (p = (y.vars || y).palette) ||
                        null == (v = p.action)
                          ? void 0
                          : v.active,
                      disabled:
                        null == (m = (y.vars || y).palette) ||
                        null == (g = m.action)
                          ? void 0
                          : g.disabled,
                      inherit: void 0,
                    }[b.color],
            };
          }),
          g = i.forwardRef(function (e, t) {
            var n = (0, u.Z)({ props: e, name: "MuiSvgIcon" }),
              i = n.children,
              c = n.className,
              d = n.color,
              f = void 0 === d ? "inherit" : d,
              g = n.component,
              y = void 0 === g ? "svg" : g,
              b = n.fontSize,
              _ = void 0 === b ? "medium" : b,
              x = n.htmlColor,
              S = n.inheritViewBox,
              w = void 0 !== S && S,
              M = n.titleAccess,
              E = n.viewBox,
              k = void 0 === E ? "0 0 24 24" : E,
              T = (0, a.Z)(n, v),
              A = (0, r.Z)({}, n, {
                color: f,
                component: y,
                fontSize: _,
                instanceFontSize: e.fontSize,
                inheritViewBox: w,
                viewBox: k,
              }),
              C = {};
            w || (C.viewBox = k);
            var P = (function (e) {
              var t = e.color,
                n = e.fontSize,
                r = e.classes,
                i = {
                  root: [
                    "root",
                    "inherit" !== t && "color".concat((0, l.Z)(t)),
                    "fontSize".concat((0, l.Z)(n)),
                  ],
                };
              return (0, s.Z)(i, h, r);
            })(A);
            return (0,
            p.jsxs)(m, (0, r.Z)({ as: y, className: (0, o.Z)(P.root, c), focusable: "false", color: x, "aria-hidden": !M || void 0, role: M ? "img" : void 0, ref: t }, C, T, { ownerState: A, children: [i, M ? (0, p.jsx)("title", { children: M }) : null] }));
          });
        g.muiName = "SvgIcon";
        var y = g;
        function b(e, t) {
          function n(n, i) {
            return (0, p.jsx)(
              y,
              (0, r.Z)({ "data-testid": "".concat(t, "Icon"), ref: i }, n, {
                children: e,
              })
            );
          }
          return (n.muiName = y.muiName), i.memo(i.forwardRef(n));
        }
      },
      3199: function (e, t, n) {
        "use strict";
        var r = n(3981);
        t.Z = r.Z;
      },
      6447: function (e, t, n) {
        "use strict";
        n.r(t),
          n.d(t, {
            capitalize: function () {
              return i.Z;
            },
            createChainedFunction: function () {
              return a;
            },
            createSvgIcon: function () {
              return o.Z;
            },
            debounce: function () {
              return s.Z;
            },
            deprecatedPropType: function () {
              return l;
            },
            isMuiElement: function () {
              return u.Z;
            },
            ownerDocument: function () {
              return c.Z;
            },
            ownerWindow: function () {
              return d.Z;
            },
            requirePropFactory: function () {
              return f;
            },
            setRef: function () {
              return h;
            },
            unstable_ClassNameGenerator: function () {
              return E;
            },
            unstable_useEnhancedEffect: function () {
              return p.Z;
            },
            unstable_useId: function () {
              return b;
            },
            unsupportedProp: function () {
              return _;
            },
            useControlled: function () {
              return x.Z;
            },
            useEventCallback: function () {
              return S.Z;
            },
            useForkRef: function () {
              return w.Z;
            },
            useIsFocusVisible: function () {
              return M.Z;
            },
          });
        var r = n(5902),
          i = n(4036),
          a = n(8949).Z,
          o = n(9201),
          s = n(3199);
        var l = function (e, t) {
            return function () {
              return null;
            };
          },
          u = n(9103),
          c = n(8301),
          d = n(7602);
        n(1413);
        var f = function (e, t) {
            return function () {
              return null;
            };
          },
          h = n(2971).Z,
          p = n(162),
          v = n(9439),
          m = n(2791),
          g = 0;
        var y = n.t(m, 2)["useId".toString()];
        var b = function (e) {
          if (void 0 !== y) {
            var t = y();
            return null != e ? e : t;
          }
          return (function (e) {
            var t = m.useState(e),
              n = (0, v.Z)(t, 2),
              r = n[0],
              i = n[1],
              a = e || r;
            return (
              m.useEffect(
                function () {
                  null == r && i("mui-".concat((g += 1)));
                },
                [r]
              ),
              a
            );
          })(e);
        };
        var _ = function (e, t, n, r, i) {
            return null;
          },
          x = n(8744),
          S = n(9683),
          w = n(2071),
          M = n(3031),
          E = {
            configure: function (e) {
              r.Z.configure(e);
            },
          };
      },
      9103: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return i;
          },
        });
        var r = n(2791);
        var i = function (e, t) {
          return r.isValidElement(e) && -1 !== t.indexOf(e.type.muiName);
        };
      },
      8301: function (e, t, n) {
        "use strict";
        var r = n(9723);
        t.Z = r.Z;
      },
      7602: function (e, t, n) {
        "use strict";
        var r = n(7979);
        t.Z = r.Z;
      },
      8744: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return a;
          },
        });
        var r = n(9439),
          i = n(2791);
        var a = function (e) {
          var t = e.controlled,
            n = e.default,
            a = (e.name, e.state, i.useRef(void 0 !== t).current),
            o = i.useState(n),
            s = (0, r.Z)(o, 2),
            l = s[0],
            u = s[1];
          return [
            a ? t : l,
            i.useCallback(function (e) {
              a || u(e);
            }, []),
          ];
        };
      },
      162: function (e, t, n) {
        "use strict";
        var r = n(5721);
        t.Z = r.Z;
      },
      9683: function (e, t, n) {
        "use strict";
        var r = n(8956);
        t.Z = r.Z;
      },
      2071: function (e, t, n) {
        "use strict";
        var r = n(7563);
        t.Z = r.Z;
      },
      3031: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return f;
          },
        });
        var r,
          i = n(2791),
          a = !0,
          o = !1,
          s = {
            text: !0,
            search: !0,
            url: !0,
            tel: !0,
            email: !0,
            password: !0,
            number: !0,
            date: !0,
            month: !0,
            week: !0,
            time: !0,
            datetime: !0,
            "datetime-local": !0,
          };
        function l(e) {
          e.metaKey || e.altKey || e.ctrlKey || (a = !0);
        }
        function u() {
          a = !1;
        }
        function c() {
          "hidden" === this.visibilityState && o && (a = !0);
        }
        function d(e) {
          var t = e.target;
          try {
            return t.matches(":focus-visible");
          } catch (n) {}
          return (
            a ||
            (function (e) {
              var t = e.type,
                n = e.tagName;
              return (
                !("INPUT" !== n || !s[t] || e.readOnly) ||
                ("TEXTAREA" === n && !e.readOnly) ||
                !!e.isContentEditable
              );
            })(t)
          );
        }
        var f = function () {
          var e = i.useCallback(function (e) {
              var t;
              null != e &&
                ((t = e.ownerDocument).addEventListener("keydown", l, !0),
                t.addEventListener("mousedown", u, !0),
                t.addEventListener("pointerdown", u, !0),
                t.addEventListener("touchstart", u, !0),
                t.addEventListener("visibilitychange", c, !0));
            }, []),
            t = i.useRef(!1);
          return {
            isFocusVisibleRef: t,
            onFocus: function (e) {
              return !!d(e) && ((t.current = !0), !0);
            },
            onBlur: function () {
              return (
                !!t.current &&
                ((o = !0),
                window.clearTimeout(r),
                (r = window.setTimeout(function () {
                  o = !1;
                }, 100)),
                (t.current = !1),
                !0)
              );
            },
            ref: e,
          };
        };
      },
      1184: function (e, t, n) {
        "use strict";
        n.d(t, {
          L7: function () {
            return s;
          },
          P$: function () {
            return l;
          },
          VO: function () {
            return r;
          },
          W8: function () {
            return o;
          },
          k9: function () {
            return a;
          },
        });
        var r = { xs: 0, sm: 600, md: 900, lg: 1200, xl: 1536 },
          i = {
            keys: ["xs", "sm", "md", "lg", "xl"],
            up: function (e) {
              return "@media (min-width:".concat(r[e], "px)");
            },
          };
        function a(e, t, n) {
          var a = e.theme || {};
          if (Array.isArray(t)) {
            var o = a.breakpoints || i;
            return t.reduce(function (e, r, i) {
              return (e[o.up(o.keys[i])] = n(t[i])), e;
            }, {});
          }
          if ("object" === typeof t) {
            var s = a.breakpoints || i;
            return Object.keys(t).reduce(function (e, i) {
              if (-1 !== Object.keys(s.values || r).indexOf(i)) {
                e[s.up(i)] = n(t[i], i);
              } else {
                var a = i;
                e[a] = t[a];
              }
              return e;
            }, {});
          }
          return n(t);
        }
        function o() {
          var e,
            t =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {};
          return (
            (null == (e = t.keys)
              ? void 0
              : e.reduce(function (e, n) {
                  return (e[t.up(n)] = {}), e;
                }, {})) || {}
          );
        }
        function s(e, t) {
          return e.reduce(function (e, t) {
            var n = e[t];
            return (!n || 0 === Object.keys(n).length) && delete e[t], e;
          }, t);
        }
        function l(e) {
          var t,
            n = e.values,
            r = e.breakpoints,
            i =
              e.base ||
              (function (e, t) {
                if ("object" !== typeof e) return {};
                var n = {},
                  r = Object.keys(t);
                return (
                  Array.isArray(e)
                    ? r.forEach(function (t, r) {
                        r < e.length && (n[t] = !0);
                      })
                    : r.forEach(function (t) {
                        null != e[t] && (n[t] = !0);
                      }),
                  n
                );
              })(n, r),
            a = Object.keys(i);
          return 0 === a.length
            ? n
            : a.reduce(function (e, r, i) {
                return (
                  Array.isArray(n)
                    ? ((e[r] = null != n[i] ? n[i] : n[t]), (t = i))
                    : "object" === typeof n
                    ? ((e[r] = null != n[r] ? n[r] : n[t]), (t = r))
                    : (e[r] = n),
                  e
                );
              }, {});
        }
      },
      2065: function (e, t, n) {
        "use strict";
        n.d(t, {
          $n: function () {
            return d;
          },
          Fq: function () {
            return u;
          },
          _j: function () {
            return c;
          },
          mi: function () {
            return l;
          },
        });
        var r = n(6189);
        function i(e) {
          var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 0,
            n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 1;
          return Math.min(Math.max(t, e), n);
        }
        function a(e) {
          if (e.type) return e;
          if ("#" === e.charAt(0))
            return a(
              (function (e) {
                e = e.slice(1);
                var t = new RegExp(
                    ".{1,".concat(e.length >= 6 ? 2 : 1, "}"),
                    "g"
                  ),
                  n = e.match(t);
                return (
                  n &&
                    1 === n[0].length &&
                    (n = n.map(function (e) {
                      return e + e;
                    })),
                  n
                    ? "rgb".concat(4 === n.length ? "a" : "", "(").concat(
                        n
                          .map(function (e, t) {
                            return t < 3
                              ? parseInt(e, 16)
                              : Math.round((parseInt(e, 16) / 255) * 1e3) / 1e3;
                          })
                          .join(", "),
                        ")"
                      )
                    : ""
                );
              })(e)
            );
          var t = e.indexOf("("),
            n = e.substring(0, t);
          if (-1 === ["rgb", "rgba", "hsl", "hsla", "color"].indexOf(n))
            throw new Error((0, r.Z)(9, e));
          var i,
            o = e.substring(t + 1, e.length - 1);
          if ("color" === n) {
            if (
              ((i = (o = o.split(" ")).shift()),
              4 === o.length &&
                "/" === o[3].charAt(0) &&
                (o[3] = o[3].slice(1)),
              -1 ===
                [
                  "srgb",
                  "display-p3",
                  "a98-rgb",
                  "prophoto-rgb",
                  "rec-2020",
                ].indexOf(i))
            )
              throw new Error((0, r.Z)(10, i));
          } else o = o.split(",");
          return {
            type: n,
            values: (o = o.map(function (e) {
              return parseFloat(e);
            })),
            colorSpace: i,
          };
        }
        function o(e) {
          var t = e.type,
            n = e.colorSpace,
            r = e.values;
          return (
            -1 !== t.indexOf("rgb")
              ? (r = r.map(function (e, t) {
                  return t < 3 ? parseInt(e, 10) : e;
                }))
              : -1 !== t.indexOf("hsl") &&
                ((r[1] = "".concat(r[1], "%")), (r[2] = "".concat(r[2], "%"))),
            (r =
              -1 !== t.indexOf("color")
                ? "".concat(n, " ").concat(r.join(" "))
                : "".concat(r.join(", "))),
            "".concat(t, "(").concat(r, ")")
          );
        }
        function s(e) {
          var t =
            "hsl" === (e = a(e)).type || "hsla" === e.type
              ? a(
                  (function (e) {
                    var t = (e = a(e)).values,
                      n = t[0],
                      r = t[1] / 100,
                      i = t[2] / 100,
                      s = r * Math.min(i, 1 - i),
                      l = function (e) {
                        var t =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : (e + n / 30) % 12;
                        return i - s * Math.max(Math.min(t - 3, 9 - t, 1), -1);
                      },
                      u = "rgb",
                      c = [
                        Math.round(255 * l(0)),
                        Math.round(255 * l(8)),
                        Math.round(255 * l(4)),
                      ];
                    return (
                      "hsla" === e.type && ((u += "a"), c.push(t[3])),
                      o({ type: u, values: c })
                    );
                  })(e)
                ).values
              : e.values;
          return (
            (t = t.map(function (t) {
              return (
                "color" !== e.type && (t /= 255),
                t <= 0.03928 ? t / 12.92 : Math.pow((t + 0.055) / 1.055, 2.4)
              );
            })),
            Number((0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2]).toFixed(3))
          );
        }
        function l(e, t) {
          var n = s(e),
            r = s(t);
          return (Math.max(n, r) + 0.05) / (Math.min(n, r) + 0.05);
        }
        function u(e, t) {
          return (
            (e = a(e)),
            (t = i(t)),
            ("rgb" !== e.type && "hsl" !== e.type) || (e.type += "a"),
            "color" === e.type
              ? (e.values[3] = "/".concat(t))
              : (e.values[3] = t),
            o(e)
          );
        }
        function c(e, t) {
          if (((e = a(e)), (t = i(t)), -1 !== e.type.indexOf("hsl")))
            e.values[2] *= 1 - t;
          else if (
            -1 !== e.type.indexOf("rgb") ||
            -1 !== e.type.indexOf("color")
          )
            for (var n = 0; n < 3; n += 1) e.values[n] *= 1 - t;
          return o(e);
        }
        function d(e, t) {
          if (((e = a(e)), (t = i(t)), -1 !== e.type.indexOf("hsl")))
            e.values[2] += (100 - e.values[2]) * t;
          else if (-1 !== e.type.indexOf("rgb"))
            for (var n = 0; n < 3; n += 1)
              e.values[n] += (255 - e.values[n]) * t;
          else if (-1 !== e.type.indexOf("color"))
            for (var r = 0; r < 3; r += 1) e.values[r] += (1 - e.values[r]) * t;
          return o(e);
        }
      },
      5080: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return p;
          },
        });
        var r = n(7462),
          i = n(3366),
          a = n(2466),
          o = n(4942),
          s = ["values", "unit", "step"],
          l = function (e) {
            var t =
              Object.keys(e).map(function (t) {
                return { key: t, val: e[t] };
              }) || [];
            return (
              t.sort(function (e, t) {
                return e.val - t.val;
              }),
              t.reduce(function (e, t) {
                return (0, r.Z)({}, e, (0, o.Z)({}, t.key, t.val));
              }, {})
            );
          };
        var u = { borderRadius: 4 },
          c = n(5682);
        var d = n(104),
          f = n(7416),
          h = ["breakpoints", "palette", "spacing", "shape"];
        var p = function () {
          for (
            var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {},
              t = e.breakpoints,
              n = void 0 === t ? {} : t,
              o = e.palette,
              p = void 0 === o ? {} : o,
              v = e.spacing,
              m = e.shape,
              g = void 0 === m ? {} : m,
              y = (0, i.Z)(e, h),
              b = (function (e) {
                var t = e.values,
                  n =
                    void 0 === t
                      ? { xs: 0, sm: 600, md: 900, lg: 1200, xl: 1536 }
                      : t,
                  a = e.unit,
                  o = void 0 === a ? "px" : a,
                  u = e.step,
                  c = void 0 === u ? 5 : u,
                  d = (0, i.Z)(e, s),
                  f = l(n),
                  h = Object.keys(f);
                function p(e) {
                  var t = "number" === typeof n[e] ? n[e] : e;
                  return "@media (min-width:".concat(t).concat(o, ")");
                }
                function v(e) {
                  var t = "number" === typeof n[e] ? n[e] : e;
                  return "@media (max-width:"
                    .concat(t - c / 100)
                    .concat(o, ")");
                }
                function m(e, t) {
                  var r = h.indexOf(t);
                  return (
                    "@media (min-width:"
                      .concat("number" === typeof n[e] ? n[e] : e)
                      .concat(o, ") and ") +
                    "(max-width:"
                      .concat(
                        (-1 !== r && "number" === typeof n[h[r]]
                          ? n[h[r]]
                          : t) -
                          c / 100
                      )
                      .concat(o, ")")
                  );
                }
                return (0, r.Z)(
                  {
                    keys: h,
                    values: f,
                    up: p,
                    down: v,
                    between: m,
                    only: function (e) {
                      return h.indexOf(e) + 1 < h.length
                        ? m(e, h[h.indexOf(e) + 1])
                        : p(e);
                    },
                    not: function (e) {
                      var t = h.indexOf(e);
                      return 0 === t
                        ? p(h[1])
                        : t === h.length - 1
                        ? v(h[t])
                        : m(e, h[h.indexOf(e) + 1]).replace(
                            "@media",
                            "@media not all and"
                          );
                    },
                    unit: o,
                  },
                  d
                );
              })(n),
              _ = (function () {
                var e =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : 8;
                if (e.mui) return e;
                var t = (0, c.hB)({ spacing: e }),
                  n = function () {
                    for (
                      var e = arguments.length, n = new Array(e), r = 0;
                      r < e;
                      r++
                    )
                      n[r] = arguments[r];
                    return (0 === n.length ? [1] : n)
                      .map(function (e) {
                        var n = t(e);
                        return "number" === typeof n ? "".concat(n, "px") : n;
                      })
                      .join(" ");
                  };
                return (n.mui = !0), n;
              })(v),
              x = (0, a.Z)(
                {
                  breakpoints: b,
                  direction: "ltr",
                  components: {},
                  palette: (0, r.Z)({ mode: "light" }, p),
                  spacing: _,
                  shape: (0, r.Z)({}, u, g),
                },
                y
              ),
              S = arguments.length,
              w = new Array(S > 1 ? S - 1 : 0),
              M = 1;
            M < S;
            M++
          )
            w[M - 1] = arguments[M];
          return (
            ((x = w.reduce(function (e, t) {
              return (0, a.Z)(e, t);
            }, x)).unstable_sxConfig = (0, r.Z)(
              {},
              f.Z,
              null == y ? void 0 : y.unstable_sxConfig
            )),
            (x.unstable_sx = function (e) {
              return (0, d.Z)({ sx: e, theme: this });
            }),
            x
          );
        };
      },
      8247: function (e, t, n) {
        "use strict";
        var r = n(2466);
        t.Z = function (e, t) {
          return t ? (0, r.Z)(e, t, { clone: !1 }) : e;
        };
      },
      5682: function (e, t, n) {
        "use strict";
        n.d(t, {
          hB: function () {
            return v;
          },
          eI: function () {
            return p;
          },
          NA: function () {
            return m;
          },
          e6: function () {
            return b;
          },
          o3: function () {
            return _;
          },
        });
        var r = n(9439),
          i = n(1184),
          a = n(8529),
          o = n(8247);
        var s = { m: "margin", p: "padding" },
          l = {
            t: "Top",
            r: "Right",
            b: "Bottom",
            l: "Left",
            x: ["Left", "Right"],
            y: ["Top", "Bottom"],
          },
          u = { marginX: "mx", marginY: "my", paddingX: "px", paddingY: "py" },
          c = (function (e) {
            var t = {};
            return function (n) {
              return void 0 === t[n] && (t[n] = e(n)), t[n];
            };
          })(function (e) {
            if (e.length > 2) {
              if (!u[e]) return [e];
              e = u[e];
            }
            var t = e.split(""),
              n = (0, r.Z)(t, 2),
              i = n[0],
              a = n[1],
              o = s[i],
              c = l[a] || "";
            return Array.isArray(c)
              ? c.map(function (e) {
                  return o + e;
                })
              : [o + c];
          }),
          d = [
            "m",
            "mt",
            "mr",
            "mb",
            "ml",
            "mx",
            "my",
            "margin",
            "marginTop",
            "marginRight",
            "marginBottom",
            "marginLeft",
            "marginX",
            "marginY",
            "marginInline",
            "marginInlineStart",
            "marginInlineEnd",
            "marginBlock",
            "marginBlockStart",
            "marginBlockEnd",
          ],
          f = [
            "p",
            "pt",
            "pr",
            "pb",
            "pl",
            "px",
            "py",
            "padding",
            "paddingTop",
            "paddingRight",
            "paddingBottom",
            "paddingLeft",
            "paddingX",
            "paddingY",
            "paddingInline",
            "paddingInlineStart",
            "paddingInlineEnd",
            "paddingBlock",
            "paddingBlockStart",
            "paddingBlockEnd",
          ],
          h = [].concat(d, f);
        function p(e, t, n, r) {
          var i,
            o = null != (i = (0, a.DW)(e, t, !1)) ? i : n;
          return "number" === typeof o
            ? function (e) {
                return "string" === typeof e ? e : o * e;
              }
            : Array.isArray(o)
            ? function (e) {
                return "string" === typeof e ? e : o[e];
              }
            : "function" === typeof o
            ? o
            : function () {};
        }
        function v(e) {
          return p(e, "spacing", 8);
        }
        function m(e, t) {
          if ("string" === typeof t || null == t) return t;
          var n = e(Math.abs(t));
          return t >= 0 ? n : "number" === typeof n ? -n : "-".concat(n);
        }
        function g(e, t, n, r) {
          if (-1 === t.indexOf(n)) return null;
          var a = (function (e, t) {
              return function (n) {
                return e.reduce(function (e, r) {
                  return (e[r] = m(t, n)), e;
                }, {});
              };
            })(c(n), r),
            o = e[n];
          return (0, i.k9)(e, o, a);
        }
        function y(e, t) {
          var n = v(e.theme);
          return Object.keys(e)
            .map(function (r) {
              return g(e, t, r, n);
            })
            .reduce(o.Z, {});
        }
        function b(e) {
          return y(e, d);
        }
        function _(e) {
          return y(e, f);
        }
        function x(e) {
          return y(e, h);
        }
        (b.propTypes = {}),
          (b.filterProps = d),
          (_.propTypes = {}),
          (_.filterProps = f),
          (x.propTypes = {}),
          (x.filterProps = h);
      },
      8529: function (e, t, n) {
        "use strict";
        n.d(t, {
          DW: function () {
            return o;
          },
          Jq: function () {
            return s;
          },
        });
        var r = n(4942),
          i = n(7312),
          a = n(1184);
        function o(e, t) {
          var n =
            !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
          if (!t || "string" !== typeof t) return null;
          if (e && e.vars && n) {
            var r = "vars."
              .concat(t)
              .split(".")
              .reduce(function (e, t) {
                return e && e[t] ? e[t] : null;
              }, e);
            if (null != r) return r;
          }
          return t.split(".").reduce(function (e, t) {
            return e && null != e[t] ? e[t] : null;
          }, e);
        }
        function s(e, t, n) {
          var r,
            i =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : n;
          return (
            (r =
              "function" === typeof e
                ? e(n)
                : Array.isArray(e)
                ? e[n] || i
                : o(e, n) || i),
            t && (r = t(r, i, e)),
            r
          );
        }
        t.ZP = function (e) {
          var t = e.prop,
            n = e.cssProperty,
            l = void 0 === n ? e.prop : n,
            u = e.themeKey,
            c = e.transform,
            d = function (e) {
              if (null == e[t]) return null;
              var n = e[t],
                d = o(e.theme, u) || {};
              return (0, a.k9)(e, n, function (e) {
                var n = s(d, c, e);
                return (
                  e === n &&
                    "string" === typeof e &&
                    (n = s(
                      d,
                      c,
                      "".concat(t).concat("default" === e ? "" : (0, i.Z)(e)),
                      e
                    )),
                  !1 === l ? n : (0, r.Z)({}, l, n)
                );
              });
            };
          return (d.propTypes = {}), (d.filterProps = [t]), d;
        };
      },
      7416: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return R;
          },
        });
        var r = n(5682),
          i = n(8529),
          a = n(8247);
        var o = function () {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            var r = t.reduce(function (e, t) {
                return (
                  t.filterProps.forEach(function (n) {
                    e[n] = t;
                  }),
                  e
                );
              }, {}),
              i = function (e) {
                return Object.keys(e).reduce(function (t, n) {
                  return r[n] ? (0, a.Z)(t, r[n](e)) : t;
                }, {});
              };
            return (
              (i.propTypes = {}),
              (i.filterProps = t.reduce(function (e, t) {
                return e.concat(t.filterProps);
              }, [])),
              i
            );
          },
          s = n(1184);
        function l(e) {
          return "number" !== typeof e ? e : "".concat(e, "px solid");
        }
        var u = (0, i.ZP)({
            prop: "border",
            themeKey: "borders",
            transform: l,
          }),
          c = (0, i.ZP)({
            prop: "borderTop",
            themeKey: "borders",
            transform: l,
          }),
          d = (0, i.ZP)({
            prop: "borderRight",
            themeKey: "borders",
            transform: l,
          }),
          f = (0, i.ZP)({
            prop: "borderBottom",
            themeKey: "borders",
            transform: l,
          }),
          h = (0, i.ZP)({
            prop: "borderLeft",
            themeKey: "borders",
            transform: l,
          }),
          p = (0, i.ZP)({ prop: "borderColor", themeKey: "palette" }),
          v = (0, i.ZP)({ prop: "borderTopColor", themeKey: "palette" }),
          m = (0, i.ZP)({ prop: "borderRightColor", themeKey: "palette" }),
          g = (0, i.ZP)({ prop: "borderBottomColor", themeKey: "palette" }),
          y = (0, i.ZP)({ prop: "borderLeftColor", themeKey: "palette" }),
          b = function (e) {
            if (void 0 !== e.borderRadius && null !== e.borderRadius) {
              var t = (0, r.eI)(
                e.theme,
                "shape.borderRadius",
                4,
                "borderRadius"
              );
              return (0, s.k9)(e, e.borderRadius, function (e) {
                return { borderRadius: (0, r.NA)(t, e) };
              });
            }
            return null;
          };
        (b.propTypes = {}), (b.filterProps = ["borderRadius"]);
        o(u, c, d, f, h, p, v, m, g, y, b);
        var _ = function (e) {
          if (void 0 !== e.gap && null !== e.gap) {
            var t = (0, r.eI)(e.theme, "spacing", 8, "gap");
            return (0, s.k9)(e, e.gap, function (e) {
              return { gap: (0, r.NA)(t, e) };
            });
          }
          return null;
        };
        (_.propTypes = {}), (_.filterProps = ["gap"]);
        var x = function (e) {
          if (void 0 !== e.columnGap && null !== e.columnGap) {
            var t = (0, r.eI)(e.theme, "spacing", 8, "columnGap");
            return (0, s.k9)(e, e.columnGap, function (e) {
              return { columnGap: (0, r.NA)(t, e) };
            });
          }
          return null;
        };
        (x.propTypes = {}), (x.filterProps = ["columnGap"]);
        var S = function (e) {
          if (void 0 !== e.rowGap && null !== e.rowGap) {
            var t = (0, r.eI)(e.theme, "spacing", 8, "rowGap");
            return (0, s.k9)(e, e.rowGap, function (e) {
              return { rowGap: (0, r.NA)(t, e) };
            });
          }
          return null;
        };
        (S.propTypes = {}), (S.filterProps = ["rowGap"]);
        o(
          _,
          x,
          S,
          (0, i.ZP)({ prop: "gridColumn" }),
          (0, i.ZP)({ prop: "gridRow" }),
          (0, i.ZP)({ prop: "gridAutoFlow" }),
          (0, i.ZP)({ prop: "gridAutoColumns" }),
          (0, i.ZP)({ prop: "gridAutoRows" }),
          (0, i.ZP)({ prop: "gridTemplateColumns" }),
          (0, i.ZP)({ prop: "gridTemplateRows" }),
          (0, i.ZP)({ prop: "gridTemplateAreas" }),
          (0, i.ZP)({ prop: "gridArea" })
        );
        function w(e, t) {
          return "grey" === t ? t : e;
        }
        o(
          (0, i.ZP)({ prop: "color", themeKey: "palette", transform: w }),
          (0, i.ZP)({
            prop: "bgcolor",
            cssProperty: "backgroundColor",
            themeKey: "palette",
            transform: w,
          }),
          (0, i.ZP)({
            prop: "backgroundColor",
            themeKey: "palette",
            transform: w,
          })
        );
        function M(e) {
          return e <= 1 && 0 !== e ? "".concat(100 * e, "%") : e;
        }
        var E = (0, i.ZP)({ prop: "width", transform: M }),
          k = function (e) {
            if (void 0 !== e.maxWidth && null !== e.maxWidth) {
              return (0, s.k9)(e, e.maxWidth, function (t) {
                var n, r, i;
                return {
                  maxWidth:
                    (null == (n = e.theme) ||
                    null == (r = n.breakpoints) ||
                    null == (i = r.values)
                      ? void 0
                      : i[t]) ||
                    s.VO[t] ||
                    M(t),
                };
              });
            }
            return null;
          };
        k.filterProps = ["maxWidth"];
        var T = (0, i.ZP)({ prop: "minWidth", transform: M }),
          A = (0, i.ZP)({ prop: "height", transform: M }),
          C = (0, i.ZP)({ prop: "maxHeight", transform: M }),
          P = (0, i.ZP)({ prop: "minHeight", transform: M }),
          R =
            ((0, i.ZP)({ prop: "size", cssProperty: "width", transform: M }),
            (0, i.ZP)({ prop: "size", cssProperty: "height", transform: M }),
            o(E, k, T, A, C, P, (0, i.ZP)({ prop: "boxSizing" })),
            {
              border: { themeKey: "borders", transform: l },
              borderTop: { themeKey: "borders", transform: l },
              borderRight: { themeKey: "borders", transform: l },
              borderBottom: { themeKey: "borders", transform: l },
              borderLeft: { themeKey: "borders", transform: l },
              borderColor: { themeKey: "palette" },
              borderTopColor: { themeKey: "palette" },
              borderRightColor: { themeKey: "palette" },
              borderBottomColor: { themeKey: "palette" },
              borderLeftColor: { themeKey: "palette" },
              borderRadius: { themeKey: "shape.borderRadius", style: b },
              color: { themeKey: "palette", transform: w },
              bgcolor: {
                themeKey: "palette",
                cssProperty: "backgroundColor",
                transform: w,
              },
              backgroundColor: { themeKey: "palette", transform: w },
              p: { style: r.o3 },
              pt: { style: r.o3 },
              pr: { style: r.o3 },
              pb: { style: r.o3 },
              pl: { style: r.o3 },
              px: { style: r.o3 },
              py: { style: r.o3 },
              padding: { style: r.o3 },
              paddingTop: { style: r.o3 },
              paddingRight: { style: r.o3 },
              paddingBottom: { style: r.o3 },
              paddingLeft: { style: r.o3 },
              paddingX: { style: r.o3 },
              paddingY: { style: r.o3 },
              paddingInline: { style: r.o3 },
              paddingInlineStart: { style: r.o3 },
              paddingInlineEnd: { style: r.o3 },
              paddingBlock: { style: r.o3 },
              paddingBlockStart: { style: r.o3 },
              paddingBlockEnd: { style: r.o3 },
              m: { style: r.e6 },
              mt: { style: r.e6 },
              mr: { style: r.e6 },
              mb: { style: r.e6 },
              ml: { style: r.e6 },
              mx: { style: r.e6 },
              my: { style: r.e6 },
              margin: { style: r.e6 },
              marginTop: { style: r.e6 },
              marginRight: { style: r.e6 },
              marginBottom: { style: r.e6 },
              marginLeft: { style: r.e6 },
              marginX: { style: r.e6 },
              marginY: { style: r.e6 },
              marginInline: { style: r.e6 },
              marginInlineStart: { style: r.e6 },
              marginInlineEnd: { style: r.e6 },
              marginBlock: { style: r.e6 },
              marginBlockStart: { style: r.e6 },
              marginBlockEnd: { style: r.e6 },
              displayPrint: {
                cssProperty: !1,
                transform: function (e) {
                  return { "@media print": { display: e } };
                },
              },
              display: {},
              overflow: {},
              textOverflow: {},
              visibility: {},
              whiteSpace: {},
              flexBasis: {},
              flexDirection: {},
              flexWrap: {},
              justifyContent: {},
              alignItems: {},
              alignContent: {},
              order: {},
              flex: {},
              flexGrow: {},
              flexShrink: {},
              alignSelf: {},
              justifyItems: {},
              justifySelf: {},
              gap: { style: _ },
              rowGap: { style: S },
              columnGap: { style: x },
              gridColumn: {},
              gridRow: {},
              gridAutoFlow: {},
              gridAutoColumns: {},
              gridAutoRows: {},
              gridTemplateColumns: {},
              gridTemplateRows: {},
              gridTemplateAreas: {},
              gridArea: {},
              position: {},
              zIndex: { themeKey: "zIndex" },
              top: {},
              right: {},
              bottom: {},
              left: {},
              boxShadow: { themeKey: "shadows" },
              width: { transform: M },
              maxWidth: { style: k },
              minWidth: { transform: M },
              height: { transform: M },
              maxHeight: { transform: M },
              minHeight: { transform: M },
              boxSizing: {},
              fontFamily: { themeKey: "typography" },
              fontSize: { themeKey: "typography" },
              fontStyle: { themeKey: "typography" },
              fontWeight: { themeKey: "typography" },
              letterSpacing: {},
              textTransform: {},
              lineHeight: {},
              textAlign: {},
              typography: { cssProperty: !1, themeKey: "typography" },
            });
      },
      104: function (e, t, n) {
        "use strict";
        var r = n(4942),
          i = n(7312),
          a = n(8247),
          o = n(8529),
          s = n(1184),
          l = n(7416);
        var u = (function () {
          function e(e, t, n, a) {
            var l,
              u = ((l = {}), (0, r.Z)(l, e, t), (0, r.Z)(l, "theme", n), l),
              c = a[e];
            if (!c) return (0, r.Z)({}, e, t);
            var d = c.cssProperty,
              f = void 0 === d ? e : d,
              h = c.themeKey,
              p = c.transform,
              v = c.style;
            if (null == t) return null;
            if ("typography" === h && "inherit" === t)
              return (0, r.Z)({}, e, t);
            var m = (0, o.DW)(n, h) || {};
            if (v) return v(u);
            return (0, s.k9)(u, t, function (t) {
              var n = (0, o.Jq)(m, p, t);
              return (
                t === n &&
                  "string" === typeof t &&
                  (n = (0, o.Jq)(
                    m,
                    p,
                    "".concat(e).concat("default" === t ? "" : (0, i.Z)(t)),
                    t
                  )),
                !1 === f ? n : (0, r.Z)({}, f, n)
              );
            });
          }
          return function t(n) {
            var i,
              o = n || {},
              u = o.sx,
              c = o.theme,
              d = void 0 === c ? {} : c;
            if (!u) return null;
            var f = null != (i = d.unstable_sxConfig) ? i : l.Z;
            function h(n) {
              var i = n;
              if ("function" === typeof n) i = n(d);
              else if ("object" !== typeof n) return n;
              if (!i) return null;
              var o = (0, s.W8)(d.breakpoints),
                l = Object.keys(o),
                u = o;
              return (
                Object.keys(i).forEach(function (n) {
                  var o,
                    l,
                    c =
                      ((o = i[n]), (l = d), "function" === typeof o ? o(l) : o);
                  if (null !== c && void 0 !== c)
                    if ("object" === typeof c)
                      if (f[n]) u = (0, a.Z)(u, e(n, c, d, f));
                      else {
                        var h = (0, s.k9)({ theme: d }, c, function (e) {
                          return (0, r.Z)({}, n, e);
                        });
                        !(function () {
                          for (
                            var e = arguments.length, t = new Array(e), n = 0;
                            n < e;
                            n++
                          )
                            t[n] = arguments[n];
                          var r = t.reduce(function (e, t) {
                              return e.concat(Object.keys(t));
                            }, []),
                            i = new Set(r);
                          return t.every(function (e) {
                            return i.size === Object.keys(e).length;
                          });
                        })(h, c)
                          ? (u = (0, a.Z)(u, h))
                          : (u[n] = t({ sx: c, theme: d }));
                      }
                    else u = (0, a.Z)(u, e(n, c, d, f));
                }),
                (0, s.L7)(l, u)
              );
            }
            return Array.isArray(u) ? u.map(h) : h(u);
          };
        })();
        (u.filterProps = ["sx"]), (t.Z = u);
      },
      3459: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return l;
          },
        });
        var r = n(5080),
          i = n(2791),
          a = n(2564);
        var o = function () {
            var e,
              t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : null,
              n = i.useContext(a.T);
            return n && ((e = n), 0 !== Object.keys(e).length) ? n : t;
          },
          s = (0, r.Z)();
        var l = function () {
          return o(
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : s
          );
        };
      },
      5902: function (e, t) {
        "use strict";
        var n = function (e) {
            return e;
          },
          r = (function () {
            var e = n;
            return {
              configure: function (t) {
                e = t;
              },
              generate: function (t) {
                return e(t);
              },
              reset: function () {
                e = n;
              },
            };
          })();
        t.Z = r;
      },
      7312: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return i;
          },
        });
        var r = n(6189);
        function i(e) {
          if ("string" !== typeof e) throw new Error((0, r.Z)(7));
          return e.charAt(0).toUpperCase() + e.slice(1);
        }
      },
      4419: function (e, t, n) {
        "use strict";
        function r(e, t) {
          var n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : void 0,
            r = {};
          return (
            Object.keys(e).forEach(function (i) {
              r[i] = e[i]
                .reduce(function (e, r) {
                  if (r) {
                    var i = t(r);
                    "" !== i && e.push(i), n && n[r] && e.push(n[r]);
                  }
                  return e;
                }, [])
                .join(" ");
            }),
            r
          );
        }
        n.d(t, {
          Z: function () {
            return r;
          },
        });
      },
      8949: function (e, t, n) {
        "use strict";
        function r() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          return t.reduce(
            function (e, t) {
              return null == t
                ? e
                : function () {
                    for (
                      var n = arguments.length, r = new Array(n), i = 0;
                      i < n;
                      i++
                    )
                      r[i] = arguments[i];
                    e.apply(this, r), t.apply(this, r);
                  };
            },
            function () {}
          );
        }
        n.d(t, {
          Z: function () {
            return r;
          },
        });
      },
      3981: function (e, t, n) {
        "use strict";
        function r(e) {
          var t,
            n =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 166;
          function r() {
            for (
              var r = this, i = arguments.length, a = new Array(i), o = 0;
              o < i;
              o++
            )
              a[o] = arguments[o];
            clearTimeout(t),
              (t = setTimeout(function () {
                e.apply(r, a);
              }, n));
          }
          return (
            (r.clear = function () {
              clearTimeout(t);
            }),
            r
          );
        }
        n.d(t, {
          Z: function () {
            return r;
          },
        });
      },
      2466: function (e, t, n) {
        "use strict";
        n.d(t, {
          P: function () {
            return i;
          },
          Z: function () {
            return o;
          },
        });
        var r = n(1413);
        function i(e) {
          return (
            null !== e && "object" === typeof e && e.constructor === Object
          );
        }
        function a(e) {
          if (!i(e)) return e;
          var t = {};
          return (
            Object.keys(e).forEach(function (n) {
              t[n] = a(e[n]);
            }),
            t
          );
        }
        function o(e, t) {
          var n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : { clone: !0 },
            s = n.clone ? (0, r.Z)({}, e) : e;
          return (
            i(e) &&
              i(t) &&
              Object.keys(t).forEach(function (r) {
                "__proto__" !== r &&
                  (i(t[r]) && r in e && i(e[r])
                    ? (s[r] = o(e[r], t[r], n))
                    : n.clone
                    ? (s[r] = i(t[r]) ? a(t[r]) : t[r])
                    : (s[r] = t[r]));
              }),
            s
          );
        }
      },
      6189: function (e, t, n) {
        "use strict";
        function r(e) {
          for (
            var t = "https://mui.com/production-error/?code=" + e, n = 1;
            n < arguments.length;
            n += 1
          )
            t += "&args[]=" + encodeURIComponent(arguments[n]);
          return (
            "Minified MUI error #" +
            e +
            "; visit " +
            t +
            " for the full message."
          );
        }
        n.d(t, {
          Z: function () {
            return r;
          },
        });
      },
      1217: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return a;
          },
        });
        var r = n(5902),
          i = {
            active: "active",
            checked: "checked",
            completed: "completed",
            disabled: "disabled",
            readOnly: "readOnly",
            error: "error",
            expanded: "expanded",
            focused: "focused",
            focusVisible: "focusVisible",
            required: "required",
            selected: "selected",
          };
        function a(e, t) {
          var n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : "Mui",
            a = i[t];
          return a
            ? "".concat(n, "-").concat(a)
            : "".concat(r.Z.generate(e), "-").concat(t);
        }
      },
      5878: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return i;
          },
        });
        var r = n(1217);
        function i(e, t) {
          var n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : "Mui",
            i = {};
          return (
            t.forEach(function (t) {
              i[t] = (0, r.Z)(e, t, n);
            }),
            i
          );
        }
      },
      9723: function (e, t, n) {
        "use strict";
        function r(e) {
          return (e && e.ownerDocument) || document;
        }
        n.d(t, {
          Z: function () {
            return r;
          },
        });
      },
      7979: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return i;
          },
        });
        var r = n(9723);
        function i(e) {
          return (0, r.Z)(e).defaultView || window;
        }
      },
      2971: function (e, t, n) {
        "use strict";
        function r(e, t) {
          "function" === typeof e ? e(t) : e && (e.current = t);
        }
        n.d(t, {
          Z: function () {
            return r;
          },
        });
      },
      5721: function (e, t, n) {
        "use strict";
        var r = n(2791),
          i = "undefined" !== typeof window ? r.useLayoutEffect : r.useEffect;
        t.Z = i;
      },
      8956: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return a;
          },
        });
        var r = n(2791),
          i = n(5721);
        function a(e) {
          var t = r.useRef(e);
          return (
            (0, i.Z)(function () {
              t.current = e;
            }),
            r.useCallback(function () {
              return t.current.apply(void 0, arguments);
            }, [])
          );
        }
      },
      7563: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return a;
          },
        });
        var r = n(2791),
          i = n(2971);
        function a() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          return r.useMemo(function () {
            return t.every(function (e) {
              return null == e;
            })
              ? null
              : function (e) {
                  t.forEach(function (t) {
                    (0, i.Z)(t, e);
                  });
                };
          }, t);
        }
      },
      5345: function (e, t) {
        "use strict";
        function n(e, t) {
          var n = e.length;
          e.push(t);
          e: for (; 0 < n; ) {
            var r = (n - 1) >>> 1,
              i = e[r];
            if (!(0 < a(i, t))) break e;
            (e[r] = t), (e[n] = i), (n = r);
          }
        }
        function r(e) {
          return 0 === e.length ? null : e[0];
        }
        function i(e) {
          if (0 === e.length) return null;
          var t = e[0],
            n = e.pop();
          if (n !== t) {
            e[0] = n;
            e: for (var r = 0, i = e.length, o = i >>> 1; r < o; ) {
              var s = 2 * (r + 1) - 1,
                l = e[s],
                u = s + 1,
                c = e[u];
              if (0 > a(l, n))
                u < i && 0 > a(c, l)
                  ? ((e[r] = c), (e[u] = n), (r = u))
                  : ((e[r] = l), (e[s] = n), (r = s));
              else {
                if (!(u < i && 0 > a(c, n))) break e;
                (e[r] = c), (e[u] = n), (r = u);
              }
            }
          }
          return t;
        }
        function a(e, t) {
          var n = e.sortIndex - t.sortIndex;
          return 0 !== n ? n : e.id - t.id;
        }
        if (
          "object" === typeof performance &&
          "function" === typeof performance.now
        ) {
          var o = performance;
          t.unstable_now = function () {
            return o.now();
          };
        } else {
          var s = Date,
            l = s.now();
          t.unstable_now = function () {
            return s.now() - l;
          };
        }
        var u = [],
          c = [],
          d = 1,
          f = null,
          h = 3,
          p = !1,
          v = !1,
          m = !1,
          g = "function" === typeof setTimeout ? setTimeout : null,
          y = "function" === typeof clearTimeout ? clearTimeout : null,
          b = "undefined" !== typeof setImmediate ? setImmediate : null;
        function _(e) {
          for (var t = r(c); null !== t; ) {
            if (null === t.callback) i(c);
            else {
              if (!(t.startTime <= e)) break;
              i(c), (t.sortIndex = t.expirationTime), n(u, t);
            }
            t = r(c);
          }
        }
        function x(e) {
          if (((m = !1), _(e), !v))
            if (null !== r(u)) (v = !0), I(S);
            else {
              var t = r(c);
              null !== t && N(x, t.startTime - e);
            }
        }
        function S(e, n) {
          (v = !1), m && ((m = !1), y(k), (k = -1)), (p = !0);
          var a = h;
          try {
            for (
              _(n), f = r(u);
              null !== f && (!(f.expirationTime > n) || (e && !C()));

            ) {
              var o = f.callback;
              if ("function" === typeof o) {
                (f.callback = null), (h = f.priorityLevel);
                var s = o(f.expirationTime <= n);
                (n = t.unstable_now()),
                  "function" === typeof s
                    ? (f.callback = s)
                    : f === r(u) && i(u),
                  _(n);
              } else i(u);
              f = r(u);
            }
            if (null !== f) var l = !0;
            else {
              var d = r(c);
              null !== d && N(x, d.startTime - n), (l = !1);
            }
            return l;
          } finally {
            (f = null), (h = a), (p = !1);
          }
        }
        "undefined" !== typeof navigator &&
          void 0 !== navigator.scheduling &&
          void 0 !== navigator.scheduling.isInputPending &&
          navigator.scheduling.isInputPending.bind(navigator.scheduling);
        var w,
          M = !1,
          E = null,
          k = -1,
          T = 5,
          A = -1;
        function C() {
          return !(t.unstable_now() - A < T);
        }
        function P() {
          if (null !== E) {
            var e = t.unstable_now();
            A = e;
            var n = !0;
            try {
              n = E(!0, e);
            } finally {
              n ? w() : ((M = !1), (E = null));
            }
          } else M = !1;
        }
        if ("function" === typeof b)
          w = function () {
            b(P);
          };
        else if ("undefined" !== typeof MessageChannel) {
          var R = new MessageChannel(),
            L = R.port2;
          (R.port1.onmessage = P),
            (w = function () {
              L.postMessage(null);
            });
        } else
          w = function () {
            g(P, 0);
          };
        function I(e) {
          (E = e), M || ((M = !0), w());
        }
        function N(e, n) {
          k = g(function () {
            e(t.unstable_now());
          }, n);
        }
        (t.unstable_IdlePriority = 5),
          (t.unstable_ImmediatePriority = 1),
          (t.unstable_LowPriority = 4),
          (t.unstable_NormalPriority = 3),
          (t.unstable_Profiling = null),
          (t.unstable_UserBlockingPriority = 2),
          (t.unstable_cancelCallback = function (e) {
            e.callback = null;
          }),
          (t.unstable_continueExecution = function () {
            v || p || ((v = !0), I(S));
          }),
          (t.unstable_forceFrameRate = function (e) {
            0 > e || 125 < e
              ? console.error(
                  "forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"
                )
              : (T = 0 < e ? Math.floor(1e3 / e) : 5);
          }),
          (t.unstable_getCurrentPriorityLevel = function () {
            return h;
          }),
          (t.unstable_getFirstCallbackNode = function () {
            return r(u);
          }),
          (t.unstable_next = function (e) {
            switch (h) {
              case 1:
              case 2:
              case 3:
                var t = 3;
                break;
              default:
                t = h;
            }
            var n = h;
            h = t;
            try {
              return e();
            } finally {
              h = n;
            }
          }),
          (t.unstable_pauseExecution = function () {}),
          (t.unstable_requestPaint = function () {}),
          (t.unstable_runWithPriority = function (e, t) {
            switch (e) {
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
                break;
              default:
                e = 3;
            }
            var n = h;
            h = e;
            try {
              return t();
            } finally {
              h = n;
            }
          }),
          (t.unstable_scheduleCallback = function (e, i, a) {
            var o = t.unstable_now();
            switch (
              ("object" === typeof a && null !== a
                ? (a = "number" === typeof (a = a.delay) && 0 < a ? o + a : o)
                : (a = o),
              e)
            ) {
              case 1:
                var s = -1;
                break;
              case 2:
                s = 250;
                break;
              case 5:
                s = 1073741823;
                break;
              case 4:
                s = 1e4;
                break;
              default:
                s = 5e3;
            }
            return (
              (e = {
                id: d++,
                callback: i,
                priorityLevel: e,
                startTime: a,
                expirationTime: (s = a + s),
                sortIndex: -1,
              }),
              a > o
                ? ((e.sortIndex = a),
                  n(c, e),
                  null === r(u) &&
                    e === r(c) &&
                    (m ? (y(k), (k = -1)) : (m = !0), N(x, a - o)))
                : ((e.sortIndex = s), n(u, e), v || p || ((v = !0), I(S))),
              e
            );
          }),
          (t.unstable_shouldYield = C),
          (t.unstable_wrapCallback = function (e) {
            var t = h;
            return function () {
              var n = h;
              h = t;
              try {
                return e.apply(this, arguments);
              } finally {
                h = n;
              }
            };
          });
      },
      4545: function (e, t, n) {
        "use strict";
        e.exports = n(5345);
      },
      8182: function (e, t, n) {
        "use strict";
        function r(e) {
          var t,
            n,
            i = "";
          if ("string" == typeof e || "number" == typeof e) i += e;
          else if ("object" == typeof e)
            if (Array.isArray(e))
              for (t = 0; t < e.length; t++)
                e[t] && (n = r(e[t])) && (i && (i += " "), (i += n));
            else for (t in e) e[t] && (i && (i += " "), (i += t));
          return i;
        }
        t.Z = function () {
          for (var e, t, n = 0, i = ""; n < arguments.length; )
            (e = arguments[n++]) && (t = r(e)) && (i && (i += " "), (i += t));
          return i;
        };
      },
      7494: function (e) {
        function t(e, t, n) {
          var r, i, a, o, s;
          function l() {
            var u = Date.now() - o;
            u < t && u >= 0
              ? (r = setTimeout(l, t - u))
              : ((r = null), n || ((s = e.apply(a, i)), (a = i = null)));
          }
          null == t && (t = 100);
          var u = function () {
            (a = this), (i = arguments), (o = Date.now());
            var u = n && !r;
            return (
              r || (r = setTimeout(l, t)),
              u && ((s = e.apply(a, i)), (a = i = null)),
              s
            );
          };
          return (
            (u.clear = function () {
              r && (clearTimeout(r), (r = null));
            }),
            (u.flush = function () {
              r &&
                ((s = e.apply(a, i)),
                (a = i = null),
                clearTimeout(r),
                (r = null));
            }),
            u
          );
        }
        (t.debounce = t), (e.exports = t);
      },
      2110: function (e, t, n) {
        "use strict";
        var r = n(7441),
          i = {
            childContextTypes: !0,
            contextType: !0,
            contextTypes: !0,
            defaultProps: !0,
            displayName: !0,
            getDefaultProps: !0,
            getDerivedStateFromError: !0,
            getDerivedStateFromProps: !0,
            mixins: !0,
            propTypes: !0,
            type: !0,
          },
          a = {
            name: !0,
            length: !0,
            prototype: !0,
            caller: !0,
            callee: !0,
            arguments: !0,
            arity: !0,
          },
          o = {
            $$typeof: !0,
            compare: !0,
            defaultProps: !0,
            displayName: !0,
            propTypes: !0,
            type: !0,
          },
          s = {};
        function l(e) {
          return r.isMemo(e) ? o : s[e.$$typeof] || i;
        }
        (s[r.ForwardRef] = {
          $$typeof: !0,
          render: !0,
          defaultProps: !0,
          displayName: !0,
          propTypes: !0,
        }),
          (s[r.Memo] = o);
        var u = Object.defineProperty,
          c = Object.getOwnPropertyNames,
          d = Object.getOwnPropertySymbols,
          f = Object.getOwnPropertyDescriptor,
          h = Object.getPrototypeOf,
          p = Object.prototype;
        e.exports = function e(t, n, r) {
          if ("string" !== typeof n) {
            if (p) {
              var i = h(n);
              i && i !== p && e(t, i, r);
            }
            var o = c(n);
            d && (o = o.concat(d(n)));
            for (var s = l(t), v = l(n), m = 0; m < o.length; ++m) {
              var g = o[m];
              if (!a[g] && (!r || !r[g]) && (!v || !v[g]) && (!s || !s[g])) {
                var y = f(n, g);
                try {
                  u(t, g, y);
                } catch (b) {}
              }
            }
          }
          return t;
        };
      },
      4463: function (e, t, n) {
        "use strict";
        var r = n(2791),
          i = n(5296);
        function a(e) {
          for (
            var t =
                "https://reactjs.org/docs/error-decoder.html?invariant=" + e,
              n = 1;
            n < arguments.length;
            n++
          )
            t += "&args[]=" + encodeURIComponent(arguments[n]);
          return (
            "Minified React error #" +
            e +
            "; visit " +
            t +
            " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
          );
        }
        var o = new Set(),
          s = {};
        function l(e, t) {
          u(e, t), u(e + "Capture", t);
        }
        function u(e, t) {
          for (s[e] = t, e = 0; e < t.length; e++) o.add(t[e]);
        }
        var c = !(
            "undefined" === typeof window ||
            "undefined" === typeof window.document ||
            "undefined" === typeof window.document.createElement
          ),
          d = Object.prototype.hasOwnProperty,
          f =
            /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
          h = {},
          p = {};
        function v(e, t, n, r, i, a, o) {
          (this.acceptsBooleans = 2 === t || 3 === t || 4 === t),
            (this.attributeName = r),
            (this.attributeNamespace = i),
            (this.mustUseProperty = n),
            (this.propertyName = e),
            (this.type = t),
            (this.sanitizeURL = a),
            (this.removeEmptyString = o);
        }
        var m = {};
        "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style"
          .split(" ")
          .forEach(function (e) {
            m[e] = new v(e, 0, !1, e, null, !1, !1);
          }),
          [
            ["acceptCharset", "accept-charset"],
            ["className", "class"],
            ["htmlFor", "for"],
            ["httpEquiv", "http-equiv"],
          ].forEach(function (e) {
            var t = e[0];
            m[t] = new v(t, 1, !1, e[1], null, !1, !1);
          }),
          ["contentEditable", "draggable", "spellCheck", "value"].forEach(
            function (e) {
              m[e] = new v(e, 2, !1, e.toLowerCase(), null, !1, !1);
            }
          ),
          [
            "autoReverse",
            "externalResourcesRequired",
            "focusable",
            "preserveAlpha",
          ].forEach(function (e) {
            m[e] = new v(e, 2, !1, e, null, !1, !1);
          }),
          "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope"
            .split(" ")
            .forEach(function (e) {
              m[e] = new v(e, 3, !1, e.toLowerCase(), null, !1, !1);
            }),
          ["checked", "multiple", "muted", "selected"].forEach(function (e) {
            m[e] = new v(e, 3, !0, e, null, !1, !1);
          }),
          ["capture", "download"].forEach(function (e) {
            m[e] = new v(e, 4, !1, e, null, !1, !1);
          }),
          ["cols", "rows", "size", "span"].forEach(function (e) {
            m[e] = new v(e, 6, !1, e, null, !1, !1);
          }),
          ["rowSpan", "start"].forEach(function (e) {
            m[e] = new v(e, 5, !1, e.toLowerCase(), null, !1, !1);
          });
        var g = /[\-:]([a-z])/g;
        function y(e) {
          return e[1].toUpperCase();
        }
        function b(e, t, n, r) {
          var i = m.hasOwnProperty(t) ? m[t] : null;
          (null !== i
            ? 0 !== i.type
            : r ||
              !(2 < t.length) ||
              ("o" !== t[0] && "O" !== t[0]) ||
              ("n" !== t[1] && "N" !== t[1])) &&
            ((function (e, t, n, r) {
              if (
                null === t ||
                "undefined" === typeof t ||
                (function (e, t, n, r) {
                  if (null !== n && 0 === n.type) return !1;
                  switch (typeof t) {
                    case "function":
                    case "symbol":
                      return !0;
                    case "boolean":
                      return (
                        !r &&
                        (null !== n
                          ? !n.acceptsBooleans
                          : "data-" !== (e = e.toLowerCase().slice(0, 5)) &&
                            "aria-" !== e)
                      );
                    default:
                      return !1;
                  }
                })(e, t, n, r)
              )
                return !0;
              if (r) return !1;
              if (null !== n)
                switch (n.type) {
                  case 3:
                    return !t;
                  case 4:
                    return !1 === t;
                  case 5:
                    return isNaN(t);
                  case 6:
                    return isNaN(t) || 1 > t;
                }
              return !1;
            })(t, n, i, r) && (n = null),
            r || null === i
              ? (function (e) {
                  return (
                    !!d.call(p, e) ||
                    (!d.call(h, e) &&
                      (f.test(e) ? (p[e] = !0) : ((h[e] = !0), !1)))
                  );
                })(t) &&
                (null === n ? e.removeAttribute(t) : e.setAttribute(t, "" + n))
              : i.mustUseProperty
              ? (e[i.propertyName] = null === n ? 3 !== i.type && "" : n)
              : ((t = i.attributeName),
                (r = i.attributeNamespace),
                null === n
                  ? e.removeAttribute(t)
                  : ((n =
                      3 === (i = i.type) || (4 === i && !0 === n)
                        ? ""
                        : "" + n),
                    r ? e.setAttributeNS(r, t, n) : e.setAttribute(t, n))));
        }
        "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height"
          .split(" ")
          .forEach(function (e) {
            var t = e.replace(g, y);
            m[t] = new v(t, 1, !1, e, null, !1, !1);
          }),
          "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type"
            .split(" ")
            .forEach(function (e) {
              var t = e.replace(g, y);
              m[t] = new v(t, 1, !1, e, "http://www.w3.org/1999/xlink", !1, !1);
            }),
          ["xml:base", "xml:lang", "xml:space"].forEach(function (e) {
            var t = e.replace(g, y);
            m[t] = new v(
              t,
              1,
              !1,
              e,
              "http://www.w3.org/XML/1998/namespace",
              !1,
              !1
            );
          }),
          ["tabIndex", "crossOrigin"].forEach(function (e) {
            m[e] = new v(e, 1, !1, e.toLowerCase(), null, !1, !1);
          }),
          (m.xlinkHref = new v(
            "xlinkHref",
            1,
            !1,
            "xlink:href",
            "http://www.w3.org/1999/xlink",
            !0,
            !1
          )),
          ["src", "href", "action", "formAction"].forEach(function (e) {
            m[e] = new v(e, 1, !1, e.toLowerCase(), null, !0, !0);
          });
        var _ = r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
          x = Symbol.for("react.element"),
          S = Symbol.for("react.portal"),
          w = Symbol.for("react.fragment"),
          M = Symbol.for("react.strict_mode"),
          E = Symbol.for("react.profiler"),
          k = Symbol.for("react.provider"),
          T = Symbol.for("react.context"),
          A = Symbol.for("react.forward_ref"),
          C = Symbol.for("react.suspense"),
          P = Symbol.for("react.suspense_list"),
          R = Symbol.for("react.memo"),
          L = Symbol.for("react.lazy");
        Symbol.for("react.scope"), Symbol.for("react.debug_trace_mode");
        var I = Symbol.for("react.offscreen");
        Symbol.for("react.legacy_hidden"),
          Symbol.for("react.cache"),
          Symbol.for("react.tracing_marker");
        var N = Symbol.iterator;
        function O(e) {
          return null === e || "object" !== typeof e
            ? null
            : "function" === typeof (e = (N && e[N]) || e["@@iterator"])
            ? e
            : null;
        }
        var D,
          U = Object.assign;
        function z(e) {
          if (void 0 === D)
            try {
              throw Error();
            } catch (n) {
              var t = n.stack.trim().match(/\n( *(at )?)/);
              D = (t && t[1]) || "";
            }
          return "\n" + D + e;
        }
        var F = !1;
        function B(e, t) {
          if (!e || F) return "";
          F = !0;
          var n = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          try {
            if (t)
              if (
                ((t = function () {
                  throw Error();
                }),
                Object.defineProperty(t.prototype, "props", {
                  set: function () {
                    throw Error();
                  },
                }),
                "object" === typeof Reflect && Reflect.construct)
              ) {
                try {
                  Reflect.construct(t, []);
                } catch (u) {
                  var r = u;
                }
                Reflect.construct(e, [], t);
              } else {
                try {
                  t.call();
                } catch (u) {
                  r = u;
                }
                e.call(t.prototype);
              }
            else {
              try {
                throw Error();
              } catch (u) {
                r = u;
              }
              e();
            }
          } catch (u) {
            if (u && r && "string" === typeof u.stack) {
              for (
                var i = u.stack.split("\n"),
                  a = r.stack.split("\n"),
                  o = i.length - 1,
                  s = a.length - 1;
                1 <= o && 0 <= s && i[o] !== a[s];

              )
                s--;
              for (; 1 <= o && 0 <= s; o--, s--)
                if (i[o] !== a[s]) {
                  if (1 !== o || 1 !== s)
                    do {
                      if ((o--, 0 > --s || i[o] !== a[s])) {
                        var l = "\n" + i[o].replace(" at new ", " at ");
                        return (
                          e.displayName &&
                            l.includes("<anonymous>") &&
                            (l = l.replace("<anonymous>", e.displayName)),
                          l
                        );
                      }
                    } while (1 <= o && 0 <= s);
                  break;
                }
            }
          } finally {
            (F = !1), (Error.prepareStackTrace = n);
          }
          return (e = e ? e.displayName || e.name : "") ? z(e) : "";
        }
        function Z(e) {
          switch (e.tag) {
            case 5:
              return z(e.type);
            case 16:
              return z("Lazy");
            case 13:
              return z("Suspense");
            case 19:
              return z("SuspenseList");
            case 0:
            case 2:
            case 15:
              return (e = B(e.type, !1));
            case 11:
              return (e = B(e.type.render, !1));
            case 1:
              return (e = B(e.type, !0));
            default:
              return "";
          }
        }
        function H(e) {
          if (null == e) return null;
          if ("function" === typeof e) return e.displayName || e.name || null;
          if ("string" === typeof e) return e;
          switch (e) {
            case w:
              return "Fragment";
            case S:
              return "Portal";
            case E:
              return "Profiler";
            case M:
              return "StrictMode";
            case C:
              return "Suspense";
            case P:
              return "SuspenseList";
          }
          if ("object" === typeof e)
            switch (e.$$typeof) {
              case T:
                return (e.displayName || "Context") + ".Consumer";
              case k:
                return (e._context.displayName || "Context") + ".Provider";
              case A:
                var t = e.render;
                return (
                  (e = e.displayName) ||
                    (e =
                      "" !== (e = t.displayName || t.name || "")
                        ? "ForwardRef(" + e + ")"
                        : "ForwardRef"),
                  e
                );
              case R:
                return null !== (t = e.displayName || null)
                  ? t
                  : H(e.type) || "Memo";
              case L:
                (t = e._payload), (e = e._init);
                try {
                  return H(e(t));
                } catch (n) {}
            }
          return null;
        }
        function V(e) {
          var t = e.type;
          switch (e.tag) {
            case 24:
              return "Cache";
            case 9:
              return (t.displayName || "Context") + ".Consumer";
            case 10:
              return (t._context.displayName || "Context") + ".Provider";
            case 18:
              return "DehydratedFragment";
            case 11:
              return (
                (e = (e = t.render).displayName || e.name || ""),
                t.displayName ||
                  ("" !== e ? "ForwardRef(" + e + ")" : "ForwardRef")
              );
            case 7:
              return "Fragment";
            case 5:
              return t;
            case 4:
              return "Portal";
            case 3:
              return "Root";
            case 6:
              return "Text";
            case 16:
              return H(t);
            case 8:
              return t === M ? "StrictMode" : "Mode";
            case 22:
              return "Offscreen";
            case 12:
              return "Profiler";
            case 21:
              return "Scope";
            case 13:
              return "Suspense";
            case 19:
              return "SuspenseList";
            case 25:
              return "TracingMarker";
            case 1:
            case 0:
            case 17:
            case 2:
            case 14:
            case 15:
              if ("function" === typeof t)
                return t.displayName || t.name || null;
              if ("string" === typeof t) return t;
          }
          return null;
        }
        function G(e) {
          switch (typeof e) {
            case "boolean":
            case "number":
            case "string":
            case "undefined":
            case "object":
              return e;
            default:
              return "";
          }
        }
        function W(e) {
          var t = e.type;
          return (
            (e = e.nodeName) &&
            "input" === e.toLowerCase() &&
            ("checkbox" === t || "radio" === t)
          );
        }
        function j(e) {
          e._valueTracker ||
            (e._valueTracker = (function (e) {
              var t = W(e) ? "checked" : "value",
                n = Object.getOwnPropertyDescriptor(e.constructor.prototype, t),
                r = "" + e[t];
              if (
                !e.hasOwnProperty(t) &&
                "undefined" !== typeof n &&
                "function" === typeof n.get &&
                "function" === typeof n.set
              ) {
                var i = n.get,
                  a = n.set;
                return (
                  Object.defineProperty(e, t, {
                    configurable: !0,
                    get: function () {
                      return i.call(this);
                    },
                    set: function (e) {
                      (r = "" + e), a.call(this, e);
                    },
                  }),
                  Object.defineProperty(e, t, { enumerable: n.enumerable }),
                  {
                    getValue: function () {
                      return r;
                    },
                    setValue: function (e) {
                      r = "" + e;
                    },
                    stopTracking: function () {
                      (e._valueTracker = null), delete e[t];
                    },
                  }
                );
              }
            })(e));
        }
        function X(e) {
          if (!e) return !1;
          var t = e._valueTracker;
          if (!t) return !0;
          var n = t.getValue(),
            r = "";
          return (
            e && (r = W(e) ? (e.checked ? "true" : "false") : e.value),
            (e = r) !== n && (t.setValue(e), !0)
          );
        }
        function q(e) {
          if (
            "undefined" ===
            typeof (e =
              e || ("undefined" !== typeof document ? document : void 0))
          )
            return null;
          try {
            return e.activeElement || e.body;
          } catch (t) {
            return e.body;
          }
        }
        function Y(e, t) {
          var n = t.checked;
          return U({}, t, {
            defaultChecked: void 0,
            defaultValue: void 0,
            value: void 0,
            checked: null != n ? n : e._wrapperState.initialChecked,
          });
        }
        function K(e, t) {
          var n = null == t.defaultValue ? "" : t.defaultValue,
            r = null != t.checked ? t.checked : t.defaultChecked;
          (n = G(null != t.value ? t.value : n)),
            (e._wrapperState = {
              initialChecked: r,
              initialValue: n,
              controlled:
                "checkbox" === t.type || "radio" === t.type
                  ? null != t.checked
                  : null != t.value,
            });
        }
        function $(e, t) {
          null != (t = t.checked) && b(e, "checked", t, !1);
        }
        function J(e, t) {
          $(e, t);
          var n = G(t.value),
            r = t.type;
          if (null != n)
            "number" === r
              ? ((0 === n && "" === e.value) || e.value != n) &&
                (e.value = "" + n)
              : e.value !== "" + n && (e.value = "" + n);
          else if ("submit" === r || "reset" === r)
            return void e.removeAttribute("value");
          t.hasOwnProperty("value")
            ? ee(e, t.type, n)
            : t.hasOwnProperty("defaultValue") &&
              ee(e, t.type, G(t.defaultValue)),
            null == t.checked &&
              null != t.defaultChecked &&
              (e.defaultChecked = !!t.defaultChecked);
        }
        function Q(e, t, n) {
          if (t.hasOwnProperty("value") || t.hasOwnProperty("defaultValue")) {
            var r = t.type;
            if (
              !(
                ("submit" !== r && "reset" !== r) ||
                (void 0 !== t.value && null !== t.value)
              )
            )
              return;
            (t = "" + e._wrapperState.initialValue),
              n || t === e.value || (e.value = t),
              (e.defaultValue = t);
          }
          "" !== (n = e.name) && (e.name = ""),
            (e.defaultChecked = !!e._wrapperState.initialChecked),
            "" !== n && (e.name = n);
        }
        function ee(e, t, n) {
          ("number" === t && q(e.ownerDocument) === e) ||
            (null == n
              ? (e.defaultValue = "" + e._wrapperState.initialValue)
              : e.defaultValue !== "" + n && (e.defaultValue = "" + n));
        }
        var te = Array.isArray;
        function ne(e, t, n, r) {
          if (((e = e.options), t)) {
            t = {};
            for (var i = 0; i < n.length; i++) t["$" + n[i]] = !0;
            for (n = 0; n < e.length; n++)
              (i = t.hasOwnProperty("$" + e[n].value)),
                e[n].selected !== i && (e[n].selected = i),
                i && r && (e[n].defaultSelected = !0);
          } else {
            for (n = "" + G(n), t = null, i = 0; i < e.length; i++) {
              if (e[i].value === n)
                return (
                  (e[i].selected = !0), void (r && (e[i].defaultSelected = !0))
                );
              null !== t || e[i].disabled || (t = e[i]);
            }
            null !== t && (t.selected = !0);
          }
        }
        function re(e, t) {
          if (null != t.dangerouslySetInnerHTML) throw Error(a(91));
          return U({}, t, {
            value: void 0,
            defaultValue: void 0,
            children: "" + e._wrapperState.initialValue,
          });
        }
        function ie(e, t) {
          var n = t.value;
          if (null == n) {
            if (((n = t.children), (t = t.defaultValue), null != n)) {
              if (null != t) throw Error(a(92));
              if (te(n)) {
                if (1 < n.length) throw Error(a(93));
                n = n[0];
              }
              t = n;
            }
            null == t && (t = ""), (n = t);
          }
          e._wrapperState = { initialValue: G(n) };
        }
        function ae(e, t) {
          var n = G(t.value),
            r = G(t.defaultValue);
          null != n &&
            ((n = "" + n) !== e.value && (e.value = n),
            null == t.defaultValue &&
              e.defaultValue !== n &&
              (e.defaultValue = n)),
            null != r && (e.defaultValue = "" + r);
        }
        function oe(e) {
          var t = e.textContent;
          t === e._wrapperState.initialValue &&
            "" !== t &&
            null !== t &&
            (e.value = t);
        }
        function se(e) {
          switch (e) {
            case "svg":
              return "http://www.w3.org/2000/svg";
            case "math":
              return "http://www.w3.org/1998/Math/MathML";
            default:
              return "http://www.w3.org/1999/xhtml";
          }
        }
        function le(e, t) {
          return null == e || "http://www.w3.org/1999/xhtml" === e
            ? se(t)
            : "http://www.w3.org/2000/svg" === e && "foreignObject" === t
            ? "http://www.w3.org/1999/xhtml"
            : e;
        }
        var ue,
          ce,
          de =
            ((ce = function (e, t) {
              if (
                "http://www.w3.org/2000/svg" !== e.namespaceURI ||
                "innerHTML" in e
              )
                e.innerHTML = t;
              else {
                for (
                  (ue = ue || document.createElement("div")).innerHTML =
                    "<svg>" + t.valueOf().toString() + "</svg>",
                    t = ue.firstChild;
                  e.firstChild;

                )
                  e.removeChild(e.firstChild);
                for (; t.firstChild; ) e.appendChild(t.firstChild);
              }
            }),
            "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction
              ? function (e, t, n, r) {
                  MSApp.execUnsafeLocalFunction(function () {
                    return ce(e, t);
                  });
                }
              : ce);
        function fe(e, t) {
          if (t) {
            var n = e.firstChild;
            if (n && n === e.lastChild && 3 === n.nodeType)
              return void (n.nodeValue = t);
          }
          e.textContent = t;
        }
        var he = {
            animationIterationCount: !0,
            aspectRatio: !0,
            borderImageOutset: !0,
            borderImageSlice: !0,
            borderImageWidth: !0,
            boxFlex: !0,
            boxFlexGroup: !0,
            boxOrdinalGroup: !0,
            columnCount: !0,
            columns: !0,
            flex: !0,
            flexGrow: !0,
            flexPositive: !0,
            flexShrink: !0,
            flexNegative: !0,
            flexOrder: !0,
            gridArea: !0,
            gridRow: !0,
            gridRowEnd: !0,
            gridRowSpan: !0,
            gridRowStart: !0,
            gridColumn: !0,
            gridColumnEnd: !0,
            gridColumnSpan: !0,
            gridColumnStart: !0,
            fontWeight: !0,
            lineClamp: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            tabSize: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0,
            fillOpacity: !0,
            floodOpacity: !0,
            stopOpacity: !0,
            strokeDasharray: !0,
            strokeDashoffset: !0,
            strokeMiterlimit: !0,
            strokeOpacity: !0,
            strokeWidth: !0,
          },
          pe = ["Webkit", "ms", "Moz", "O"];
        function ve(e, t, n) {
          return null == t || "boolean" === typeof t || "" === t
            ? ""
            : n ||
              "number" !== typeof t ||
              0 === t ||
              (he.hasOwnProperty(e) && he[e])
            ? ("" + t).trim()
            : t + "px";
        }
        function me(e, t) {
          for (var n in ((e = e.style), t))
            if (t.hasOwnProperty(n)) {
              var r = 0 === n.indexOf("--"),
                i = ve(n, t[n], r);
              "float" === n && (n = "cssFloat"),
                r ? e.setProperty(n, i) : (e[n] = i);
            }
        }
        Object.keys(he).forEach(function (e) {
          pe.forEach(function (t) {
            (t = t + e.charAt(0).toUpperCase() + e.substring(1)),
              (he[t] = he[e]);
          });
        });
        var ge = U(
          { menuitem: !0 },
          {
            area: !0,
            base: !0,
            br: !0,
            col: !0,
            embed: !0,
            hr: !0,
            img: !0,
            input: !0,
            keygen: !0,
            link: !0,
            meta: !0,
            param: !0,
            source: !0,
            track: !0,
            wbr: !0,
          }
        );
        function ye(e, t) {
          if (t) {
            if (
              ge[e] &&
              (null != t.children || null != t.dangerouslySetInnerHTML)
            )
              throw Error(a(137, e));
            if (null != t.dangerouslySetInnerHTML) {
              if (null != t.children) throw Error(a(60));
              if (
                "object" !== typeof t.dangerouslySetInnerHTML ||
                !("__html" in t.dangerouslySetInnerHTML)
              )
                throw Error(a(61));
            }
            if (null != t.style && "object" !== typeof t.style)
              throw Error(a(62));
          }
        }
        function be(e, t) {
          if (-1 === e.indexOf("-")) return "string" === typeof t.is;
          switch (e) {
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
              return !1;
            default:
              return !0;
          }
        }
        var _e = null;
        function xe(e) {
          return (
            (e = e.target || e.srcElement || window).correspondingUseElement &&
              (e = e.correspondingUseElement),
            3 === e.nodeType ? e.parentNode : e
          );
        }
        var Se = null,
          we = null,
          Me = null;
        function Ee(e) {
          if ((e = bi(e))) {
            if ("function" !== typeof Se) throw Error(a(280));
            var t = e.stateNode;
            t && ((t = xi(t)), Se(e.stateNode, e.type, t));
          }
        }
        function ke(e) {
          we ? (Me ? Me.push(e) : (Me = [e])) : (we = e);
        }
        function Te() {
          if (we) {
            var e = we,
              t = Me;
            if (((Me = we = null), Ee(e), t))
              for (e = 0; e < t.length; e++) Ee(t[e]);
          }
        }
        function Ae(e, t) {
          return e(t);
        }
        function Ce() {}
        var Pe = !1;
        function Re(e, t, n) {
          if (Pe) return e(t, n);
          Pe = !0;
          try {
            return Ae(e, t, n);
          } finally {
            (Pe = !1), (null !== we || null !== Me) && (Ce(), Te());
          }
        }
        function Le(e, t) {
          var n = e.stateNode;
          if (null === n) return null;
          var r = xi(n);
          if (null === r) return null;
          n = r[t];
          e: switch (t) {
            case "onClick":
            case "onClickCapture":
            case "onDoubleClick":
            case "onDoubleClickCapture":
            case "onMouseDown":
            case "onMouseDownCapture":
            case "onMouseMove":
            case "onMouseMoveCapture":
            case "onMouseUp":
            case "onMouseUpCapture":
            case "onMouseEnter":
              (r = !r.disabled) ||
                (r = !(
                  "button" === (e = e.type) ||
                  "input" === e ||
                  "select" === e ||
                  "textarea" === e
                )),
                (e = !r);
              break e;
            default:
              e = !1;
          }
          if (e) return null;
          if (n && "function" !== typeof n) throw Error(a(231, t, typeof n));
          return n;
        }
        var Ie = !1;
        if (c)
          try {
            var Ne = {};
            Object.defineProperty(Ne, "passive", {
              get: function () {
                Ie = !0;
              },
            }),
              window.addEventListener("test", Ne, Ne),
              window.removeEventListener("test", Ne, Ne);
          } catch (ce) {
            Ie = !1;
          }
        function Oe(e, t, n, r, i, a, o, s, l) {
          var u = Array.prototype.slice.call(arguments, 3);
          try {
            t.apply(n, u);
          } catch (c) {
            this.onError(c);
          }
        }
        var De = !1,
          Ue = null,
          ze = !1,
          Fe = null,
          Be = {
            onError: function (e) {
              (De = !0), (Ue = e);
            },
          };
        function Ze(e, t, n, r, i, a, o, s, l) {
          (De = !1), (Ue = null), Oe.apply(Be, arguments);
        }
        function He(e) {
          var t = e,
            n = e;
          if (e.alternate) for (; t.return; ) t = t.return;
          else {
            e = t;
            do {
              0 !== (4098 & (t = e).flags) && (n = t.return), (e = t.return);
            } while (e);
          }
          return 3 === t.tag ? n : null;
        }
        function Ve(e) {
          if (13 === e.tag) {
            var t = e.memoizedState;
            if (
              (null === t &&
                null !== (e = e.alternate) &&
                (t = e.memoizedState),
              null !== t)
            )
              return t.dehydrated;
          }
          return null;
        }
        function Ge(e) {
          if (He(e) !== e) throw Error(a(188));
        }
        function We(e) {
          return null !==
            (e = (function (e) {
              var t = e.alternate;
              if (!t) {
                if (null === (t = He(e))) throw Error(a(188));
                return t !== e ? null : e;
              }
              for (var n = e, r = t; ; ) {
                var i = n.return;
                if (null === i) break;
                var o = i.alternate;
                if (null === o) {
                  if (null !== (r = i.return)) {
                    n = r;
                    continue;
                  }
                  break;
                }
                if (i.child === o.child) {
                  for (o = i.child; o; ) {
                    if (o === n) return Ge(i), e;
                    if (o === r) return Ge(i), t;
                    o = o.sibling;
                  }
                  throw Error(a(188));
                }
                if (n.return !== r.return) (n = i), (r = o);
                else {
                  for (var s = !1, l = i.child; l; ) {
                    if (l === n) {
                      (s = !0), (n = i), (r = o);
                      break;
                    }
                    if (l === r) {
                      (s = !0), (r = i), (n = o);
                      break;
                    }
                    l = l.sibling;
                  }
                  if (!s) {
                    for (l = o.child; l; ) {
                      if (l === n) {
                        (s = !0), (n = o), (r = i);
                        break;
                      }
                      if (l === r) {
                        (s = !0), (r = o), (n = i);
                        break;
                      }
                      l = l.sibling;
                    }
                    if (!s) throw Error(a(189));
                  }
                }
                if (n.alternate !== r) throw Error(a(190));
              }
              if (3 !== n.tag) throw Error(a(188));
              return n.stateNode.current === n ? e : t;
            })(e))
            ? je(e)
            : null;
        }
        function je(e) {
          if (5 === e.tag || 6 === e.tag) return e;
          for (e = e.child; null !== e; ) {
            var t = je(e);
            if (null !== t) return t;
            e = e.sibling;
          }
          return null;
        }
        var Xe = i.unstable_scheduleCallback,
          qe = i.unstable_cancelCallback,
          Ye = i.unstable_shouldYield,
          Ke = i.unstable_requestPaint,
          $e = i.unstable_now,
          Je = i.unstable_getCurrentPriorityLevel,
          Qe = i.unstable_ImmediatePriority,
          et = i.unstable_UserBlockingPriority,
          tt = i.unstable_NormalPriority,
          nt = i.unstable_LowPriority,
          rt = i.unstable_IdlePriority,
          it = null,
          at = null;
        var ot = Math.clz32
            ? Math.clz32
            : function (e) {
                return (e >>>= 0), 0 === e ? 32 : (31 - ((st(e) / lt) | 0)) | 0;
              },
          st = Math.log,
          lt = Math.LN2;
        var ut = 64,
          ct = 4194304;
        function dt(e) {
          switch (e & -e) {
            case 1:
              return 1;
            case 2:
              return 2;
            case 4:
              return 4;
            case 8:
              return 8;
            case 16:
              return 16;
            case 32:
              return 32;
            case 64:
            case 128:
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
              return 4194240 & e;
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
            case 67108864:
              return 130023424 & e;
            case 134217728:
              return 134217728;
            case 268435456:
              return 268435456;
            case 536870912:
              return 536870912;
            case 1073741824:
              return 1073741824;
            default:
              return e;
          }
        }
        function ft(e, t) {
          var n = e.pendingLanes;
          if (0 === n) return 0;
          var r = 0,
            i = e.suspendedLanes,
            a = e.pingedLanes,
            o = 268435455 & n;
          if (0 !== o) {
            var s = o & ~i;
            0 !== s ? (r = dt(s)) : 0 !== (a &= o) && (r = dt(a));
          } else 0 !== (o = n & ~i) ? (r = dt(o)) : 0 !== a && (r = dt(a));
          if (0 === r) return 0;
          if (
            0 !== t &&
            t !== r &&
            0 === (t & i) &&
            ((i = r & -r) >= (a = t & -t) || (16 === i && 0 !== (4194240 & a)))
          )
            return t;
          if ((0 !== (4 & r) && (r |= 16 & n), 0 !== (t = e.entangledLanes)))
            for (e = e.entanglements, t &= r; 0 < t; )
              (i = 1 << (n = 31 - ot(t))), (r |= e[n]), (t &= ~i);
          return r;
        }
        function ht(e, t) {
          switch (e) {
            case 1:
            case 2:
            case 4:
              return t + 250;
            case 8:
            case 16:
            case 32:
            case 64:
            case 128:
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
              return t + 5e3;
            default:
              return -1;
          }
        }
        function pt(e) {
          return 0 !== (e = -1073741825 & e.pendingLanes)
            ? e
            : 1073741824 & e
            ? 1073741824
            : 0;
        }
        function vt() {
          var e = ut;
          return 0 === (4194240 & (ut <<= 1)) && (ut = 64), e;
        }
        function mt(e) {
          for (var t = [], n = 0; 31 > n; n++) t.push(e);
          return t;
        }
        function gt(e, t, n) {
          (e.pendingLanes |= t),
            536870912 !== t && ((e.suspendedLanes = 0), (e.pingedLanes = 0)),
            ((e = e.eventTimes)[(t = 31 - ot(t))] = n);
        }
        function yt(e, t) {
          var n = (e.entangledLanes |= t);
          for (e = e.entanglements; n; ) {
            var r = 31 - ot(n),
              i = 1 << r;
            (i & t) | (e[r] & t) && (e[r] |= t), (n &= ~i);
          }
        }
        var bt = 0;
        function _t(e) {
          return 1 < (e &= -e)
            ? 4 < e
              ? 0 !== (268435455 & e)
                ? 16
                : 536870912
              : 4
            : 1;
        }
        var xt,
          St,
          wt,
          Mt,
          Et,
          kt = !1,
          Tt = [],
          At = null,
          Ct = null,
          Pt = null,
          Rt = new Map(),
          Lt = new Map(),
          It = [],
          Nt =
            "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(
              " "
            );
        function Ot(e, t) {
          switch (e) {
            case "focusin":
            case "focusout":
              At = null;
              break;
            case "dragenter":
            case "dragleave":
              Ct = null;
              break;
            case "mouseover":
            case "mouseout":
              Pt = null;
              break;
            case "pointerover":
            case "pointerout":
              Rt.delete(t.pointerId);
              break;
            case "gotpointercapture":
            case "lostpointercapture":
              Lt.delete(t.pointerId);
          }
        }
        function Dt(e, t, n, r, i, a) {
          return null === e || e.nativeEvent !== a
            ? ((e = {
                blockedOn: t,
                domEventName: n,
                eventSystemFlags: r,
                nativeEvent: a,
                targetContainers: [i],
              }),
              null !== t && null !== (t = bi(t)) && St(t),
              e)
            : ((e.eventSystemFlags |= r),
              (t = e.targetContainers),
              null !== i && -1 === t.indexOf(i) && t.push(i),
              e);
        }
        function Ut(e) {
          var t = yi(e.target);
          if (null !== t) {
            var n = He(t);
            if (null !== n)
              if (13 === (t = n.tag)) {
                if (null !== (t = Ve(n)))
                  return (
                    (e.blockedOn = t),
                    void Et(e.priority, function () {
                      wt(n);
                    })
                  );
              } else if (
                3 === t &&
                n.stateNode.current.memoizedState.isDehydrated
              )
                return void (e.blockedOn =
                  3 === n.tag ? n.stateNode.containerInfo : null);
          }
          e.blockedOn = null;
        }
        function zt(e) {
          if (null !== e.blockedOn) return !1;
          for (var t = e.targetContainers; 0 < t.length; ) {
            var n = Yt(e.domEventName, e.eventSystemFlags, t[0], e.nativeEvent);
            if (null !== n)
              return null !== (t = bi(n)) && St(t), (e.blockedOn = n), !1;
            var r = new (n = e.nativeEvent).constructor(n.type, n);
            (_e = r), n.target.dispatchEvent(r), (_e = null), t.shift();
          }
          return !0;
        }
        function Ft(e, t, n) {
          zt(e) && n.delete(t);
        }
        function Bt() {
          (kt = !1),
            null !== At && zt(At) && (At = null),
            null !== Ct && zt(Ct) && (Ct = null),
            null !== Pt && zt(Pt) && (Pt = null),
            Rt.forEach(Ft),
            Lt.forEach(Ft);
        }
        function Zt(e, t) {
          e.blockedOn === t &&
            ((e.blockedOn = null),
            kt ||
              ((kt = !0),
              i.unstable_scheduleCallback(i.unstable_NormalPriority, Bt)));
        }
        function Ht(e) {
          function t(t) {
            return Zt(t, e);
          }
          if (0 < Tt.length) {
            Zt(Tt[0], e);
            for (var n = 1; n < Tt.length; n++) {
              var r = Tt[n];
              r.blockedOn === e && (r.blockedOn = null);
            }
          }
          for (
            null !== At && Zt(At, e),
              null !== Ct && Zt(Ct, e),
              null !== Pt && Zt(Pt, e),
              Rt.forEach(t),
              Lt.forEach(t),
              n = 0;
            n < It.length;
            n++
          )
            (r = It[n]).blockedOn === e && (r.blockedOn = null);
          for (; 0 < It.length && null === (n = It[0]).blockedOn; )
            Ut(n), null === n.blockedOn && It.shift();
        }
        var Vt = _.ReactCurrentBatchConfig,
          Gt = !0;
        function Wt(e, t, n, r) {
          var i = bt,
            a = Vt.transition;
          Vt.transition = null;
          try {
            (bt = 1), Xt(e, t, n, r);
          } finally {
            (bt = i), (Vt.transition = a);
          }
        }
        function jt(e, t, n, r) {
          var i = bt,
            a = Vt.transition;
          Vt.transition = null;
          try {
            (bt = 4), Xt(e, t, n, r);
          } finally {
            (bt = i), (Vt.transition = a);
          }
        }
        function Xt(e, t, n, r) {
          if (Gt) {
            var i = Yt(e, t, n, r);
            if (null === i) Gr(e, t, r, qt, n), Ot(e, r);
            else if (
              (function (e, t, n, r, i) {
                switch (t) {
                  case "focusin":
                    return (At = Dt(At, e, t, n, r, i)), !0;
                  case "dragenter":
                    return (Ct = Dt(Ct, e, t, n, r, i)), !0;
                  case "mouseover":
                    return (Pt = Dt(Pt, e, t, n, r, i)), !0;
                  case "pointerover":
                    var a = i.pointerId;
                    return Rt.set(a, Dt(Rt.get(a) || null, e, t, n, r, i)), !0;
                  case "gotpointercapture":
                    return (
                      (a = i.pointerId),
                      Lt.set(a, Dt(Lt.get(a) || null, e, t, n, r, i)),
                      !0
                    );
                }
                return !1;
              })(i, e, t, n, r)
            )
              r.stopPropagation();
            else if ((Ot(e, r), 4 & t && -1 < Nt.indexOf(e))) {
              for (; null !== i; ) {
                var a = bi(i);
                if (
                  (null !== a && xt(a),
                  null === (a = Yt(e, t, n, r)) && Gr(e, t, r, qt, n),
                  a === i)
                )
                  break;
                i = a;
              }
              null !== i && r.stopPropagation();
            } else Gr(e, t, r, null, n);
          }
        }
        var qt = null;
        function Yt(e, t, n, r) {
          if (((qt = null), null !== (e = yi((e = xe(r))))))
            if (null === (t = He(e))) e = null;
            else if (13 === (n = t.tag)) {
              if (null !== (e = Ve(t))) return e;
              e = null;
            } else if (3 === n) {
              if (t.stateNode.current.memoizedState.isDehydrated)
                return 3 === t.tag ? t.stateNode.containerInfo : null;
              e = null;
            } else t !== e && (e = null);
          return (qt = e), null;
        }
        function Kt(e) {
          switch (e) {
            case "cancel":
            case "click":
            case "close":
            case "contextmenu":
            case "copy":
            case "cut":
            case "auxclick":
            case "dblclick":
            case "dragend":
            case "dragstart":
            case "drop":
            case "focusin":
            case "focusout":
            case "input":
            case "invalid":
            case "keydown":
            case "keypress":
            case "keyup":
            case "mousedown":
            case "mouseup":
            case "paste":
            case "pause":
            case "play":
            case "pointercancel":
            case "pointerdown":
            case "pointerup":
            case "ratechange":
            case "reset":
            case "resize":
            case "seeked":
            case "submit":
            case "touchcancel":
            case "touchend":
            case "touchstart":
            case "volumechange":
            case "change":
            case "selectionchange":
            case "textInput":
            case "compositionstart":
            case "compositionend":
            case "compositionupdate":
            case "beforeblur":
            case "afterblur":
            case "beforeinput":
            case "blur":
            case "fullscreenchange":
            case "focus":
            case "hashchange":
            case "popstate":
            case "select":
            case "selectstart":
              return 1;
            case "drag":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "mousemove":
            case "mouseout":
            case "mouseover":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "scroll":
            case "toggle":
            case "touchmove":
            case "wheel":
            case "mouseenter":
            case "mouseleave":
            case "pointerenter":
            case "pointerleave":
              return 4;
            case "message":
              switch (Je()) {
                case Qe:
                  return 1;
                case et:
                  return 4;
                case tt:
                case nt:
                  return 16;
                case rt:
                  return 536870912;
                default:
                  return 16;
              }
            default:
              return 16;
          }
        }
        var $t = null,
          Jt = null,
          Qt = null;
        function en() {
          if (Qt) return Qt;
          var e,
            t,
            n = Jt,
            r = n.length,
            i = "value" in $t ? $t.value : $t.textContent,
            a = i.length;
          for (e = 0; e < r && n[e] === i[e]; e++);
          var o = r - e;
          for (t = 1; t <= o && n[r - t] === i[a - t]; t++);
          return (Qt = i.slice(e, 1 < t ? 1 - t : void 0));
        }
        function tn(e) {
          var t = e.keyCode;
          return (
            "charCode" in e
              ? 0 === (e = e.charCode) && 13 === t && (e = 13)
              : (e = t),
            10 === e && (e = 13),
            32 <= e || 13 === e ? e : 0
          );
        }
        function nn() {
          return !0;
        }
        function rn() {
          return !1;
        }
        function an(e) {
          function t(t, n, r, i, a) {
            for (var o in ((this._reactName = t),
            (this._targetInst = r),
            (this.type = n),
            (this.nativeEvent = i),
            (this.target = a),
            (this.currentTarget = null),
            e))
              e.hasOwnProperty(o) && ((t = e[o]), (this[o] = t ? t(i) : i[o]));
            return (
              (this.isDefaultPrevented = (
                null != i.defaultPrevented
                  ? i.defaultPrevented
                  : !1 === i.returnValue
              )
                ? nn
                : rn),
              (this.isPropagationStopped = rn),
              this
            );
          }
          return (
            U(t.prototype, {
              preventDefault: function () {
                this.defaultPrevented = !0;
                var e = this.nativeEvent;
                e &&
                  (e.preventDefault
                    ? e.preventDefault()
                    : "unknown" !== typeof e.returnValue &&
                      (e.returnValue = !1),
                  (this.isDefaultPrevented = nn));
              },
              stopPropagation: function () {
                var e = this.nativeEvent;
                e &&
                  (e.stopPropagation
                    ? e.stopPropagation()
                    : "unknown" !== typeof e.cancelBubble &&
                      (e.cancelBubble = !0),
                  (this.isPropagationStopped = nn));
              },
              persist: function () {},
              isPersistent: nn,
            }),
            t
          );
        }
        var on,
          sn,
          ln,
          un = {
            eventPhase: 0,
            bubbles: 0,
            cancelable: 0,
            timeStamp: function (e) {
              return e.timeStamp || Date.now();
            },
            defaultPrevented: 0,
            isTrusted: 0,
          },
          cn = an(un),
          dn = U({}, un, { view: 0, detail: 0 }),
          fn = an(dn),
          hn = U({}, dn, {
            screenX: 0,
            screenY: 0,
            clientX: 0,
            clientY: 0,
            pageX: 0,
            pageY: 0,
            ctrlKey: 0,
            shiftKey: 0,
            altKey: 0,
            metaKey: 0,
            getModifierState: En,
            button: 0,
            buttons: 0,
            relatedTarget: function (e) {
              return void 0 === e.relatedTarget
                ? e.fromElement === e.srcElement
                  ? e.toElement
                  : e.fromElement
                : e.relatedTarget;
            },
            movementX: function (e) {
              return "movementX" in e
                ? e.movementX
                : (e !== ln &&
                    (ln && "mousemove" === e.type
                      ? ((on = e.screenX - ln.screenX),
                        (sn = e.screenY - ln.screenY))
                      : (sn = on = 0),
                    (ln = e)),
                  on);
            },
            movementY: function (e) {
              return "movementY" in e ? e.movementY : sn;
            },
          }),
          pn = an(hn),
          vn = an(U({}, hn, { dataTransfer: 0 })),
          mn = an(U({}, dn, { relatedTarget: 0 })),
          gn = an(
            U({}, un, { animationName: 0, elapsedTime: 0, pseudoElement: 0 })
          ),
          yn = U({}, un, {
            clipboardData: function (e) {
              return "clipboardData" in e
                ? e.clipboardData
                : window.clipboardData;
            },
          }),
          bn = an(yn),
          _n = an(U({}, un, { data: 0 })),
          xn = {
            Esc: "Escape",
            Spacebar: " ",
            Left: "ArrowLeft",
            Up: "ArrowUp",
            Right: "ArrowRight",
            Down: "ArrowDown",
            Del: "Delete",
            Win: "OS",
            Menu: "ContextMenu",
            Apps: "ContextMenu",
            Scroll: "ScrollLock",
            MozPrintableKey: "Unidentified",
          },
          Sn = {
            8: "Backspace",
            9: "Tab",
            12: "Clear",
            13: "Enter",
            16: "Shift",
            17: "Control",
            18: "Alt",
            19: "Pause",
            20: "CapsLock",
            27: "Escape",
            32: " ",
            33: "PageUp",
            34: "PageDown",
            35: "End",
            36: "Home",
            37: "ArrowLeft",
            38: "ArrowUp",
            39: "ArrowRight",
            40: "ArrowDown",
            45: "Insert",
            46: "Delete",
            112: "F1",
            113: "F2",
            114: "F3",
            115: "F4",
            116: "F5",
            117: "F6",
            118: "F7",
            119: "F8",
            120: "F9",
            121: "F10",
            122: "F11",
            123: "F12",
            144: "NumLock",
            145: "ScrollLock",
            224: "Meta",
          },
          wn = {
            Alt: "altKey",
            Control: "ctrlKey",
            Meta: "metaKey",
            Shift: "shiftKey",
          };
        function Mn(e) {
          var t = this.nativeEvent;
          return t.getModifierState
            ? t.getModifierState(e)
            : !!(e = wn[e]) && !!t[e];
        }
        function En() {
          return Mn;
        }
        var kn = U({}, dn, {
            key: function (e) {
              if (e.key) {
                var t = xn[e.key] || e.key;
                if ("Unidentified" !== t) return t;
              }
              return "keypress" === e.type
                ? 13 === (e = tn(e))
                  ? "Enter"
                  : String.fromCharCode(e)
                : "keydown" === e.type || "keyup" === e.type
                ? Sn[e.keyCode] || "Unidentified"
                : "";
            },
            code: 0,
            location: 0,
            ctrlKey: 0,
            shiftKey: 0,
            altKey: 0,
            metaKey: 0,
            repeat: 0,
            locale: 0,
            getModifierState: En,
            charCode: function (e) {
              return "keypress" === e.type ? tn(e) : 0;
            },
            keyCode: function (e) {
              return "keydown" === e.type || "keyup" === e.type ? e.keyCode : 0;
            },
            which: function (e) {
              return "keypress" === e.type
                ? tn(e)
                : "keydown" === e.type || "keyup" === e.type
                ? e.keyCode
                : 0;
            },
          }),
          Tn = an(kn),
          An = an(
            U({}, hn, {
              pointerId: 0,
              width: 0,
              height: 0,
              pressure: 0,
              tangentialPressure: 0,
              tiltX: 0,
              tiltY: 0,
              twist: 0,
              pointerType: 0,
              isPrimary: 0,
            })
          ),
          Cn = an(
            U({}, dn, {
              touches: 0,
              targetTouches: 0,
              changedTouches: 0,
              altKey: 0,
              metaKey: 0,
              ctrlKey: 0,
              shiftKey: 0,
              getModifierState: En,
            })
          ),
          Pn = an(
            U({}, un, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 })
          ),
          Rn = U({}, hn, {
            deltaX: function (e) {
              return "deltaX" in e
                ? e.deltaX
                : "wheelDeltaX" in e
                ? -e.wheelDeltaX
                : 0;
            },
            deltaY: function (e) {
              return "deltaY" in e
                ? e.deltaY
                : "wheelDeltaY" in e
                ? -e.wheelDeltaY
                : "wheelDelta" in e
                ? -e.wheelDelta
                : 0;
            },
            deltaZ: 0,
            deltaMode: 0,
          }),
          Ln = an(Rn),
          In = [9, 13, 27, 32],
          Nn = c && "CompositionEvent" in window,
          On = null;
        c && "documentMode" in document && (On = document.documentMode);
        var Dn = c && "TextEvent" in window && !On,
          Un = c && (!Nn || (On && 8 < On && 11 >= On)),
          zn = String.fromCharCode(32),
          Fn = !1;
        function Bn(e, t) {
          switch (e) {
            case "keyup":
              return -1 !== In.indexOf(t.keyCode);
            case "keydown":
              return 229 !== t.keyCode;
            case "keypress":
            case "mousedown":
            case "focusout":
              return !0;
            default:
              return !1;
          }
        }
        function Zn(e) {
          return "object" === typeof (e = e.detail) && "data" in e
            ? e.data
            : null;
        }
        var Hn = !1;
        var Vn = {
          color: !0,
          date: !0,
          datetime: !0,
          "datetime-local": !0,
          email: !0,
          month: !0,
          number: !0,
          password: !0,
          range: !0,
          search: !0,
          tel: !0,
          text: !0,
          time: !0,
          url: !0,
          week: !0,
        };
        function Gn(e) {
          var t = e && e.nodeName && e.nodeName.toLowerCase();
          return "input" === t ? !!Vn[e.type] : "textarea" === t;
        }
        function Wn(e, t, n, r) {
          ke(r),
            0 < (t = jr(t, "onChange")).length &&
              ((n = new cn("onChange", "change", null, n, r)),
              e.push({ event: n, listeners: t }));
        }
        var jn = null,
          Xn = null;
        function qn(e) {
          zr(e, 0);
        }
        function Yn(e) {
          if (X(_i(e))) return e;
        }
        function Kn(e, t) {
          if ("change" === e) return t;
        }
        var $n = !1;
        if (c) {
          var Jn;
          if (c) {
            var Qn = "oninput" in document;
            if (!Qn) {
              var er = document.createElement("div");
              er.setAttribute("oninput", "return;"),
                (Qn = "function" === typeof er.oninput);
            }
            Jn = Qn;
          } else Jn = !1;
          $n = Jn && (!document.documentMode || 9 < document.documentMode);
        }
        function tr() {
          jn && (jn.detachEvent("onpropertychange", nr), (Xn = jn = null));
        }
        function nr(e) {
          if ("value" === e.propertyName && Yn(Xn)) {
            var t = [];
            Wn(t, Xn, e, xe(e)), Re(qn, t);
          }
        }
        function rr(e, t, n) {
          "focusin" === e
            ? (tr(), (Xn = n), (jn = t).attachEvent("onpropertychange", nr))
            : "focusout" === e && tr();
        }
        function ir(e) {
          if ("selectionchange" === e || "keyup" === e || "keydown" === e)
            return Yn(Xn);
        }
        function ar(e, t) {
          if ("click" === e) return Yn(t);
        }
        function or(e, t) {
          if ("input" === e || "change" === e) return Yn(t);
        }
        var sr =
          "function" === typeof Object.is
            ? Object.is
            : function (e, t) {
                return (
                  (e === t && (0 !== e || 1 / e === 1 / t)) ||
                  (e !== e && t !== t)
                );
              };
        function lr(e, t) {
          if (sr(e, t)) return !0;
          if (
            "object" !== typeof e ||
            null === e ||
            "object" !== typeof t ||
            null === t
          )
            return !1;
          var n = Object.keys(e),
            r = Object.keys(t);
          if (n.length !== r.length) return !1;
          for (r = 0; r < n.length; r++) {
            var i = n[r];
            if (!d.call(t, i) || !sr(e[i], t[i])) return !1;
          }
          return !0;
        }
        function ur(e) {
          for (; e && e.firstChild; ) e = e.firstChild;
          return e;
        }
        function cr(e, t) {
          var n,
            r = ur(e);
          for (e = 0; r; ) {
            if (3 === r.nodeType) {
              if (((n = e + r.textContent.length), e <= t && n >= t))
                return { node: r, offset: t - e };
              e = n;
            }
            e: {
              for (; r; ) {
                if (r.nextSibling) {
                  r = r.nextSibling;
                  break e;
                }
                r = r.parentNode;
              }
              r = void 0;
            }
            r = ur(r);
          }
        }
        function dr(e, t) {
          return (
            !(!e || !t) &&
            (e === t ||
              ((!e || 3 !== e.nodeType) &&
                (t && 3 === t.nodeType
                  ? dr(e, t.parentNode)
                  : "contains" in e
                  ? e.contains(t)
                  : !!e.compareDocumentPosition &&
                    !!(16 & e.compareDocumentPosition(t)))))
          );
        }
        function fr() {
          for (var e = window, t = q(); t instanceof e.HTMLIFrameElement; ) {
            try {
              var n = "string" === typeof t.contentWindow.location.href;
            } catch (r) {
              n = !1;
            }
            if (!n) break;
            t = q((e = t.contentWindow).document);
          }
          return t;
        }
        function hr(e) {
          var t = e && e.nodeName && e.nodeName.toLowerCase();
          return (
            t &&
            (("input" === t &&
              ("text" === e.type ||
                "search" === e.type ||
                "tel" === e.type ||
                "url" === e.type ||
                "password" === e.type)) ||
              "textarea" === t ||
              "true" === e.contentEditable)
          );
        }
        function pr(e) {
          var t = fr(),
            n = e.focusedElem,
            r = e.selectionRange;
          if (
            t !== n &&
            n &&
            n.ownerDocument &&
            dr(n.ownerDocument.documentElement, n)
          ) {
            if (null !== r && hr(n))
              if (
                ((t = r.start),
                void 0 === (e = r.end) && (e = t),
                "selectionStart" in n)
              )
                (n.selectionStart = t),
                  (n.selectionEnd = Math.min(e, n.value.length));
              else if (
                (e =
                  ((t = n.ownerDocument || document) && t.defaultView) ||
                  window).getSelection
              ) {
                e = e.getSelection();
                var i = n.textContent.length,
                  a = Math.min(r.start, i);
                (r = void 0 === r.end ? a : Math.min(r.end, i)),
                  !e.extend && a > r && ((i = r), (r = a), (a = i)),
                  (i = cr(n, a));
                var o = cr(n, r);
                i &&
                  o &&
                  (1 !== e.rangeCount ||
                    e.anchorNode !== i.node ||
                    e.anchorOffset !== i.offset ||
                    e.focusNode !== o.node ||
                    e.focusOffset !== o.offset) &&
                  ((t = t.createRange()).setStart(i.node, i.offset),
                  e.removeAllRanges(),
                  a > r
                    ? (e.addRange(t), e.extend(o.node, o.offset))
                    : (t.setEnd(o.node, o.offset), e.addRange(t)));
              }
            for (t = [], e = n; (e = e.parentNode); )
              1 === e.nodeType &&
                t.push({ element: e, left: e.scrollLeft, top: e.scrollTop });
            for (
              "function" === typeof n.focus && n.focus(), n = 0;
              n < t.length;
              n++
            )
              ((e = t[n]).element.scrollLeft = e.left),
                (e.element.scrollTop = e.top);
          }
        }
        var vr = c && "documentMode" in document && 11 >= document.documentMode,
          mr = null,
          gr = null,
          yr = null,
          br = !1;
        function _r(e, t, n) {
          var r =
            n.window === n
              ? n.document
              : 9 === n.nodeType
              ? n
              : n.ownerDocument;
          br ||
            null == mr ||
            mr !== q(r) ||
            ("selectionStart" in (r = mr) && hr(r)
              ? (r = { start: r.selectionStart, end: r.selectionEnd })
              : (r = {
                  anchorNode: (r = (
                    (r.ownerDocument && r.ownerDocument.defaultView) ||
                    window
                  ).getSelection()).anchorNode,
                  anchorOffset: r.anchorOffset,
                  focusNode: r.focusNode,
                  focusOffset: r.focusOffset,
                }),
            (yr && lr(yr, r)) ||
              ((yr = r),
              0 < (r = jr(gr, "onSelect")).length &&
                ((t = new cn("onSelect", "select", null, t, n)),
                e.push({ event: t, listeners: r }),
                (t.target = mr))));
        }
        function xr(e, t) {
          var n = {};
          return (
            (n[e.toLowerCase()] = t.toLowerCase()),
            (n["Webkit" + e] = "webkit" + t),
            (n["Moz" + e] = "moz" + t),
            n
          );
        }
        var Sr = {
            animationend: xr("Animation", "AnimationEnd"),
            animationiteration: xr("Animation", "AnimationIteration"),
            animationstart: xr("Animation", "AnimationStart"),
            transitionend: xr("Transition", "TransitionEnd"),
          },
          wr = {},
          Mr = {};
        function Er(e) {
          if (wr[e]) return wr[e];
          if (!Sr[e]) return e;
          var t,
            n = Sr[e];
          for (t in n)
            if (n.hasOwnProperty(t) && t in Mr) return (wr[e] = n[t]);
          return e;
        }
        c &&
          ((Mr = document.createElement("div").style),
          "AnimationEvent" in window ||
            (delete Sr.animationend.animation,
            delete Sr.animationiteration.animation,
            delete Sr.animationstart.animation),
          "TransitionEvent" in window || delete Sr.transitionend.transition);
        var kr = Er("animationend"),
          Tr = Er("animationiteration"),
          Ar = Er("animationstart"),
          Cr = Er("transitionend"),
          Pr = new Map(),
          Rr =
            "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(
              " "
            );
        function Lr(e, t) {
          Pr.set(e, t), l(t, [e]);
        }
        for (var Ir = 0; Ir < Rr.length; Ir++) {
          var Nr = Rr[Ir];
          Lr(Nr.toLowerCase(), "on" + (Nr[0].toUpperCase() + Nr.slice(1)));
        }
        Lr(kr, "onAnimationEnd"),
          Lr(Tr, "onAnimationIteration"),
          Lr(Ar, "onAnimationStart"),
          Lr("dblclick", "onDoubleClick"),
          Lr("focusin", "onFocus"),
          Lr("focusout", "onBlur"),
          Lr(Cr, "onTransitionEnd"),
          u("onMouseEnter", ["mouseout", "mouseover"]),
          u("onMouseLeave", ["mouseout", "mouseover"]),
          u("onPointerEnter", ["pointerout", "pointerover"]),
          u("onPointerLeave", ["pointerout", "pointerover"]),
          l(
            "onChange",
            "change click focusin focusout input keydown keyup selectionchange".split(
              " "
            )
          ),
          l(
            "onSelect",
            "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(
              " "
            )
          ),
          l("onBeforeInput", [
            "compositionend",
            "keypress",
            "textInput",
            "paste",
          ]),
          l(
            "onCompositionEnd",
            "compositionend focusout keydown keypress keyup mousedown".split(
              " "
            )
          ),
          l(
            "onCompositionStart",
            "compositionstart focusout keydown keypress keyup mousedown".split(
              " "
            )
          ),
          l(
            "onCompositionUpdate",
            "compositionupdate focusout keydown keypress keyup mousedown".split(
              " "
            )
          );
        var Or =
            "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(
              " "
            ),
          Dr = new Set(
            "cancel close invalid load scroll toggle".split(" ").concat(Or)
          );
        function Ur(e, t, n) {
          var r = e.type || "unknown-event";
          (e.currentTarget = n),
            (function (e, t, n, r, i, o, s, l, u) {
              if ((Ze.apply(this, arguments), De)) {
                if (!De) throw Error(a(198));
                var c = Ue;
                (De = !1), (Ue = null), ze || ((ze = !0), (Fe = c));
              }
            })(r, t, void 0, e),
            (e.currentTarget = null);
        }
        function zr(e, t) {
          t = 0 !== (4 & t);
          for (var n = 0; n < e.length; n++) {
            var r = e[n],
              i = r.event;
            r = r.listeners;
            e: {
              var a = void 0;
              if (t)
                for (var o = r.length - 1; 0 <= o; o--) {
                  var s = r[o],
                    l = s.instance,
                    u = s.currentTarget;
                  if (((s = s.listener), l !== a && i.isPropagationStopped()))
                    break e;
                  Ur(i, s, u), (a = l);
                }
              else
                for (o = 0; o < r.length; o++) {
                  if (
                    ((l = (s = r[o]).instance),
                    (u = s.currentTarget),
                    (s = s.listener),
                    l !== a && i.isPropagationStopped())
                  )
                    break e;
                  Ur(i, s, u), (a = l);
                }
            }
          }
          if (ze) throw ((e = Fe), (ze = !1), (Fe = null), e);
        }
        function Fr(e, t) {
          var n = t[vi];
          void 0 === n && (n = t[vi] = new Set());
          var r = e + "__bubble";
          n.has(r) || (Vr(t, e, 2, !1), n.add(r));
        }
        function Br(e, t, n) {
          var r = 0;
          t && (r |= 4), Vr(n, e, r, t);
        }
        var Zr = "_reactListening" + Math.random().toString(36).slice(2);
        function Hr(e) {
          if (!e[Zr]) {
            (e[Zr] = !0),
              o.forEach(function (t) {
                "selectionchange" !== t &&
                  (Dr.has(t) || Br(t, !1, e), Br(t, !0, e));
              });
            var t = 9 === e.nodeType ? e : e.ownerDocument;
            null === t || t[Zr] || ((t[Zr] = !0), Br("selectionchange", !1, t));
          }
        }
        function Vr(e, t, n, r) {
          switch (Kt(t)) {
            case 1:
              var i = Wt;
              break;
            case 4:
              i = jt;
              break;
            default:
              i = Xt;
          }
          (n = i.bind(null, t, n, e)),
            (i = void 0),
            !Ie ||
              ("touchstart" !== t && "touchmove" !== t && "wheel" !== t) ||
              (i = !0),
            r
              ? void 0 !== i
                ? e.addEventListener(t, n, { capture: !0, passive: i })
                : e.addEventListener(t, n, !0)
              : void 0 !== i
              ? e.addEventListener(t, n, { passive: i })
              : e.addEventListener(t, n, !1);
        }
        function Gr(e, t, n, r, i) {
          var a = r;
          if (0 === (1 & t) && 0 === (2 & t) && null !== r)
            e: for (;;) {
              if (null === r) return;
              var o = r.tag;
              if (3 === o || 4 === o) {
                var s = r.stateNode.containerInfo;
                if (s === i || (8 === s.nodeType && s.parentNode === i)) break;
                if (4 === o)
                  for (o = r.return; null !== o; ) {
                    var l = o.tag;
                    if (
                      (3 === l || 4 === l) &&
                      ((l = o.stateNode.containerInfo) === i ||
                        (8 === l.nodeType && l.parentNode === i))
                    )
                      return;
                    o = o.return;
                  }
                for (; null !== s; ) {
                  if (null === (o = yi(s))) return;
                  if (5 === (l = o.tag) || 6 === l) {
                    r = a = o;
                    continue e;
                  }
                  s = s.parentNode;
                }
              }
              r = r.return;
            }
          Re(function () {
            var r = a,
              i = xe(n),
              o = [];
            e: {
              var s = Pr.get(e);
              if (void 0 !== s) {
                var l = cn,
                  u = e;
                switch (e) {
                  case "keypress":
                    if (0 === tn(n)) break e;
                  case "keydown":
                  case "keyup":
                    l = Tn;
                    break;
                  case "focusin":
                    (u = "focus"), (l = mn);
                    break;
                  case "focusout":
                    (u = "blur"), (l = mn);
                    break;
                  case "beforeblur":
                  case "afterblur":
                    l = mn;
                    break;
                  case "click":
                    if (2 === n.button) break e;
                  case "auxclick":
                  case "dblclick":
                  case "mousedown":
                  case "mousemove":
                  case "mouseup":
                  case "mouseout":
                  case "mouseover":
                  case "contextmenu":
                    l = pn;
                    break;
                  case "drag":
                  case "dragend":
                  case "dragenter":
                  case "dragexit":
                  case "dragleave":
                  case "dragover":
                  case "dragstart":
                  case "drop":
                    l = vn;
                    break;
                  case "touchcancel":
                  case "touchend":
                  case "touchmove":
                  case "touchstart":
                    l = Cn;
                    break;
                  case kr:
                  case Tr:
                  case Ar:
                    l = gn;
                    break;
                  case Cr:
                    l = Pn;
                    break;
                  case "scroll":
                    l = fn;
                    break;
                  case "wheel":
                    l = Ln;
                    break;
                  case "copy":
                  case "cut":
                  case "paste":
                    l = bn;
                    break;
                  case "gotpointercapture":
                  case "lostpointercapture":
                  case "pointercancel":
                  case "pointerdown":
                  case "pointermove":
                  case "pointerout":
                  case "pointerover":
                  case "pointerup":
                    l = An;
                }
                var c = 0 !== (4 & t),
                  d = !c && "scroll" === e,
                  f = c ? (null !== s ? s + "Capture" : null) : s;
                c = [];
                for (var h, p = r; null !== p; ) {
                  var v = (h = p).stateNode;
                  if (
                    (5 === h.tag &&
                      null !== v &&
                      ((h = v),
                      null !== f &&
                        null != (v = Le(p, f)) &&
                        c.push(Wr(p, v, h))),
                    d)
                  )
                    break;
                  p = p.return;
                }
                0 < c.length &&
                  ((s = new l(s, u, null, n, i)),
                  o.push({ event: s, listeners: c }));
              }
            }
            if (0 === (7 & t)) {
              if (
                ((l = "mouseout" === e || "pointerout" === e),
                (!(s = "mouseover" === e || "pointerover" === e) ||
                  n === _e ||
                  !(u = n.relatedTarget || n.fromElement) ||
                  (!yi(u) && !u[pi])) &&
                  (l || s) &&
                  ((s =
                    i.window === i
                      ? i
                      : (s = i.ownerDocument)
                      ? s.defaultView || s.parentWindow
                      : window),
                  l
                    ? ((l = r),
                      null !==
                        (u = (u = n.relatedTarget || n.toElement)
                          ? yi(u)
                          : null) &&
                        (u !== (d = He(u)) || (5 !== u.tag && 6 !== u.tag)) &&
                        (u = null))
                    : ((l = null), (u = r)),
                  l !== u))
              ) {
                if (
                  ((c = pn),
                  (v = "onMouseLeave"),
                  (f = "onMouseEnter"),
                  (p = "mouse"),
                  ("pointerout" !== e && "pointerover" !== e) ||
                    ((c = An),
                    (v = "onPointerLeave"),
                    (f = "onPointerEnter"),
                    (p = "pointer")),
                  (d = null == l ? s : _i(l)),
                  (h = null == u ? s : _i(u)),
                  ((s = new c(v, p + "leave", l, n, i)).target = d),
                  (s.relatedTarget = h),
                  (v = null),
                  yi(i) === r &&
                    (((c = new c(f, p + "enter", u, n, i)).target = h),
                    (c.relatedTarget = d),
                    (v = c)),
                  (d = v),
                  l && u)
                )
                  e: {
                    for (f = u, p = 0, h = c = l; h; h = Xr(h)) p++;
                    for (h = 0, v = f; v; v = Xr(v)) h++;
                    for (; 0 < p - h; ) (c = Xr(c)), p--;
                    for (; 0 < h - p; ) (f = Xr(f)), h--;
                    for (; p--; ) {
                      if (c === f || (null !== f && c === f.alternate)) break e;
                      (c = Xr(c)), (f = Xr(f));
                    }
                    c = null;
                  }
                else c = null;
                null !== l && qr(o, s, l, c, !1),
                  null !== u && null !== d && qr(o, d, u, c, !0);
              }
              if (
                "select" ===
                  (l =
                    (s = r ? _i(r) : window).nodeName &&
                    s.nodeName.toLowerCase()) ||
                ("input" === l && "file" === s.type)
              )
                var m = Kn;
              else if (Gn(s))
                if ($n) m = or;
                else {
                  m = ir;
                  var g = rr;
                }
              else
                (l = s.nodeName) &&
                  "input" === l.toLowerCase() &&
                  ("checkbox" === s.type || "radio" === s.type) &&
                  (m = ar);
              switch (
                (m && (m = m(e, r))
                  ? Wn(o, m, n, i)
                  : (g && g(e, s, r),
                    "focusout" === e &&
                      (g = s._wrapperState) &&
                      g.controlled &&
                      "number" === s.type &&
                      ee(s, "number", s.value)),
                (g = r ? _i(r) : window),
                e)
              ) {
                case "focusin":
                  (Gn(g) || "true" === g.contentEditable) &&
                    ((mr = g), (gr = r), (yr = null));
                  break;
                case "focusout":
                  yr = gr = mr = null;
                  break;
                case "mousedown":
                  br = !0;
                  break;
                case "contextmenu":
                case "mouseup":
                case "dragend":
                  (br = !1), _r(o, n, i);
                  break;
                case "selectionchange":
                  if (vr) break;
                case "keydown":
                case "keyup":
                  _r(o, n, i);
              }
              var y;
              if (Nn)
                e: {
                  switch (e) {
                    case "compositionstart":
                      var b = "onCompositionStart";
                      break e;
                    case "compositionend":
                      b = "onCompositionEnd";
                      break e;
                    case "compositionupdate":
                      b = "onCompositionUpdate";
                      break e;
                  }
                  b = void 0;
                }
              else
                Hn
                  ? Bn(e, n) && (b = "onCompositionEnd")
                  : "keydown" === e &&
                    229 === n.keyCode &&
                    (b = "onCompositionStart");
              b &&
                (Un &&
                  "ko" !== n.locale &&
                  (Hn || "onCompositionStart" !== b
                    ? "onCompositionEnd" === b && Hn && (y = en())
                    : ((Jt = "value" in ($t = i) ? $t.value : $t.textContent),
                      (Hn = !0))),
                0 < (g = jr(r, b)).length &&
                  ((b = new _n(b, e, null, n, i)),
                  o.push({ event: b, listeners: g }),
                  y ? (b.data = y) : null !== (y = Zn(n)) && (b.data = y))),
                (y = Dn
                  ? (function (e, t) {
                      switch (e) {
                        case "compositionend":
                          return Zn(t);
                        case "keypress":
                          return 32 !== t.which ? null : ((Fn = !0), zn);
                        case "textInput":
                          return (e = t.data) === zn && Fn ? null : e;
                        default:
                          return null;
                      }
                    })(e, n)
                  : (function (e, t) {
                      if (Hn)
                        return "compositionend" === e || (!Nn && Bn(e, t))
                          ? ((e = en()), (Qt = Jt = $t = null), (Hn = !1), e)
                          : null;
                      switch (e) {
                        case "paste":
                        default:
                          return null;
                        case "keypress":
                          if (
                            !(t.ctrlKey || t.altKey || t.metaKey) ||
                            (t.ctrlKey && t.altKey)
                          ) {
                            if (t.char && 1 < t.char.length) return t.char;
                            if (t.which) return String.fromCharCode(t.which);
                          }
                          return null;
                        case "compositionend":
                          return Un && "ko" !== t.locale ? null : t.data;
                      }
                    })(e, n)) &&
                  0 < (r = jr(r, "onBeforeInput")).length &&
                  ((i = new _n("onBeforeInput", "beforeinput", null, n, i)),
                  o.push({ event: i, listeners: r }),
                  (i.data = y));
            }
            zr(o, t);
          });
        }
        function Wr(e, t, n) {
          return { instance: e, listener: t, currentTarget: n };
        }
        function jr(e, t) {
          for (var n = t + "Capture", r = []; null !== e; ) {
            var i = e,
              a = i.stateNode;
            5 === i.tag &&
              null !== a &&
              ((i = a),
              null != (a = Le(e, n)) && r.unshift(Wr(e, a, i)),
              null != (a = Le(e, t)) && r.push(Wr(e, a, i))),
              (e = e.return);
          }
          return r;
        }
        function Xr(e) {
          if (null === e) return null;
          do {
            e = e.return;
          } while (e && 5 !== e.tag);
          return e || null;
        }
        function qr(e, t, n, r, i) {
          for (var a = t._reactName, o = []; null !== n && n !== r; ) {
            var s = n,
              l = s.alternate,
              u = s.stateNode;
            if (null !== l && l === r) break;
            5 === s.tag &&
              null !== u &&
              ((s = u),
              i
                ? null != (l = Le(n, a)) && o.unshift(Wr(n, l, s))
                : i || (null != (l = Le(n, a)) && o.push(Wr(n, l, s)))),
              (n = n.return);
          }
          0 !== o.length && e.push({ event: t, listeners: o });
        }
        var Yr = /\r\n?/g,
          Kr = /\u0000|\uFFFD/g;
        function $r(e) {
          return ("string" === typeof e ? e : "" + e)
            .replace(Yr, "\n")
            .replace(Kr, "");
        }
        function Jr(e, t, n) {
          if (((t = $r(t)), $r(e) !== t && n)) throw Error(a(425));
        }
        function Qr() {}
        var ei = null,
          ti = null;
        function ni(e, t) {
          return (
            "textarea" === e ||
            "noscript" === e ||
            "string" === typeof t.children ||
            "number" === typeof t.children ||
            ("object" === typeof t.dangerouslySetInnerHTML &&
              null !== t.dangerouslySetInnerHTML &&
              null != t.dangerouslySetInnerHTML.__html)
          );
        }
        var ri = "function" === typeof setTimeout ? setTimeout : void 0,
          ii = "function" === typeof clearTimeout ? clearTimeout : void 0,
          ai = "function" === typeof Promise ? Promise : void 0,
          oi =
            "function" === typeof queueMicrotask
              ? queueMicrotask
              : "undefined" !== typeof ai
              ? function (e) {
                  return ai.resolve(null).then(e).catch(si);
                }
              : ri;
        function si(e) {
          setTimeout(function () {
            throw e;
          });
        }
        function li(e, t) {
          var n = t,
            r = 0;
          do {
            var i = n.nextSibling;
            if ((e.removeChild(n), i && 8 === i.nodeType))
              if ("/$" === (n = i.data)) {
                if (0 === r) return e.removeChild(i), void Ht(t);
                r--;
              } else ("$" !== n && "$?" !== n && "$!" !== n) || r++;
            n = i;
          } while (n);
          Ht(t);
        }
        function ui(e) {
          for (; null != e; e = e.nextSibling) {
            var t = e.nodeType;
            if (1 === t || 3 === t) break;
            if (8 === t) {
              if ("$" === (t = e.data) || "$!" === t || "$?" === t) break;
              if ("/$" === t) return null;
            }
          }
          return e;
        }
        function ci(e) {
          e = e.previousSibling;
          for (var t = 0; e; ) {
            if (8 === e.nodeType) {
              var n = e.data;
              if ("$" === n || "$!" === n || "$?" === n) {
                if (0 === t) return e;
                t--;
              } else "/$" === n && t++;
            }
            e = e.previousSibling;
          }
          return null;
        }
        var di = Math.random().toString(36).slice(2),
          fi = "__reactFiber$" + di,
          hi = "__reactProps$" + di,
          pi = "__reactContainer$" + di,
          vi = "__reactEvents$" + di,
          mi = "__reactListeners$" + di,
          gi = "__reactHandles$" + di;
        function yi(e) {
          var t = e[fi];
          if (t) return t;
          for (var n = e.parentNode; n; ) {
            if ((t = n[pi] || n[fi])) {
              if (
                ((n = t.alternate),
                null !== t.child || (null !== n && null !== n.child))
              )
                for (e = ci(e); null !== e; ) {
                  if ((n = e[fi])) return n;
                  e = ci(e);
                }
              return t;
            }
            n = (e = n).parentNode;
          }
          return null;
        }
        function bi(e) {
          return !(e = e[fi] || e[pi]) ||
            (5 !== e.tag && 6 !== e.tag && 13 !== e.tag && 3 !== e.tag)
            ? null
            : e;
        }
        function _i(e) {
          if (5 === e.tag || 6 === e.tag) return e.stateNode;
          throw Error(a(33));
        }
        function xi(e) {
          return e[hi] || null;
        }
        var Si = [],
          wi = -1;
        function Mi(e) {
          return { current: e };
        }
        function Ei(e) {
          0 > wi || ((e.current = Si[wi]), (Si[wi] = null), wi--);
        }
        function ki(e, t) {
          wi++, (Si[wi] = e.current), (e.current = t);
        }
        var Ti = {},
          Ai = Mi(Ti),
          Ci = Mi(!1),
          Pi = Ti;
        function Ri(e, t) {
          var n = e.type.contextTypes;
          if (!n) return Ti;
          var r = e.stateNode;
          if (r && r.__reactInternalMemoizedUnmaskedChildContext === t)
            return r.__reactInternalMemoizedMaskedChildContext;
          var i,
            a = {};
          for (i in n) a[i] = t[i];
          return (
            r &&
              (((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext =
                t),
              (e.__reactInternalMemoizedMaskedChildContext = a)),
            a
          );
        }
        function Li(e) {
          return null !== (e = e.childContextTypes) && void 0 !== e;
        }
        function Ii() {
          Ei(Ci), Ei(Ai);
        }
        function Ni(e, t, n) {
          if (Ai.current !== Ti) throw Error(a(168));
          ki(Ai, t), ki(Ci, n);
        }
        function Oi(e, t, n) {
          var r = e.stateNode;
          if (
            ((t = t.childContextTypes), "function" !== typeof r.getChildContext)
          )
            return n;
          for (var i in (r = r.getChildContext()))
            if (!(i in t)) throw Error(a(108, V(e) || "Unknown", i));
          return U({}, n, r);
        }
        function Di(e) {
          return (
            (e =
              ((e = e.stateNode) &&
                e.__reactInternalMemoizedMergedChildContext) ||
              Ti),
            (Pi = Ai.current),
            ki(Ai, e),
            ki(Ci, Ci.current),
            !0
          );
        }
        function Ui(e, t, n) {
          var r = e.stateNode;
          if (!r) throw Error(a(169));
          n
            ? ((e = Oi(e, t, Pi)),
              (r.__reactInternalMemoizedMergedChildContext = e),
              Ei(Ci),
              Ei(Ai),
              ki(Ai, e))
            : Ei(Ci),
            ki(Ci, n);
        }
        var zi = null,
          Fi = !1,
          Bi = !1;
        function Zi(e) {
          null === zi ? (zi = [e]) : zi.push(e);
        }
        function Hi() {
          if (!Bi && null !== zi) {
            Bi = !0;
            var e = 0,
              t = bt;
            try {
              var n = zi;
              for (bt = 1; e < n.length; e++) {
                var r = n[e];
                do {
                  r = r(!0);
                } while (null !== r);
              }
              (zi = null), (Fi = !1);
            } catch (i) {
              throw (null !== zi && (zi = zi.slice(e + 1)), Xe(Qe, Hi), i);
            } finally {
              (bt = t), (Bi = !1);
            }
          }
          return null;
        }
        var Vi = [],
          Gi = 0,
          Wi = null,
          ji = 0,
          Xi = [],
          qi = 0,
          Yi = null,
          Ki = 1,
          $i = "";
        function Ji(e, t) {
          (Vi[Gi++] = ji), (Vi[Gi++] = Wi), (Wi = e), (ji = t);
        }
        function Qi(e, t, n) {
          (Xi[qi++] = Ki), (Xi[qi++] = $i), (Xi[qi++] = Yi), (Yi = e);
          var r = Ki;
          e = $i;
          var i = 32 - ot(r) - 1;
          (r &= ~(1 << i)), (n += 1);
          var a = 32 - ot(t) + i;
          if (30 < a) {
            var o = i - (i % 5);
            (a = (r & ((1 << o) - 1)).toString(32)),
              (r >>= o),
              (i -= o),
              (Ki = (1 << (32 - ot(t) + i)) | (n << i) | r),
              ($i = a + e);
          } else (Ki = (1 << a) | (n << i) | r), ($i = e);
        }
        function ea(e) {
          null !== e.return && (Ji(e, 1), Qi(e, 1, 0));
        }
        function ta(e) {
          for (; e === Wi; )
            (Wi = Vi[--Gi]), (Vi[Gi] = null), (ji = Vi[--Gi]), (Vi[Gi] = null);
          for (; e === Yi; )
            (Yi = Xi[--qi]),
              (Xi[qi] = null),
              ($i = Xi[--qi]),
              (Xi[qi] = null),
              (Ki = Xi[--qi]),
              (Xi[qi] = null);
        }
        var na = null,
          ra = null,
          ia = !1,
          aa = null;
        function oa(e, t) {
          var n = Lu(5, null, null, 0);
          (n.elementType = "DELETED"),
            (n.stateNode = t),
            (n.return = e),
            null === (t = e.deletions)
              ? ((e.deletions = [n]), (e.flags |= 16))
              : t.push(n);
        }
        function sa(e, t) {
          switch (e.tag) {
            case 5:
              var n = e.type;
              return (
                null !==
                  (t =
                    1 !== t.nodeType ||
                    n.toLowerCase() !== t.nodeName.toLowerCase()
                      ? null
                      : t) &&
                ((e.stateNode = t), (na = e), (ra = ui(t.firstChild)), !0)
              );
            case 6:
              return (
                null !==
                  (t = "" === e.pendingProps || 3 !== t.nodeType ? null : t) &&
                ((e.stateNode = t), (na = e), (ra = null), !0)
              );
            case 13:
              return (
                null !== (t = 8 !== t.nodeType ? null : t) &&
                ((n = null !== Yi ? { id: Ki, overflow: $i } : null),
                (e.memoizedState = {
                  dehydrated: t,
                  treeContext: n,
                  retryLane: 1073741824,
                }),
                ((n = Lu(18, null, null, 0)).stateNode = t),
                (n.return = e),
                (e.child = n),
                (na = e),
                (ra = null),
                !0)
              );
            default:
              return !1;
          }
        }
        function la(e) {
          return 0 !== (1 & e.mode) && 0 === (128 & e.flags);
        }
        function ua(e) {
          if (ia) {
            var t = ra;
            if (t) {
              var n = t;
              if (!sa(e, t)) {
                if (la(e)) throw Error(a(418));
                t = ui(n.nextSibling);
                var r = na;
                t && sa(e, t)
                  ? oa(r, n)
                  : ((e.flags = (-4097 & e.flags) | 2), (ia = !1), (na = e));
              }
            } else {
              if (la(e)) throw Error(a(418));
              (e.flags = (-4097 & e.flags) | 2), (ia = !1), (na = e);
            }
          }
        }
        function ca(e) {
          for (
            e = e.return;
            null !== e && 5 !== e.tag && 3 !== e.tag && 13 !== e.tag;

          )
            e = e.return;
          na = e;
        }
        function da(e) {
          if (e !== na) return !1;
          if (!ia) return ca(e), (ia = !0), !1;
          var t;
          if (
            ((t = 3 !== e.tag) &&
              !(t = 5 !== e.tag) &&
              (t =
                "head" !== (t = e.type) &&
                "body" !== t &&
                !ni(e.type, e.memoizedProps)),
            t && (t = ra))
          ) {
            if (la(e)) throw (fa(), Error(a(418)));
            for (; t; ) oa(e, t), (t = ui(t.nextSibling));
          }
          if ((ca(e), 13 === e.tag)) {
            if (!(e = null !== (e = e.memoizedState) ? e.dehydrated : null))
              throw Error(a(317));
            e: {
              for (e = e.nextSibling, t = 0; e; ) {
                if (8 === e.nodeType) {
                  var n = e.data;
                  if ("/$" === n) {
                    if (0 === t) {
                      ra = ui(e.nextSibling);
                      break e;
                    }
                    t--;
                  } else ("$" !== n && "$!" !== n && "$?" !== n) || t++;
                }
                e = e.nextSibling;
              }
              ra = null;
            }
          } else ra = na ? ui(e.stateNode.nextSibling) : null;
          return !0;
        }
        function fa() {
          for (var e = ra; e; ) e = ui(e.nextSibling);
        }
        function ha() {
          (ra = na = null), (ia = !1);
        }
        function pa(e) {
          null === aa ? (aa = [e]) : aa.push(e);
        }
        var va = _.ReactCurrentBatchConfig;
        function ma(e, t) {
          if (e && e.defaultProps) {
            for (var n in ((t = U({}, t)), (e = e.defaultProps)))
              void 0 === t[n] && (t[n] = e[n]);
            return t;
          }
          return t;
        }
        var ga = Mi(null),
          ya = null,
          ba = null,
          _a = null;
        function xa() {
          _a = ba = ya = null;
        }
        function Sa(e) {
          var t = ga.current;
          Ei(ga), (e._currentValue = t);
        }
        function wa(e, t, n) {
          for (; null !== e; ) {
            var r = e.alternate;
            if (
              ((e.childLanes & t) !== t
                ? ((e.childLanes |= t), null !== r && (r.childLanes |= t))
                : null !== r && (r.childLanes & t) !== t && (r.childLanes |= t),
              e === n)
            )
              break;
            e = e.return;
          }
        }
        function Ma(e, t) {
          (ya = e),
            (_a = ba = null),
            null !== (e = e.dependencies) &&
              null !== e.firstContext &&
              (0 !== (e.lanes & t) && (_s = !0), (e.firstContext = null));
        }
        function Ea(e) {
          var t = e._currentValue;
          if (_a !== e)
            if (
              ((e = { context: e, memoizedValue: t, next: null }), null === ba)
            ) {
              if (null === ya) throw Error(a(308));
              (ba = e), (ya.dependencies = { lanes: 0, firstContext: e });
            } else ba = ba.next = e;
          return t;
        }
        var ka = null;
        function Ta(e) {
          null === ka ? (ka = [e]) : ka.push(e);
        }
        function Aa(e, t, n, r) {
          var i = t.interleaved;
          return (
            null === i
              ? ((n.next = n), Ta(t))
              : ((n.next = i.next), (i.next = n)),
            (t.interleaved = n),
            Ca(e, r)
          );
        }
        function Ca(e, t) {
          e.lanes |= t;
          var n = e.alternate;
          for (null !== n && (n.lanes |= t), n = e, e = e.return; null !== e; )
            (e.childLanes |= t),
              null !== (n = e.alternate) && (n.childLanes |= t),
              (n = e),
              (e = e.return);
          return 3 === n.tag ? n.stateNode : null;
        }
        var Pa = !1;
        function Ra(e) {
          e.updateQueue = {
            baseState: e.memoizedState,
            firstBaseUpdate: null,
            lastBaseUpdate: null,
            shared: { pending: null, interleaved: null, lanes: 0 },
            effects: null,
          };
        }
        function La(e, t) {
          (e = e.updateQueue),
            t.updateQueue === e &&
              (t.updateQueue = {
                baseState: e.baseState,
                firstBaseUpdate: e.firstBaseUpdate,
                lastBaseUpdate: e.lastBaseUpdate,
                shared: e.shared,
                effects: e.effects,
              });
        }
        function Ia(e, t) {
          return {
            eventTime: e,
            lane: t,
            tag: 0,
            payload: null,
            callback: null,
            next: null,
          };
        }
        function Na(e, t, n) {
          var r = e.updateQueue;
          if (null === r) return null;
          if (((r = r.shared), 0 !== (2 & Cl))) {
            var i = r.pending;
            return (
              null === i ? (t.next = t) : ((t.next = i.next), (i.next = t)),
              (r.pending = t),
              Ca(e, n)
            );
          }
          return (
            null === (i = r.interleaved)
              ? ((t.next = t), Ta(r))
              : ((t.next = i.next), (i.next = t)),
            (r.interleaved = t),
            Ca(e, n)
          );
        }
        function Oa(e, t, n) {
          if (
            null !== (t = t.updateQueue) &&
            ((t = t.shared), 0 !== (4194240 & n))
          ) {
            var r = t.lanes;
            (n |= r &= e.pendingLanes), (t.lanes = n), yt(e, n);
          }
        }
        function Da(e, t) {
          var n = e.updateQueue,
            r = e.alternate;
          if (null !== r && n === (r = r.updateQueue)) {
            var i = null,
              a = null;
            if (null !== (n = n.firstBaseUpdate)) {
              do {
                var o = {
                  eventTime: n.eventTime,
                  lane: n.lane,
                  tag: n.tag,
                  payload: n.payload,
                  callback: n.callback,
                  next: null,
                };
                null === a ? (i = a = o) : (a = a.next = o), (n = n.next);
              } while (null !== n);
              null === a ? (i = a = t) : (a = a.next = t);
            } else i = a = t;
            return (
              (n = {
                baseState: r.baseState,
                firstBaseUpdate: i,
                lastBaseUpdate: a,
                shared: r.shared,
                effects: r.effects,
              }),
              void (e.updateQueue = n)
            );
          }
          null === (e = n.lastBaseUpdate)
            ? (n.firstBaseUpdate = t)
            : (e.next = t),
            (n.lastBaseUpdate = t);
        }
        function Ua(e, t, n, r) {
          var i = e.updateQueue;
          Pa = !1;
          var a = i.firstBaseUpdate,
            o = i.lastBaseUpdate,
            s = i.shared.pending;
          if (null !== s) {
            i.shared.pending = null;
            var l = s,
              u = l.next;
            (l.next = null), null === o ? (a = u) : (o.next = u), (o = l);
            var c = e.alternate;
            null !== c &&
              (s = (c = c.updateQueue).lastBaseUpdate) !== o &&
              (null === s ? (c.firstBaseUpdate = u) : (s.next = u),
              (c.lastBaseUpdate = l));
          }
          if (null !== a) {
            var d = i.baseState;
            for (o = 0, c = u = l = null, s = a; ; ) {
              var f = s.lane,
                h = s.eventTime;
              if ((r & f) === f) {
                null !== c &&
                  (c = c.next =
                    {
                      eventTime: h,
                      lane: 0,
                      tag: s.tag,
                      payload: s.payload,
                      callback: s.callback,
                      next: null,
                    });
                e: {
                  var p = e,
                    v = s;
                  switch (((f = t), (h = n), v.tag)) {
                    case 1:
                      if ("function" === typeof (p = v.payload)) {
                        d = p.call(h, d, f);
                        break e;
                      }
                      d = p;
                      break e;
                    case 3:
                      p.flags = (-65537 & p.flags) | 128;
                    case 0:
                      if (
                        null ===
                          (f =
                            "function" === typeof (p = v.payload)
                              ? p.call(h, d, f)
                              : p) ||
                        void 0 === f
                      )
                        break e;
                      d = U({}, d, f);
                      break e;
                    case 2:
                      Pa = !0;
                  }
                }
                null !== s.callback &&
                  0 !== s.lane &&
                  ((e.flags |= 64),
                  null === (f = i.effects) ? (i.effects = [s]) : f.push(s));
              } else
                (h = {
                  eventTime: h,
                  lane: f,
                  tag: s.tag,
                  payload: s.payload,
                  callback: s.callback,
                  next: null,
                }),
                  null === c ? ((u = c = h), (l = d)) : (c = c.next = h),
                  (o |= f);
              if (null === (s = s.next)) {
                if (null === (s = i.shared.pending)) break;
                (s = (f = s).next),
                  (f.next = null),
                  (i.lastBaseUpdate = f),
                  (i.shared.pending = null);
              }
            }
            if (
              (null === c && (l = d),
              (i.baseState = l),
              (i.firstBaseUpdate = u),
              (i.lastBaseUpdate = c),
              null !== (t = i.shared.interleaved))
            ) {
              i = t;
              do {
                (o |= i.lane), (i = i.next);
              } while (i !== t);
            } else null === a && (i.shared.lanes = 0);
            (Ul |= o), (e.lanes = o), (e.memoizedState = d);
          }
        }
        function za(e, t, n) {
          if (((e = t.effects), (t.effects = null), null !== e))
            for (t = 0; t < e.length; t++) {
              var r = e[t],
                i = r.callback;
              if (null !== i) {
                if (((r.callback = null), (r = n), "function" !== typeof i))
                  throw Error(a(191, i));
                i.call(r);
              }
            }
        }
        var Fa = new r.Component().refs;
        function Ba(e, t, n, r) {
          (n =
            null === (n = n(r, (t = e.memoizedState))) || void 0 === n
              ? t
              : U({}, t, n)),
            (e.memoizedState = n),
            0 === e.lanes && (e.updateQueue.baseState = n);
        }
        var Za = {
          isMounted: function (e) {
            return !!(e = e._reactInternals) && He(e) === e;
          },
          enqueueSetState: function (e, t, n) {
            e = e._reactInternals;
            var r = tu(),
              i = nu(e),
              a = Ia(r, i);
            (a.payload = t),
              void 0 !== n && null !== n && (a.callback = n),
              null !== (t = Na(e, a, i)) && (ru(t, e, i, r), Oa(t, e, i));
          },
          enqueueReplaceState: function (e, t, n) {
            e = e._reactInternals;
            var r = tu(),
              i = nu(e),
              a = Ia(r, i);
            (a.tag = 1),
              (a.payload = t),
              void 0 !== n && null !== n && (a.callback = n),
              null !== (t = Na(e, a, i)) && (ru(t, e, i, r), Oa(t, e, i));
          },
          enqueueForceUpdate: function (e, t) {
            e = e._reactInternals;
            var n = tu(),
              r = nu(e),
              i = Ia(n, r);
            (i.tag = 2),
              void 0 !== t && null !== t && (i.callback = t),
              null !== (t = Na(e, i, r)) && (ru(t, e, r, n), Oa(t, e, r));
          },
        };
        function Ha(e, t, n, r, i, a, o) {
          return "function" === typeof (e = e.stateNode).shouldComponentUpdate
            ? e.shouldComponentUpdate(r, a, o)
            : !t.prototype ||
                !t.prototype.isPureReactComponent ||
                !lr(n, r) ||
                !lr(i, a);
        }
        function Va(e, t, n) {
          var r = !1,
            i = Ti,
            a = t.contextType;
          return (
            "object" === typeof a && null !== a
              ? (a = Ea(a))
              : ((i = Li(t) ? Pi : Ai.current),
                (a = (r = null !== (r = t.contextTypes) && void 0 !== r)
                  ? Ri(e, i)
                  : Ti)),
            (t = new t(n, a)),
            (e.memoizedState =
              null !== t.state && void 0 !== t.state ? t.state : null),
            (t.updater = Za),
            (e.stateNode = t),
            (t._reactInternals = e),
            r &&
              (((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext =
                i),
              (e.__reactInternalMemoizedMaskedChildContext = a)),
            t
          );
        }
        function Ga(e, t, n, r) {
          (e = t.state),
            "function" === typeof t.componentWillReceiveProps &&
              t.componentWillReceiveProps(n, r),
            "function" === typeof t.UNSAFE_componentWillReceiveProps &&
              t.UNSAFE_componentWillReceiveProps(n, r),
            t.state !== e && Za.enqueueReplaceState(t, t.state, null);
        }
        function Wa(e, t, n, r) {
          var i = e.stateNode;
          (i.props = n), (i.state = e.memoizedState), (i.refs = Fa), Ra(e);
          var a = t.contextType;
          "object" === typeof a && null !== a
            ? (i.context = Ea(a))
            : ((a = Li(t) ? Pi : Ai.current), (i.context = Ri(e, a))),
            (i.state = e.memoizedState),
            "function" === typeof (a = t.getDerivedStateFromProps) &&
              (Ba(e, t, a, n), (i.state = e.memoizedState)),
            "function" === typeof t.getDerivedStateFromProps ||
              "function" === typeof i.getSnapshotBeforeUpdate ||
              ("function" !== typeof i.UNSAFE_componentWillMount &&
                "function" !== typeof i.componentWillMount) ||
              ((t = i.state),
              "function" === typeof i.componentWillMount &&
                i.componentWillMount(),
              "function" === typeof i.UNSAFE_componentWillMount &&
                i.UNSAFE_componentWillMount(),
              t !== i.state && Za.enqueueReplaceState(i, i.state, null),
              Ua(e, n, i, r),
              (i.state = e.memoizedState)),
            "function" === typeof i.componentDidMount && (e.flags |= 4194308);
        }
        function ja(e, t, n) {
          if (
            null !== (e = n.ref) &&
            "function" !== typeof e &&
            "object" !== typeof e
          ) {
            if (n._owner) {
              if ((n = n._owner)) {
                if (1 !== n.tag) throw Error(a(309));
                var r = n.stateNode;
              }
              if (!r) throw Error(a(147, e));
              var i = r,
                o = "" + e;
              return null !== t &&
                null !== t.ref &&
                "function" === typeof t.ref &&
                t.ref._stringRef === o
                ? t.ref
                : ((t = function (e) {
                    var t = i.refs;
                    t === Fa && (t = i.refs = {}),
                      null === e ? delete t[o] : (t[o] = e);
                  }),
                  (t._stringRef = o),
                  t);
            }
            if ("string" !== typeof e) throw Error(a(284));
            if (!n._owner) throw Error(a(290, e));
          }
          return e;
        }
        function Xa(e, t) {
          throw (
            ((e = Object.prototype.toString.call(t)),
            Error(
              a(
                31,
                "[object Object]" === e
                  ? "object with keys {" + Object.keys(t).join(", ") + "}"
                  : e
              )
            ))
          );
        }
        function qa(e) {
          return (0, e._init)(e._payload);
        }
        function Ya(e) {
          function t(t, n) {
            if (e) {
              var r = t.deletions;
              null === r ? ((t.deletions = [n]), (t.flags |= 16)) : r.push(n);
            }
          }
          function n(n, r) {
            if (!e) return null;
            for (; null !== r; ) t(n, r), (r = r.sibling);
            return null;
          }
          function r(e, t) {
            for (e = new Map(); null !== t; )
              null !== t.key ? e.set(t.key, t) : e.set(t.index, t),
                (t = t.sibling);
            return e;
          }
          function i(e, t) {
            return ((e = Nu(e, t)).index = 0), (e.sibling = null), e;
          }
          function o(t, n, r) {
            return (
              (t.index = r),
              e
                ? null !== (r = t.alternate)
                  ? (r = r.index) < n
                    ? ((t.flags |= 2), n)
                    : r
                  : ((t.flags |= 2), n)
                : ((t.flags |= 1048576), n)
            );
          }
          function s(t) {
            return e && null === t.alternate && (t.flags |= 2), t;
          }
          function l(e, t, n, r) {
            return null === t || 6 !== t.tag
              ? (((t = zu(n, e.mode, r)).return = e), t)
              : (((t = i(t, n)).return = e), t);
          }
          function u(e, t, n, r) {
            var a = n.type;
            return a === w
              ? d(e, t, n.props.children, r, n.key)
              : null !== t &&
                (t.elementType === a ||
                  ("object" === typeof a &&
                    null !== a &&
                    a.$$typeof === L &&
                    qa(a) === t.type))
              ? (((r = i(t, n.props)).ref = ja(e, t, n)), (r.return = e), r)
              : (((r = Ou(n.type, n.key, n.props, null, e.mode, r)).ref = ja(
                  e,
                  t,
                  n
                )),
                (r.return = e),
                r);
          }
          function c(e, t, n, r) {
            return null === t ||
              4 !== t.tag ||
              t.stateNode.containerInfo !== n.containerInfo ||
              t.stateNode.implementation !== n.implementation
              ? (((t = Fu(n, e.mode, r)).return = e), t)
              : (((t = i(t, n.children || [])).return = e), t);
          }
          function d(e, t, n, r, a) {
            return null === t || 7 !== t.tag
              ? (((t = Du(n, e.mode, r, a)).return = e), t)
              : (((t = i(t, n)).return = e), t);
          }
          function f(e, t, n) {
            if (("string" === typeof t && "" !== t) || "number" === typeof t)
              return ((t = zu("" + t, e.mode, n)).return = e), t;
            if ("object" === typeof t && null !== t) {
              switch (t.$$typeof) {
                case x:
                  return (
                    ((n = Ou(t.type, t.key, t.props, null, e.mode, n)).ref = ja(
                      e,
                      null,
                      t
                    )),
                    (n.return = e),
                    n
                  );
                case S:
                  return ((t = Fu(t, e.mode, n)).return = e), t;
                case L:
                  return f(e, (0, t._init)(t._payload), n);
              }
              if (te(t) || O(t))
                return ((t = Du(t, e.mode, n, null)).return = e), t;
              Xa(e, t);
            }
            return null;
          }
          function h(e, t, n, r) {
            var i = null !== t ? t.key : null;
            if (("string" === typeof n && "" !== n) || "number" === typeof n)
              return null !== i ? null : l(e, t, "" + n, r);
            if ("object" === typeof n && null !== n) {
              switch (n.$$typeof) {
                case x:
                  return n.key === i ? u(e, t, n, r) : null;
                case S:
                  return n.key === i ? c(e, t, n, r) : null;
                case L:
                  return h(e, t, (i = n._init)(n._payload), r);
              }
              if (te(n) || O(n)) return null !== i ? null : d(e, t, n, r, null);
              Xa(e, n);
            }
            return null;
          }
          function p(e, t, n, r, i) {
            if (("string" === typeof r && "" !== r) || "number" === typeof r)
              return l(t, (e = e.get(n) || null), "" + r, i);
            if ("object" === typeof r && null !== r) {
              switch (r.$$typeof) {
                case x:
                  return u(
                    t,
                    (e = e.get(null === r.key ? n : r.key) || null),
                    r,
                    i
                  );
                case S:
                  return c(
                    t,
                    (e = e.get(null === r.key ? n : r.key) || null),
                    r,
                    i
                  );
                case L:
                  return p(e, t, n, (0, r._init)(r._payload), i);
              }
              if (te(r) || O(r))
                return d(t, (e = e.get(n) || null), r, i, null);
              Xa(t, r);
            }
            return null;
          }
          function v(i, a, s, l) {
            for (
              var u = null, c = null, d = a, v = (a = 0), m = null;
              null !== d && v < s.length;
              v++
            ) {
              d.index > v ? ((m = d), (d = null)) : (m = d.sibling);
              var g = h(i, d, s[v], l);
              if (null === g) {
                null === d && (d = m);
                break;
              }
              e && d && null === g.alternate && t(i, d),
                (a = o(g, a, v)),
                null === c ? (u = g) : (c.sibling = g),
                (c = g),
                (d = m);
            }
            if (v === s.length) return n(i, d), ia && Ji(i, v), u;
            if (null === d) {
              for (; v < s.length; v++)
                null !== (d = f(i, s[v], l)) &&
                  ((a = o(d, a, v)),
                  null === c ? (u = d) : (c.sibling = d),
                  (c = d));
              return ia && Ji(i, v), u;
            }
            for (d = r(i, d); v < s.length; v++)
              null !== (m = p(d, i, v, s[v], l)) &&
                (e &&
                  null !== m.alternate &&
                  d.delete(null === m.key ? v : m.key),
                (a = o(m, a, v)),
                null === c ? (u = m) : (c.sibling = m),
                (c = m));
            return (
              e &&
                d.forEach(function (e) {
                  return t(i, e);
                }),
              ia && Ji(i, v),
              u
            );
          }
          function m(i, s, l, u) {
            var c = O(l);
            if ("function" !== typeof c) throw Error(a(150));
            if (null == (l = c.call(l))) throw Error(a(151));
            for (
              var d = (c = null), v = s, m = (s = 0), g = null, y = l.next();
              null !== v && !y.done;
              m++, y = l.next()
            ) {
              v.index > m ? ((g = v), (v = null)) : (g = v.sibling);
              var b = h(i, v, y.value, u);
              if (null === b) {
                null === v && (v = g);
                break;
              }
              e && v && null === b.alternate && t(i, v),
                (s = o(b, s, m)),
                null === d ? (c = b) : (d.sibling = b),
                (d = b),
                (v = g);
            }
            if (y.done) return n(i, v), ia && Ji(i, m), c;
            if (null === v) {
              for (; !y.done; m++, y = l.next())
                null !== (y = f(i, y.value, u)) &&
                  ((s = o(y, s, m)),
                  null === d ? (c = y) : (d.sibling = y),
                  (d = y));
              return ia && Ji(i, m), c;
            }
            for (v = r(i, v); !y.done; m++, y = l.next())
              null !== (y = p(v, i, m, y.value, u)) &&
                (e &&
                  null !== y.alternate &&
                  v.delete(null === y.key ? m : y.key),
                (s = o(y, s, m)),
                null === d ? (c = y) : (d.sibling = y),
                (d = y));
            return (
              e &&
                v.forEach(function (e) {
                  return t(i, e);
                }),
              ia && Ji(i, m),
              c
            );
          }
          return function e(r, a, o, l) {
            if (
              ("object" === typeof o &&
                null !== o &&
                o.type === w &&
                null === o.key &&
                (o = o.props.children),
              "object" === typeof o && null !== o)
            ) {
              switch (o.$$typeof) {
                case x:
                  e: {
                    for (var u = o.key, c = a; null !== c; ) {
                      if (c.key === u) {
                        if ((u = o.type) === w) {
                          if (7 === c.tag) {
                            n(r, c.sibling),
                              ((a = i(c, o.props.children)).return = r),
                              (r = a);
                            break e;
                          }
                        } else if (
                          c.elementType === u ||
                          ("object" === typeof u &&
                            null !== u &&
                            u.$$typeof === L &&
                            qa(u) === c.type)
                        ) {
                          n(r, c.sibling),
                            ((a = i(c, o.props)).ref = ja(r, c, o)),
                            (a.return = r),
                            (r = a);
                          break e;
                        }
                        n(r, c);
                        break;
                      }
                      t(r, c), (c = c.sibling);
                    }
                    o.type === w
                      ? (((a = Du(o.props.children, r.mode, l, o.key)).return =
                          r),
                        (r = a))
                      : (((l = Ou(
                          o.type,
                          o.key,
                          o.props,
                          null,
                          r.mode,
                          l
                        )).ref = ja(r, a, o)),
                        (l.return = r),
                        (r = l));
                  }
                  return s(r);
                case S:
                  e: {
                    for (c = o.key; null !== a; ) {
                      if (a.key === c) {
                        if (
                          4 === a.tag &&
                          a.stateNode.containerInfo === o.containerInfo &&
                          a.stateNode.implementation === o.implementation
                        ) {
                          n(r, a.sibling),
                            ((a = i(a, o.children || [])).return = r),
                            (r = a);
                          break e;
                        }
                        n(r, a);
                        break;
                      }
                      t(r, a), (a = a.sibling);
                    }
                    ((a = Fu(o, r.mode, l)).return = r), (r = a);
                  }
                  return s(r);
                case L:
                  return e(r, a, (c = o._init)(o._payload), l);
              }
              if (te(o)) return v(r, a, o, l);
              if (O(o)) return m(r, a, o, l);
              Xa(r, o);
            }
            return ("string" === typeof o && "" !== o) || "number" === typeof o
              ? ((o = "" + o),
                null !== a && 6 === a.tag
                  ? (n(r, a.sibling), ((a = i(a, o)).return = r), (r = a))
                  : (n(r, a), ((a = zu(o, r.mode, l)).return = r), (r = a)),
                s(r))
              : n(r, a);
          };
        }
        var Ka = Ya(!0),
          $a = Ya(!1),
          Ja = {},
          Qa = Mi(Ja),
          eo = Mi(Ja),
          to = Mi(Ja);
        function no(e) {
          if (e === Ja) throw Error(a(174));
          return e;
        }
        function ro(e, t) {
          switch ((ki(to, t), ki(eo, e), ki(Qa, Ja), (e = t.nodeType))) {
            case 9:
            case 11:
              t = (t = t.documentElement) ? t.namespaceURI : le(null, "");
              break;
            default:
              t = le(
                (t = (e = 8 === e ? t.parentNode : t).namespaceURI || null),
                (e = e.tagName)
              );
          }
          Ei(Qa), ki(Qa, t);
        }
        function io() {
          Ei(Qa), Ei(eo), Ei(to);
        }
        function ao(e) {
          no(to.current);
          var t = no(Qa.current),
            n = le(t, e.type);
          t !== n && (ki(eo, e), ki(Qa, n));
        }
        function oo(e) {
          eo.current === e && (Ei(Qa), Ei(eo));
        }
        var so = Mi(0);
        function lo(e) {
          for (var t = e; null !== t; ) {
            if (13 === t.tag) {
              var n = t.memoizedState;
              if (
                null !== n &&
                (null === (n = n.dehydrated) ||
                  "$?" === n.data ||
                  "$!" === n.data)
              )
                return t;
            } else if (19 === t.tag && void 0 !== t.memoizedProps.revealOrder) {
              if (0 !== (128 & t.flags)) return t;
            } else if (null !== t.child) {
              (t.child.return = t), (t = t.child);
              continue;
            }
            if (t === e) break;
            for (; null === t.sibling; ) {
              if (null === t.return || t.return === e) return null;
              t = t.return;
            }
            (t.sibling.return = t.return), (t = t.sibling);
          }
          return null;
        }
        var uo = [];
        function co() {
          for (var e = 0; e < uo.length; e++)
            uo[e]._workInProgressVersionPrimary = null;
          uo.length = 0;
        }
        var fo = _.ReactCurrentDispatcher,
          ho = _.ReactCurrentBatchConfig,
          po = 0,
          vo = null,
          mo = null,
          go = null,
          yo = !1,
          bo = !1,
          _o = 0,
          xo = 0;
        function So() {
          throw Error(a(321));
        }
        function wo(e, t) {
          if (null === t) return !1;
          for (var n = 0; n < t.length && n < e.length; n++)
            if (!sr(e[n], t[n])) return !1;
          return !0;
        }
        function Mo(e, t, n, r, i, o) {
          if (
            ((po = o),
            (vo = t),
            (t.memoizedState = null),
            (t.updateQueue = null),
            (t.lanes = 0),
            (fo.current = null === e || null === e.memoizedState ? ss : ls),
            (e = n(r, i)),
            bo)
          ) {
            o = 0;
            do {
              if (((bo = !1), (_o = 0), 25 <= o)) throw Error(a(301));
              (o += 1),
                (go = mo = null),
                (t.updateQueue = null),
                (fo.current = us),
                (e = n(r, i));
            } while (bo);
          }
          if (
            ((fo.current = os),
            (t = null !== mo && null !== mo.next),
            (po = 0),
            (go = mo = vo = null),
            (yo = !1),
            t)
          )
            throw Error(a(300));
          return e;
        }
        function Eo() {
          var e = 0 !== _o;
          return (_o = 0), e;
        }
        function ko() {
          var e = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null,
          };
          return (
            null === go ? (vo.memoizedState = go = e) : (go = go.next = e), go
          );
        }
        function To() {
          if (null === mo) {
            var e = vo.alternate;
            e = null !== e ? e.memoizedState : null;
          } else e = mo.next;
          var t = null === go ? vo.memoizedState : go.next;
          if (null !== t) (go = t), (mo = e);
          else {
            if (null === e) throw Error(a(310));
            (e = {
              memoizedState: (mo = e).memoizedState,
              baseState: mo.baseState,
              baseQueue: mo.baseQueue,
              queue: mo.queue,
              next: null,
            }),
              null === go ? (vo.memoizedState = go = e) : (go = go.next = e);
          }
          return go;
        }
        function Ao(e, t) {
          return "function" === typeof t ? t(e) : t;
        }
        function Co(e) {
          var t = To(),
            n = t.queue;
          if (null === n) throw Error(a(311));
          n.lastRenderedReducer = e;
          var r = mo,
            i = r.baseQueue,
            o = n.pending;
          if (null !== o) {
            if (null !== i) {
              var s = i.next;
              (i.next = o.next), (o.next = s);
            }
            (r.baseQueue = i = o), (n.pending = null);
          }
          if (null !== i) {
            (o = i.next), (r = r.baseState);
            var l = (s = null),
              u = null,
              c = o;
            do {
              var d = c.lane;
              if ((po & d) === d)
                null !== u &&
                  (u = u.next =
                    {
                      lane: 0,
                      action: c.action,
                      hasEagerState: c.hasEagerState,
                      eagerState: c.eagerState,
                      next: null,
                    }),
                  (r = c.hasEagerState ? c.eagerState : e(r, c.action));
              else {
                var f = {
                  lane: d,
                  action: c.action,
                  hasEagerState: c.hasEagerState,
                  eagerState: c.eagerState,
                  next: null,
                };
                null === u ? ((l = u = f), (s = r)) : (u = u.next = f),
                  (vo.lanes |= d),
                  (Ul |= d);
              }
              c = c.next;
            } while (null !== c && c !== o);
            null === u ? (s = r) : (u.next = l),
              sr(r, t.memoizedState) || (_s = !0),
              (t.memoizedState = r),
              (t.baseState = s),
              (t.baseQueue = u),
              (n.lastRenderedState = r);
          }
          if (null !== (e = n.interleaved)) {
            i = e;
            do {
              (o = i.lane), (vo.lanes |= o), (Ul |= o), (i = i.next);
            } while (i !== e);
          } else null === i && (n.lanes = 0);
          return [t.memoizedState, n.dispatch];
        }
        function Po(e) {
          var t = To(),
            n = t.queue;
          if (null === n) throw Error(a(311));
          n.lastRenderedReducer = e;
          var r = n.dispatch,
            i = n.pending,
            o = t.memoizedState;
          if (null !== i) {
            n.pending = null;
            var s = (i = i.next);
            do {
              (o = e(o, s.action)), (s = s.next);
            } while (s !== i);
            sr(o, t.memoizedState) || (_s = !0),
              (t.memoizedState = o),
              null === t.baseQueue && (t.baseState = o),
              (n.lastRenderedState = o);
          }
          return [o, r];
        }
        function Ro() {}
        function Lo(e, t) {
          var n = vo,
            r = To(),
            i = t(),
            o = !sr(r.memoizedState, i);
          if (
            (o && ((r.memoizedState = i), (_s = !0)),
            (r = r.queue),
            Go(Oo.bind(null, n, r, e), [e]),
            r.getSnapshot !== t ||
              o ||
              (null !== go && 1 & go.memoizedState.tag))
          ) {
            if (
              ((n.flags |= 2048),
              Fo(9, No.bind(null, n, r, i, t), void 0, null),
              null === Pl)
            )
              throw Error(a(349));
            0 !== (30 & po) || Io(n, t, i);
          }
          return i;
        }
        function Io(e, t, n) {
          (e.flags |= 16384),
            (e = { getSnapshot: t, value: n }),
            null === (t = vo.updateQueue)
              ? ((t = { lastEffect: null, stores: null }),
                (vo.updateQueue = t),
                (t.stores = [e]))
              : null === (n = t.stores)
              ? (t.stores = [e])
              : n.push(e);
        }
        function No(e, t, n, r) {
          (t.value = n), (t.getSnapshot = r), Do(t) && Uo(e);
        }
        function Oo(e, t, n) {
          return n(function () {
            Do(t) && Uo(e);
          });
        }
        function Do(e) {
          var t = e.getSnapshot;
          e = e.value;
          try {
            var n = t();
            return !sr(e, n);
          } catch (r) {
            return !0;
          }
        }
        function Uo(e) {
          var t = Ca(e, 1);
          null !== t && ru(t, e, 1, -1);
        }
        function zo(e) {
          var t = ko();
          return (
            "function" === typeof e && (e = e()),
            (t.memoizedState = t.baseState = e),
            (e = {
              pending: null,
              interleaved: null,
              lanes: 0,
              dispatch: null,
              lastRenderedReducer: Ao,
              lastRenderedState: e,
            }),
            (t.queue = e),
            (e = e.dispatch = ns.bind(null, vo, e)),
            [t.memoizedState, e]
          );
        }
        function Fo(e, t, n, r) {
          return (
            (e = { tag: e, create: t, destroy: n, deps: r, next: null }),
            null === (t = vo.updateQueue)
              ? ((t = { lastEffect: null, stores: null }),
                (vo.updateQueue = t),
                (t.lastEffect = e.next = e))
              : null === (n = t.lastEffect)
              ? (t.lastEffect = e.next = e)
              : ((r = n.next), (n.next = e), (e.next = r), (t.lastEffect = e)),
            e
          );
        }
        function Bo() {
          return To().memoizedState;
        }
        function Zo(e, t, n, r) {
          var i = ko();
          (vo.flags |= e),
            (i.memoizedState = Fo(1 | t, n, void 0, void 0 === r ? null : r));
        }
        function Ho(e, t, n, r) {
          var i = To();
          r = void 0 === r ? null : r;
          var a = void 0;
          if (null !== mo) {
            var o = mo.memoizedState;
            if (((a = o.destroy), null !== r && wo(r, o.deps)))
              return void (i.memoizedState = Fo(t, n, a, r));
          }
          (vo.flags |= e), (i.memoizedState = Fo(1 | t, n, a, r));
        }
        function Vo(e, t) {
          return Zo(8390656, 8, e, t);
        }
        function Go(e, t) {
          return Ho(2048, 8, e, t);
        }
        function Wo(e, t) {
          return Ho(4, 2, e, t);
        }
        function jo(e, t) {
          return Ho(4, 4, e, t);
        }
        function Xo(e, t) {
          return "function" === typeof t
            ? ((e = e()),
              t(e),
              function () {
                t(null);
              })
            : null !== t && void 0 !== t
            ? ((e = e()),
              (t.current = e),
              function () {
                t.current = null;
              })
            : void 0;
        }
        function qo(e, t, n) {
          return (
            (n = null !== n && void 0 !== n ? n.concat([e]) : null),
            Ho(4, 4, Xo.bind(null, t, e), n)
          );
        }
        function Yo() {}
        function Ko(e, t) {
          var n = To();
          t = void 0 === t ? null : t;
          var r = n.memoizedState;
          return null !== r && null !== t && wo(t, r[1])
            ? r[0]
            : ((n.memoizedState = [e, t]), e);
        }
        function $o(e, t) {
          var n = To();
          t = void 0 === t ? null : t;
          var r = n.memoizedState;
          return null !== r && null !== t && wo(t, r[1])
            ? r[0]
            : ((e = e()), (n.memoizedState = [e, t]), e);
        }
        function Jo(e, t, n) {
          return 0 === (21 & po)
            ? (e.baseState && ((e.baseState = !1), (_s = !0)),
              (e.memoizedState = n))
            : (sr(n, t) ||
                ((n = vt()), (vo.lanes |= n), (Ul |= n), (e.baseState = !0)),
              t);
        }
        function Qo(e, t) {
          var n = bt;
          (bt = 0 !== n && 4 > n ? n : 4), e(!0);
          var r = ho.transition;
          ho.transition = {};
          try {
            e(!1), t();
          } finally {
            (bt = n), (ho.transition = r);
          }
        }
        function es() {
          return To().memoizedState;
        }
        function ts(e, t, n) {
          var r = nu(e);
          if (
            ((n = {
              lane: r,
              action: n,
              hasEagerState: !1,
              eagerState: null,
              next: null,
            }),
            rs(e))
          )
            is(t, n);
          else if (null !== (n = Aa(e, t, n, r))) {
            ru(n, e, r, tu()), as(n, t, r);
          }
        }
        function ns(e, t, n) {
          var r = nu(e),
            i = {
              lane: r,
              action: n,
              hasEagerState: !1,
              eagerState: null,
              next: null,
            };
          if (rs(e)) is(t, i);
          else {
            var a = e.alternate;
            if (
              0 === e.lanes &&
              (null === a || 0 === a.lanes) &&
              null !== (a = t.lastRenderedReducer)
            )
              try {
                var o = t.lastRenderedState,
                  s = a(o, n);
                if (((i.hasEagerState = !0), (i.eagerState = s), sr(s, o))) {
                  var l = t.interleaved;
                  return (
                    null === l
                      ? ((i.next = i), Ta(t))
                      : ((i.next = l.next), (l.next = i)),
                    void (t.interleaved = i)
                  );
                }
              } catch (u) {}
            null !== (n = Aa(e, t, i, r)) &&
              (ru(n, e, r, (i = tu())), as(n, t, r));
          }
        }
        function rs(e) {
          var t = e.alternate;
          return e === vo || (null !== t && t === vo);
        }
        function is(e, t) {
          bo = yo = !0;
          var n = e.pending;
          null === n ? (t.next = t) : ((t.next = n.next), (n.next = t)),
            (e.pending = t);
        }
        function as(e, t, n) {
          if (0 !== (4194240 & n)) {
            var r = t.lanes;
            (n |= r &= e.pendingLanes), (t.lanes = n), yt(e, n);
          }
        }
        var os = {
            readContext: Ea,
            useCallback: So,
            useContext: So,
            useEffect: So,
            useImperativeHandle: So,
            useInsertionEffect: So,
            useLayoutEffect: So,
            useMemo: So,
            useReducer: So,
            useRef: So,
            useState: So,
            useDebugValue: So,
            useDeferredValue: So,
            useTransition: So,
            useMutableSource: So,
            useSyncExternalStore: So,
            useId: So,
            unstable_isNewReconciler: !1,
          },
          ss = {
            readContext: Ea,
            useCallback: function (e, t) {
              return (ko().memoizedState = [e, void 0 === t ? null : t]), e;
            },
            useContext: Ea,
            useEffect: Vo,
            useImperativeHandle: function (e, t, n) {
              return (
                (n = null !== n && void 0 !== n ? n.concat([e]) : null),
                Zo(4194308, 4, Xo.bind(null, t, e), n)
              );
            },
            useLayoutEffect: function (e, t) {
              return Zo(4194308, 4, e, t);
            },
            useInsertionEffect: function (e, t) {
              return Zo(4, 2, e, t);
            },
            useMemo: function (e, t) {
              var n = ko();
              return (
                (t = void 0 === t ? null : t),
                (e = e()),
                (n.memoizedState = [e, t]),
                e
              );
            },
            useReducer: function (e, t, n) {
              var r = ko();
              return (
                (t = void 0 !== n ? n(t) : t),
                (r.memoizedState = r.baseState = t),
                (e = {
                  pending: null,
                  interleaved: null,
                  lanes: 0,
                  dispatch: null,
                  lastRenderedReducer: e,
                  lastRenderedState: t,
                }),
                (r.queue = e),
                (e = e.dispatch = ts.bind(null, vo, e)),
                [r.memoizedState, e]
              );
            },
            useRef: function (e) {
              return (e = { current: e }), (ko().memoizedState = e);
            },
            useState: zo,
            useDebugValue: Yo,
            useDeferredValue: function (e) {
              return (ko().memoizedState = e);
            },
            useTransition: function () {
              var e = zo(!1),
                t = e[0];
              return (
                (e = Qo.bind(null, e[1])), (ko().memoizedState = e), [t, e]
              );
            },
            useMutableSource: function () {},
            useSyncExternalStore: function (e, t, n) {
              var r = vo,
                i = ko();
              if (ia) {
                if (void 0 === n) throw Error(a(407));
                n = n();
              } else {
                if (((n = t()), null === Pl)) throw Error(a(349));
                0 !== (30 & po) || Io(r, t, n);
              }
              i.memoizedState = n;
              var o = { value: n, getSnapshot: t };
              return (
                (i.queue = o),
                Vo(Oo.bind(null, r, o, e), [e]),
                (r.flags |= 2048),
                Fo(9, No.bind(null, r, o, n, t), void 0, null),
                n
              );
            },
            useId: function () {
              var e = ko(),
                t = Pl.identifierPrefix;
              if (ia) {
                var n = $i;
                (t =
                  ":" +
                  t +
                  "R" +
                  (n = (Ki & ~(1 << (32 - ot(Ki) - 1))).toString(32) + n)),
                  0 < (n = _o++) && (t += "H" + n.toString(32)),
                  (t += ":");
              } else t = ":" + t + "r" + (n = xo++).toString(32) + ":";
              return (e.memoizedState = t);
            },
            unstable_isNewReconciler: !1,
          },
          ls = {
            readContext: Ea,
            useCallback: Ko,
            useContext: Ea,
            useEffect: Go,
            useImperativeHandle: qo,
            useInsertionEffect: Wo,
            useLayoutEffect: jo,
            useMemo: $o,
            useReducer: Co,
            useRef: Bo,
            useState: function () {
              return Co(Ao);
            },
            useDebugValue: Yo,
            useDeferredValue: function (e) {
              return Jo(To(), mo.memoizedState, e);
            },
            useTransition: function () {
              return [Co(Ao)[0], To().memoizedState];
            },
            useMutableSource: Ro,
            useSyncExternalStore: Lo,
            useId: es,
            unstable_isNewReconciler: !1,
          },
          us = {
            readContext: Ea,
            useCallback: Ko,
            useContext: Ea,
            useEffect: Go,
            useImperativeHandle: qo,
            useInsertionEffect: Wo,
            useLayoutEffect: jo,
            useMemo: $o,
            useReducer: Po,
            useRef: Bo,
            useState: function () {
              return Po(Ao);
            },
            useDebugValue: Yo,
            useDeferredValue: function (e) {
              var t = To();
              return null === mo
                ? (t.memoizedState = e)
                : Jo(t, mo.memoizedState, e);
            },
            useTransition: function () {
              return [Po(Ao)[0], To().memoizedState];
            },
            useMutableSource: Ro,
            useSyncExternalStore: Lo,
            useId: es,
            unstable_isNewReconciler: !1,
          };
        function cs(e, t) {
          try {
            var n = "",
              r = t;
            do {
              (n += Z(r)), (r = r.return);
            } while (r);
            var i = n;
          } catch (a) {
            i = "\nError generating stack: " + a.message + "\n" + a.stack;
          }
          return { value: e, source: t, stack: i, digest: null };
        }
        function ds(e, t, n) {
          return {
            value: e,
            source: null,
            stack: null != n ? n : null,
            digest: null != t ? t : null,
          };
        }
        function fs(e, t) {
          try {
            console.error(t.value);
          } catch (n) {
            setTimeout(function () {
              throw n;
            });
          }
        }
        var hs = "function" === typeof WeakMap ? WeakMap : Map;
        function ps(e, t, n) {
          ((n = Ia(-1, n)).tag = 3), (n.payload = { element: null });
          var r = t.value;
          return (
            (n.callback = function () {
              Wl || ((Wl = !0), (jl = r)), fs(0, t);
            }),
            n
          );
        }
        function vs(e, t, n) {
          (n = Ia(-1, n)).tag = 3;
          var r = e.type.getDerivedStateFromError;
          if ("function" === typeof r) {
            var i = t.value;
            (n.payload = function () {
              return r(i);
            }),
              (n.callback = function () {
                fs(0, t);
              });
          }
          var a = e.stateNode;
          return (
            null !== a &&
              "function" === typeof a.componentDidCatch &&
              (n.callback = function () {
                fs(0, t),
                  "function" !== typeof r &&
                    (null === Xl ? (Xl = new Set([this])) : Xl.add(this));
                var e = t.stack;
                this.componentDidCatch(t.value, {
                  componentStack: null !== e ? e : "",
                });
              }),
            n
          );
        }
        function ms(e, t, n) {
          var r = e.pingCache;
          if (null === r) {
            r = e.pingCache = new hs();
            var i = new Set();
            r.set(t, i);
          } else void 0 === (i = r.get(t)) && ((i = new Set()), r.set(t, i));
          i.has(n) || (i.add(n), (e = ku.bind(null, e, t, n)), t.then(e, e));
        }
        function gs(e) {
          do {
            var t;
            if (
              ((t = 13 === e.tag) &&
                (t = null === (t = e.memoizedState) || null !== t.dehydrated),
              t)
            )
              return e;
            e = e.return;
          } while (null !== e);
          return null;
        }
        function ys(e, t, n, r, i) {
          return 0 === (1 & e.mode)
            ? (e === t
                ? (e.flags |= 65536)
                : ((e.flags |= 128),
                  (n.flags |= 131072),
                  (n.flags &= -52805),
                  1 === n.tag &&
                    (null === n.alternate
                      ? (n.tag = 17)
                      : (((t = Ia(-1, 1)).tag = 2), Na(n, t, 1))),
                  (n.lanes |= 1)),
              e)
            : ((e.flags |= 65536), (e.lanes = i), e);
        }
        var bs = _.ReactCurrentOwner,
          _s = !1;
        function xs(e, t, n, r) {
          t.child = null === e ? $a(t, null, n, r) : Ka(t, e.child, n, r);
        }
        function Ss(e, t, n, r, i) {
          n = n.render;
          var a = t.ref;
          return (
            Ma(t, i),
            (r = Mo(e, t, n, r, a, i)),
            (n = Eo()),
            null === e || _s
              ? (ia && n && ea(t), (t.flags |= 1), xs(e, t, r, i), t.child)
              : ((t.updateQueue = e.updateQueue),
                (t.flags &= -2053),
                (e.lanes &= ~i),
                Ws(e, t, i))
          );
        }
        function ws(e, t, n, r, i) {
          if (null === e) {
            var a = n.type;
            return "function" !== typeof a ||
              Iu(a) ||
              void 0 !== a.defaultProps ||
              null !== n.compare ||
              void 0 !== n.defaultProps
              ? (((e = Ou(n.type, null, r, t, t.mode, i)).ref = t.ref),
                (e.return = t),
                (t.child = e))
              : ((t.tag = 15), (t.type = a), Ms(e, t, a, r, i));
          }
          if (((a = e.child), 0 === (e.lanes & i))) {
            var o = a.memoizedProps;
            if (
              (n = null !== (n = n.compare) ? n : lr)(o, r) &&
              e.ref === t.ref
            )
              return Ws(e, t, i);
          }
          return (
            (t.flags |= 1),
            ((e = Nu(a, r)).ref = t.ref),
            (e.return = t),
            (t.child = e)
          );
        }
        function Ms(e, t, n, r, i) {
          if (null !== e) {
            var a = e.memoizedProps;
            if (lr(a, r) && e.ref === t.ref) {
              if (((_s = !1), (t.pendingProps = r = a), 0 === (e.lanes & i)))
                return (t.lanes = e.lanes), Ws(e, t, i);
              0 !== (131072 & e.flags) && (_s = !0);
            }
          }
          return Ts(e, t, n, r, i);
        }
        function Es(e, t, n) {
          var r = t.pendingProps,
            i = r.children,
            a = null !== e ? e.memoizedState : null;
          if ("hidden" === r.mode)
            if (0 === (1 & t.mode))
              (t.memoizedState = {
                baseLanes: 0,
                cachePool: null,
                transitions: null,
              }),
                ki(Nl, Il),
                (Il |= n);
            else {
              if (0 === (1073741824 & n))
                return (
                  (e = null !== a ? a.baseLanes | n : n),
                  (t.lanes = t.childLanes = 1073741824),
                  (t.memoizedState = {
                    baseLanes: e,
                    cachePool: null,
                    transitions: null,
                  }),
                  (t.updateQueue = null),
                  ki(Nl, Il),
                  (Il |= e),
                  null
                );
              (t.memoizedState = {
                baseLanes: 0,
                cachePool: null,
                transitions: null,
              }),
                (r = null !== a ? a.baseLanes : n),
                ki(Nl, Il),
                (Il |= r);
            }
          else
            null !== a
              ? ((r = a.baseLanes | n), (t.memoizedState = null))
              : (r = n),
              ki(Nl, Il),
              (Il |= r);
          return xs(e, t, i, n), t.child;
        }
        function ks(e, t) {
          var n = t.ref;
          ((null === e && null !== n) || (null !== e && e.ref !== n)) &&
            ((t.flags |= 512), (t.flags |= 2097152));
        }
        function Ts(e, t, n, r, i) {
          var a = Li(n) ? Pi : Ai.current;
          return (
            (a = Ri(t, a)),
            Ma(t, i),
            (n = Mo(e, t, n, r, a, i)),
            (r = Eo()),
            null === e || _s
              ? (ia && r && ea(t), (t.flags |= 1), xs(e, t, n, i), t.child)
              : ((t.updateQueue = e.updateQueue),
                (t.flags &= -2053),
                (e.lanes &= ~i),
                Ws(e, t, i))
          );
        }
        function As(e, t, n, r, i) {
          if (Li(n)) {
            var a = !0;
            Di(t);
          } else a = !1;
          if ((Ma(t, i), null === t.stateNode))
            Gs(e, t), Va(t, n, r), Wa(t, n, r, i), (r = !0);
          else if (null === e) {
            var o = t.stateNode,
              s = t.memoizedProps;
            o.props = s;
            var l = o.context,
              u = n.contextType;
            "object" === typeof u && null !== u
              ? (u = Ea(u))
              : (u = Ri(t, (u = Li(n) ? Pi : Ai.current)));
            var c = n.getDerivedStateFromProps,
              d =
                "function" === typeof c ||
                "function" === typeof o.getSnapshotBeforeUpdate;
            d ||
              ("function" !== typeof o.UNSAFE_componentWillReceiveProps &&
                "function" !== typeof o.componentWillReceiveProps) ||
              ((s !== r || l !== u) && Ga(t, o, r, u)),
              (Pa = !1);
            var f = t.memoizedState;
            (o.state = f),
              Ua(t, r, o, i),
              (l = t.memoizedState),
              s !== r || f !== l || Ci.current || Pa
                ? ("function" === typeof c &&
                    (Ba(t, n, c, r), (l = t.memoizedState)),
                  (s = Pa || Ha(t, n, s, r, f, l, u))
                    ? (d ||
                        ("function" !== typeof o.UNSAFE_componentWillMount &&
                          "function" !== typeof o.componentWillMount) ||
                        ("function" === typeof o.componentWillMount &&
                          o.componentWillMount(),
                        "function" === typeof o.UNSAFE_componentWillMount &&
                          o.UNSAFE_componentWillMount()),
                      "function" === typeof o.componentDidMount &&
                        (t.flags |= 4194308))
                    : ("function" === typeof o.componentDidMount &&
                        (t.flags |= 4194308),
                      (t.memoizedProps = r),
                      (t.memoizedState = l)),
                  (o.props = r),
                  (o.state = l),
                  (o.context = u),
                  (r = s))
                : ("function" === typeof o.componentDidMount &&
                    (t.flags |= 4194308),
                  (r = !1));
          } else {
            (o = t.stateNode),
              La(e, t),
              (s = t.memoizedProps),
              (u = t.type === t.elementType ? s : ma(t.type, s)),
              (o.props = u),
              (d = t.pendingProps),
              (f = o.context),
              "object" === typeof (l = n.contextType) && null !== l
                ? (l = Ea(l))
                : (l = Ri(t, (l = Li(n) ? Pi : Ai.current)));
            var h = n.getDerivedStateFromProps;
            (c =
              "function" === typeof h ||
              "function" === typeof o.getSnapshotBeforeUpdate) ||
              ("function" !== typeof o.UNSAFE_componentWillReceiveProps &&
                "function" !== typeof o.componentWillReceiveProps) ||
              ((s !== d || f !== l) && Ga(t, o, r, l)),
              (Pa = !1),
              (f = t.memoizedState),
              (o.state = f),
              Ua(t, r, o, i);
            var p = t.memoizedState;
            s !== d || f !== p || Ci.current || Pa
              ? ("function" === typeof h &&
                  (Ba(t, n, h, r), (p = t.memoizedState)),
                (u = Pa || Ha(t, n, u, r, f, p, l) || !1)
                  ? (c ||
                      ("function" !== typeof o.UNSAFE_componentWillUpdate &&
                        "function" !== typeof o.componentWillUpdate) ||
                      ("function" === typeof o.componentWillUpdate &&
                        o.componentWillUpdate(r, p, l),
                      "function" === typeof o.UNSAFE_componentWillUpdate &&
                        o.UNSAFE_componentWillUpdate(r, p, l)),
                    "function" === typeof o.componentDidUpdate &&
                      (t.flags |= 4),
                    "function" === typeof o.getSnapshotBeforeUpdate &&
                      (t.flags |= 1024))
                  : ("function" !== typeof o.componentDidUpdate ||
                      (s === e.memoizedProps && f === e.memoizedState) ||
                      (t.flags |= 4),
                    "function" !== typeof o.getSnapshotBeforeUpdate ||
                      (s === e.memoizedProps && f === e.memoizedState) ||
                      (t.flags |= 1024),
                    (t.memoizedProps = r),
                    (t.memoizedState = p)),
                (o.props = r),
                (o.state = p),
                (o.context = l),
                (r = u))
              : ("function" !== typeof o.componentDidUpdate ||
                  (s === e.memoizedProps && f === e.memoizedState) ||
                  (t.flags |= 4),
                "function" !== typeof o.getSnapshotBeforeUpdate ||
                  (s === e.memoizedProps && f === e.memoizedState) ||
                  (t.flags |= 1024),
                (r = !1));
          }
          return Cs(e, t, n, r, a, i);
        }
        function Cs(e, t, n, r, i, a) {
          ks(e, t);
          var o = 0 !== (128 & t.flags);
          if (!r && !o) return i && Ui(t, n, !1), Ws(e, t, a);
          (r = t.stateNode), (bs.current = t);
          var s =
            o && "function" !== typeof n.getDerivedStateFromError
              ? null
              : r.render();
          return (
            (t.flags |= 1),
            null !== e && o
              ? ((t.child = Ka(t, e.child, null, a)),
                (t.child = Ka(t, null, s, a)))
              : xs(e, t, s, a),
            (t.memoizedState = r.state),
            i && Ui(t, n, !0),
            t.child
          );
        }
        function Ps(e) {
          var t = e.stateNode;
          t.pendingContext
            ? Ni(0, t.pendingContext, t.pendingContext !== t.context)
            : t.context && Ni(0, t.context, !1),
            ro(e, t.containerInfo);
        }
        function Rs(e, t, n, r, i) {
          return ha(), pa(i), (t.flags |= 256), xs(e, t, n, r), t.child;
        }
        var Ls,
          Is,
          Ns,
          Os,
          Ds = { dehydrated: null, treeContext: null, retryLane: 0 };
        function Us(e) {
          return { baseLanes: e, cachePool: null, transitions: null };
        }
        function zs(e, t, n) {
          var r,
            i = t.pendingProps,
            o = so.current,
            s = !1,
            l = 0 !== (128 & t.flags);
          if (
            ((r = l) ||
              (r = (null === e || null !== e.memoizedState) && 0 !== (2 & o)),
            r
              ? ((s = !0), (t.flags &= -129))
              : (null !== e && null === e.memoizedState) || (o |= 1),
            ki(so, 1 & o),
            null === e)
          )
            return (
              ua(t),
              null !== (e = t.memoizedState) && null !== (e = e.dehydrated)
                ? (0 === (1 & t.mode)
                    ? (t.lanes = 1)
                    : "$!" === e.data
                    ? (t.lanes = 8)
                    : (t.lanes = 1073741824),
                  null)
                : ((l = i.children),
                  (e = i.fallback),
                  s
                    ? ((i = t.mode),
                      (s = t.child),
                      (l = { mode: "hidden", children: l }),
                      0 === (1 & i) && null !== s
                        ? ((s.childLanes = 0), (s.pendingProps = l))
                        : (s = Uu(l, i, 0, null)),
                      (e = Du(e, i, n, null)),
                      (s.return = t),
                      (e.return = t),
                      (s.sibling = e),
                      (t.child = s),
                      (t.child.memoizedState = Us(n)),
                      (t.memoizedState = Ds),
                      e)
                    : Fs(t, l))
            );
          if (null !== (o = e.memoizedState) && null !== (r = o.dehydrated))
            return (function (e, t, n, r, i, o, s) {
              if (n)
                return 256 & t.flags
                  ? ((t.flags &= -257), Bs(e, t, s, (r = ds(Error(a(422))))))
                  : null !== t.memoizedState
                  ? ((t.child = e.child), (t.flags |= 128), null)
                  : ((o = r.fallback),
                    (i = t.mode),
                    (r = Uu(
                      { mode: "visible", children: r.children },
                      i,
                      0,
                      null
                    )),
                    ((o = Du(o, i, s, null)).flags |= 2),
                    (r.return = t),
                    (o.return = t),
                    (r.sibling = o),
                    (t.child = r),
                    0 !== (1 & t.mode) && Ka(t, e.child, null, s),
                    (t.child.memoizedState = Us(s)),
                    (t.memoizedState = Ds),
                    o);
              if (0 === (1 & t.mode)) return Bs(e, t, s, null);
              if ("$!" === i.data) {
                if ((r = i.nextSibling && i.nextSibling.dataset))
                  var l = r.dgst;
                return (
                  (r = l), Bs(e, t, s, (r = ds((o = Error(a(419))), r, void 0)))
                );
              }
              if (((l = 0 !== (s & e.childLanes)), _s || l)) {
                if (null !== (r = Pl)) {
                  switch (s & -s) {
                    case 4:
                      i = 2;
                      break;
                    case 16:
                      i = 8;
                      break;
                    case 64:
                    case 128:
                    case 256:
                    case 512:
                    case 1024:
                    case 2048:
                    case 4096:
                    case 8192:
                    case 16384:
                    case 32768:
                    case 65536:
                    case 131072:
                    case 262144:
                    case 524288:
                    case 1048576:
                    case 2097152:
                    case 4194304:
                    case 8388608:
                    case 16777216:
                    case 33554432:
                    case 67108864:
                      i = 32;
                      break;
                    case 536870912:
                      i = 268435456;
                      break;
                    default:
                      i = 0;
                  }
                  0 !== (i = 0 !== (i & (r.suspendedLanes | s)) ? 0 : i) &&
                    i !== o.retryLane &&
                    ((o.retryLane = i), Ca(e, i), ru(r, e, i, -1));
                }
                return mu(), Bs(e, t, s, (r = ds(Error(a(421)))));
              }
              return "$?" === i.data
                ? ((t.flags |= 128),
                  (t.child = e.child),
                  (t = Au.bind(null, e)),
                  (i._reactRetry = t),
                  null)
                : ((e = o.treeContext),
                  (ra = ui(i.nextSibling)),
                  (na = t),
                  (ia = !0),
                  (aa = null),
                  null !== e &&
                    ((Xi[qi++] = Ki),
                    (Xi[qi++] = $i),
                    (Xi[qi++] = Yi),
                    (Ki = e.id),
                    ($i = e.overflow),
                    (Yi = t)),
                  (t = Fs(t, r.children)),
                  (t.flags |= 4096),
                  t);
            })(e, t, l, i, r, o, n);
          if (s) {
            (s = i.fallback), (l = t.mode), (r = (o = e.child).sibling);
            var u = { mode: "hidden", children: i.children };
            return (
              0 === (1 & l) && t.child !== o
                ? (((i = t.child).childLanes = 0),
                  (i.pendingProps = u),
                  (t.deletions = null))
                : ((i = Nu(o, u)).subtreeFlags = 14680064 & o.subtreeFlags),
              null !== r
                ? (s = Nu(r, s))
                : ((s = Du(s, l, n, null)).flags |= 2),
              (s.return = t),
              (i.return = t),
              (i.sibling = s),
              (t.child = i),
              (i = s),
              (s = t.child),
              (l =
                null === (l = e.child.memoizedState)
                  ? Us(n)
                  : {
                      baseLanes: l.baseLanes | n,
                      cachePool: null,
                      transitions: l.transitions,
                    }),
              (s.memoizedState = l),
              (s.childLanes = e.childLanes & ~n),
              (t.memoizedState = Ds),
              i
            );
          }
          return (
            (e = (s = e.child).sibling),
            (i = Nu(s, { mode: "visible", children: i.children })),
            0 === (1 & t.mode) && (i.lanes = n),
            (i.return = t),
            (i.sibling = null),
            null !== e &&
              (null === (n = t.deletions)
                ? ((t.deletions = [e]), (t.flags |= 16))
                : n.push(e)),
            (t.child = i),
            (t.memoizedState = null),
            i
          );
        }
        function Fs(e, t) {
          return (
            ((t = Uu(
              { mode: "visible", children: t },
              e.mode,
              0,
              null
            )).return = e),
            (e.child = t)
          );
        }
        function Bs(e, t, n, r) {
          return (
            null !== r && pa(r),
            Ka(t, e.child, null, n),
            ((e = Fs(t, t.pendingProps.children)).flags |= 2),
            (t.memoizedState = null),
            e
          );
        }
        function Zs(e, t, n) {
          e.lanes |= t;
          var r = e.alternate;
          null !== r && (r.lanes |= t), wa(e.return, t, n);
        }
        function Hs(e, t, n, r, i) {
          var a = e.memoizedState;
          null === a
            ? (e.memoizedState = {
                isBackwards: t,
                rendering: null,
                renderingStartTime: 0,
                last: r,
                tail: n,
                tailMode: i,
              })
            : ((a.isBackwards = t),
              (a.rendering = null),
              (a.renderingStartTime = 0),
              (a.last = r),
              (a.tail = n),
              (a.tailMode = i));
        }
        function Vs(e, t, n) {
          var r = t.pendingProps,
            i = r.revealOrder,
            a = r.tail;
          if ((xs(e, t, r.children, n), 0 !== (2 & (r = so.current))))
            (r = (1 & r) | 2), (t.flags |= 128);
          else {
            if (null !== e && 0 !== (128 & e.flags))
              e: for (e = t.child; null !== e; ) {
                if (13 === e.tag) null !== e.memoizedState && Zs(e, n, t);
                else if (19 === e.tag) Zs(e, n, t);
                else if (null !== e.child) {
                  (e.child.return = e), (e = e.child);
                  continue;
                }
                if (e === t) break e;
                for (; null === e.sibling; ) {
                  if (null === e.return || e.return === t) break e;
                  e = e.return;
                }
                (e.sibling.return = e.return), (e = e.sibling);
              }
            r &= 1;
          }
          if ((ki(so, r), 0 === (1 & t.mode))) t.memoizedState = null;
          else
            switch (i) {
              case "forwards":
                for (n = t.child, i = null; null !== n; )
                  null !== (e = n.alternate) && null === lo(e) && (i = n),
                    (n = n.sibling);
                null === (n = i)
                  ? ((i = t.child), (t.child = null))
                  : ((i = n.sibling), (n.sibling = null)),
                  Hs(t, !1, i, n, a);
                break;
              case "backwards":
                for (n = null, i = t.child, t.child = null; null !== i; ) {
                  if (null !== (e = i.alternate) && null === lo(e)) {
                    t.child = i;
                    break;
                  }
                  (e = i.sibling), (i.sibling = n), (n = i), (i = e);
                }
                Hs(t, !0, n, null, a);
                break;
              case "together":
                Hs(t, !1, null, null, void 0);
                break;
              default:
                t.memoizedState = null;
            }
          return t.child;
        }
        function Gs(e, t) {
          0 === (1 & t.mode) &&
            null !== e &&
            ((e.alternate = null), (t.alternate = null), (t.flags |= 2));
        }
        function Ws(e, t, n) {
          if (
            (null !== e && (t.dependencies = e.dependencies),
            (Ul |= t.lanes),
            0 === (n & t.childLanes))
          )
            return null;
          if (null !== e && t.child !== e.child) throw Error(a(153));
          if (null !== t.child) {
            for (
              n = Nu((e = t.child), e.pendingProps), t.child = n, n.return = t;
              null !== e.sibling;

            )
              (e = e.sibling),
                ((n = n.sibling = Nu(e, e.pendingProps)).return = t);
            n.sibling = null;
          }
          return t.child;
        }
        function js(e, t) {
          if (!ia)
            switch (e.tailMode) {
              case "hidden":
                t = e.tail;
                for (var n = null; null !== t; )
                  null !== t.alternate && (n = t), (t = t.sibling);
                null === n ? (e.tail = null) : (n.sibling = null);
                break;
              case "collapsed":
                n = e.tail;
                for (var r = null; null !== n; )
                  null !== n.alternate && (r = n), (n = n.sibling);
                null === r
                  ? t || null === e.tail
                    ? (e.tail = null)
                    : (e.tail.sibling = null)
                  : (r.sibling = null);
            }
        }
        function Xs(e) {
          var t = null !== e.alternate && e.alternate.child === e.child,
            n = 0,
            r = 0;
          if (t)
            for (var i = e.child; null !== i; )
              (n |= i.lanes | i.childLanes),
                (r |= 14680064 & i.subtreeFlags),
                (r |= 14680064 & i.flags),
                (i.return = e),
                (i = i.sibling);
          else
            for (i = e.child; null !== i; )
              (n |= i.lanes | i.childLanes),
                (r |= i.subtreeFlags),
                (r |= i.flags),
                (i.return = e),
                (i = i.sibling);
          return (e.subtreeFlags |= r), (e.childLanes = n), t;
        }
        function qs(e, t, n) {
          var r = t.pendingProps;
          switch ((ta(t), t.tag)) {
            case 2:
            case 16:
            case 15:
            case 0:
            case 11:
            case 7:
            case 8:
            case 12:
            case 9:
            case 14:
              return Xs(t), null;
            case 1:
            case 17:
              return Li(t.type) && Ii(), Xs(t), null;
            case 3:
              return (
                (r = t.stateNode),
                io(),
                Ei(Ci),
                Ei(Ai),
                co(),
                r.pendingContext &&
                  ((r.context = r.pendingContext), (r.pendingContext = null)),
                (null !== e && null !== e.child) ||
                  (da(t)
                    ? (t.flags |= 4)
                    : null === e ||
                      (e.memoizedState.isDehydrated && 0 === (256 & t.flags)) ||
                      ((t.flags |= 1024),
                      null !== aa && (su(aa), (aa = null)))),
                Is(e, t),
                Xs(t),
                null
              );
            case 5:
              oo(t);
              var i = no(to.current);
              if (((n = t.type), null !== e && null != t.stateNode))
                Ns(e, t, n, r, i),
                  e.ref !== t.ref && ((t.flags |= 512), (t.flags |= 2097152));
              else {
                if (!r) {
                  if (null === t.stateNode) throw Error(a(166));
                  return Xs(t), null;
                }
                if (((e = no(Qa.current)), da(t))) {
                  (r = t.stateNode), (n = t.type);
                  var o = t.memoizedProps;
                  switch (
                    ((r[fi] = t), (r[hi] = o), (e = 0 !== (1 & t.mode)), n)
                  ) {
                    case "dialog":
                      Fr("cancel", r), Fr("close", r);
                      break;
                    case "iframe":
                    case "object":
                    case "embed":
                      Fr("load", r);
                      break;
                    case "video":
                    case "audio":
                      for (i = 0; i < Or.length; i++) Fr(Or[i], r);
                      break;
                    case "source":
                      Fr("error", r);
                      break;
                    case "img":
                    case "image":
                    case "link":
                      Fr("error", r), Fr("load", r);
                      break;
                    case "details":
                      Fr("toggle", r);
                      break;
                    case "input":
                      K(r, o), Fr("invalid", r);
                      break;
                    case "select":
                      (r._wrapperState = { wasMultiple: !!o.multiple }),
                        Fr("invalid", r);
                      break;
                    case "textarea":
                      ie(r, o), Fr("invalid", r);
                  }
                  for (var l in (ye(n, o), (i = null), o))
                    if (o.hasOwnProperty(l)) {
                      var u = o[l];
                      "children" === l
                        ? "string" === typeof u
                          ? r.textContent !== u &&
                            (!0 !== o.suppressHydrationWarning &&
                              Jr(r.textContent, u, e),
                            (i = ["children", u]))
                          : "number" === typeof u &&
                            r.textContent !== "" + u &&
                            (!0 !== o.suppressHydrationWarning &&
                              Jr(r.textContent, u, e),
                            (i = ["children", "" + u]))
                        : s.hasOwnProperty(l) &&
                          null != u &&
                          "onScroll" === l &&
                          Fr("scroll", r);
                    }
                  switch (n) {
                    case "input":
                      j(r), Q(r, o, !0);
                      break;
                    case "textarea":
                      j(r), oe(r);
                      break;
                    case "select":
                    case "option":
                      break;
                    default:
                      "function" === typeof o.onClick && (r.onclick = Qr);
                  }
                  (r = i), (t.updateQueue = r), null !== r && (t.flags |= 4);
                } else {
                  (l = 9 === i.nodeType ? i : i.ownerDocument),
                    "http://www.w3.org/1999/xhtml" === e && (e = se(n)),
                    "http://www.w3.org/1999/xhtml" === e
                      ? "script" === n
                        ? (((e = l.createElement("div")).innerHTML =
                            "<script></script>"),
                          (e = e.removeChild(e.firstChild)))
                        : "string" === typeof r.is
                        ? (e = l.createElement(n, { is: r.is }))
                        : ((e = l.createElement(n)),
                          "select" === n &&
                            ((l = e),
                            r.multiple
                              ? (l.multiple = !0)
                              : r.size && (l.size = r.size)))
                      : (e = l.createElementNS(e, n)),
                    (e[fi] = t),
                    (e[hi] = r),
                    Ls(e, t, !1, !1),
                    (t.stateNode = e);
                  e: {
                    switch (((l = be(n, r)), n)) {
                      case "dialog":
                        Fr("cancel", e), Fr("close", e), (i = r);
                        break;
                      case "iframe":
                      case "object":
                      case "embed":
                        Fr("load", e), (i = r);
                        break;
                      case "video":
                      case "audio":
                        for (i = 0; i < Or.length; i++) Fr(Or[i], e);
                        i = r;
                        break;
                      case "source":
                        Fr("error", e), (i = r);
                        break;
                      case "img":
                      case "image":
                      case "link":
                        Fr("error", e), Fr("load", e), (i = r);
                        break;
                      case "details":
                        Fr("toggle", e), (i = r);
                        break;
                      case "input":
                        K(e, r), (i = Y(e, r)), Fr("invalid", e);
                        break;
                      case "option":
                      default:
                        i = r;
                        break;
                      case "select":
                        (e._wrapperState = { wasMultiple: !!r.multiple }),
                          (i = U({}, r, { value: void 0 })),
                          Fr("invalid", e);
                        break;
                      case "textarea":
                        ie(e, r), (i = re(e, r)), Fr("invalid", e);
                    }
                    for (o in (ye(n, i), (u = i)))
                      if (u.hasOwnProperty(o)) {
                        var c = u[o];
                        "style" === o
                          ? me(e, c)
                          : "dangerouslySetInnerHTML" === o
                          ? null != (c = c ? c.__html : void 0) && de(e, c)
                          : "children" === o
                          ? "string" === typeof c
                            ? ("textarea" !== n || "" !== c) && fe(e, c)
                            : "number" === typeof c && fe(e, "" + c)
                          : "suppressContentEditableWarning" !== o &&
                            "suppressHydrationWarning" !== o &&
                            "autoFocus" !== o &&
                            (s.hasOwnProperty(o)
                              ? null != c && "onScroll" === o && Fr("scroll", e)
                              : null != c && b(e, o, c, l));
                      }
                    switch (n) {
                      case "input":
                        j(e), Q(e, r, !1);
                        break;
                      case "textarea":
                        j(e), oe(e);
                        break;
                      case "option":
                        null != r.value &&
                          e.setAttribute("value", "" + G(r.value));
                        break;
                      case "select":
                        (e.multiple = !!r.multiple),
                          null != (o = r.value)
                            ? ne(e, !!r.multiple, o, !1)
                            : null != r.defaultValue &&
                              ne(e, !!r.multiple, r.defaultValue, !0);
                        break;
                      default:
                        "function" === typeof i.onClick && (e.onclick = Qr);
                    }
                    switch (n) {
                      case "button":
                      case "input":
                      case "select":
                      case "textarea":
                        r = !!r.autoFocus;
                        break e;
                      case "img":
                        r = !0;
                        break e;
                      default:
                        r = !1;
                    }
                  }
                  r && (t.flags |= 4);
                }
                null !== t.ref && ((t.flags |= 512), (t.flags |= 2097152));
              }
              return Xs(t), null;
            case 6:
              if (e && null != t.stateNode) Os(e, t, e.memoizedProps, r);
              else {
                if ("string" !== typeof r && null === t.stateNode)
                  throw Error(a(166));
                if (((n = no(to.current)), no(Qa.current), da(t))) {
                  if (
                    ((r = t.stateNode),
                    (n = t.memoizedProps),
                    (r[fi] = t),
                    (o = r.nodeValue !== n) && null !== (e = na))
                  )
                    switch (e.tag) {
                      case 3:
                        Jr(r.nodeValue, n, 0 !== (1 & e.mode));
                        break;
                      case 5:
                        !0 !== e.memoizedProps.suppressHydrationWarning &&
                          Jr(r.nodeValue, n, 0 !== (1 & e.mode));
                    }
                  o && (t.flags |= 4);
                } else
                  ((r = (9 === n.nodeType ? n : n.ownerDocument).createTextNode(
                    r
                  ))[fi] = t),
                    (t.stateNode = r);
              }
              return Xs(t), null;
            case 13:
              if (
                (Ei(so),
                (r = t.memoizedState),
                null === e ||
                  (null !== e.memoizedState &&
                    null !== e.memoizedState.dehydrated))
              ) {
                if (
                  ia &&
                  null !== ra &&
                  0 !== (1 & t.mode) &&
                  0 === (128 & t.flags)
                )
                  fa(), ha(), (t.flags |= 98560), (o = !1);
                else if (((o = da(t)), null !== r && null !== r.dehydrated)) {
                  if (null === e) {
                    if (!o) throw Error(a(318));
                    if (
                      !(o =
                        null !== (o = t.memoizedState) ? o.dehydrated : null)
                    )
                      throw Error(a(317));
                    o[fi] = t;
                  } else
                    ha(),
                      0 === (128 & t.flags) && (t.memoizedState = null),
                      (t.flags |= 4);
                  Xs(t), (o = !1);
                } else null !== aa && (su(aa), (aa = null)), (o = !0);
                if (!o) return 65536 & t.flags ? t : null;
              }
              return 0 !== (128 & t.flags)
                ? ((t.lanes = n), t)
                : ((r = null !== r) !==
                    (null !== e && null !== e.memoizedState) &&
                    r &&
                    ((t.child.flags |= 8192),
                    0 !== (1 & t.mode) &&
                      (null === e || 0 !== (1 & so.current)
                        ? 0 === Ol && (Ol = 3)
                        : mu())),
                  null !== t.updateQueue && (t.flags |= 4),
                  Xs(t),
                  null);
            case 4:
              return (
                io(),
                Is(e, t),
                null === e && Hr(t.stateNode.containerInfo),
                Xs(t),
                null
              );
            case 10:
              return Sa(t.type._context), Xs(t), null;
            case 19:
              if ((Ei(so), null === (o = t.memoizedState))) return Xs(t), null;
              if (((r = 0 !== (128 & t.flags)), null === (l = o.rendering)))
                if (r) js(o, !1);
                else {
                  if (0 !== Ol || (null !== e && 0 !== (128 & e.flags)))
                    for (e = t.child; null !== e; ) {
                      if (null !== (l = lo(e))) {
                        for (
                          t.flags |= 128,
                            js(o, !1),
                            null !== (r = l.updateQueue) &&
                              ((t.updateQueue = r), (t.flags |= 4)),
                            t.subtreeFlags = 0,
                            r = n,
                            n = t.child;
                          null !== n;

                        )
                          (e = r),
                            ((o = n).flags &= 14680066),
                            null === (l = o.alternate)
                              ? ((o.childLanes = 0),
                                (o.lanes = e),
                                (o.child = null),
                                (o.subtreeFlags = 0),
                                (o.memoizedProps = null),
                                (o.memoizedState = null),
                                (o.updateQueue = null),
                                (o.dependencies = null),
                                (o.stateNode = null))
                              : ((o.childLanes = l.childLanes),
                                (o.lanes = l.lanes),
                                (o.child = l.child),
                                (o.subtreeFlags = 0),
                                (o.deletions = null),
                                (o.memoizedProps = l.memoizedProps),
                                (o.memoizedState = l.memoizedState),
                                (o.updateQueue = l.updateQueue),
                                (o.type = l.type),
                                (e = l.dependencies),
                                (o.dependencies =
                                  null === e
                                    ? null
                                    : {
                                        lanes: e.lanes,
                                        firstContext: e.firstContext,
                                      })),
                            (n = n.sibling);
                        return ki(so, (1 & so.current) | 2), t.child;
                      }
                      e = e.sibling;
                    }
                  null !== o.tail &&
                    $e() > Vl &&
                    ((t.flags |= 128),
                    (r = !0),
                    js(o, !1),
                    (t.lanes = 4194304));
                }
              else {
                if (!r)
                  if (null !== (e = lo(l))) {
                    if (
                      ((t.flags |= 128),
                      (r = !0),
                      null !== (n = e.updateQueue) &&
                        ((t.updateQueue = n), (t.flags |= 4)),
                      js(o, !0),
                      null === o.tail &&
                        "hidden" === o.tailMode &&
                        !l.alternate &&
                        !ia)
                    )
                      return Xs(t), null;
                  } else
                    2 * $e() - o.renderingStartTime > Vl &&
                      1073741824 !== n &&
                      ((t.flags |= 128),
                      (r = !0),
                      js(o, !1),
                      (t.lanes = 4194304));
                o.isBackwards
                  ? ((l.sibling = t.child), (t.child = l))
                  : (null !== (n = o.last) ? (n.sibling = l) : (t.child = l),
                    (o.last = l));
              }
              return null !== o.tail
                ? ((t = o.tail),
                  (o.rendering = t),
                  (o.tail = t.sibling),
                  (o.renderingStartTime = $e()),
                  (t.sibling = null),
                  (n = so.current),
                  ki(so, r ? (1 & n) | 2 : 1 & n),
                  t)
                : (Xs(t), null);
            case 22:
            case 23:
              return (
                fu(),
                (r = null !== t.memoizedState),
                null !== e &&
                  (null !== e.memoizedState) !== r &&
                  (t.flags |= 8192),
                r && 0 !== (1 & t.mode)
                  ? 0 !== (1073741824 & Il) &&
                    (Xs(t), 6 & t.subtreeFlags && (t.flags |= 8192))
                  : Xs(t),
                null
              );
            case 24:
            case 25:
              return null;
          }
          throw Error(a(156, t.tag));
        }
        function Ys(e, t) {
          switch ((ta(t), t.tag)) {
            case 1:
              return (
                Li(t.type) && Ii(),
                65536 & (e = t.flags)
                  ? ((t.flags = (-65537 & e) | 128), t)
                  : null
              );
            case 3:
              return (
                io(),
                Ei(Ci),
                Ei(Ai),
                co(),
                0 !== (65536 & (e = t.flags)) && 0 === (128 & e)
                  ? ((t.flags = (-65537 & e) | 128), t)
                  : null
              );
            case 5:
              return oo(t), null;
            case 13:
              if (
                (Ei(so),
                null !== (e = t.memoizedState) && null !== e.dehydrated)
              ) {
                if (null === t.alternate) throw Error(a(340));
                ha();
              }
              return 65536 & (e = t.flags)
                ? ((t.flags = (-65537 & e) | 128), t)
                : null;
            case 19:
              return Ei(so), null;
            case 4:
              return io(), null;
            case 10:
              return Sa(t.type._context), null;
            case 22:
            case 23:
              return fu(), null;
            default:
              return null;
          }
        }
        (Ls = function (e, t) {
          for (var n = t.child; null !== n; ) {
            if (5 === n.tag || 6 === n.tag) e.appendChild(n.stateNode);
            else if (4 !== n.tag && null !== n.child) {
              (n.child.return = n), (n = n.child);
              continue;
            }
            if (n === t) break;
            for (; null === n.sibling; ) {
              if (null === n.return || n.return === t) return;
              n = n.return;
            }
            (n.sibling.return = n.return), (n = n.sibling);
          }
        }),
          (Is = function () {}),
          (Ns = function (e, t, n, r) {
            var i = e.memoizedProps;
            if (i !== r) {
              (e = t.stateNode), no(Qa.current);
              var a,
                o = null;
              switch (n) {
                case "input":
                  (i = Y(e, i)), (r = Y(e, r)), (o = []);
                  break;
                case "select":
                  (i = U({}, i, { value: void 0 })),
                    (r = U({}, r, { value: void 0 })),
                    (o = []);
                  break;
                case "textarea":
                  (i = re(e, i)), (r = re(e, r)), (o = []);
                  break;
                default:
                  "function" !== typeof i.onClick &&
                    "function" === typeof r.onClick &&
                    (e.onclick = Qr);
              }
              for (c in (ye(n, r), (n = null), i))
                if (!r.hasOwnProperty(c) && i.hasOwnProperty(c) && null != i[c])
                  if ("style" === c) {
                    var l = i[c];
                    for (a in l)
                      l.hasOwnProperty(a) && (n || (n = {}), (n[a] = ""));
                  } else
                    "dangerouslySetInnerHTML" !== c &&
                      "children" !== c &&
                      "suppressContentEditableWarning" !== c &&
                      "suppressHydrationWarning" !== c &&
                      "autoFocus" !== c &&
                      (s.hasOwnProperty(c)
                        ? o || (o = [])
                        : (o = o || []).push(c, null));
              for (c in r) {
                var u = r[c];
                if (
                  ((l = null != i ? i[c] : void 0),
                  r.hasOwnProperty(c) && u !== l && (null != u || null != l))
                )
                  if ("style" === c)
                    if (l) {
                      for (a in l)
                        !l.hasOwnProperty(a) ||
                          (u && u.hasOwnProperty(a)) ||
                          (n || (n = {}), (n[a] = ""));
                      for (a in u)
                        u.hasOwnProperty(a) &&
                          l[a] !== u[a] &&
                          (n || (n = {}), (n[a] = u[a]));
                    } else n || (o || (o = []), o.push(c, n)), (n = u);
                  else
                    "dangerouslySetInnerHTML" === c
                      ? ((u = u ? u.__html : void 0),
                        (l = l ? l.__html : void 0),
                        null != u && l !== u && (o = o || []).push(c, u))
                      : "children" === c
                      ? ("string" !== typeof u && "number" !== typeof u) ||
                        (o = o || []).push(c, "" + u)
                      : "suppressContentEditableWarning" !== c &&
                        "suppressHydrationWarning" !== c &&
                        (s.hasOwnProperty(c)
                          ? (null != u && "onScroll" === c && Fr("scroll", e),
                            o || l === u || (o = []))
                          : (o = o || []).push(c, u));
              }
              n && (o = o || []).push("style", n);
              var c = o;
              (t.updateQueue = c) && (t.flags |= 4);
            }
          }),
          (Os = function (e, t, n, r) {
            n !== r && (t.flags |= 4);
          });
        var Ks = !1,
          $s = !1,
          Js = "function" === typeof WeakSet ? WeakSet : Set,
          Qs = null;
        function el(e, t) {
          var n = e.ref;
          if (null !== n)
            if ("function" === typeof n)
              try {
                n(null);
              } catch (r) {
                Eu(e, t, r);
              }
            else n.current = null;
        }
        function tl(e, t, n) {
          try {
            n();
          } catch (r) {
            Eu(e, t, r);
          }
        }
        var nl = !1;
        function rl(e, t, n) {
          var r = t.updateQueue;
          if (null !== (r = null !== r ? r.lastEffect : null)) {
            var i = (r = r.next);
            do {
              if ((i.tag & e) === e) {
                var a = i.destroy;
                (i.destroy = void 0), void 0 !== a && tl(t, n, a);
              }
              i = i.next;
            } while (i !== r);
          }
        }
        function il(e, t) {
          if (
            null !== (t = null !== (t = t.updateQueue) ? t.lastEffect : null)
          ) {
            var n = (t = t.next);
            do {
              if ((n.tag & e) === e) {
                var r = n.create;
                n.destroy = r();
              }
              n = n.next;
            } while (n !== t);
          }
        }
        function al(e) {
          var t = e.ref;
          if (null !== t) {
            var n = e.stateNode;
            e.tag, (e = n), "function" === typeof t ? t(e) : (t.current = e);
          }
        }
        function ol(e) {
          var t = e.alternate;
          null !== t && ((e.alternate = null), ol(t)),
            (e.child = null),
            (e.deletions = null),
            (e.sibling = null),
            5 === e.tag &&
              null !== (t = e.stateNode) &&
              (delete t[fi],
              delete t[hi],
              delete t[vi],
              delete t[mi],
              delete t[gi]),
            (e.stateNode = null),
            (e.return = null),
            (e.dependencies = null),
            (e.memoizedProps = null),
            (e.memoizedState = null),
            (e.pendingProps = null),
            (e.stateNode = null),
            (e.updateQueue = null);
        }
        function sl(e) {
          return 5 === e.tag || 3 === e.tag || 4 === e.tag;
        }
        function ll(e) {
          e: for (;;) {
            for (; null === e.sibling; ) {
              if (null === e.return || sl(e.return)) return null;
              e = e.return;
            }
            for (
              e.sibling.return = e.return, e = e.sibling;
              5 !== e.tag && 6 !== e.tag && 18 !== e.tag;

            ) {
              if (2 & e.flags) continue e;
              if (null === e.child || 4 === e.tag) continue e;
              (e.child.return = e), (e = e.child);
            }
            if (!(2 & e.flags)) return e.stateNode;
          }
        }
        function ul(e, t, n) {
          var r = e.tag;
          if (5 === r || 6 === r)
            (e = e.stateNode),
              t
                ? 8 === n.nodeType
                  ? n.parentNode.insertBefore(e, t)
                  : n.insertBefore(e, t)
                : (8 === n.nodeType
                    ? (t = n.parentNode).insertBefore(e, n)
                    : (t = n).appendChild(e),
                  (null !== (n = n._reactRootContainer) && void 0 !== n) ||
                    null !== t.onclick ||
                    (t.onclick = Qr));
          else if (4 !== r && null !== (e = e.child))
            for (ul(e, t, n), e = e.sibling; null !== e; )
              ul(e, t, n), (e = e.sibling);
        }
        function cl(e, t, n) {
          var r = e.tag;
          if (5 === r || 6 === r)
            (e = e.stateNode), t ? n.insertBefore(e, t) : n.appendChild(e);
          else if (4 !== r && null !== (e = e.child))
            for (cl(e, t, n), e = e.sibling; null !== e; )
              cl(e, t, n), (e = e.sibling);
        }
        var dl = null,
          fl = !1;
        function hl(e, t, n) {
          for (n = n.child; null !== n; ) pl(e, t, n), (n = n.sibling);
        }
        function pl(e, t, n) {
          if (at && "function" === typeof at.onCommitFiberUnmount)
            try {
              at.onCommitFiberUnmount(it, n);
            } catch (s) {}
          switch (n.tag) {
            case 5:
              $s || el(n, t);
            case 6:
              var r = dl,
                i = fl;
              (dl = null),
                hl(e, t, n),
                (fl = i),
                null !== (dl = r) &&
                  (fl
                    ? ((e = dl),
                      (n = n.stateNode),
                      8 === e.nodeType
                        ? e.parentNode.removeChild(n)
                        : e.removeChild(n))
                    : dl.removeChild(n.stateNode));
              break;
            case 18:
              null !== dl &&
                (fl
                  ? ((e = dl),
                    (n = n.stateNode),
                    8 === e.nodeType
                      ? li(e.parentNode, n)
                      : 1 === e.nodeType && li(e, n),
                    Ht(e))
                  : li(dl, n.stateNode));
              break;
            case 4:
              (r = dl),
                (i = fl),
                (dl = n.stateNode.containerInfo),
                (fl = !0),
                hl(e, t, n),
                (dl = r),
                (fl = i);
              break;
            case 0:
            case 11:
            case 14:
            case 15:
              if (
                !$s &&
                null !== (r = n.updateQueue) &&
                null !== (r = r.lastEffect)
              ) {
                i = r = r.next;
                do {
                  var a = i,
                    o = a.destroy;
                  (a = a.tag),
                    void 0 !== o &&
                      (0 !== (2 & a) || 0 !== (4 & a)) &&
                      tl(n, t, o),
                    (i = i.next);
                } while (i !== r);
              }
              hl(e, t, n);
              break;
            case 1:
              if (
                !$s &&
                (el(n, t),
                "function" === typeof (r = n.stateNode).componentWillUnmount)
              )
                try {
                  (r.props = n.memoizedProps),
                    (r.state = n.memoizedState),
                    r.componentWillUnmount();
                } catch (s) {
                  Eu(n, t, s);
                }
              hl(e, t, n);
              break;
            case 21:
              hl(e, t, n);
              break;
            case 22:
              1 & n.mode
                ? (($s = (r = $s) || null !== n.memoizedState),
                  hl(e, t, n),
                  ($s = r))
                : hl(e, t, n);
              break;
            default:
              hl(e, t, n);
          }
        }
        function vl(e) {
          var t = e.updateQueue;
          if (null !== t) {
            e.updateQueue = null;
            var n = e.stateNode;
            null === n && (n = e.stateNode = new Js()),
              t.forEach(function (t) {
                var r = Cu.bind(null, e, t);
                n.has(t) || (n.add(t), t.then(r, r));
              });
          }
        }
        function ml(e, t) {
          var n = t.deletions;
          if (null !== n)
            for (var r = 0; r < n.length; r++) {
              var i = n[r];
              try {
                var o = e,
                  s = t,
                  l = s;
                e: for (; null !== l; ) {
                  switch (l.tag) {
                    case 5:
                      (dl = l.stateNode), (fl = !1);
                      break e;
                    case 3:
                    case 4:
                      (dl = l.stateNode.containerInfo), (fl = !0);
                      break e;
                  }
                  l = l.return;
                }
                if (null === dl) throw Error(a(160));
                pl(o, s, i), (dl = null), (fl = !1);
                var u = i.alternate;
                null !== u && (u.return = null), (i.return = null);
              } catch (c) {
                Eu(i, t, c);
              }
            }
          if (12854 & t.subtreeFlags)
            for (t = t.child; null !== t; ) gl(t, e), (t = t.sibling);
        }
        function gl(e, t) {
          var n = e.alternate,
            r = e.flags;
          switch (e.tag) {
            case 0:
            case 11:
            case 14:
            case 15:
              if ((ml(t, e), yl(e), 4 & r)) {
                try {
                  rl(3, e, e.return), il(3, e);
                } catch (m) {
                  Eu(e, e.return, m);
                }
                try {
                  rl(5, e, e.return);
                } catch (m) {
                  Eu(e, e.return, m);
                }
              }
              break;
            case 1:
              ml(t, e), yl(e), 512 & r && null !== n && el(n, n.return);
              break;
            case 5:
              if (
                (ml(t, e),
                yl(e),
                512 & r && null !== n && el(n, n.return),
                32 & e.flags)
              ) {
                var i = e.stateNode;
                try {
                  fe(i, "");
                } catch (m) {
                  Eu(e, e.return, m);
                }
              }
              if (4 & r && null != (i = e.stateNode)) {
                var o = e.memoizedProps,
                  s = null !== n ? n.memoizedProps : o,
                  l = e.type,
                  u = e.updateQueue;
                if (((e.updateQueue = null), null !== u))
                  try {
                    "input" === l &&
                      "radio" === o.type &&
                      null != o.name &&
                      $(i, o),
                      be(l, s);
                    var c = be(l, o);
                    for (s = 0; s < u.length; s += 2) {
                      var d = u[s],
                        f = u[s + 1];
                      "style" === d
                        ? me(i, f)
                        : "dangerouslySetInnerHTML" === d
                        ? de(i, f)
                        : "children" === d
                        ? fe(i, f)
                        : b(i, d, f, c);
                    }
                    switch (l) {
                      case "input":
                        J(i, o);
                        break;
                      case "textarea":
                        ae(i, o);
                        break;
                      case "select":
                        var h = i._wrapperState.wasMultiple;
                        i._wrapperState.wasMultiple = !!o.multiple;
                        var p = o.value;
                        null != p
                          ? ne(i, !!o.multiple, p, !1)
                          : h !== !!o.multiple &&
                            (null != o.defaultValue
                              ? ne(i, !!o.multiple, o.defaultValue, !0)
                              : ne(i, !!o.multiple, o.multiple ? [] : "", !1));
                    }
                    i[hi] = o;
                  } catch (m) {
                    Eu(e, e.return, m);
                  }
              }
              break;
            case 6:
              if ((ml(t, e), yl(e), 4 & r)) {
                if (null === e.stateNode) throw Error(a(162));
                (i = e.stateNode), (o = e.memoizedProps);
                try {
                  i.nodeValue = o;
                } catch (m) {
                  Eu(e, e.return, m);
                }
              }
              break;
            case 3:
              if (
                (ml(t, e),
                yl(e),
                4 & r && null !== n && n.memoizedState.isDehydrated)
              )
                try {
                  Ht(t.containerInfo);
                } catch (m) {
                  Eu(e, e.return, m);
                }
              break;
            case 4:
            default:
              ml(t, e), yl(e);
              break;
            case 13:
              ml(t, e),
                yl(e),
                8192 & (i = e.child).flags &&
                  ((o = null !== i.memoizedState),
                  (i.stateNode.isHidden = o),
                  !o ||
                    (null !== i.alternate &&
                      null !== i.alternate.memoizedState) ||
                    (Hl = $e())),
                4 & r && vl(e);
              break;
            case 22:
              if (
                ((d = null !== n && null !== n.memoizedState),
                1 & e.mode
                  ? (($s = (c = $s) || d), ml(t, e), ($s = c))
                  : ml(t, e),
                yl(e),
                8192 & r)
              ) {
                if (
                  ((c = null !== e.memoizedState),
                  (e.stateNode.isHidden = c) && !d && 0 !== (1 & e.mode))
                )
                  for (Qs = e, d = e.child; null !== d; ) {
                    for (f = Qs = d; null !== Qs; ) {
                      switch (((p = (h = Qs).child), h.tag)) {
                        case 0:
                        case 11:
                        case 14:
                        case 15:
                          rl(4, h, h.return);
                          break;
                        case 1:
                          el(h, h.return);
                          var v = h.stateNode;
                          if ("function" === typeof v.componentWillUnmount) {
                            (r = h), (n = h.return);
                            try {
                              (t = r),
                                (v.props = t.memoizedProps),
                                (v.state = t.memoizedState),
                                v.componentWillUnmount();
                            } catch (m) {
                              Eu(r, n, m);
                            }
                          }
                          break;
                        case 5:
                          el(h, h.return);
                          break;
                        case 22:
                          if (null !== h.memoizedState) {
                            Sl(f);
                            continue;
                          }
                      }
                      null !== p ? ((p.return = h), (Qs = p)) : Sl(f);
                    }
                    d = d.sibling;
                  }
                e: for (d = null, f = e; ; ) {
                  if (5 === f.tag) {
                    if (null === d) {
                      d = f;
                      try {
                        (i = f.stateNode),
                          c
                            ? "function" === typeof (o = i.style).setProperty
                              ? o.setProperty("display", "none", "important")
                              : (o.display = "none")
                            : ((l = f.stateNode),
                              (s =
                                void 0 !== (u = f.memoizedProps.style) &&
                                null !== u &&
                                u.hasOwnProperty("display")
                                  ? u.display
                                  : null),
                              (l.style.display = ve("display", s)));
                      } catch (m) {
                        Eu(e, e.return, m);
                      }
                    }
                  } else if (6 === f.tag) {
                    if (null === d)
                      try {
                        f.stateNode.nodeValue = c ? "" : f.memoizedProps;
                      } catch (m) {
                        Eu(e, e.return, m);
                      }
                  } else if (
                    ((22 !== f.tag && 23 !== f.tag) ||
                      null === f.memoizedState ||
                      f === e) &&
                    null !== f.child
                  ) {
                    (f.child.return = f), (f = f.child);
                    continue;
                  }
                  if (f === e) break e;
                  for (; null === f.sibling; ) {
                    if (null === f.return || f.return === e) break e;
                    d === f && (d = null), (f = f.return);
                  }
                  d === f && (d = null),
                    (f.sibling.return = f.return),
                    (f = f.sibling);
                }
              }
              break;
            case 19:
              ml(t, e), yl(e), 4 & r && vl(e);
            case 21:
          }
        }
        function yl(e) {
          var t = e.flags;
          if (2 & t) {
            try {
              e: {
                for (var n = e.return; null !== n; ) {
                  if (sl(n)) {
                    var r = n;
                    break e;
                  }
                  n = n.return;
                }
                throw Error(a(160));
              }
              switch (r.tag) {
                case 5:
                  var i = r.stateNode;
                  32 & r.flags && (fe(i, ""), (r.flags &= -33)),
                    cl(e, ll(e), i);
                  break;
                case 3:
                case 4:
                  var o = r.stateNode.containerInfo;
                  ul(e, ll(e), o);
                  break;
                default:
                  throw Error(a(161));
              }
            } catch (s) {
              Eu(e, e.return, s);
            }
            e.flags &= -3;
          }
          4096 & t && (e.flags &= -4097);
        }
        function bl(e, t, n) {
          (Qs = e), _l(e, t, n);
        }
        function _l(e, t, n) {
          for (var r = 0 !== (1 & e.mode); null !== Qs; ) {
            var i = Qs,
              a = i.child;
            if (22 === i.tag && r) {
              var o = null !== i.memoizedState || Ks;
              if (!o) {
                var s = i.alternate,
                  l = (null !== s && null !== s.memoizedState) || $s;
                s = Ks;
                var u = $s;
                if (((Ks = o), ($s = l) && !u))
                  for (Qs = i; null !== Qs; )
                    (l = (o = Qs).child),
                      22 === o.tag && null !== o.memoizedState
                        ? wl(i)
                        : null !== l
                        ? ((l.return = o), (Qs = l))
                        : wl(i);
                for (; null !== a; ) (Qs = a), _l(a, t, n), (a = a.sibling);
                (Qs = i), (Ks = s), ($s = u);
              }
              xl(e);
            } else
              0 !== (8772 & i.subtreeFlags) && null !== a
                ? ((a.return = i), (Qs = a))
                : xl(e);
          }
        }
        function xl(e) {
          for (; null !== Qs; ) {
            var t = Qs;
            if (0 !== (8772 & t.flags)) {
              var n = t.alternate;
              try {
                if (0 !== (8772 & t.flags))
                  switch (t.tag) {
                    case 0:
                    case 11:
                    case 15:
                      $s || il(5, t);
                      break;
                    case 1:
                      var r = t.stateNode;
                      if (4 & t.flags && !$s)
                        if (null === n) r.componentDidMount();
                        else {
                          var i =
                            t.elementType === t.type
                              ? n.memoizedProps
                              : ma(t.type, n.memoizedProps);
                          r.componentDidUpdate(
                            i,
                            n.memoizedState,
                            r.__reactInternalSnapshotBeforeUpdate
                          );
                        }
                      var o = t.updateQueue;
                      null !== o && za(t, o, r);
                      break;
                    case 3:
                      var s = t.updateQueue;
                      if (null !== s) {
                        if (((n = null), null !== t.child))
                          switch (t.child.tag) {
                            case 5:
                            case 1:
                              n = t.child.stateNode;
                          }
                        za(t, s, n);
                      }
                      break;
                    case 5:
                      var l = t.stateNode;
                      if (null === n && 4 & t.flags) {
                        n = l;
                        var u = t.memoizedProps;
                        switch (t.type) {
                          case "button":
                          case "input":
                          case "select":
                          case "textarea":
                            u.autoFocus && n.focus();
                            break;
                          case "img":
                            u.src && (n.src = u.src);
                        }
                      }
                      break;
                    case 6:
                    case 4:
                    case 12:
                    case 19:
                    case 17:
                    case 21:
                    case 22:
                    case 23:
                    case 25:
                      break;
                    case 13:
                      if (null === t.memoizedState) {
                        var c = t.alternate;
                        if (null !== c) {
                          var d = c.memoizedState;
                          if (null !== d) {
                            var f = d.dehydrated;
                            null !== f && Ht(f);
                          }
                        }
                      }
                      break;
                    default:
                      throw Error(a(163));
                  }
                $s || (512 & t.flags && al(t));
              } catch (h) {
                Eu(t, t.return, h);
              }
            }
            if (t === e) {
              Qs = null;
              break;
            }
            if (null !== (n = t.sibling)) {
              (n.return = t.return), (Qs = n);
              break;
            }
            Qs = t.return;
          }
        }
        function Sl(e) {
          for (; null !== Qs; ) {
            var t = Qs;
            if (t === e) {
              Qs = null;
              break;
            }
            var n = t.sibling;
            if (null !== n) {
              (n.return = t.return), (Qs = n);
              break;
            }
            Qs = t.return;
          }
        }
        function wl(e) {
          for (; null !== Qs; ) {
            var t = Qs;
            try {
              switch (t.tag) {
                case 0:
                case 11:
                case 15:
                  var n = t.return;
                  try {
                    il(4, t);
                  } catch (l) {
                    Eu(t, n, l);
                  }
                  break;
                case 1:
                  var r = t.stateNode;
                  if ("function" === typeof r.componentDidMount) {
                    var i = t.return;
                    try {
                      r.componentDidMount();
                    } catch (l) {
                      Eu(t, i, l);
                    }
                  }
                  var a = t.return;
                  try {
                    al(t);
                  } catch (l) {
                    Eu(t, a, l);
                  }
                  break;
                case 5:
                  var o = t.return;
                  try {
                    al(t);
                  } catch (l) {
                    Eu(t, o, l);
                  }
              }
            } catch (l) {
              Eu(t, t.return, l);
            }
            if (t === e) {
              Qs = null;
              break;
            }
            var s = t.sibling;
            if (null !== s) {
              (s.return = t.return), (Qs = s);
              break;
            }
            Qs = t.return;
          }
        }
        var Ml,
          El = Math.ceil,
          kl = _.ReactCurrentDispatcher,
          Tl = _.ReactCurrentOwner,
          Al = _.ReactCurrentBatchConfig,
          Cl = 0,
          Pl = null,
          Rl = null,
          Ll = 0,
          Il = 0,
          Nl = Mi(0),
          Ol = 0,
          Dl = null,
          Ul = 0,
          zl = 0,
          Fl = 0,
          Bl = null,
          Zl = null,
          Hl = 0,
          Vl = 1 / 0,
          Gl = null,
          Wl = !1,
          jl = null,
          Xl = null,
          ql = !1,
          Yl = null,
          Kl = 0,
          $l = 0,
          Jl = null,
          Ql = -1,
          eu = 0;
        function tu() {
          return 0 !== (6 & Cl) ? $e() : -1 !== Ql ? Ql : (Ql = $e());
        }
        function nu(e) {
          return 0 === (1 & e.mode)
            ? 1
            : 0 !== (2 & Cl) && 0 !== Ll
            ? Ll & -Ll
            : null !== va.transition
            ? (0 === eu && (eu = vt()), eu)
            : 0 !== (e = bt)
            ? e
            : (e = void 0 === (e = window.event) ? 16 : Kt(e.type));
        }
        function ru(e, t, n, r) {
          if (50 < $l) throw (($l = 0), (Jl = null), Error(a(185)));
          gt(e, n, r),
            (0 !== (2 & Cl) && e === Pl) ||
              (e === Pl && (0 === (2 & Cl) && (zl |= n), 4 === Ol && lu(e, Ll)),
              iu(e, r),
              1 === n &&
                0 === Cl &&
                0 === (1 & t.mode) &&
                ((Vl = $e() + 500), Fi && Hi()));
        }
        function iu(e, t) {
          var n = e.callbackNode;
          !(function (e, t) {
            for (
              var n = e.suspendedLanes,
                r = e.pingedLanes,
                i = e.expirationTimes,
                a = e.pendingLanes;
              0 < a;

            ) {
              var o = 31 - ot(a),
                s = 1 << o,
                l = i[o];
              -1 === l
                ? (0 !== (s & n) && 0 === (s & r)) || (i[o] = ht(s, t))
                : l <= t && (e.expiredLanes |= s),
                (a &= ~s);
            }
          })(e, t);
          var r = ft(e, e === Pl ? Ll : 0);
          if (0 === r)
            null !== n && qe(n),
              (e.callbackNode = null),
              (e.callbackPriority = 0);
          else if (((t = r & -r), e.callbackPriority !== t)) {
            if ((null != n && qe(n), 1 === t))
              0 === e.tag
                ? (function (e) {
                    (Fi = !0), Zi(e);
                  })(uu.bind(null, e))
                : Zi(uu.bind(null, e)),
                oi(function () {
                  0 === (6 & Cl) && Hi();
                }),
                (n = null);
            else {
              switch (_t(r)) {
                case 1:
                  n = Qe;
                  break;
                case 4:
                  n = et;
                  break;
                case 16:
                default:
                  n = tt;
                  break;
                case 536870912:
                  n = rt;
              }
              n = Pu(n, au.bind(null, e));
            }
            (e.callbackPriority = t), (e.callbackNode = n);
          }
        }
        function au(e, t) {
          if (((Ql = -1), (eu = 0), 0 !== (6 & Cl))) throw Error(a(327));
          var n = e.callbackNode;
          if (wu() && e.callbackNode !== n) return null;
          var r = ft(e, e === Pl ? Ll : 0);
          if (0 === r) return null;
          if (0 !== (30 & r) || 0 !== (r & e.expiredLanes) || t) t = gu(e, r);
          else {
            t = r;
            var i = Cl;
            Cl |= 2;
            var o = vu();
            for (
              (Pl === e && Ll === t) ||
              ((Gl = null), (Vl = $e() + 500), hu(e, t));
              ;

            )
              try {
                bu();
                break;
              } catch (l) {
                pu(e, l);
              }
            xa(),
              (kl.current = o),
              (Cl = i),
              null !== Rl ? (t = 0) : ((Pl = null), (Ll = 0), (t = Ol));
          }
          if (0 !== t) {
            if (
              (2 === t && 0 !== (i = pt(e)) && ((r = i), (t = ou(e, i))),
              1 === t)
            )
              throw ((n = Dl), hu(e, 0), lu(e, r), iu(e, $e()), n);
            if (6 === t) lu(e, r);
            else {
              if (
                ((i = e.current.alternate),
                0 === (30 & r) &&
                  !(function (e) {
                    for (var t = e; ; ) {
                      if (16384 & t.flags) {
                        var n = t.updateQueue;
                        if (null !== n && null !== (n = n.stores))
                          for (var r = 0; r < n.length; r++) {
                            var i = n[r],
                              a = i.getSnapshot;
                            i = i.value;
                            try {
                              if (!sr(a(), i)) return !1;
                            } catch (s) {
                              return !1;
                            }
                          }
                      }
                      if (((n = t.child), 16384 & t.subtreeFlags && null !== n))
                        (n.return = t), (t = n);
                      else {
                        if (t === e) break;
                        for (; null === t.sibling; ) {
                          if (null === t.return || t.return === e) return !0;
                          t = t.return;
                        }
                        (t.sibling.return = t.return), (t = t.sibling);
                      }
                    }
                    return !0;
                  })(i) &&
                  (2 === (t = gu(e, r)) &&
                    0 !== (o = pt(e)) &&
                    ((r = o), (t = ou(e, o))),
                  1 === t))
              )
                throw ((n = Dl), hu(e, 0), lu(e, r), iu(e, $e()), n);
              switch (((e.finishedWork = i), (e.finishedLanes = r), t)) {
                case 0:
                case 1:
                  throw Error(a(345));
                case 2:
                case 5:
                  Su(e, Zl, Gl);
                  break;
                case 3:
                  if (
                    (lu(e, r),
                    (130023424 & r) === r && 10 < (t = Hl + 500 - $e()))
                  ) {
                    if (0 !== ft(e, 0)) break;
                    if (((i = e.suspendedLanes) & r) !== r) {
                      tu(), (e.pingedLanes |= e.suspendedLanes & i);
                      break;
                    }
                    e.timeoutHandle = ri(Su.bind(null, e, Zl, Gl), t);
                    break;
                  }
                  Su(e, Zl, Gl);
                  break;
                case 4:
                  if ((lu(e, r), (4194240 & r) === r)) break;
                  for (t = e.eventTimes, i = -1; 0 < r; ) {
                    var s = 31 - ot(r);
                    (o = 1 << s), (s = t[s]) > i && (i = s), (r &= ~o);
                  }
                  if (
                    ((r = i),
                    10 <
                      (r =
                        (120 > (r = $e() - r)
                          ? 120
                          : 480 > r
                          ? 480
                          : 1080 > r
                          ? 1080
                          : 1920 > r
                          ? 1920
                          : 3e3 > r
                          ? 3e3
                          : 4320 > r
                          ? 4320
                          : 1960 * El(r / 1960)) - r))
                  ) {
                    e.timeoutHandle = ri(Su.bind(null, e, Zl, Gl), r);
                    break;
                  }
                  Su(e, Zl, Gl);
                  break;
                default:
                  throw Error(a(329));
              }
            }
          }
          return iu(e, $e()), e.callbackNode === n ? au.bind(null, e) : null;
        }
        function ou(e, t) {
          var n = Bl;
          return (
            e.current.memoizedState.isDehydrated && (hu(e, t).flags |= 256),
            2 !== (e = gu(e, t)) && ((t = Zl), (Zl = n), null !== t && su(t)),
            e
          );
        }
        function su(e) {
          null === Zl ? (Zl = e) : Zl.push.apply(Zl, e);
        }
        function lu(e, t) {
          for (
            t &= ~Fl,
              t &= ~zl,
              e.suspendedLanes |= t,
              e.pingedLanes &= ~t,
              e = e.expirationTimes;
            0 < t;

          ) {
            var n = 31 - ot(t),
              r = 1 << n;
            (e[n] = -1), (t &= ~r);
          }
        }
        function uu(e) {
          if (0 !== (6 & Cl)) throw Error(a(327));
          wu();
          var t = ft(e, 0);
          if (0 === (1 & t)) return iu(e, $e()), null;
          var n = gu(e, t);
          if (0 !== e.tag && 2 === n) {
            var r = pt(e);
            0 !== r && ((t = r), (n = ou(e, r)));
          }
          if (1 === n) throw ((n = Dl), hu(e, 0), lu(e, t), iu(e, $e()), n);
          if (6 === n) throw Error(a(345));
          return (
            (e.finishedWork = e.current.alternate),
            (e.finishedLanes = t),
            Su(e, Zl, Gl),
            iu(e, $e()),
            null
          );
        }
        function cu(e, t) {
          var n = Cl;
          Cl |= 1;
          try {
            return e(t);
          } finally {
            0 === (Cl = n) && ((Vl = $e() + 500), Fi && Hi());
          }
        }
        function du(e) {
          null !== Yl && 0 === Yl.tag && 0 === (6 & Cl) && wu();
          var t = Cl;
          Cl |= 1;
          var n = Al.transition,
            r = bt;
          try {
            if (((Al.transition = null), (bt = 1), e)) return e();
          } finally {
            (bt = r), (Al.transition = n), 0 === (6 & (Cl = t)) && Hi();
          }
        }
        function fu() {
          (Il = Nl.current), Ei(Nl);
        }
        function hu(e, t) {
          (e.finishedWork = null), (e.finishedLanes = 0);
          var n = e.timeoutHandle;
          if ((-1 !== n && ((e.timeoutHandle = -1), ii(n)), null !== Rl))
            for (n = Rl.return; null !== n; ) {
              var r = n;
              switch ((ta(r), r.tag)) {
                case 1:
                  null !== (r = r.type.childContextTypes) &&
                    void 0 !== r &&
                    Ii();
                  break;
                case 3:
                  io(), Ei(Ci), Ei(Ai), co();
                  break;
                case 5:
                  oo(r);
                  break;
                case 4:
                  io();
                  break;
                case 13:
                case 19:
                  Ei(so);
                  break;
                case 10:
                  Sa(r.type._context);
                  break;
                case 22:
                case 23:
                  fu();
              }
              n = n.return;
            }
          if (
            ((Pl = e),
            (Rl = e = Nu(e.current, null)),
            (Ll = Il = t),
            (Ol = 0),
            (Dl = null),
            (Fl = zl = Ul = 0),
            (Zl = Bl = null),
            null !== ka)
          ) {
            for (t = 0; t < ka.length; t++)
              if (null !== (r = (n = ka[t]).interleaved)) {
                n.interleaved = null;
                var i = r.next,
                  a = n.pending;
                if (null !== a) {
                  var o = a.next;
                  (a.next = i), (r.next = o);
                }
                n.pending = r;
              }
            ka = null;
          }
          return e;
        }
        function pu(e, t) {
          for (;;) {
            var n = Rl;
            try {
              if ((xa(), (fo.current = os), yo)) {
                for (var r = vo.memoizedState; null !== r; ) {
                  var i = r.queue;
                  null !== i && (i.pending = null), (r = r.next);
                }
                yo = !1;
              }
              if (
                ((po = 0),
                (go = mo = vo = null),
                (bo = !1),
                (_o = 0),
                (Tl.current = null),
                null === n || null === n.return)
              ) {
                (Ol = 1), (Dl = t), (Rl = null);
                break;
              }
              e: {
                var o = e,
                  s = n.return,
                  l = n,
                  u = t;
                if (
                  ((t = Ll),
                  (l.flags |= 32768),
                  null !== u &&
                    "object" === typeof u &&
                    "function" === typeof u.then)
                ) {
                  var c = u,
                    d = l,
                    f = d.tag;
                  if (0 === (1 & d.mode) && (0 === f || 11 === f || 15 === f)) {
                    var h = d.alternate;
                    h
                      ? ((d.updateQueue = h.updateQueue),
                        (d.memoizedState = h.memoizedState),
                        (d.lanes = h.lanes))
                      : ((d.updateQueue = null), (d.memoizedState = null));
                  }
                  var p = gs(s);
                  if (null !== p) {
                    (p.flags &= -257),
                      ys(p, s, l, 0, t),
                      1 & p.mode && ms(o, c, t),
                      (u = c);
                    var v = (t = p).updateQueue;
                    if (null === v) {
                      var m = new Set();
                      m.add(u), (t.updateQueue = m);
                    } else v.add(u);
                    break e;
                  }
                  if (0 === (1 & t)) {
                    ms(o, c, t), mu();
                    break e;
                  }
                  u = Error(a(426));
                } else if (ia && 1 & l.mode) {
                  var g = gs(s);
                  if (null !== g) {
                    0 === (65536 & g.flags) && (g.flags |= 256),
                      ys(g, s, l, 0, t),
                      pa(cs(u, l));
                    break e;
                  }
                }
                (o = u = cs(u, l)),
                  4 !== Ol && (Ol = 2),
                  null === Bl ? (Bl = [o]) : Bl.push(o),
                  (o = s);
                do {
                  switch (o.tag) {
                    case 3:
                      (o.flags |= 65536),
                        (t &= -t),
                        (o.lanes |= t),
                        Da(o, ps(0, u, t));
                      break e;
                    case 1:
                      l = u;
                      var y = o.type,
                        b = o.stateNode;
                      if (
                        0 === (128 & o.flags) &&
                        ("function" === typeof y.getDerivedStateFromError ||
                          (null !== b &&
                            "function" === typeof b.componentDidCatch &&
                            (null === Xl || !Xl.has(b))))
                      ) {
                        (o.flags |= 65536),
                          (t &= -t),
                          (o.lanes |= t),
                          Da(o, vs(o, l, t));
                        break e;
                      }
                  }
                  o = o.return;
                } while (null !== o);
              }
              xu(n);
            } catch (_) {
              (t = _), Rl === n && null !== n && (Rl = n = n.return);
              continue;
            }
            break;
          }
        }
        function vu() {
          var e = kl.current;
          return (kl.current = os), null === e ? os : e;
        }
        function mu() {
          (0 !== Ol && 3 !== Ol && 2 !== Ol) || (Ol = 4),
            null === Pl ||
              (0 === (268435455 & Ul) && 0 === (268435455 & zl)) ||
              lu(Pl, Ll);
        }
        function gu(e, t) {
          var n = Cl;
          Cl |= 2;
          var r = vu();
          for ((Pl === e && Ll === t) || ((Gl = null), hu(e, t)); ; )
            try {
              yu();
              break;
            } catch (i) {
              pu(e, i);
            }
          if ((xa(), (Cl = n), (kl.current = r), null !== Rl))
            throw Error(a(261));
          return (Pl = null), (Ll = 0), Ol;
        }
        function yu() {
          for (; null !== Rl; ) _u(Rl);
        }
        function bu() {
          for (; null !== Rl && !Ye(); ) _u(Rl);
        }
        function _u(e) {
          var t = Ml(e.alternate, e, Il);
          (e.memoizedProps = e.pendingProps),
            null === t ? xu(e) : (Rl = t),
            (Tl.current = null);
        }
        function xu(e) {
          var t = e;
          do {
            var n = t.alternate;
            if (((e = t.return), 0 === (32768 & t.flags))) {
              if (null !== (n = qs(n, t, Il))) return void (Rl = n);
            } else {
              if (null !== (n = Ys(n, t)))
                return (n.flags &= 32767), void (Rl = n);
              if (null === e) return (Ol = 6), void (Rl = null);
              (e.flags |= 32768), (e.subtreeFlags = 0), (e.deletions = null);
            }
            if (null !== (t = t.sibling)) return void (Rl = t);
            Rl = t = e;
          } while (null !== t);
          0 === Ol && (Ol = 5);
        }
        function Su(e, t, n) {
          var r = bt,
            i = Al.transition;
          try {
            (Al.transition = null),
              (bt = 1),
              (function (e, t, n, r) {
                do {
                  wu();
                } while (null !== Yl);
                if (0 !== (6 & Cl)) throw Error(a(327));
                n = e.finishedWork;
                var i = e.finishedLanes;
                if (null === n) return null;
                if (
                  ((e.finishedWork = null),
                  (e.finishedLanes = 0),
                  n === e.current)
                )
                  throw Error(a(177));
                (e.callbackNode = null), (e.callbackPriority = 0);
                var o = n.lanes | n.childLanes;
                if (
                  ((function (e, t) {
                    var n = e.pendingLanes & ~t;
                    (e.pendingLanes = t),
                      (e.suspendedLanes = 0),
                      (e.pingedLanes = 0),
                      (e.expiredLanes &= t),
                      (e.mutableReadLanes &= t),
                      (e.entangledLanes &= t),
                      (t = e.entanglements);
                    var r = e.eventTimes;
                    for (e = e.expirationTimes; 0 < n; ) {
                      var i = 31 - ot(n),
                        a = 1 << i;
                      (t[i] = 0), (r[i] = -1), (e[i] = -1), (n &= ~a);
                    }
                  })(e, o),
                  e === Pl && ((Rl = Pl = null), (Ll = 0)),
                  (0 === (2064 & n.subtreeFlags) && 0 === (2064 & n.flags)) ||
                    ql ||
                    ((ql = !0),
                    Pu(tt, function () {
                      return wu(), null;
                    })),
                  (o = 0 !== (15990 & n.flags)),
                  0 !== (15990 & n.subtreeFlags) || o)
                ) {
                  (o = Al.transition), (Al.transition = null);
                  var s = bt;
                  bt = 1;
                  var l = Cl;
                  (Cl |= 4),
                    (Tl.current = null),
                    (function (e, t) {
                      if (((ei = Gt), hr((e = fr())))) {
                        if ("selectionStart" in e)
                          var n = {
                            start: e.selectionStart,
                            end: e.selectionEnd,
                          };
                        else
                          e: {
                            var r =
                              (n =
                                ((n = e.ownerDocument) && n.defaultView) ||
                                window).getSelection && n.getSelection();
                            if (r && 0 !== r.rangeCount) {
                              n = r.anchorNode;
                              var i = r.anchorOffset,
                                o = r.focusNode;
                              r = r.focusOffset;
                              try {
                                n.nodeType, o.nodeType;
                              } catch (x) {
                                n = null;
                                break e;
                              }
                              var s = 0,
                                l = -1,
                                u = -1,
                                c = 0,
                                d = 0,
                                f = e,
                                h = null;
                              t: for (;;) {
                                for (
                                  var p;
                                  f !== n ||
                                    (0 !== i && 3 !== f.nodeType) ||
                                    (l = s + i),
                                    f !== o ||
                                      (0 !== r && 3 !== f.nodeType) ||
                                      (u = s + r),
                                    3 === f.nodeType &&
                                      (s += f.nodeValue.length),
                                    null !== (p = f.firstChild);

                                )
                                  (h = f), (f = p);
                                for (;;) {
                                  if (f === e) break t;
                                  if (
                                    (h === n && ++c === i && (l = s),
                                    h === o && ++d === r && (u = s),
                                    null !== (p = f.nextSibling))
                                  )
                                    break;
                                  h = (f = h).parentNode;
                                }
                                f = p;
                              }
                              n =
                                -1 === l || -1 === u
                                  ? null
                                  : { start: l, end: u };
                            } else n = null;
                          }
                        n = n || { start: 0, end: 0 };
                      } else n = null;
                      for (
                        ti = { focusedElem: e, selectionRange: n },
                          Gt = !1,
                          Qs = t;
                        null !== Qs;

                      )
                        if (
                          ((e = (t = Qs).child),
                          0 !== (1028 & t.subtreeFlags) && null !== e)
                        )
                          (e.return = t), (Qs = e);
                        else
                          for (; null !== Qs; ) {
                            t = Qs;
                            try {
                              var v = t.alternate;
                              if (0 !== (1024 & t.flags))
                                switch (t.tag) {
                                  case 0:
                                  case 11:
                                  case 15:
                                  case 5:
                                  case 6:
                                  case 4:
                                  case 17:
                                    break;
                                  case 1:
                                    if (null !== v) {
                                      var m = v.memoizedProps,
                                        g = v.memoizedState,
                                        y = t.stateNode,
                                        b = y.getSnapshotBeforeUpdate(
                                          t.elementType === t.type
                                            ? m
                                            : ma(t.type, m),
                                          g
                                        );
                                      y.__reactInternalSnapshotBeforeUpdate = b;
                                    }
                                    break;
                                  case 3:
                                    var _ = t.stateNode.containerInfo;
                                    1 === _.nodeType
                                      ? (_.textContent = "")
                                      : 9 === _.nodeType &&
                                        _.documentElement &&
                                        _.removeChild(_.documentElement);
                                    break;
                                  default:
                                    throw Error(a(163));
                                }
                            } catch (x) {
                              Eu(t, t.return, x);
                            }
                            if (null !== (e = t.sibling)) {
                              (e.return = t.return), (Qs = e);
                              break;
                            }
                            Qs = t.return;
                          }
                      (v = nl), (nl = !1);
                    })(e, n),
                    gl(n, e),
                    pr(ti),
                    (Gt = !!ei),
                    (ti = ei = null),
                    (e.current = n),
                    bl(n, e, i),
                    Ke(),
                    (Cl = l),
                    (bt = s),
                    (Al.transition = o);
                } else e.current = n;
                if (
                  (ql && ((ql = !1), (Yl = e), (Kl = i)),
                  (o = e.pendingLanes),
                  0 === o && (Xl = null),
                  (function (e) {
                    if (at && "function" === typeof at.onCommitFiberRoot)
                      try {
                        at.onCommitFiberRoot(
                          it,
                          e,
                          void 0,
                          128 === (128 & e.current.flags)
                        );
                      } catch (t) {}
                  })(n.stateNode),
                  iu(e, $e()),
                  null !== t)
                )
                  for (r = e.onRecoverableError, n = 0; n < t.length; n++)
                    (i = t[n]),
                      r(i.value, { componentStack: i.stack, digest: i.digest });
                if (Wl) throw ((Wl = !1), (e = jl), (jl = null), e);
                0 !== (1 & Kl) && 0 !== e.tag && wu(),
                  (o = e.pendingLanes),
                  0 !== (1 & o)
                    ? e === Jl
                      ? $l++
                      : (($l = 0), (Jl = e))
                    : ($l = 0),
                  Hi();
              })(e, t, n, r);
          } finally {
            (Al.transition = i), (bt = r);
          }
          return null;
        }
        function wu() {
          if (null !== Yl) {
            var e = _t(Kl),
              t = Al.transition,
              n = bt;
            try {
              if (((Al.transition = null), (bt = 16 > e ? 16 : e), null === Yl))
                var r = !1;
              else {
                if (((e = Yl), (Yl = null), (Kl = 0), 0 !== (6 & Cl)))
                  throw Error(a(331));
                var i = Cl;
                for (Cl |= 4, Qs = e.current; null !== Qs; ) {
                  var o = Qs,
                    s = o.child;
                  if (0 !== (16 & Qs.flags)) {
                    var l = o.deletions;
                    if (null !== l) {
                      for (var u = 0; u < l.length; u++) {
                        var c = l[u];
                        for (Qs = c; null !== Qs; ) {
                          var d = Qs;
                          switch (d.tag) {
                            case 0:
                            case 11:
                            case 15:
                              rl(8, d, o);
                          }
                          var f = d.child;
                          if (null !== f) (f.return = d), (Qs = f);
                          else
                            for (; null !== Qs; ) {
                              var h = (d = Qs).sibling,
                                p = d.return;
                              if ((ol(d), d === c)) {
                                Qs = null;
                                break;
                              }
                              if (null !== h) {
                                (h.return = p), (Qs = h);
                                break;
                              }
                              Qs = p;
                            }
                        }
                      }
                      var v = o.alternate;
                      if (null !== v) {
                        var m = v.child;
                        if (null !== m) {
                          v.child = null;
                          do {
                            var g = m.sibling;
                            (m.sibling = null), (m = g);
                          } while (null !== m);
                        }
                      }
                      Qs = o;
                    }
                  }
                  if (0 !== (2064 & o.subtreeFlags) && null !== s)
                    (s.return = o), (Qs = s);
                  else
                    e: for (; null !== Qs; ) {
                      if (0 !== (2048 & (o = Qs).flags))
                        switch (o.tag) {
                          case 0:
                          case 11:
                          case 15:
                            rl(9, o, o.return);
                        }
                      var y = o.sibling;
                      if (null !== y) {
                        (y.return = o.return), (Qs = y);
                        break e;
                      }
                      Qs = o.return;
                    }
                }
                var b = e.current;
                for (Qs = b; null !== Qs; ) {
                  var _ = (s = Qs).child;
                  if (0 !== (2064 & s.subtreeFlags) && null !== _)
                    (_.return = s), (Qs = _);
                  else
                    e: for (s = b; null !== Qs; ) {
                      if (0 !== (2048 & (l = Qs).flags))
                        try {
                          switch (l.tag) {
                            case 0:
                            case 11:
                            case 15:
                              il(9, l);
                          }
                        } catch (S) {
                          Eu(l, l.return, S);
                        }
                      if (l === s) {
                        Qs = null;
                        break e;
                      }
                      var x = l.sibling;
                      if (null !== x) {
                        (x.return = l.return), (Qs = x);
                        break e;
                      }
                      Qs = l.return;
                    }
                }
                if (
                  ((Cl = i),
                  Hi(),
                  at && "function" === typeof at.onPostCommitFiberRoot)
                )
                  try {
                    at.onPostCommitFiberRoot(it, e);
                  } catch (S) {}
                r = !0;
              }
              return r;
            } finally {
              (bt = n), (Al.transition = t);
            }
          }
          return !1;
        }
        function Mu(e, t, n) {
          (e = Na(e, (t = ps(0, (t = cs(n, t)), 1)), 1)),
            (t = tu()),
            null !== e && (gt(e, 1, t), iu(e, t));
        }
        function Eu(e, t, n) {
          if (3 === e.tag) Mu(e, e, n);
          else
            for (; null !== t; ) {
              if (3 === t.tag) {
                Mu(t, e, n);
                break;
              }
              if (1 === t.tag) {
                var r = t.stateNode;
                if (
                  "function" === typeof t.type.getDerivedStateFromError ||
                  ("function" === typeof r.componentDidCatch &&
                    (null === Xl || !Xl.has(r)))
                ) {
                  (t = Na(t, (e = vs(t, (e = cs(n, e)), 1)), 1)),
                    (e = tu()),
                    null !== t && (gt(t, 1, e), iu(t, e));
                  break;
                }
              }
              t = t.return;
            }
        }
        function ku(e, t, n) {
          var r = e.pingCache;
          null !== r && r.delete(t),
            (t = tu()),
            (e.pingedLanes |= e.suspendedLanes & n),
            Pl === e &&
              (Ll & n) === n &&
              (4 === Ol ||
              (3 === Ol && (130023424 & Ll) === Ll && 500 > $e() - Hl)
                ? hu(e, 0)
                : (Fl |= n)),
            iu(e, t);
        }
        function Tu(e, t) {
          0 === t &&
            (0 === (1 & e.mode)
              ? (t = 1)
              : ((t = ct), 0 === (130023424 & (ct <<= 1)) && (ct = 4194304)));
          var n = tu();
          null !== (e = Ca(e, t)) && (gt(e, t, n), iu(e, n));
        }
        function Au(e) {
          var t = e.memoizedState,
            n = 0;
          null !== t && (n = t.retryLane), Tu(e, n);
        }
        function Cu(e, t) {
          var n = 0;
          switch (e.tag) {
            case 13:
              var r = e.stateNode,
                i = e.memoizedState;
              null !== i && (n = i.retryLane);
              break;
            case 19:
              r = e.stateNode;
              break;
            default:
              throw Error(a(314));
          }
          null !== r && r.delete(t), Tu(e, n);
        }
        function Pu(e, t) {
          return Xe(e, t);
        }
        function Ru(e, t, n, r) {
          (this.tag = e),
            (this.key = n),
            (this.sibling =
              this.child =
              this.return =
              this.stateNode =
              this.type =
              this.elementType =
                null),
            (this.index = 0),
            (this.ref = null),
            (this.pendingProps = t),
            (this.dependencies =
              this.memoizedState =
              this.updateQueue =
              this.memoizedProps =
                null),
            (this.mode = r),
            (this.subtreeFlags = this.flags = 0),
            (this.deletions = null),
            (this.childLanes = this.lanes = 0),
            (this.alternate = null);
        }
        function Lu(e, t, n, r) {
          return new Ru(e, t, n, r);
        }
        function Iu(e) {
          return !(!(e = e.prototype) || !e.isReactComponent);
        }
        function Nu(e, t) {
          var n = e.alternate;
          return (
            null === n
              ? (((n = Lu(e.tag, t, e.key, e.mode)).elementType =
                  e.elementType),
                (n.type = e.type),
                (n.stateNode = e.stateNode),
                (n.alternate = e),
                (e.alternate = n))
              : ((n.pendingProps = t),
                (n.type = e.type),
                (n.flags = 0),
                (n.subtreeFlags = 0),
                (n.deletions = null)),
            (n.flags = 14680064 & e.flags),
            (n.childLanes = e.childLanes),
            (n.lanes = e.lanes),
            (n.child = e.child),
            (n.memoizedProps = e.memoizedProps),
            (n.memoizedState = e.memoizedState),
            (n.updateQueue = e.updateQueue),
            (t = e.dependencies),
            (n.dependencies =
              null === t
                ? null
                : { lanes: t.lanes, firstContext: t.firstContext }),
            (n.sibling = e.sibling),
            (n.index = e.index),
            (n.ref = e.ref),
            n
          );
        }
        function Ou(e, t, n, r, i, o) {
          var s = 2;
          if (((r = e), "function" === typeof e)) Iu(e) && (s = 1);
          else if ("string" === typeof e) s = 5;
          else
            e: switch (e) {
              case w:
                return Du(n.children, i, o, t);
              case M:
                (s = 8), (i |= 8);
                break;
              case E:
                return (
                  ((e = Lu(12, n, t, 2 | i)).elementType = E), (e.lanes = o), e
                );
              case C:
                return (
                  ((e = Lu(13, n, t, i)).elementType = C), (e.lanes = o), e
                );
              case P:
                return (
                  ((e = Lu(19, n, t, i)).elementType = P), (e.lanes = o), e
                );
              case I:
                return Uu(n, i, o, t);
              default:
                if ("object" === typeof e && null !== e)
                  switch (e.$$typeof) {
                    case k:
                      s = 10;
                      break e;
                    case T:
                      s = 9;
                      break e;
                    case A:
                      s = 11;
                      break e;
                    case R:
                      s = 14;
                      break e;
                    case L:
                      (s = 16), (r = null);
                      break e;
                  }
                throw Error(a(130, null == e ? e : typeof e, ""));
            }
          return (
            ((t = Lu(s, n, t, i)).elementType = e),
            (t.type = r),
            (t.lanes = o),
            t
          );
        }
        function Du(e, t, n, r) {
          return ((e = Lu(7, e, r, t)).lanes = n), e;
        }
        function Uu(e, t, n, r) {
          return (
            ((e = Lu(22, e, r, t)).elementType = I),
            (e.lanes = n),
            (e.stateNode = { isHidden: !1 }),
            e
          );
        }
        function zu(e, t, n) {
          return ((e = Lu(6, e, null, t)).lanes = n), e;
        }
        function Fu(e, t, n) {
          return (
            ((t = Lu(
              4,
              null !== e.children ? e.children : [],
              e.key,
              t
            )).lanes = n),
            (t.stateNode = {
              containerInfo: e.containerInfo,
              pendingChildren: null,
              implementation: e.implementation,
            }),
            t
          );
        }
        function Bu(e, t, n, r, i) {
          (this.tag = t),
            (this.containerInfo = e),
            (this.finishedWork =
              this.pingCache =
              this.current =
              this.pendingChildren =
                null),
            (this.timeoutHandle = -1),
            (this.callbackNode = this.pendingContext = this.context = null),
            (this.callbackPriority = 0),
            (this.eventTimes = mt(0)),
            (this.expirationTimes = mt(-1)),
            (this.entangledLanes =
              this.finishedLanes =
              this.mutableReadLanes =
              this.expiredLanes =
              this.pingedLanes =
              this.suspendedLanes =
              this.pendingLanes =
                0),
            (this.entanglements = mt(0)),
            (this.identifierPrefix = r),
            (this.onRecoverableError = i),
            (this.mutableSourceEagerHydrationData = null);
        }
        function Zu(e, t, n, r, i, a, o, s, l) {
          return (
            (e = new Bu(e, t, n, s, l)),
            1 === t ? ((t = 1), !0 === a && (t |= 8)) : (t = 0),
            (a = Lu(3, null, null, t)),
            (e.current = a),
            (a.stateNode = e),
            (a.memoizedState = {
              element: r,
              isDehydrated: n,
              cache: null,
              transitions: null,
              pendingSuspenseBoundaries: null,
            }),
            Ra(a),
            e
          );
        }
        function Hu(e) {
          if (!e) return Ti;
          e: {
            if (He((e = e._reactInternals)) !== e || 1 !== e.tag)
              throw Error(a(170));
            var t = e;
            do {
              switch (t.tag) {
                case 3:
                  t = t.stateNode.context;
                  break e;
                case 1:
                  if (Li(t.type)) {
                    t = t.stateNode.__reactInternalMemoizedMergedChildContext;
                    break e;
                  }
              }
              t = t.return;
            } while (null !== t);
            throw Error(a(171));
          }
          if (1 === e.tag) {
            var n = e.type;
            if (Li(n)) return Oi(e, n, t);
          }
          return t;
        }
        function Vu(e, t, n, r, i, a, o, s, l) {
          return (
            ((e = Zu(n, r, !0, e, 0, a, 0, s, l)).context = Hu(null)),
            (n = e.current),
            ((a = Ia((r = tu()), (i = nu(n)))).callback =
              void 0 !== t && null !== t ? t : null),
            Na(n, a, i),
            (e.current.lanes = i),
            gt(e, i, r),
            iu(e, r),
            e
          );
        }
        function Gu(e, t, n, r) {
          var i = t.current,
            a = tu(),
            o = nu(i);
          return (
            (n = Hu(n)),
            null === t.context ? (t.context = n) : (t.pendingContext = n),
            ((t = Ia(a, o)).payload = { element: e }),
            null !== (r = void 0 === r ? null : r) && (t.callback = r),
            null !== (e = Na(i, t, o)) && (ru(e, i, o, a), Oa(e, i, o)),
            o
          );
        }
        function Wu(e) {
          return (e = e.current).child
            ? (e.child.tag, e.child.stateNode)
            : null;
        }
        function ju(e, t) {
          if (null !== (e = e.memoizedState) && null !== e.dehydrated) {
            var n = e.retryLane;
            e.retryLane = 0 !== n && n < t ? n : t;
          }
        }
        function Xu(e, t) {
          ju(e, t), (e = e.alternate) && ju(e, t);
        }
        Ml = function (e, t, n) {
          if (null !== e)
            if (e.memoizedProps !== t.pendingProps || Ci.current) _s = !0;
            else {
              if (0 === (e.lanes & n) && 0 === (128 & t.flags))
                return (
                  (_s = !1),
                  (function (e, t, n) {
                    switch (t.tag) {
                      case 3:
                        Ps(t), ha();
                        break;
                      case 5:
                        ao(t);
                        break;
                      case 1:
                        Li(t.type) && Di(t);
                        break;
                      case 4:
                        ro(t, t.stateNode.containerInfo);
                        break;
                      case 10:
                        var r = t.type._context,
                          i = t.memoizedProps.value;
                        ki(ga, r._currentValue), (r._currentValue = i);
                        break;
                      case 13:
                        if (null !== (r = t.memoizedState))
                          return null !== r.dehydrated
                            ? (ki(so, 1 & so.current), (t.flags |= 128), null)
                            : 0 !== (n & t.child.childLanes)
                            ? zs(e, t, n)
                            : (ki(so, 1 & so.current),
                              null !== (e = Ws(e, t, n)) ? e.sibling : null);
                        ki(so, 1 & so.current);
                        break;
                      case 19:
                        if (
                          ((r = 0 !== (n & t.childLanes)),
                          0 !== (128 & e.flags))
                        ) {
                          if (r) return Vs(e, t, n);
                          t.flags |= 128;
                        }
                        if (
                          (null !== (i = t.memoizedState) &&
                            ((i.rendering = null),
                            (i.tail = null),
                            (i.lastEffect = null)),
                          ki(so, so.current),
                          r)
                        )
                          break;
                        return null;
                      case 22:
                      case 23:
                        return (t.lanes = 0), Es(e, t, n);
                    }
                    return Ws(e, t, n);
                  })(e, t, n)
                );
              _s = 0 !== (131072 & e.flags);
            }
          else (_s = !1), ia && 0 !== (1048576 & t.flags) && Qi(t, ji, t.index);
          switch (((t.lanes = 0), t.tag)) {
            case 2:
              var r = t.type;
              Gs(e, t), (e = t.pendingProps);
              var i = Ri(t, Ai.current);
              Ma(t, n), (i = Mo(null, t, r, e, i, n));
              var o = Eo();
              return (
                (t.flags |= 1),
                "object" === typeof i &&
                null !== i &&
                "function" === typeof i.render &&
                void 0 === i.$$typeof
                  ? ((t.tag = 1),
                    (t.memoizedState = null),
                    (t.updateQueue = null),
                    Li(r) ? ((o = !0), Di(t)) : (o = !1),
                    (t.memoizedState =
                      null !== i.state && void 0 !== i.state ? i.state : null),
                    Ra(t),
                    (i.updater = Za),
                    (t.stateNode = i),
                    (i._reactInternals = t),
                    Wa(t, r, e, n),
                    (t = Cs(null, t, r, !0, o, n)))
                  : ((t.tag = 0),
                    ia && o && ea(t),
                    xs(null, t, i, n),
                    (t = t.child)),
                t
              );
            case 16:
              r = t.elementType;
              e: {
                switch (
                  (Gs(e, t),
                  (e = t.pendingProps),
                  (r = (i = r._init)(r._payload)),
                  (t.type = r),
                  (i = t.tag =
                    (function (e) {
                      if ("function" === typeof e) return Iu(e) ? 1 : 0;
                      if (void 0 !== e && null !== e) {
                        if ((e = e.$$typeof) === A) return 11;
                        if (e === R) return 14;
                      }
                      return 2;
                    })(r)),
                  (e = ma(r, e)),
                  i)
                ) {
                  case 0:
                    t = Ts(null, t, r, e, n);
                    break e;
                  case 1:
                    t = As(null, t, r, e, n);
                    break e;
                  case 11:
                    t = Ss(null, t, r, e, n);
                    break e;
                  case 14:
                    t = ws(null, t, r, ma(r.type, e), n);
                    break e;
                }
                throw Error(a(306, r, ""));
              }
              return t;
            case 0:
              return (
                (r = t.type),
                (i = t.pendingProps),
                Ts(e, t, r, (i = t.elementType === r ? i : ma(r, i)), n)
              );
            case 1:
              return (
                (r = t.type),
                (i = t.pendingProps),
                As(e, t, r, (i = t.elementType === r ? i : ma(r, i)), n)
              );
            case 3:
              e: {
                if ((Ps(t), null === e)) throw Error(a(387));
                (r = t.pendingProps),
                  (i = (o = t.memoizedState).element),
                  La(e, t),
                  Ua(t, r, null, n);
                var s = t.memoizedState;
                if (((r = s.element), o.isDehydrated)) {
                  if (
                    ((o = {
                      element: r,
                      isDehydrated: !1,
                      cache: s.cache,
                      pendingSuspenseBoundaries: s.pendingSuspenseBoundaries,
                      transitions: s.transitions,
                    }),
                    (t.updateQueue.baseState = o),
                    (t.memoizedState = o),
                    256 & t.flags)
                  ) {
                    t = Rs(e, t, r, n, (i = cs(Error(a(423)), t)));
                    break e;
                  }
                  if (r !== i) {
                    t = Rs(e, t, r, n, (i = cs(Error(a(424)), t)));
                    break e;
                  }
                  for (
                    ra = ui(t.stateNode.containerInfo.firstChild),
                      na = t,
                      ia = !0,
                      aa = null,
                      n = $a(t, null, r, n),
                      t.child = n;
                    n;

                  )
                    (n.flags = (-3 & n.flags) | 4096), (n = n.sibling);
                } else {
                  if ((ha(), r === i)) {
                    t = Ws(e, t, n);
                    break e;
                  }
                  xs(e, t, r, n);
                }
                t = t.child;
              }
              return t;
            case 5:
              return (
                ao(t),
                null === e && ua(t),
                (r = t.type),
                (i = t.pendingProps),
                (o = null !== e ? e.memoizedProps : null),
                (s = i.children),
                ni(r, i)
                  ? (s = null)
                  : null !== o && ni(r, o) && (t.flags |= 32),
                ks(e, t),
                xs(e, t, s, n),
                t.child
              );
            case 6:
              return null === e && ua(t), null;
            case 13:
              return zs(e, t, n);
            case 4:
              return (
                ro(t, t.stateNode.containerInfo),
                (r = t.pendingProps),
                null === e ? (t.child = Ka(t, null, r, n)) : xs(e, t, r, n),
                t.child
              );
            case 11:
              return (
                (r = t.type),
                (i = t.pendingProps),
                Ss(e, t, r, (i = t.elementType === r ? i : ma(r, i)), n)
              );
            case 7:
              return xs(e, t, t.pendingProps, n), t.child;
            case 8:
            case 12:
              return xs(e, t, t.pendingProps.children, n), t.child;
            case 10:
              e: {
                if (
                  ((r = t.type._context),
                  (i = t.pendingProps),
                  (o = t.memoizedProps),
                  (s = i.value),
                  ki(ga, r._currentValue),
                  (r._currentValue = s),
                  null !== o)
                )
                  if (sr(o.value, s)) {
                    if (o.children === i.children && !Ci.current) {
                      t = Ws(e, t, n);
                      break e;
                    }
                  } else
                    for (
                      null !== (o = t.child) && (o.return = t);
                      null !== o;

                    ) {
                      var l = o.dependencies;
                      if (null !== l) {
                        s = o.child;
                        for (var u = l.firstContext; null !== u; ) {
                          if (u.context === r) {
                            if (1 === o.tag) {
                              (u = Ia(-1, n & -n)).tag = 2;
                              var c = o.updateQueue;
                              if (null !== c) {
                                var d = (c = c.shared).pending;
                                null === d
                                  ? (u.next = u)
                                  : ((u.next = d.next), (d.next = u)),
                                  (c.pending = u);
                              }
                            }
                            (o.lanes |= n),
                              null !== (u = o.alternate) && (u.lanes |= n),
                              wa(o.return, n, t),
                              (l.lanes |= n);
                            break;
                          }
                          u = u.next;
                        }
                      } else if (10 === o.tag)
                        s = o.type === t.type ? null : o.child;
                      else if (18 === o.tag) {
                        if (null === (s = o.return)) throw Error(a(341));
                        (s.lanes |= n),
                          null !== (l = s.alternate) && (l.lanes |= n),
                          wa(s, n, t),
                          (s = o.sibling);
                      } else s = o.child;
                      if (null !== s) s.return = o;
                      else
                        for (s = o; null !== s; ) {
                          if (s === t) {
                            s = null;
                            break;
                          }
                          if (null !== (o = s.sibling)) {
                            (o.return = s.return), (s = o);
                            break;
                          }
                          s = s.return;
                        }
                      o = s;
                    }
                xs(e, t, i.children, n), (t = t.child);
              }
              return t;
            case 9:
              return (
                (i = t.type),
                (r = t.pendingProps.children),
                Ma(t, n),
                (r = r((i = Ea(i)))),
                (t.flags |= 1),
                xs(e, t, r, n),
                t.child
              );
            case 14:
              return (
                (i = ma((r = t.type), t.pendingProps)),
                ws(e, t, r, (i = ma(r.type, i)), n)
              );
            case 15:
              return Ms(e, t, t.type, t.pendingProps, n);
            case 17:
              return (
                (r = t.type),
                (i = t.pendingProps),
                (i = t.elementType === r ? i : ma(r, i)),
                Gs(e, t),
                (t.tag = 1),
                Li(r) ? ((e = !0), Di(t)) : (e = !1),
                Ma(t, n),
                Va(t, r, i),
                Wa(t, r, i, n),
                Cs(null, t, r, !0, e, n)
              );
            case 19:
              return Vs(e, t, n);
            case 22:
              return Es(e, t, n);
          }
          throw Error(a(156, t.tag));
        };
        var qu =
          "function" === typeof reportError
            ? reportError
            : function (e) {
                console.error(e);
              };
        function Yu(e) {
          this._internalRoot = e;
        }
        function Ku(e) {
          this._internalRoot = e;
        }
        function $u(e) {
          return !(
            !e ||
            (1 !== e.nodeType && 9 !== e.nodeType && 11 !== e.nodeType)
          );
        }
        function Ju(e) {
          return !(
            !e ||
            (1 !== e.nodeType &&
              9 !== e.nodeType &&
              11 !== e.nodeType &&
              (8 !== e.nodeType ||
                " react-mount-point-unstable " !== e.nodeValue))
          );
        }
        function Qu() {}
        function ec(e, t, n, r, i) {
          var a = n._reactRootContainer;
          if (a) {
            var o = a;
            if ("function" === typeof i) {
              var s = i;
              i = function () {
                var e = Wu(o);
                s.call(e);
              };
            }
            Gu(t, o, e, i);
          } else
            o = (function (e, t, n, r, i) {
              if (i) {
                if ("function" === typeof r) {
                  var a = r;
                  r = function () {
                    var e = Wu(o);
                    a.call(e);
                  };
                }
                var o = Vu(t, r, e, 0, null, !1, 0, "", Qu);
                return (
                  (e._reactRootContainer = o),
                  (e[pi] = o.current),
                  Hr(8 === e.nodeType ? e.parentNode : e),
                  du(),
                  o
                );
              }
              for (; (i = e.lastChild); ) e.removeChild(i);
              if ("function" === typeof r) {
                var s = r;
                r = function () {
                  var e = Wu(l);
                  s.call(e);
                };
              }
              var l = Zu(e, 0, !1, null, 0, !1, 0, "", Qu);
              return (
                (e._reactRootContainer = l),
                (e[pi] = l.current),
                Hr(8 === e.nodeType ? e.parentNode : e),
                du(function () {
                  Gu(t, l, n, r);
                }),
                l
              );
            })(n, t, e, i, r);
          return Wu(o);
        }
        (Ku.prototype.render = Yu.prototype.render =
          function (e) {
            var t = this._internalRoot;
            if (null === t) throw Error(a(409));
            Gu(e, t, null, null);
          }),
          (Ku.prototype.unmount = Yu.prototype.unmount =
            function () {
              var e = this._internalRoot;
              if (null !== e) {
                this._internalRoot = null;
                var t = e.containerInfo;
                du(function () {
                  Gu(null, e, null, null);
                }),
                  (t[pi] = null);
              }
            }),
          (Ku.prototype.unstable_scheduleHydration = function (e) {
            if (e) {
              var t = Mt();
              e = { blockedOn: null, target: e, priority: t };
              for (
                var n = 0;
                n < It.length && 0 !== t && t < It[n].priority;
                n++
              );
              It.splice(n, 0, e), 0 === n && Ut(e);
            }
          }),
          (xt = function (e) {
            switch (e.tag) {
              case 3:
                var t = e.stateNode;
                if (t.current.memoizedState.isDehydrated) {
                  var n = dt(t.pendingLanes);
                  0 !== n &&
                    (yt(t, 1 | n),
                    iu(t, $e()),
                    0 === (6 & Cl) && ((Vl = $e() + 500), Hi()));
                }
                break;
              case 13:
                du(function () {
                  var t = Ca(e, 1);
                  if (null !== t) {
                    var n = tu();
                    ru(t, e, 1, n);
                  }
                }),
                  Xu(e, 1);
            }
          }),
          (St = function (e) {
            if (13 === e.tag) {
              var t = Ca(e, 134217728);
              if (null !== t) ru(t, e, 134217728, tu());
              Xu(e, 134217728);
            }
          }),
          (wt = function (e) {
            if (13 === e.tag) {
              var t = nu(e),
                n = Ca(e, t);
              if (null !== n) ru(n, e, t, tu());
              Xu(e, t);
            }
          }),
          (Mt = function () {
            return bt;
          }),
          (Et = function (e, t) {
            var n = bt;
            try {
              return (bt = e), t();
            } finally {
              bt = n;
            }
          }),
          (Se = function (e, t, n) {
            switch (t) {
              case "input":
                if ((J(e, n), (t = n.name), "radio" === n.type && null != t)) {
                  for (n = e; n.parentNode; ) n = n.parentNode;
                  for (
                    n = n.querySelectorAll(
                      "input[name=" + JSON.stringify("" + t) + '][type="radio"]'
                    ),
                      t = 0;
                    t < n.length;
                    t++
                  ) {
                    var r = n[t];
                    if (r !== e && r.form === e.form) {
                      var i = xi(r);
                      if (!i) throw Error(a(90));
                      X(r), J(r, i);
                    }
                  }
                }
                break;
              case "textarea":
                ae(e, n);
                break;
              case "select":
                null != (t = n.value) && ne(e, !!n.multiple, t, !1);
            }
          }),
          (Ae = cu),
          (Ce = du);
        var tc = {
            usingClientEntryPoint: !1,
            Events: [bi, _i, xi, ke, Te, cu],
          },
          nc = {
            findFiberByHostInstance: yi,
            bundleType: 0,
            version: "18.2.0",
            rendererPackageName: "react-dom",
          },
          rc = {
            bundleType: nc.bundleType,
            version: nc.version,
            rendererPackageName: nc.rendererPackageName,
            rendererConfig: nc.rendererConfig,
            overrideHookState: null,
            overrideHookStateDeletePath: null,
            overrideHookStateRenamePath: null,
            overrideProps: null,
            overridePropsDeletePath: null,
            overridePropsRenamePath: null,
            setErrorHandler: null,
            setSuspenseHandler: null,
            scheduleUpdate: null,
            currentDispatcherRef: _.ReactCurrentDispatcher,
            findHostInstanceByFiber: function (e) {
              return null === (e = We(e)) ? null : e.stateNode;
            },
            findFiberByHostInstance:
              nc.findFiberByHostInstance ||
              function () {
                return null;
              },
            findHostInstancesForRefresh: null,
            scheduleRefresh: null,
            scheduleRoot: null,
            setRefreshHandler: null,
            getCurrentFiber: null,
            reconcilerVersion: "18.2.0-next-9e3b772b8-20220608",
          };
        if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
          var ic = __REACT_DEVTOOLS_GLOBAL_HOOK__;
          if (!ic.isDisabled && ic.supportsFiber)
            try {
              (it = ic.inject(rc)), (at = ic);
            } catch (ce) {}
        }
        (t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = tc),
          (t.createPortal = function (e, t) {
            var n =
              2 < arguments.length && void 0 !== arguments[2]
                ? arguments[2]
                : null;
            if (!$u(t)) throw Error(a(200));
            return (function (e, t, n) {
              var r =
                3 < arguments.length && void 0 !== arguments[3]
                  ? arguments[3]
                  : null;
              return {
                $$typeof: S,
                key: null == r ? null : "" + r,
                children: e,
                containerInfo: t,
                implementation: n,
              };
            })(e, t, null, n);
          }),
          (t.createRoot = function (e, t) {
            if (!$u(e)) throw Error(a(299));
            var n = !1,
              r = "",
              i = qu;
            return (
              null !== t &&
                void 0 !== t &&
                (!0 === t.unstable_strictMode && (n = !0),
                void 0 !== t.identifierPrefix && (r = t.identifierPrefix),
                void 0 !== t.onRecoverableError && (i = t.onRecoverableError)),
              (t = Zu(e, 1, !1, null, 0, n, 0, r, i)),
              (e[pi] = t.current),
              Hr(8 === e.nodeType ? e.parentNode : e),
              new Yu(t)
            );
          }),
          (t.findDOMNode = function (e) {
            if (null == e) return null;
            if (1 === e.nodeType) return e;
            var t = e._reactInternals;
            if (void 0 === t) {
              if ("function" === typeof e.render) throw Error(a(188));
              throw ((e = Object.keys(e).join(",")), Error(a(268, e)));
            }
            return (e = null === (e = We(t)) ? null : e.stateNode);
          }),
          (t.flushSync = function (e) {
            return du(e);
          }),
          (t.hydrate = function (e, t, n) {
            if (!Ju(t)) throw Error(a(200));
            return ec(null, e, t, !0, n);
          }),
          (t.hydrateRoot = function (e, t, n) {
            if (!$u(e)) throw Error(a(405));
            var r = (null != n && n.hydratedSources) || null,
              i = !1,
              o = "",
              s = qu;
            if (
              (null !== n &&
                void 0 !== n &&
                (!0 === n.unstable_strictMode && (i = !0),
                void 0 !== n.identifierPrefix && (o = n.identifierPrefix),
                void 0 !== n.onRecoverableError && (s = n.onRecoverableError)),
              (t = Vu(t, null, e, 1, null != n ? n : null, i, 0, o, s)),
              (e[pi] = t.current),
              Hr(e),
              r)
            )
              for (e = 0; e < r.length; e++)
                (i = (i = (n = r[e])._getVersion)(n._source)),
                  null == t.mutableSourceEagerHydrationData
                    ? (t.mutableSourceEagerHydrationData = [n, i])
                    : t.mutableSourceEagerHydrationData.push(n, i);
            return new Ku(t);
          }),
          (t.render = function (e, t, n) {
            if (!Ju(t)) throw Error(a(200));
            return ec(null, e, t, !1, n);
          }),
          (t.unmountComponentAtNode = function (e) {
            if (!Ju(e)) throw Error(a(40));
            return (
              !!e._reactRootContainer &&
              (du(function () {
                ec(null, null, e, !1, function () {
                  (e._reactRootContainer = null), (e[pi] = null);
                });
              }),
              !0)
            );
          }),
          (t.unstable_batchedUpdates = cu),
          (t.unstable_renderSubtreeIntoContainer = function (e, t, n, r) {
            if (!Ju(n)) throw Error(a(200));
            if (null == e || void 0 === e._reactInternals) throw Error(a(38));
            return ec(e, t, n, !1, r);
          }),
          (t.version = "18.2.0-next-9e3b772b8-20220608");
      },
      1250: function (e, t, n) {
        "use strict";
        var r = n(4164);
        (t.s = r.createRoot), r.hydrateRoot;
      },
      4164: function (e, t, n) {
        "use strict";
        !(function e() {
          if (
            "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
            "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE
          )
            try {
              __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e);
            } catch (t) {
              console.error(t);
            }
        })(),
          (e.exports = n(4463));
      },
      1372: function (e, t) {
        "use strict";
        var n = "function" === typeof Symbol && Symbol.for,
          r = n ? Symbol.for("react.element") : 60103,
          i = n ? Symbol.for("react.portal") : 60106,
          a = n ? Symbol.for("react.fragment") : 60107,
          o = n ? Symbol.for("react.strict_mode") : 60108,
          s = n ? Symbol.for("react.profiler") : 60114,
          l = n ? Symbol.for("react.provider") : 60109,
          u = n ? Symbol.for("react.context") : 60110,
          c = n ? Symbol.for("react.async_mode") : 60111,
          d = n ? Symbol.for("react.concurrent_mode") : 60111,
          f = n ? Symbol.for("react.forward_ref") : 60112,
          h = n ? Symbol.for("react.suspense") : 60113,
          p = n ? Symbol.for("react.suspense_list") : 60120,
          v = n ? Symbol.for("react.memo") : 60115,
          m = n ? Symbol.for("react.lazy") : 60116,
          g = n ? Symbol.for("react.block") : 60121,
          y = n ? Symbol.for("react.fundamental") : 60117,
          b = n ? Symbol.for("react.responder") : 60118,
          _ = n ? Symbol.for("react.scope") : 60119;
        function x(e) {
          if ("object" === typeof e && null !== e) {
            var t = e.$$typeof;
            switch (t) {
              case r:
                switch ((e = e.type)) {
                  case c:
                  case d:
                  case a:
                  case s:
                  case o:
                  case h:
                    return e;
                  default:
                    switch ((e = e && e.$$typeof)) {
                      case u:
                      case f:
                      case m:
                      case v:
                      case l:
                        return e;
                      default:
                        return t;
                    }
                }
              case i:
                return t;
            }
          }
        }
        function S(e) {
          return x(e) === d;
        }
        (t.AsyncMode = c),
          (t.ConcurrentMode = d),
          (t.ContextConsumer = u),
          (t.ContextProvider = l),
          (t.Element = r),
          (t.ForwardRef = f),
          (t.Fragment = a),
          (t.Lazy = m),
          (t.Memo = v),
          (t.Portal = i),
          (t.Profiler = s),
          (t.StrictMode = o),
          (t.Suspense = h),
          (t.isAsyncMode = function (e) {
            return S(e) || x(e) === c;
          }),
          (t.isConcurrentMode = S),
          (t.isContextConsumer = function (e) {
            return x(e) === u;
          }),
          (t.isContextProvider = function (e) {
            return x(e) === l;
          }),
          (t.isElement = function (e) {
            return "object" === typeof e && null !== e && e.$$typeof === r;
          }),
          (t.isForwardRef = function (e) {
            return x(e) === f;
          }),
          (t.isFragment = function (e) {
            return x(e) === a;
          }),
          (t.isLazy = function (e) {
            return x(e) === m;
          }),
          (t.isMemo = function (e) {
            return x(e) === v;
          }),
          (t.isPortal = function (e) {
            return x(e) === i;
          }),
          (t.isProfiler = function (e) {
            return x(e) === s;
          }),
          (t.isStrictMode = function (e) {
            return x(e) === o;
          }),
          (t.isSuspense = function (e) {
            return x(e) === h;
          }),
          (t.isValidElementType = function (e) {
            return (
              "string" === typeof e ||
              "function" === typeof e ||
              e === a ||
              e === d ||
              e === s ||
              e === o ||
              e === h ||
              e === p ||
              ("object" === typeof e &&
                null !== e &&
                (e.$$typeof === m ||
                  e.$$typeof === v ||
                  e.$$typeof === l ||
                  e.$$typeof === u ||
                  e.$$typeof === f ||
                  e.$$typeof === y ||
                  e.$$typeof === b ||
                  e.$$typeof === _ ||
                  e.$$typeof === g))
            );
          }),
          (t.typeOf = x);
      },
      7441: function (e, t, n) {
        "use strict";
        e.exports = n(1372);
      },
      4976: function (e, t) {
        "use strict";
        (t.ConcurrentRoot = 1),
          (t.ContinuousEventPriority = 4),
          (t.DefaultEventPriority = 16),
          (t.DiscreteEventPriority = 1);
      },
      3721: function (e, t, n) {
        e.exports = function (e) {
          var t = {},
            r = n(2791),
            i = n(3100),
            a = Object.assign;
          function o(e) {
            for (
              var t =
                  "https://reactjs.org/docs/error-decoder.html?invariant=" + e,
                n = 1;
              n < arguments.length;
              n++
            )
              t += "&args[]=" + encodeURIComponent(arguments[n]);
            return (
              "Minified React error #" +
              e +
              "; visit " +
              t +
              " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
            );
          }
          var s = r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
            l = Symbol.for("react.element"),
            u = Symbol.for("react.portal"),
            c = Symbol.for("react.fragment"),
            d = Symbol.for("react.strict_mode"),
            f = Symbol.for("react.profiler"),
            h = Symbol.for("react.provider"),
            p = Symbol.for("react.context"),
            v = Symbol.for("react.forward_ref"),
            m = Symbol.for("react.suspense"),
            g = Symbol.for("react.suspense_list"),
            y = Symbol.for("react.memo"),
            b = Symbol.for("react.lazy");
          Symbol.for("react.scope"), Symbol.for("react.debug_trace_mode");
          var _ = Symbol.for("react.offscreen");
          Symbol.for("react.legacy_hidden"),
            Symbol.for("react.cache"),
            Symbol.for("react.tracing_marker");
          var x = Symbol.iterator;
          function S(e) {
            return null === e || "object" !== typeof e
              ? null
              : "function" === typeof (e = (x && e[x]) || e["@@iterator"])
              ? e
              : null;
          }
          function w(e) {
            if (null == e) return null;
            if ("function" === typeof e) return e.displayName || e.name || null;
            if ("string" === typeof e) return e;
            switch (e) {
              case c:
                return "Fragment";
              case u:
                return "Portal";
              case f:
                return "Profiler";
              case d:
                return "StrictMode";
              case m:
                return "Suspense";
              case g:
                return "SuspenseList";
            }
            if ("object" === typeof e)
              switch (e.$$typeof) {
                case p:
                  return (e.displayName || "Context") + ".Consumer";
                case h:
                  return (e._context.displayName || "Context") + ".Provider";
                case v:
                  var t = e.render;
                  return (
                    (e = e.displayName) ||
                      (e =
                        "" !== (e = t.displayName || t.name || "")
                          ? "ForwardRef(" + e + ")"
                          : "ForwardRef"),
                    e
                  );
                case y:
                  return null !== (t = e.displayName || null)
                    ? t
                    : w(e.type) || "Memo";
                case b:
                  (t = e._payload), (e = e._init);
                  try {
                    return w(e(t));
                  } catch (n) {}
              }
            return null;
          }
          function M(e) {
            var t = e.type;
            switch (e.tag) {
              case 24:
                return "Cache";
              case 9:
                return (t.displayName || "Context") + ".Consumer";
              case 10:
                return (t._context.displayName || "Context") + ".Provider";
              case 18:
                return "DehydratedFragment";
              case 11:
                return (
                  (e = (e = t.render).displayName || e.name || ""),
                  t.displayName ||
                    ("" !== e ? "ForwardRef(" + e + ")" : "ForwardRef")
                );
              case 7:
                return "Fragment";
              case 5:
                return t;
              case 4:
                return "Portal";
              case 3:
                return "Root";
              case 6:
                return "Text";
              case 16:
                return w(t);
              case 8:
                return t === d ? "StrictMode" : "Mode";
              case 22:
                return "Offscreen";
              case 12:
                return "Profiler";
              case 21:
                return "Scope";
              case 13:
                return "Suspense";
              case 19:
                return "SuspenseList";
              case 25:
                return "TracingMarker";
              case 1:
              case 0:
              case 17:
              case 2:
              case 14:
              case 15:
                if ("function" === typeof t)
                  return t.displayName || t.name || null;
                if ("string" === typeof t) return t;
            }
            return null;
          }
          function E(e) {
            var t = e,
              n = e;
            if (e.alternate) for (; t.return; ) t = t.return;
            else {
              e = t;
              do {
                0 !== (4098 & (t = e).flags) && (n = t.return), (e = t.return);
              } while (e);
            }
            return 3 === t.tag ? n : null;
          }
          function k(e) {
            if (E(e) !== e) throw Error(o(188));
          }
          function T(e) {
            var t = e.alternate;
            if (!t) {
              if (null === (t = E(e))) throw Error(o(188));
              return t !== e ? null : e;
            }
            for (var n = e, r = t; ; ) {
              var i = n.return;
              if (null === i) break;
              var a = i.alternate;
              if (null === a) {
                if (null !== (r = i.return)) {
                  n = r;
                  continue;
                }
                break;
              }
              if (i.child === a.child) {
                for (a = i.child; a; ) {
                  if (a === n) return k(i), e;
                  if (a === r) return k(i), t;
                  a = a.sibling;
                }
                throw Error(o(188));
              }
              if (n.return !== r.return) (n = i), (r = a);
              else {
                for (var s = !1, l = i.child; l; ) {
                  if (l === n) {
                    (s = !0), (n = i), (r = a);
                    break;
                  }
                  if (l === r) {
                    (s = !0), (r = i), (n = a);
                    break;
                  }
                  l = l.sibling;
                }
                if (!s) {
                  for (l = a.child; l; ) {
                    if (l === n) {
                      (s = !0), (n = a), (r = i);
                      break;
                    }
                    if (l === r) {
                      (s = !0), (r = a), (n = i);
                      break;
                    }
                    l = l.sibling;
                  }
                  if (!s) throw Error(o(189));
                }
              }
              if (n.alternate !== r) throw Error(o(190));
            }
            if (3 !== n.tag) throw Error(o(188));
            return n.stateNode.current === n ? e : t;
          }
          function A(e) {
            return null !== (e = T(e)) ? C(e) : null;
          }
          function C(e) {
            if (5 === e.tag || 6 === e.tag) return e;
            for (e = e.child; null !== e; ) {
              var t = C(e);
              if (null !== t) return t;
              e = e.sibling;
            }
            return null;
          }
          function P(e) {
            if (5 === e.tag || 6 === e.tag) return e;
            for (e = e.child; null !== e; ) {
              if (4 !== e.tag) {
                var t = P(e);
                if (null !== t) return t;
              }
              e = e.sibling;
            }
            return null;
          }
          var R,
            L = Array.isArray,
            I = e.getPublicInstance,
            N = e.getRootHostContext,
            O = e.getChildHostContext,
            D = e.prepareForCommit,
            U = e.resetAfterCommit,
            z = e.createInstance,
            F = e.appendInitialChild,
            B = e.finalizeInitialChildren,
            Z = e.prepareUpdate,
            H = e.shouldSetTextContent,
            V = e.createTextInstance,
            G = e.scheduleTimeout,
            W = e.cancelTimeout,
            j = e.noTimeout,
            X = e.isPrimaryRenderer,
            q = e.supportsMutation,
            Y = e.supportsPersistence,
            K = e.supportsHydration,
            $ = e.getInstanceFromNode,
            J = e.preparePortalMount,
            Q = e.getCurrentEventPriority,
            ee = e.detachDeletedInstance,
            te = e.supportsMicrotasks,
            ne = e.scheduleMicrotask,
            re = e.supportsTestSelectors,
            ie = e.findFiberRoot,
            ae = e.getBoundingRect,
            oe = e.getTextContent,
            se = e.isHiddenSubtree,
            le = e.matchAccessibilityRole,
            ue = e.setFocusIfFocusable,
            ce = e.setupIntersectionObserver,
            de = e.appendChild,
            fe = e.appendChildToContainer,
            he = e.commitTextUpdate,
            pe = e.commitMount,
            ve = e.commitUpdate,
            me = e.insertBefore,
            ge = e.insertInContainerBefore,
            ye = e.removeChild,
            be = e.removeChildFromContainer,
            _e = e.resetTextContent,
            xe = e.hideInstance,
            Se = e.hideTextInstance,
            we = e.unhideInstance,
            Me = e.unhideTextInstance,
            Ee = e.clearContainer,
            ke = e.cloneInstance,
            Te = e.createContainerChildSet,
            Ae = e.appendChildToContainerChildSet,
            Ce = e.finalizeContainerChildren,
            Pe = e.replaceContainerChildren,
            Re = e.cloneHiddenInstance,
            Le = e.cloneHiddenTextInstance,
            Ie = e.canHydrateInstance,
            Ne = e.canHydrateTextInstance,
            Oe = e.canHydrateSuspenseInstance,
            De = e.isSuspenseInstancePending,
            Ue = e.isSuspenseInstanceFallback,
            ze = e.registerSuspenseInstanceRetry,
            Fe = e.getNextHydratableSibling,
            Be = e.getFirstHydratableChild,
            Ze = e.getFirstHydratableChildWithinContainer,
            He = e.getFirstHydratableChildWithinSuspenseInstance,
            Ve = e.hydrateInstance,
            Ge = e.hydrateTextInstance,
            We = e.hydrateSuspenseInstance,
            je = e.getNextHydratableInstanceAfterSuspenseInstance,
            Xe = e.commitHydratedContainer,
            qe = e.commitHydratedSuspenseInstance,
            Ye = e.clearSuspenseBoundary,
            Ke = e.clearSuspenseBoundaryFromContainer,
            $e = e.shouldDeleteUnhydratedTailInstances,
            Je = e.didNotMatchHydratedContainerTextInstance,
            Qe = e.didNotMatchHydratedTextInstance;
          function et(e) {
            if (void 0 === R)
              try {
                throw Error();
              } catch (n) {
                var t = n.stack.trim().match(/\n( *(at )?)/);
                R = (t && t[1]) || "";
              }
            return "\n" + R + e;
          }
          var tt = !1;
          function nt(e, t) {
            if (!e || tt) return "";
            tt = !0;
            var n = Error.prepareStackTrace;
            Error.prepareStackTrace = void 0;
            try {
              if (t)
                if (
                  ((t = function () {
                    throw Error();
                  }),
                  Object.defineProperty(t.prototype, "props", {
                    set: function () {
                      throw Error();
                    },
                  }),
                  "object" === typeof Reflect && Reflect.construct)
                ) {
                  try {
                    Reflect.construct(t, []);
                  } catch (u) {
                    var r = u;
                  }
                  Reflect.construct(e, [], t);
                } else {
                  try {
                    t.call();
                  } catch (u) {
                    r = u;
                  }
                  e.call(t.prototype);
                }
              else {
                try {
                  throw Error();
                } catch (u) {
                  r = u;
                }
                e();
              }
            } catch (u) {
              if (u && r && "string" === typeof u.stack) {
                for (
                  var i = u.stack.split("\n"),
                    a = r.stack.split("\n"),
                    o = i.length - 1,
                    s = a.length - 1;
                  1 <= o && 0 <= s && i[o] !== a[s];

                )
                  s--;
                for (; 1 <= o && 0 <= s; o--, s--)
                  if (i[o] !== a[s]) {
                    if (1 !== o || 1 !== s)
                      do {
                        if ((o--, 0 > --s || i[o] !== a[s])) {
                          var l = "\n" + i[o].replace(" at new ", " at ");
                          return (
                            e.displayName &&
                              l.includes("<anonymous>") &&
                              (l = l.replace("<anonymous>", e.displayName)),
                            l
                          );
                        }
                      } while (1 <= o && 0 <= s);
                    break;
                  }
              }
            } finally {
              (tt = !1), (Error.prepareStackTrace = n);
            }
            return (e = e ? e.displayName || e.name : "") ? et(e) : "";
          }
          var rt = Object.prototype.hasOwnProperty,
            it = [],
            at = -1;
          function ot(e) {
            return { current: e };
          }
          function st(e) {
            0 > at || ((e.current = it[at]), (it[at] = null), at--);
          }
          function lt(e, t) {
            at++, (it[at] = e.current), (e.current = t);
          }
          var ut = {},
            ct = ot(ut),
            dt = ot(!1),
            ft = ut;
          function ht(e, t) {
            var n = e.type.contextTypes;
            if (!n) return ut;
            var r = e.stateNode;
            if (r && r.__reactInternalMemoizedUnmaskedChildContext === t)
              return r.__reactInternalMemoizedMaskedChildContext;
            var i,
              a = {};
            for (i in n) a[i] = t[i];
            return (
              r &&
                (((e =
                  e.stateNode).__reactInternalMemoizedUnmaskedChildContext = t),
                (e.__reactInternalMemoizedMaskedChildContext = a)),
              a
            );
          }
          function pt(e) {
            return null !== (e = e.childContextTypes) && void 0 !== e;
          }
          function vt() {
            st(dt), st(ct);
          }
          function mt(e, t, n) {
            if (ct.current !== ut) throw Error(o(168));
            lt(ct, t), lt(dt, n);
          }
          function gt(e, t, n) {
            var r = e.stateNode;
            if (
              ((t = t.childContextTypes),
              "function" !== typeof r.getChildContext)
            )
              return n;
            for (var i in (r = r.getChildContext()))
              if (!(i in t)) throw Error(o(108, M(e) || "Unknown", i));
            return a({}, n, r);
          }
          function yt(e) {
            return (
              (e =
                ((e = e.stateNode) &&
                  e.__reactInternalMemoizedMergedChildContext) ||
                ut),
              (ft = ct.current),
              lt(ct, e),
              lt(dt, dt.current),
              !0
            );
          }
          function bt(e, t, n) {
            var r = e.stateNode;
            if (!r) throw Error(o(169));
            n
              ? ((e = gt(e, t, ft)),
                (r.__reactInternalMemoizedMergedChildContext = e),
                st(dt),
                st(ct),
                lt(ct, e))
              : st(dt),
              lt(dt, n);
          }
          var _t = Math.clz32
              ? Math.clz32
              : function (e) {
                  return 0 === (e >>>= 0) ? 32 : (31 - ((xt(e) / St) | 0)) | 0;
                },
            xt = Math.log,
            St = Math.LN2;
          var wt = 64,
            Mt = 4194304;
          function Et(e) {
            switch (e & -e) {
              case 1:
                return 1;
              case 2:
                return 2;
              case 4:
                return 4;
              case 8:
                return 8;
              case 16:
                return 16;
              case 32:
                return 32;
              case 64:
              case 128:
              case 256:
              case 512:
              case 1024:
              case 2048:
              case 4096:
              case 8192:
              case 16384:
              case 32768:
              case 65536:
              case 131072:
              case 262144:
              case 524288:
              case 1048576:
              case 2097152:
                return 4194240 & e;
              case 4194304:
              case 8388608:
              case 16777216:
              case 33554432:
              case 67108864:
                return 130023424 & e;
              case 134217728:
                return 134217728;
              case 268435456:
                return 268435456;
              case 536870912:
                return 536870912;
              case 1073741824:
                return 1073741824;
              default:
                return e;
            }
          }
          function kt(e, t) {
            var n = e.pendingLanes;
            if (0 === n) return 0;
            var r = 0,
              i = e.suspendedLanes,
              a = e.pingedLanes,
              o = 268435455 & n;
            if (0 !== o) {
              var s = o & ~i;
              0 !== s ? (r = Et(s)) : 0 !== (a &= o) && (r = Et(a));
            } else 0 !== (o = n & ~i) ? (r = Et(o)) : 0 !== a && (r = Et(a));
            if (0 === r) return 0;
            if (
              0 !== t &&
              t !== r &&
              0 === (t & i) &&
              ((i = r & -r) >= (a = t & -t) ||
                (16 === i && 0 !== (4194240 & a)))
            )
              return t;
            if ((0 !== (4 & r) && (r |= 16 & n), 0 !== (t = e.entangledLanes)))
              for (e = e.entanglements, t &= r; 0 < t; )
                (i = 1 << (n = 31 - _t(t))), (r |= e[n]), (t &= ~i);
            return r;
          }
          function Tt(e, t) {
            switch (e) {
              case 1:
              case 2:
              case 4:
                return t + 250;
              case 8:
              case 16:
              case 32:
              case 64:
              case 128:
              case 256:
              case 512:
              case 1024:
              case 2048:
              case 4096:
              case 8192:
              case 16384:
              case 32768:
              case 65536:
              case 131072:
              case 262144:
              case 524288:
              case 1048576:
              case 2097152:
                return t + 5e3;
              default:
                return -1;
            }
          }
          function At(e) {
            return 0 !== (e = -1073741825 & e.pendingLanes)
              ? e
              : 1073741824 & e
              ? 1073741824
              : 0;
          }
          function Ct(e) {
            for (var t = [], n = 0; 31 > n; n++) t.push(e);
            return t;
          }
          function Pt(e, t, n) {
            (e.pendingLanes |= t),
              536870912 !== t && ((e.suspendedLanes = 0), (e.pingedLanes = 0)),
              ((e = e.eventTimes)[(t = 31 - _t(t))] = n);
          }
          function Rt(e, t) {
            var n = (e.entangledLanes |= t);
            for (e = e.entanglements; n; ) {
              var r = 31 - _t(n),
                i = 1 << r;
              (i & t) | (e[r] & t) && (e[r] |= t), (n &= ~i);
            }
          }
          var Lt = 0;
          function It(e) {
            return 1 < (e &= -e)
              ? 4 < e
                ? 0 !== (268435455 & e)
                  ? 16
                  : 536870912
                : 4
              : 1;
          }
          var Nt = i.unstable_scheduleCallback,
            Ot = i.unstable_cancelCallback,
            Dt = i.unstable_shouldYield,
            Ut = i.unstable_requestPaint,
            zt = i.unstable_now,
            Ft = i.unstable_ImmediatePriority,
            Bt = i.unstable_UserBlockingPriority,
            Zt = i.unstable_NormalPriority,
            Ht = i.unstable_IdlePriority,
            Vt = null,
            Gt = null;
          var Wt =
              "function" === typeof Object.is
                ? Object.is
                : function (e, t) {
                    return (
                      (e === t && (0 !== e || 1 / e === 1 / t)) ||
                      (e !== e && t !== t)
                    );
                  },
            jt = null,
            Xt = !1,
            qt = !1;
          function Yt(e) {
            null === jt ? (jt = [e]) : jt.push(e);
          }
          function Kt() {
            if (!qt && null !== jt) {
              qt = !0;
              var e = 0,
                t = Lt;
              try {
                var n = jt;
                for (Lt = 1; e < n.length; e++) {
                  var r = n[e];
                  do {
                    r = r(!0);
                  } while (null !== r);
                }
                (jt = null), (Xt = !1);
              } catch (i) {
                throw (null !== jt && (jt = jt.slice(e + 1)), Nt(Ft, Kt), i);
              } finally {
                (Lt = t), (qt = !1);
              }
            }
            return null;
          }
          var $t = s.ReactCurrentBatchConfig;
          function Jt(e, t) {
            if (Wt(e, t)) return !0;
            if (
              "object" !== typeof e ||
              null === e ||
              "object" !== typeof t ||
              null === t
            )
              return !1;
            var n = Object.keys(e),
              r = Object.keys(t);
            if (n.length !== r.length) return !1;
            for (r = 0; r < n.length; r++) {
              var i = n[r];
              if (!rt.call(t, i) || !Wt(e[i], t[i])) return !1;
            }
            return !0;
          }
          function Qt(e) {
            switch (e.tag) {
              case 5:
                return et(e.type);
              case 16:
                return et("Lazy");
              case 13:
                return et("Suspense");
              case 19:
                return et("SuspenseList");
              case 0:
              case 2:
              case 15:
                return (e = nt(e.type, !1));
              case 11:
                return (e = nt(e.type.render, !1));
              case 1:
                return (e = nt(e.type, !0));
              default:
                return "";
            }
          }
          function en(e, t) {
            if (e && e.defaultProps) {
              for (var n in ((t = a({}, t)), (e = e.defaultProps)))
                void 0 === t[n] && (t[n] = e[n]);
              return t;
            }
            return t;
          }
          var tn = ot(null),
            nn = null,
            rn = null,
            an = null;
          function on() {
            an = rn = nn = null;
          }
          function sn(e, t, n) {
            X
              ? (lt(tn, t._currentValue), (t._currentValue = n))
              : (lt(tn, t._currentValue2), (t._currentValue2 = n));
          }
          function ln(e) {
            var t = tn.current;
            st(tn), X ? (e._currentValue = t) : (e._currentValue2 = t);
          }
          function un(e, t, n) {
            for (; null !== e; ) {
              var r = e.alternate;
              if (
                ((e.childLanes & t) !== t
                  ? ((e.childLanes |= t), null !== r && (r.childLanes |= t))
                  : null !== r &&
                    (r.childLanes & t) !== t &&
                    (r.childLanes |= t),
                e === n)
              )
                break;
              e = e.return;
            }
          }
          function cn(e, t) {
            (nn = e),
              (an = rn = null),
              null !== (e = e.dependencies) &&
                null !== e.firstContext &&
                (0 !== (e.lanes & t) && (Di = !0), (e.firstContext = null));
          }
          function dn(e) {
            var t = X ? e._currentValue : e._currentValue2;
            if (an !== e)
              if (
                ((e = { context: e, memoizedValue: t, next: null }),
                null === rn)
              ) {
                if (null === nn) throw Error(o(308));
                (rn = e), (nn.dependencies = { lanes: 0, firstContext: e });
              } else rn = rn.next = e;
            return t;
          }
          var fn = null,
            hn = !1;
          function pn(e) {
            e.updateQueue = {
              baseState: e.memoizedState,
              firstBaseUpdate: null,
              lastBaseUpdate: null,
              shared: { pending: null, interleaved: null, lanes: 0 },
              effects: null,
            };
          }
          function vn(e, t) {
            (e = e.updateQueue),
              t.updateQueue === e &&
                (t.updateQueue = {
                  baseState: e.baseState,
                  firstBaseUpdate: e.firstBaseUpdate,
                  lastBaseUpdate: e.lastBaseUpdate,
                  shared: e.shared,
                  effects: e.effects,
                });
          }
          function mn(e, t) {
            return {
              eventTime: e,
              lane: t,
              tag: 0,
              payload: null,
              callback: null,
              next: null,
            };
          }
          function gn(e, t) {
            var n = e.updateQueue;
            null !== n &&
              ((n = n.shared),
              null !== qa && 0 !== (1 & e.mode) && 0 === (2 & Xa)
                ? (null === (e = n.interleaved)
                    ? ((t.next = t), null === fn ? (fn = [n]) : fn.push(n))
                    : ((t.next = e.next), (e.next = t)),
                  (n.interleaved = t))
                : (null === (e = n.pending)
                    ? (t.next = t)
                    : ((t.next = e.next), (e.next = t)),
                  (n.pending = t)));
          }
          function yn(e, t, n) {
            if (
              null !== (t = t.updateQueue) &&
              ((t = t.shared), 0 !== (4194240 & n))
            ) {
              var r = t.lanes;
              (n |= r &= e.pendingLanes), (t.lanes = n), Rt(e, n);
            }
          }
          function bn(e, t) {
            var n = e.updateQueue,
              r = e.alternate;
            if (null !== r && n === (r = r.updateQueue)) {
              var i = null,
                a = null;
              if (null !== (n = n.firstBaseUpdate)) {
                do {
                  var o = {
                    eventTime: n.eventTime,
                    lane: n.lane,
                    tag: n.tag,
                    payload: n.payload,
                    callback: n.callback,
                    next: null,
                  };
                  null === a ? (i = a = o) : (a = a.next = o), (n = n.next);
                } while (null !== n);
                null === a ? (i = a = t) : (a = a.next = t);
              } else i = a = t;
              return (
                (n = {
                  baseState: r.baseState,
                  firstBaseUpdate: i,
                  lastBaseUpdate: a,
                  shared: r.shared,
                  effects: r.effects,
                }),
                void (e.updateQueue = n)
              );
            }
            null === (e = n.lastBaseUpdate)
              ? (n.firstBaseUpdate = t)
              : (e.next = t),
              (n.lastBaseUpdate = t);
          }
          function _n(e, t, n, r) {
            var i = e.updateQueue;
            hn = !1;
            var o = i.firstBaseUpdate,
              s = i.lastBaseUpdate,
              l = i.shared.pending;
            if (null !== l) {
              i.shared.pending = null;
              var u = l,
                c = u.next;
              (u.next = null), null === s ? (o = c) : (s.next = c), (s = u);
              var d = e.alternate;
              null !== d &&
                (l = (d = d.updateQueue).lastBaseUpdate) !== s &&
                (null === l ? (d.firstBaseUpdate = c) : (l.next = c),
                (d.lastBaseUpdate = u));
            }
            if (null !== o) {
              var f = i.baseState;
              for (s = 0, d = c = u = null, l = o; ; ) {
                var h = l.lane,
                  p = l.eventTime;
                if ((r & h) === h) {
                  null !== d &&
                    (d = d.next =
                      {
                        eventTime: p,
                        lane: 0,
                        tag: l.tag,
                        payload: l.payload,
                        callback: l.callback,
                        next: null,
                      });
                  e: {
                    var v = e,
                      m = l;
                    switch (((h = t), (p = n), m.tag)) {
                      case 1:
                        if ("function" === typeof (v = m.payload)) {
                          f = v.call(p, f, h);
                          break e;
                        }
                        f = v;
                        break e;
                      case 3:
                        v.flags = (-65537 & v.flags) | 128;
                      case 0:
                        if (
                          null ===
                            (h =
                              "function" === typeof (v = m.payload)
                                ? v.call(p, f, h)
                                : v) ||
                          void 0 === h
                        )
                          break e;
                        f = a({}, f, h);
                        break e;
                      case 2:
                        hn = !0;
                    }
                  }
                  null !== l.callback &&
                    0 !== l.lane &&
                    ((e.flags |= 64),
                    null === (h = i.effects) ? (i.effects = [l]) : h.push(l));
                } else
                  (p = {
                    eventTime: p,
                    lane: h,
                    tag: l.tag,
                    payload: l.payload,
                    callback: l.callback,
                    next: null,
                  }),
                    null === d ? ((c = d = p), (u = f)) : (d = d.next = p),
                    (s |= h);
                if (null === (l = l.next)) {
                  if (null === (l = i.shared.pending)) break;
                  (l = (h = l).next),
                    (h.next = null),
                    (i.lastBaseUpdate = h),
                    (i.shared.pending = null);
                }
              }
              if (
                (null === d && (u = f),
                (i.baseState = u),
                (i.firstBaseUpdate = c),
                (i.lastBaseUpdate = d),
                null !== (t = i.shared.interleaved))
              ) {
                i = t;
                do {
                  (s |= i.lane), (i = i.next);
                } while (i !== t);
              } else null === o && (i.shared.lanes = 0);
              (to |= s), (e.lanes = s), (e.memoizedState = f);
            }
          }
          function xn(e, t, n) {
            if (((e = t.effects), (t.effects = null), null !== e))
              for (t = 0; t < e.length; t++) {
                var r = e[t],
                  i = r.callback;
                if (null !== i) {
                  if (((r.callback = null), (r = n), "function" !== typeof i))
                    throw Error(o(191, i));
                  i.call(r);
                }
              }
          }
          var Sn = new r.Component().refs;
          function wn(e, t, n, r) {
            (n =
              null === (n = n(r, (t = e.memoizedState))) || void 0 === n
                ? t
                : a({}, t, n)),
              (e.memoizedState = n),
              0 === e.lanes && (e.updateQueue.baseState = n);
          }
          var Mn = {
            isMounted: function (e) {
              return !!(e = e._reactInternals) && E(e) === e;
            },
            enqueueSetState: function (e, t, n) {
              e = e._reactInternals;
              var r = xo(),
                i = So(e),
                a = mn(r, i);
              (a.payload = t),
                void 0 !== n && null !== n && (a.callback = n),
                gn(e, a),
                null !== (t = wo(e, i, r)) && yn(t, e, i);
            },
            enqueueReplaceState: function (e, t, n) {
              e = e._reactInternals;
              var r = xo(),
                i = So(e),
                a = mn(r, i);
              (a.tag = 1),
                (a.payload = t),
                void 0 !== n && null !== n && (a.callback = n),
                gn(e, a),
                null !== (t = wo(e, i, r)) && yn(t, e, i);
            },
            enqueueForceUpdate: function (e, t) {
              e = e._reactInternals;
              var n = xo(),
                r = So(e),
                i = mn(n, r);
              (i.tag = 2),
                void 0 !== t && null !== t && (i.callback = t),
                gn(e, i),
                null !== (t = wo(e, r, n)) && yn(t, e, r);
            },
          };
          function En(e, t, n, r, i, a, o) {
            return "function" === typeof (e = e.stateNode).shouldComponentUpdate
              ? e.shouldComponentUpdate(r, a, o)
              : !t.prototype ||
                  !t.prototype.isPureReactComponent ||
                  !Jt(n, r) ||
                  !Jt(i, a);
          }
          function kn(e, t, n) {
            var r = !1,
              i = ut,
              a = t.contextType;
            return (
              "object" === typeof a && null !== a
                ? (a = dn(a))
                : ((i = pt(t) ? ft : ct.current),
                  (a = (r = null !== (r = t.contextTypes) && void 0 !== r)
                    ? ht(e, i)
                    : ut)),
              (t = new t(n, a)),
              (e.memoizedState =
                null !== t.state && void 0 !== t.state ? t.state : null),
              (t.updater = Mn),
              (e.stateNode = t),
              (t._reactInternals = e),
              r &&
                (((e =
                  e.stateNode).__reactInternalMemoizedUnmaskedChildContext = i),
                (e.__reactInternalMemoizedMaskedChildContext = a)),
              t
            );
          }
          function Tn(e, t, n, r) {
            (e = t.state),
              "function" === typeof t.componentWillReceiveProps &&
                t.componentWillReceiveProps(n, r),
              "function" === typeof t.UNSAFE_componentWillReceiveProps &&
                t.UNSAFE_componentWillReceiveProps(n, r),
              t.state !== e && Mn.enqueueReplaceState(t, t.state, null);
          }
          function An(e, t, n, r) {
            var i = e.stateNode;
            (i.props = n), (i.state = e.memoizedState), (i.refs = Sn), pn(e);
            var a = t.contextType;
            "object" === typeof a && null !== a
              ? (i.context = dn(a))
              : ((a = pt(t) ? ft : ct.current), (i.context = ht(e, a))),
              (i.state = e.memoizedState),
              "function" === typeof (a = t.getDerivedStateFromProps) &&
                (wn(e, t, a, n), (i.state = e.memoizedState)),
              "function" === typeof t.getDerivedStateFromProps ||
                "function" === typeof i.getSnapshotBeforeUpdate ||
                ("function" !== typeof i.UNSAFE_componentWillMount &&
                  "function" !== typeof i.componentWillMount) ||
                ((t = i.state),
                "function" === typeof i.componentWillMount &&
                  i.componentWillMount(),
                "function" === typeof i.UNSAFE_componentWillMount &&
                  i.UNSAFE_componentWillMount(),
                t !== i.state && Mn.enqueueReplaceState(i, i.state, null),
                _n(e, n, i, r),
                (i.state = e.memoizedState)),
              "function" === typeof i.componentDidMount && (e.flags |= 4194308);
          }
          var Cn = [],
            Pn = 0,
            Rn = null,
            Ln = 0,
            In = [],
            Nn = 0,
            On = null,
            Dn = 1,
            Un = "";
          function zn(e, t) {
            (Cn[Pn++] = Ln), (Cn[Pn++] = Rn), (Rn = e), (Ln = t);
          }
          function Fn(e, t, n) {
            (In[Nn++] = Dn), (In[Nn++] = Un), (In[Nn++] = On), (On = e);
            var r = Dn;
            e = Un;
            var i = 32 - _t(r) - 1;
            (r &= ~(1 << i)), (n += 1);
            var a = 32 - _t(t) + i;
            if (30 < a) {
              var o = i - (i % 5);
              (a = (r & ((1 << o) - 1)).toString(32)),
                (r >>= o),
                (i -= o),
                (Dn = (1 << (32 - _t(t) + i)) | (n << i) | r),
                (Un = a + e);
            } else (Dn = (1 << a) | (n << i) | r), (Un = e);
          }
          function Bn(e) {
            null !== e.return && (zn(e, 1), Fn(e, 1, 0));
          }
          function Zn(e) {
            for (; e === Rn; )
              (Rn = Cn[--Pn]),
                (Cn[Pn] = null),
                (Ln = Cn[--Pn]),
                (Cn[Pn] = null);
            for (; e === On; )
              (On = In[--Nn]),
                (In[Nn] = null),
                (Un = In[--Nn]),
                (In[Nn] = null),
                (Dn = In[--Nn]),
                (In[Nn] = null);
          }
          var Hn = null,
            Vn = null,
            Gn = !1,
            Wn = !1,
            jn = null;
          function Xn(e, t) {
            var n = Jo(5, null, null, 0);
            (n.elementType = "DELETED"),
              (n.stateNode = t),
              (n.return = e),
              null === (t = e.deletions)
                ? ((e.deletions = [n]), (e.flags |= 16))
                : t.push(n);
          }
          function qn(e, t) {
            switch (e.tag) {
              case 5:
                return (
                  null !== (t = Ie(t, e.type, e.pendingProps)) &&
                  ((e.stateNode = t), (Hn = e), (Vn = Be(t)), !0)
                );
              case 6:
                return (
                  null !== (t = Ne(t, e.pendingProps)) &&
                  ((e.stateNode = t), (Hn = e), (Vn = null), !0)
                );
              case 13:
                if (null !== (t = Oe(t))) {
                  var n = null !== On ? { id: Dn, overflow: Un } : null;
                  return (
                    (e.memoizedState = {
                      dehydrated: t,
                      treeContext: n,
                      retryLane: 1073741824,
                    }),
                    ((n = Jo(18, null, null, 0)).stateNode = t),
                    (n.return = e),
                    (e.child = n),
                    (Hn = e),
                    (Vn = null),
                    !0
                  );
                }
                return !1;
              default:
                return !1;
            }
          }
          function Yn(e) {
            return 0 !== (1 & e.mode) && 0 === (128 & e.flags);
          }
          function Kn(e) {
            if (Gn) {
              var t = Vn;
              if (t) {
                var n = t;
                if (!qn(e, t)) {
                  if (Yn(e)) throw Error(o(418));
                  t = Fe(n);
                  var r = Hn;
                  t && qn(e, t)
                    ? Xn(r, n)
                    : ((e.flags = (-4097 & e.flags) | 2), (Gn = !1), (Hn = e));
                }
              } else {
                if (Yn(e)) throw Error(o(418));
                (e.flags = (-4097 & e.flags) | 2), (Gn = !1), (Hn = e);
              }
            }
          }
          function $n(e) {
            for (
              e = e.return;
              null !== e && 5 !== e.tag && 3 !== e.tag && 13 !== e.tag;

            )
              e = e.return;
            Hn = e;
          }
          function Jn(e) {
            if (!K || e !== Hn) return !1;
            if (!Gn) return $n(e), (Gn = !0), !1;
            if (
              3 !== e.tag &&
              (5 !== e.tag || ($e(e.type) && !H(e.type, e.memoizedProps)))
            ) {
              var t = Vn;
              if (t) {
                if (Yn(e)) {
                  for (e = Vn; e; ) e = Fe(e);
                  throw Error(o(418));
                }
                for (; t; ) Xn(e, t), (t = Fe(t));
              }
            }
            if (($n(e), 13 === e.tag)) {
              if (!K) throw Error(o(316));
              if (!(e = null !== (e = e.memoizedState) ? e.dehydrated : null))
                throw Error(o(317));
              Vn = je(e);
            } else Vn = Hn ? Fe(e.stateNode) : null;
            return !0;
          }
          function Qn() {
            K && ((Vn = Hn = null), (Wn = Gn = !1));
          }
          function er(e) {
            null === jn ? (jn = [e]) : jn.push(e);
          }
          function tr(e, t, n) {
            if (
              null !== (e = n.ref) &&
              "function" !== typeof e &&
              "object" !== typeof e
            ) {
              if (n._owner) {
                if ((n = n._owner)) {
                  if (1 !== n.tag) throw Error(o(309));
                  var r = n.stateNode;
                }
                if (!r) throw Error(o(147, e));
                var i = r,
                  a = "" + e;
                return null !== t &&
                  null !== t.ref &&
                  "function" === typeof t.ref &&
                  t.ref._stringRef === a
                  ? t.ref
                  : ((t = function (e) {
                      var t = i.refs;
                      t === Sn && (t = i.refs = {}),
                        null === e ? delete t[a] : (t[a] = e);
                    }),
                    (t._stringRef = a),
                    t);
              }
              if ("string" !== typeof e) throw Error(o(284));
              if (!n._owner) throw Error(o(290, e));
            }
            return e;
          }
          function nr(e, t) {
            throw (
              ((e = Object.prototype.toString.call(t)),
              Error(
                o(
                  31,
                  "[object Object]" === e
                    ? "object with keys {" + Object.keys(t).join(", ") + "}"
                    : e
                )
              ))
            );
          }
          function rr(e) {
            return (0, e._init)(e._payload);
          }
          function ir(e) {
            function t(t, n) {
              if (e) {
                var r = t.deletions;
                null === r ? ((t.deletions = [n]), (t.flags |= 16)) : r.push(n);
              }
            }
            function n(n, r) {
              if (!e) return null;
              for (; null !== r; ) t(n, r), (r = r.sibling);
              return null;
            }
            function r(e, t) {
              for (e = new Map(); null !== t; )
                null !== t.key ? e.set(t.key, t) : e.set(t.index, t),
                  (t = t.sibling);
              return e;
            }
            function i(e, t) {
              return ((e = es(e, t)).index = 0), (e.sibling = null), e;
            }
            function a(t, n, r) {
              return (
                (t.index = r),
                e
                  ? null !== (r = t.alternate)
                    ? (r = r.index) < n
                      ? ((t.flags |= 2), n)
                      : r
                    : ((t.flags |= 2), n)
                  : ((t.flags |= 1048576), n)
              );
            }
            function s(t) {
              return e && null === t.alternate && (t.flags |= 2), t;
            }
            function d(e, t, n, r) {
              return null === t || 6 !== t.tag
                ? (((t = is(n, e.mode, r)).return = e), t)
                : (((t = i(t, n)).return = e), t);
            }
            function f(e, t, n, r) {
              var a = n.type;
              return a === c
                ? p(e, t, n.props.children, r, n.key)
                : null !== t &&
                  (t.elementType === a ||
                    ("object" === typeof a &&
                      null !== a &&
                      a.$$typeof === b &&
                      rr(a) === t.type))
                ? (((r = i(t, n.props)).ref = tr(e, t, n)), (r.return = e), r)
                : (((r = ts(n.type, n.key, n.props, null, e.mode, r)).ref = tr(
                    e,
                    t,
                    n
                  )),
                  (r.return = e),
                  r);
            }
            function h(e, t, n, r) {
              return null === t ||
                4 !== t.tag ||
                t.stateNode.containerInfo !== n.containerInfo ||
                t.stateNode.implementation !== n.implementation
                ? (((t = as(n, e.mode, r)).return = e), t)
                : (((t = i(t, n.children || [])).return = e), t);
            }
            function p(e, t, n, r, a) {
              return null === t || 7 !== t.tag
                ? (((t = ns(n, e.mode, r, a)).return = e), t)
                : (((t = i(t, n)).return = e), t);
            }
            function v(e, t, n) {
              if (("string" === typeof t && "" !== t) || "number" === typeof t)
                return ((t = is("" + t, e.mode, n)).return = e), t;
              if ("object" === typeof t && null !== t) {
                switch (t.$$typeof) {
                  case l:
                    return (
                      ((n = ts(t.type, t.key, t.props, null, e.mode, n)).ref =
                        tr(e, null, t)),
                      (n.return = e),
                      n
                    );
                  case u:
                    return ((t = as(t, e.mode, n)).return = e), t;
                  case b:
                    return v(e, (0, t._init)(t._payload), n);
                }
                if (L(t) || S(t))
                  return ((t = ns(t, e.mode, n, null)).return = e), t;
                nr(e, t);
              }
              return null;
            }
            function m(e, t, n, r) {
              var i = null !== t ? t.key : null;
              if (("string" === typeof n && "" !== n) || "number" === typeof n)
                return null !== i ? null : d(e, t, "" + n, r);
              if ("object" === typeof n && null !== n) {
                switch (n.$$typeof) {
                  case l:
                    return n.key === i ? f(e, t, n, r) : null;
                  case u:
                    return n.key === i ? h(e, t, n, r) : null;
                  case b:
                    return m(e, t, (i = n._init)(n._payload), r);
                }
                if (L(n) || S(n))
                  return null !== i ? null : p(e, t, n, r, null);
                nr(e, n);
              }
              return null;
            }
            function g(e, t, n, r, i) {
              if (("string" === typeof r && "" !== r) || "number" === typeof r)
                return d(t, (e = e.get(n) || null), "" + r, i);
              if ("object" === typeof r && null !== r) {
                switch (r.$$typeof) {
                  case l:
                    return f(
                      t,
                      (e = e.get(null === r.key ? n : r.key) || null),
                      r,
                      i
                    );
                  case u:
                    return h(
                      t,
                      (e = e.get(null === r.key ? n : r.key) || null),
                      r,
                      i
                    );
                  case b:
                    return g(e, t, n, (0, r._init)(r._payload), i);
                }
                if (L(r) || S(r))
                  return p(t, (e = e.get(n) || null), r, i, null);
                nr(t, r);
              }
              return null;
            }
            function y(i, o, s, l) {
              for (
                var u = null, c = null, d = o, f = (o = 0), h = null;
                null !== d && f < s.length;
                f++
              ) {
                d.index > f ? ((h = d), (d = null)) : (h = d.sibling);
                var p = m(i, d, s[f], l);
                if (null === p) {
                  null === d && (d = h);
                  break;
                }
                e && d && null === p.alternate && t(i, d),
                  (o = a(p, o, f)),
                  null === c ? (u = p) : (c.sibling = p),
                  (c = p),
                  (d = h);
              }
              if (f === s.length) return n(i, d), Gn && zn(i, f), u;
              if (null === d) {
                for (; f < s.length; f++)
                  null !== (d = v(i, s[f], l)) &&
                    ((o = a(d, o, f)),
                    null === c ? (u = d) : (c.sibling = d),
                    (c = d));
                return Gn && zn(i, f), u;
              }
              for (d = r(i, d); f < s.length; f++)
                null !== (h = g(d, i, f, s[f], l)) &&
                  (e &&
                    null !== h.alternate &&
                    d.delete(null === h.key ? f : h.key),
                  (o = a(h, o, f)),
                  null === c ? (u = h) : (c.sibling = h),
                  (c = h));
              return (
                e &&
                  d.forEach(function (e) {
                    return t(i, e);
                  }),
                Gn && zn(i, f),
                u
              );
            }
            function _(i, s, l, u) {
              var c = S(l);
              if ("function" !== typeof c) throw Error(o(150));
              if (null == (l = c.call(l))) throw Error(o(151));
              for (
                var d = (c = null), f = s, h = (s = 0), p = null, y = l.next();
                null !== f && !y.done;
                h++, y = l.next()
              ) {
                f.index > h ? ((p = f), (f = null)) : (p = f.sibling);
                var b = m(i, f, y.value, u);
                if (null === b) {
                  null === f && (f = p);
                  break;
                }
                e && f && null === b.alternate && t(i, f),
                  (s = a(b, s, h)),
                  null === d ? (c = b) : (d.sibling = b),
                  (d = b),
                  (f = p);
              }
              if (y.done) return n(i, f), Gn && zn(i, h), c;
              if (null === f) {
                for (; !y.done; h++, y = l.next())
                  null !== (y = v(i, y.value, u)) &&
                    ((s = a(y, s, h)),
                    null === d ? (c = y) : (d.sibling = y),
                    (d = y));
                return Gn && zn(i, h), c;
              }
              for (f = r(i, f); !y.done; h++, y = l.next())
                null !== (y = g(f, i, h, y.value, u)) &&
                  (e &&
                    null !== y.alternate &&
                    f.delete(null === y.key ? h : y.key),
                  (s = a(y, s, h)),
                  null === d ? (c = y) : (d.sibling = y),
                  (d = y));
              return (
                e &&
                  f.forEach(function (e) {
                    return t(i, e);
                  }),
                Gn && zn(i, h),
                c
              );
            }
            return function e(r, a, o, d) {
              if (
                ("object" === typeof o &&
                  null !== o &&
                  o.type === c &&
                  null === o.key &&
                  (o = o.props.children),
                "object" === typeof o && null !== o)
              ) {
                switch (o.$$typeof) {
                  case l:
                    e: {
                      for (var f = o.key, h = a; null !== h; ) {
                        if (h.key === f) {
                          if ((f = o.type) === c) {
                            if (7 === h.tag) {
                              n(r, h.sibling),
                                ((a = i(h, o.props.children)).return = r),
                                (r = a);
                              break e;
                            }
                          } else if (
                            h.elementType === f ||
                            ("object" === typeof f &&
                              null !== f &&
                              f.$$typeof === b &&
                              rr(f) === h.type)
                          ) {
                            n(r, h.sibling),
                              ((a = i(h, o.props)).ref = tr(r, h, o)),
                              (a.return = r),
                              (r = a);
                            break e;
                          }
                          n(r, h);
                          break;
                        }
                        t(r, h), (h = h.sibling);
                      }
                      o.type === c
                        ? (((a = ns(
                            o.props.children,
                            r.mode,
                            d,
                            o.key
                          )).return = r),
                          (r = a))
                        : (((d = ts(
                            o.type,
                            o.key,
                            o.props,
                            null,
                            r.mode,
                            d
                          )).ref = tr(r, a, o)),
                          (d.return = r),
                          (r = d));
                    }
                    return s(r);
                  case u:
                    e: {
                      for (h = o.key; null !== a; ) {
                        if (a.key === h) {
                          if (
                            4 === a.tag &&
                            a.stateNode.containerInfo === o.containerInfo &&
                            a.stateNode.implementation === o.implementation
                          ) {
                            n(r, a.sibling),
                              ((a = i(a, o.children || [])).return = r),
                              (r = a);
                            break e;
                          }
                          n(r, a);
                          break;
                        }
                        t(r, a), (a = a.sibling);
                      }
                      ((a = as(o, r.mode, d)).return = r), (r = a);
                    }
                    return s(r);
                  case b:
                    return e(r, a, (h = o._init)(o._payload), d);
                }
                if (L(o)) return y(r, a, o, d);
                if (S(o)) return _(r, a, o, d);
                nr(r, o);
              }
              return ("string" === typeof o && "" !== o) ||
                "number" === typeof o
                ? ((o = "" + o),
                  null !== a && 6 === a.tag
                    ? (n(r, a.sibling), ((a = i(a, o)).return = r), (r = a))
                    : (n(r, a), ((a = is(o, r.mode, d)).return = r), (r = a)),
                  s(r))
                : n(r, a);
            };
          }
          var ar = ir(!0),
            or = ir(!1),
            sr = {},
            lr = ot(sr),
            ur = ot(sr),
            cr = ot(sr);
          function dr(e) {
            if (e === sr) throw Error(o(174));
            return e;
          }
          function fr(e, t) {
            lt(cr, t), lt(ur, e), lt(lr, sr), (e = N(t)), st(lr), lt(lr, e);
          }
          function hr() {
            st(lr), st(ur), st(cr);
          }
          function pr(e) {
            var t = dr(cr.current),
              n = dr(lr.current);
            n !== (t = O(n, e.type, t)) && (lt(ur, e), lt(lr, t));
          }
          function vr(e) {
            ur.current === e && (st(lr), st(ur));
          }
          var mr = ot(0);
          function gr(e) {
            for (var t = e; null !== t; ) {
              if (13 === t.tag) {
                var n = t.memoizedState;
                if (
                  null !== n &&
                  (null === (n = n.dehydrated) || De(n) || Ue(n))
                )
                  return t;
              } else if (
                19 === t.tag &&
                void 0 !== t.memoizedProps.revealOrder
              ) {
                if (0 !== (128 & t.flags)) return t;
              } else if (null !== t.child) {
                (t.child.return = t), (t = t.child);
                continue;
              }
              if (t === e) break;
              for (; null === t.sibling; ) {
                if (null === t.return || t.return === e) return null;
                t = t.return;
              }
              (t.sibling.return = t.return), (t = t.sibling);
            }
            return null;
          }
          var yr = [];
          function br() {
            for (var e = 0; e < yr.length; e++) {
              var t = yr[e];
              X
                ? (t._workInProgressVersionPrimary = null)
                : (t._workInProgressVersionSecondary = null);
            }
            yr.length = 0;
          }
          var _r = s.ReactCurrentDispatcher,
            xr = s.ReactCurrentBatchConfig,
            Sr = 0,
            wr = null,
            Mr = null,
            Er = null,
            kr = !1,
            Tr = !1,
            Ar = 0,
            Cr = 0;
          function Pr() {
            throw Error(o(321));
          }
          function Rr(e, t) {
            if (null === t) return !1;
            for (var n = 0; n < t.length && n < e.length; n++)
              if (!Wt(e[n], t[n])) return !1;
            return !0;
          }
          function Lr(e, t, n, r, i, a) {
            if (
              ((Sr = a),
              (wr = t),
              (t.memoizedState = null),
              (t.updateQueue = null),
              (t.lanes = 0),
              (_r.current = null === e || null === e.memoizedState ? pi : vi),
              (e = n(r, i)),
              Tr)
            ) {
              a = 0;
              do {
                if (((Tr = !1), (Ar = 0), 25 <= a)) throw Error(o(301));
                (a += 1),
                  (Er = Mr = null),
                  (t.updateQueue = null),
                  (_r.current = mi),
                  (e = n(r, i));
              } while (Tr);
            }
            if (
              ((_r.current = hi),
              (t = null !== Mr && null !== Mr.next),
              (Sr = 0),
              (Er = Mr = wr = null),
              (kr = !1),
              t)
            )
              throw Error(o(300));
            return e;
          }
          function Ir() {
            var e = 0 !== Ar;
            return (Ar = 0), e;
          }
          function Nr() {
            var e = {
              memoizedState: null,
              baseState: null,
              baseQueue: null,
              queue: null,
              next: null,
            };
            return (
              null === Er ? (wr.memoizedState = Er = e) : (Er = Er.next = e), Er
            );
          }
          function Or() {
            if (null === Mr) {
              var e = wr.alternate;
              e = null !== e ? e.memoizedState : null;
            } else e = Mr.next;
            var t = null === Er ? wr.memoizedState : Er.next;
            if (null !== t) (Er = t), (Mr = e);
            else {
              if (null === e) throw Error(o(310));
              (e = {
                memoizedState: (Mr = e).memoizedState,
                baseState: Mr.baseState,
                baseQueue: Mr.baseQueue,
                queue: Mr.queue,
                next: null,
              }),
                null === Er ? (wr.memoizedState = Er = e) : (Er = Er.next = e);
            }
            return Er;
          }
          function Dr(e, t) {
            return "function" === typeof t ? t(e) : t;
          }
          function Ur(e) {
            var t = Or(),
              n = t.queue;
            if (null === n) throw Error(o(311));
            n.lastRenderedReducer = e;
            var r = Mr,
              i = r.baseQueue,
              a = n.pending;
            if (null !== a) {
              if (null !== i) {
                var s = i.next;
                (i.next = a.next), (a.next = s);
              }
              (r.baseQueue = i = a), (n.pending = null);
            }
            if (null !== i) {
              (a = i.next), (r = r.baseState);
              var l = (s = null),
                u = null,
                c = a;
              do {
                var d = c.lane;
                if ((Sr & d) === d)
                  null !== u &&
                    (u = u.next =
                      {
                        lane: 0,
                        action: c.action,
                        hasEagerState: c.hasEagerState,
                        eagerState: c.eagerState,
                        next: null,
                      }),
                    (r = c.hasEagerState ? c.eagerState : e(r, c.action));
                else {
                  var f = {
                    lane: d,
                    action: c.action,
                    hasEagerState: c.hasEagerState,
                    eagerState: c.eagerState,
                    next: null,
                  };
                  null === u ? ((l = u = f), (s = r)) : (u = u.next = f),
                    (wr.lanes |= d),
                    (to |= d);
                }
                c = c.next;
              } while (null !== c && c !== a);
              null === u ? (s = r) : (u.next = l),
                Wt(r, t.memoizedState) || (Di = !0),
                (t.memoizedState = r),
                (t.baseState = s),
                (t.baseQueue = u),
                (n.lastRenderedState = r);
            }
            if (null !== (e = n.interleaved)) {
              i = e;
              do {
                (a = i.lane), (wr.lanes |= a), (to |= a), (i = i.next);
              } while (i !== e);
            } else null === i && (n.lanes = 0);
            return [t.memoizedState, n.dispatch];
          }
          function zr(e) {
            var t = Or(),
              n = t.queue;
            if (null === n) throw Error(o(311));
            n.lastRenderedReducer = e;
            var r = n.dispatch,
              i = n.pending,
              a = t.memoizedState;
            if (null !== i) {
              n.pending = null;
              var s = (i = i.next);
              do {
                (a = e(a, s.action)), (s = s.next);
              } while (s !== i);
              Wt(a, t.memoizedState) || (Di = !0),
                (t.memoizedState = a),
                null === t.baseQueue && (t.baseState = a),
                (n.lastRenderedState = a);
            }
            return [a, r];
          }
          function Fr() {}
          function Br(e, t) {
            var n = wr,
              r = Or(),
              i = t(),
              a = !Wt(r.memoizedState, i);
            if (
              (a && ((r.memoizedState = i), (Di = !0)),
              (r = r.queue),
              $r(Vr.bind(null, n, r, e), [e]),
              r.getSnapshot !== t ||
                a ||
                (null !== Er && 1 & Er.memoizedState.tag))
            ) {
              if (
                ((n.flags |= 2048),
                jr(9, Hr.bind(null, n, r, i, t), void 0, null),
                null === qa)
              )
                throw Error(o(349));
              0 !== (30 & Sr) || Zr(n, t, i);
            }
            return i;
          }
          function Zr(e, t, n) {
            (e.flags |= 16384),
              (e = { getSnapshot: t, value: n }),
              null === (t = wr.updateQueue)
                ? ((t = { lastEffect: null, stores: null }),
                  (wr.updateQueue = t),
                  (t.stores = [e]))
                : null === (n = t.stores)
                ? (t.stores = [e])
                : n.push(e);
          }
          function Hr(e, t, n, r) {
            (t.value = n), (t.getSnapshot = r), Gr(t) && wo(e, 1, -1);
          }
          function Vr(e, t, n) {
            return n(function () {
              Gr(t) && wo(e, 1, -1);
            });
          }
          function Gr(e) {
            var t = e.getSnapshot;
            e = e.value;
            try {
              var n = t();
              return !Wt(e, n);
            } catch (r) {
              return !0;
            }
          }
          function Wr(e) {
            var t = Nr();
            return (
              "function" === typeof e && (e = e()),
              (t.memoizedState = t.baseState = e),
              (e = {
                pending: null,
                interleaved: null,
                lanes: 0,
                dispatch: null,
                lastRenderedReducer: Dr,
                lastRenderedState: e,
              }),
              (t.queue = e),
              (e = e.dispatch = li.bind(null, wr, e)),
              [t.memoizedState, e]
            );
          }
          function jr(e, t, n, r) {
            return (
              (e = { tag: e, create: t, destroy: n, deps: r, next: null }),
              null === (t = wr.updateQueue)
                ? ((t = { lastEffect: null, stores: null }),
                  (wr.updateQueue = t),
                  (t.lastEffect = e.next = e))
                : null === (n = t.lastEffect)
                ? (t.lastEffect = e.next = e)
                : ((r = n.next),
                  (n.next = e),
                  (e.next = r),
                  (t.lastEffect = e)),
              e
            );
          }
          function Xr() {
            return Or().memoizedState;
          }
          function qr(e, t, n, r) {
            var i = Nr();
            (wr.flags |= e),
              (i.memoizedState = jr(1 | t, n, void 0, void 0 === r ? null : r));
          }
          function Yr(e, t, n, r) {
            var i = Or();
            r = void 0 === r ? null : r;
            var a = void 0;
            if (null !== Mr) {
              var o = Mr.memoizedState;
              if (((a = o.destroy), null !== r && Rr(r, o.deps)))
                return void (i.memoizedState = jr(t, n, a, r));
            }
            (wr.flags |= e), (i.memoizedState = jr(1 | t, n, a, r));
          }
          function Kr(e, t) {
            return qr(8390656, 8, e, t);
          }
          function $r(e, t) {
            return Yr(2048, 8, e, t);
          }
          function Jr(e, t) {
            return Yr(4, 2, e, t);
          }
          function Qr(e, t) {
            return Yr(4, 4, e, t);
          }
          function ei(e, t) {
            return "function" === typeof t
              ? ((e = e()),
                t(e),
                function () {
                  t(null);
                })
              : null !== t && void 0 !== t
              ? ((e = e()),
                (t.current = e),
                function () {
                  t.current = null;
                })
              : void 0;
          }
          function ti(e, t, n) {
            return (
              (n = null !== n && void 0 !== n ? n.concat([e]) : null),
              Yr(4, 4, ei.bind(null, t, e), n)
            );
          }
          function ni() {}
          function ri(e, t) {
            var n = Or();
            t = void 0 === t ? null : t;
            var r = n.memoizedState;
            return null !== r && null !== t && Rr(t, r[1])
              ? r[0]
              : ((n.memoizedState = [e, t]), e);
          }
          function ii(e, t) {
            var n = Or();
            t = void 0 === t ? null : t;
            var r = n.memoizedState;
            return null !== r && null !== t && Rr(t, r[1])
              ? r[0]
              : ((e = e()), (n.memoizedState = [e, t]), e);
          }
          function ai(e, t) {
            var n = Lt;
            (Lt = 0 !== n && 4 > n ? n : 4), e(!0);
            var r = xr.transition;
            xr.transition = {};
            try {
              e(!1), t();
            } finally {
              (Lt = n), (xr.transition = r);
            }
          }
          function oi() {
            return Or().memoizedState;
          }
          function si(e, t, n) {
            var r = So(e);
            (n = {
              lane: r,
              action: n,
              hasEagerState: !1,
              eagerState: null,
              next: null,
            }),
              ui(e)
                ? ci(t, n)
                : (di(e, t, n),
                  null !== (e = wo(e, r, (n = xo()))) && fi(e, t, r));
          }
          function li(e, t, n) {
            var r = So(e),
              i = {
                lane: r,
                action: n,
                hasEagerState: !1,
                eagerState: null,
                next: null,
              };
            if (ui(e)) ci(t, i);
            else {
              di(e, t, i);
              var a = e.alternate;
              if (
                0 === e.lanes &&
                (null === a || 0 === a.lanes) &&
                null !== (a = t.lastRenderedReducer)
              )
                try {
                  var o = t.lastRenderedState,
                    s = a(o, n);
                  if (((i.hasEagerState = !0), (i.eagerState = s), Wt(s, o)))
                    return;
                } catch (l) {}
              null !== (e = wo(e, r, (n = xo()))) && fi(e, t, r);
            }
          }
          function ui(e) {
            var t = e.alternate;
            return e === wr || (null !== t && t === wr);
          }
          function ci(e, t) {
            Tr = kr = !0;
            var n = e.pending;
            null === n ? (t.next = t) : ((t.next = n.next), (n.next = t)),
              (e.pending = t);
          }
          function di(e, t, n) {
            null !== qa && 0 !== (1 & e.mode) && 0 === (2 & Xa)
              ? (null === (e = t.interleaved)
                  ? ((n.next = n), null === fn ? (fn = [t]) : fn.push(t))
                  : ((n.next = e.next), (e.next = n)),
                (t.interleaved = n))
              : (null === (e = t.pending)
                  ? (n.next = n)
                  : ((n.next = e.next), (e.next = n)),
                (t.pending = n));
          }
          function fi(e, t, n) {
            if (0 !== (4194240 & n)) {
              var r = t.lanes;
              (n |= r &= e.pendingLanes), (t.lanes = n), Rt(e, n);
            }
          }
          var hi = {
              readContext: dn,
              useCallback: Pr,
              useContext: Pr,
              useEffect: Pr,
              useImperativeHandle: Pr,
              useInsertionEffect: Pr,
              useLayoutEffect: Pr,
              useMemo: Pr,
              useReducer: Pr,
              useRef: Pr,
              useState: Pr,
              useDebugValue: Pr,
              useDeferredValue: Pr,
              useTransition: Pr,
              useMutableSource: Pr,
              useSyncExternalStore: Pr,
              useId: Pr,
              unstable_isNewReconciler: !1,
            },
            pi = {
              readContext: dn,
              useCallback: function (e, t) {
                return (Nr().memoizedState = [e, void 0 === t ? null : t]), e;
              },
              useContext: dn,
              useEffect: Kr,
              useImperativeHandle: function (e, t, n) {
                return (
                  (n = null !== n && void 0 !== n ? n.concat([e]) : null),
                  qr(4194308, 4, ei.bind(null, t, e), n)
                );
              },
              useLayoutEffect: function (e, t) {
                return qr(4194308, 4, e, t);
              },
              useInsertionEffect: function (e, t) {
                return qr(4, 2, e, t);
              },
              useMemo: function (e, t) {
                var n = Nr();
                return (
                  (t = void 0 === t ? null : t),
                  (e = e()),
                  (n.memoizedState = [e, t]),
                  e
                );
              },
              useReducer: function (e, t, n) {
                var r = Nr();
                return (
                  (t = void 0 !== n ? n(t) : t),
                  (r.memoizedState = r.baseState = t),
                  (e = {
                    pending: null,
                    interleaved: null,
                    lanes: 0,
                    dispatch: null,
                    lastRenderedReducer: e,
                    lastRenderedState: t,
                  }),
                  (r.queue = e),
                  (e = e.dispatch = si.bind(null, wr, e)),
                  [r.memoizedState, e]
                );
              },
              useRef: function (e) {
                return (e = { current: e }), (Nr().memoizedState = e);
              },
              useState: Wr,
              useDebugValue: ni,
              useDeferredValue: function (e) {
                var t = Wr(e),
                  n = t[0],
                  r = t[1];
                return (
                  Kr(
                    function () {
                      var t = xr.transition;
                      xr.transition = {};
                      try {
                        r(e);
                      } finally {
                        xr.transition = t;
                      }
                    },
                    [e]
                  ),
                  n
                );
              },
              useTransition: function () {
                var e = Wr(!1),
                  t = e[0];
                return (
                  (e = ai.bind(null, e[1])), (Nr().memoizedState = e), [t, e]
                );
              },
              useMutableSource: function () {},
              useSyncExternalStore: function (e, t, n) {
                var r = wr,
                  i = Nr();
                if (Gn) {
                  if (void 0 === n) throw Error(o(407));
                  n = n();
                } else {
                  if (((n = t()), null === qa)) throw Error(o(349));
                  0 !== (30 & Sr) || Zr(r, t, n);
                }
                i.memoizedState = n;
                var a = { value: n, getSnapshot: t };
                return (
                  (i.queue = a),
                  Kr(Vr.bind(null, r, a, e), [e]),
                  (r.flags |= 2048),
                  jr(9, Hr.bind(null, r, a, n, t), void 0, null),
                  n
                );
              },
              useId: function () {
                var e = Nr(),
                  t = qa.identifierPrefix;
                if (Gn) {
                  var n = Un;
                  (t =
                    ":" +
                    t +
                    "R" +
                    (n = (Dn & ~(1 << (32 - _t(Dn) - 1))).toString(32) + n)),
                    0 < (n = Ar++) && (t += "H" + n.toString(32)),
                    (t += ":");
                } else t = ":" + t + "r" + (n = Cr++).toString(32) + ":";
                return (e.memoizedState = t);
              },
              unstable_isNewReconciler: !1,
            },
            vi = {
              readContext: dn,
              useCallback: ri,
              useContext: dn,
              useEffect: $r,
              useImperativeHandle: ti,
              useInsertionEffect: Jr,
              useLayoutEffect: Qr,
              useMemo: ii,
              useReducer: Ur,
              useRef: Xr,
              useState: function () {
                return Ur(Dr);
              },
              useDebugValue: ni,
              useDeferredValue: function (e) {
                var t = Ur(Dr),
                  n = t[0],
                  r = t[1];
                return (
                  $r(
                    function () {
                      var t = xr.transition;
                      xr.transition = {};
                      try {
                        r(e);
                      } finally {
                        xr.transition = t;
                      }
                    },
                    [e]
                  ),
                  n
                );
              },
              useTransition: function () {
                return [Ur(Dr)[0], Or().memoizedState];
              },
              useMutableSource: Fr,
              useSyncExternalStore: Br,
              useId: oi,
              unstable_isNewReconciler: !1,
            },
            mi = {
              readContext: dn,
              useCallback: ri,
              useContext: dn,
              useEffect: $r,
              useImperativeHandle: ti,
              useInsertionEffect: Jr,
              useLayoutEffect: Qr,
              useMemo: ii,
              useReducer: zr,
              useRef: Xr,
              useState: function () {
                return zr(Dr);
              },
              useDebugValue: ni,
              useDeferredValue: function (e) {
                var t = zr(Dr),
                  n = t[0],
                  r = t[1];
                return (
                  $r(
                    function () {
                      var t = xr.transition;
                      xr.transition = {};
                      try {
                        r(e);
                      } finally {
                        xr.transition = t;
                      }
                    },
                    [e]
                  ),
                  n
                );
              },
              useTransition: function () {
                return [zr(Dr)[0], Or().memoizedState];
              },
              useMutableSource: Fr,
              useSyncExternalStore: Br,
              useId: oi,
              unstable_isNewReconciler: !1,
            };
          function gi(e, t) {
            try {
              var n = "",
                r = t;
              do {
                (n += Qt(r)), (r = r.return);
              } while (r);
              var i = n;
            } catch (a) {
              i = "\nError generating stack: " + a.message + "\n" + a.stack;
            }
            return { value: e, source: t, stack: i };
          }
          function yi(e, t) {
            try {
              console.error(t.value);
            } catch (n) {
              setTimeout(function () {
                throw n;
              });
            }
          }
          var bi,
            _i,
            xi,
            Si,
            wi = "function" === typeof WeakMap ? WeakMap : Map;
          function Mi(e, t, n) {
            ((n = mn(-1, n)).tag = 3), (n.payload = { element: null });
            var r = t.value;
            return (
              (n.callback = function () {
                co || ((co = !0), (fo = r)), yi(0, t);
              }),
              n
            );
          }
          function Ei(e, t, n) {
            (n = mn(-1, n)).tag = 3;
            var r = e.type.getDerivedStateFromError;
            if ("function" === typeof r) {
              var i = t.value;
              (n.payload = function () {
                return r(i);
              }),
                (n.callback = function () {
                  yi(0, t);
                });
            }
            var a = e.stateNode;
            return (
              null !== a &&
                "function" === typeof a.componentDidCatch &&
                (n.callback = function () {
                  yi(0, t),
                    "function" !== typeof r &&
                      (null === ho ? (ho = new Set([this])) : ho.add(this));
                  var e = t.stack;
                  this.componentDidCatch(t.value, {
                    componentStack: null !== e ? e : "",
                  });
                }),
              n
            );
          }
          function ki(e, t, n) {
            var r = e.pingCache;
            if (null === r) {
              r = e.pingCache = new wi();
              var i = new Set();
              r.set(t, i);
            } else void 0 === (i = r.get(t)) && ((i = new Set()), r.set(t, i));
            i.has(n) || (i.add(n), (e = jo.bind(null, e, t, n)), t.then(e, e));
          }
          function Ti(e) {
            do {
              var t;
              if (
                ((t = 13 === e.tag) &&
                  (t = null === (t = e.memoizedState) || null !== t.dehydrated),
                t)
              )
                return e;
              e = e.return;
            } while (null !== e);
            return null;
          }
          function Ai(e, t, n, r, i) {
            return 0 === (1 & e.mode)
              ? (e === t
                  ? (e.flags |= 65536)
                  : ((e.flags |= 128),
                    (n.flags |= 131072),
                    (n.flags &= -52805),
                    1 === n.tag &&
                      (null === n.alternate
                        ? (n.tag = 17)
                        : (((t = mn(-1, 1)).tag = 2), gn(n, t))),
                    (n.lanes |= 1)),
                e)
              : ((e.flags |= 65536), (e.lanes = i), e);
          }
          function Ci(e) {
            e.flags |= 4;
          }
          function Pi(e, t) {
            if (null !== e && e.child === t.child) return !0;
            if (0 !== (16 & t.flags)) return !1;
            for (e = t.child; null !== e; ) {
              if (0 !== (12854 & e.flags) || 0 !== (12854 & e.subtreeFlags))
                return !1;
              e = e.sibling;
            }
            return !0;
          }
          if (q)
            (bi = function (e, t) {
              for (var n = t.child; null !== n; ) {
                if (5 === n.tag || 6 === n.tag) F(e, n.stateNode);
                else if (4 !== n.tag && null !== n.child) {
                  (n.child.return = n), (n = n.child);
                  continue;
                }
                if (n === t) break;
                for (; null === n.sibling; ) {
                  if (null === n.return || n.return === t) return;
                  n = n.return;
                }
                (n.sibling.return = n.return), (n = n.sibling);
              }
            }),
              (_i = function () {}),
              (xi = function (e, t, n, r, i) {
                if ((e = e.memoizedProps) !== r) {
                  var a = t.stateNode,
                    o = dr(lr.current);
                  (n = Z(a, n, e, r, i, o)), (t.updateQueue = n) && Ci(t);
                }
              }),
              (Si = function (e, t, n, r) {
                n !== r && Ci(t);
              });
          else if (Y) {
            bi = function (e, t, n, r) {
              for (var i = t.child; null !== i; ) {
                if (5 === i.tag) {
                  var a = i.stateNode;
                  n && r && (a = Re(a, i.type, i.memoizedProps, i)), F(e, a);
                } else if (6 === i.tag)
                  (a = i.stateNode),
                    n && r && (a = Le(a, i.memoizedProps, i)),
                    F(e, a);
                else if (4 !== i.tag)
                  if (22 === i.tag && null !== i.memoizedState)
                    null !== (a = i.child) && (a.return = i), bi(e, i, !0, !0);
                  else if (null !== i.child) {
                    (i.child.return = i), (i = i.child);
                    continue;
                  }
                if (i === t) break;
                for (; null === i.sibling; ) {
                  if (null === i.return || i.return === t) return;
                  i = i.return;
                }
                (i.sibling.return = i.return), (i = i.sibling);
              }
            };
            var Ri = function e(t, n, r, i) {
              for (var a = n.child; null !== a; ) {
                if (5 === a.tag) {
                  var o = a.stateNode;
                  r && i && (o = Re(o, a.type, a.memoizedProps, a)), Ae(t, o);
                } else if (6 === a.tag)
                  (o = a.stateNode),
                    r && i && (o = Le(o, a.memoizedProps, a)),
                    Ae(t, o);
                else if (4 !== a.tag)
                  if (22 === a.tag && null !== a.memoizedState)
                    null !== (o = a.child) && (o.return = a), e(t, a, !0, !0);
                  else if (null !== a.child) {
                    (a.child.return = a), (a = a.child);
                    continue;
                  }
                if (a === n) break;
                for (; null === a.sibling; ) {
                  if (null === a.return || a.return === n) return;
                  a = a.return;
                }
                (a.sibling.return = a.return), (a = a.sibling);
              }
            };
            (_i = function (e, t) {
              var n = t.stateNode;
              if (!Pi(e, t)) {
                e = n.containerInfo;
                var r = Te(e);
                Ri(r, t, !1, !1), (n.pendingChildren = r), Ci(t), Ce(e, r);
              }
            }),
              (xi = function (e, t, n, r, i) {
                var a = e.stateNode,
                  o = e.memoizedProps;
                if ((e = Pi(e, t)) && o === r) t.stateNode = a;
                else {
                  var s = t.stateNode,
                    l = dr(lr.current),
                    u = null;
                  o !== r && (u = Z(s, n, o, r, i, l)),
                    e && null === u
                      ? (t.stateNode = a)
                      : ((a = ke(a, u, n, o, r, t, e, s)),
                        B(a, n, r, i, l) && Ci(t),
                        (t.stateNode = a),
                        e ? Ci(t) : bi(a, t, !1, !1));
                }
              }),
              (Si = function (e, t, n, r) {
                n !== r
                  ? ((e = dr(cr.current)),
                    (n = dr(lr.current)),
                    (t.stateNode = V(r, e, n, t)),
                    Ci(t))
                  : (t.stateNode = e.stateNode);
              });
          } else
            (_i = function () {}), (xi = function () {}), (Si = function () {});
          function Li(e, t) {
            if (!Gn)
              switch (e.tailMode) {
                case "hidden":
                  t = e.tail;
                  for (var n = null; null !== t; )
                    null !== t.alternate && (n = t), (t = t.sibling);
                  null === n ? (e.tail = null) : (n.sibling = null);
                  break;
                case "collapsed":
                  n = e.tail;
                  for (var r = null; null !== n; )
                    null !== n.alternate && (r = n), (n = n.sibling);
                  null === r
                    ? t || null === e.tail
                      ? (e.tail = null)
                      : (e.tail.sibling = null)
                    : (r.sibling = null);
              }
          }
          function Ii(e) {
            var t = null !== e.alternate && e.alternate.child === e.child,
              n = 0,
              r = 0;
            if (t)
              for (var i = e.child; null !== i; )
                (n |= i.lanes | i.childLanes),
                  (r |= 14680064 & i.subtreeFlags),
                  (r |= 14680064 & i.flags),
                  (i.return = e),
                  (i = i.sibling);
            else
              for (i = e.child; null !== i; )
                (n |= i.lanes | i.childLanes),
                  (r |= i.subtreeFlags),
                  (r |= i.flags),
                  (i.return = e),
                  (i = i.sibling);
            return (e.subtreeFlags |= r), (e.childLanes = n), t;
          }
          function Ni(e, t, n) {
            var r = t.pendingProps;
            switch ((Zn(t), t.tag)) {
              case 2:
              case 16:
              case 15:
              case 0:
              case 11:
              case 7:
              case 8:
              case 12:
              case 9:
              case 14:
                return Ii(t), null;
              case 1:
              case 17:
                return pt(t.type) && vt(), Ii(t), null;
              case 3:
                return (
                  (r = t.stateNode),
                  hr(),
                  st(dt),
                  st(ct),
                  br(),
                  r.pendingContext &&
                    ((r.context = r.pendingContext), (r.pendingContext = null)),
                  (null !== e && null !== e.child) ||
                    (Jn(t)
                      ? Ci(t)
                      : null === e ||
                        (e.memoizedState.isDehydrated &&
                          0 === (256 & t.flags)) ||
                        ((t.flags |= 1024),
                        null !== jn && (Ao(jn), (jn = null)))),
                  _i(e, t),
                  Ii(t),
                  null
                );
              case 5:
                vr(t), (n = dr(cr.current));
                var i = t.type;
                if (null !== e && null != t.stateNode)
                  xi(e, t, i, r, n),
                    e.ref !== t.ref && ((t.flags |= 512), (t.flags |= 2097152));
                else {
                  if (!r) {
                    if (null === t.stateNode) throw Error(o(166));
                    return Ii(t), null;
                  }
                  if (((e = dr(lr.current)), Jn(t))) {
                    if (!K) throw Error(o(175));
                    (e = Ve(
                      t.stateNode,
                      t.type,
                      t.memoizedProps,
                      n,
                      e,
                      t,
                      !Wn
                    )),
                      (t.updateQueue = e),
                      null !== e && Ci(t);
                  } else {
                    var a = z(i, r, n, e, t);
                    bi(a, t, !1, !1),
                      (t.stateNode = a),
                      B(a, i, r, n, e) && Ci(t);
                  }
                  null !== t.ref && ((t.flags |= 512), (t.flags |= 2097152));
                }
                return Ii(t), null;
              case 6:
                if (e && null != t.stateNode) Si(e, t, e.memoizedProps, r);
                else {
                  if ("string" !== typeof r && null === t.stateNode)
                    throw Error(o(166));
                  if (((e = dr(cr.current)), (n = dr(lr.current)), Jn(t))) {
                    if (!K) throw Error(o(176));
                    if (
                      ((e = t.stateNode),
                      (r = t.memoizedProps),
                      (n = Ge(e, r, t, !Wn)) && null !== (i = Hn))
                    )
                      switch (((a = 0 !== (1 & i.mode)), i.tag)) {
                        case 3:
                          Je(i.stateNode.containerInfo, e, r, a);
                          break;
                        case 5:
                          Qe(i.type, i.memoizedProps, i.stateNode, e, r, a);
                      }
                    n && Ci(t);
                  } else t.stateNode = V(r, e, n, t);
                }
                return Ii(t), null;
              case 13:
                if (
                  (st(mr),
                  (r = t.memoizedState),
                  Gn &&
                    null !== Vn &&
                    0 !== (1 & t.mode) &&
                    0 === (128 & t.flags))
                ) {
                  for (e = Vn; e; ) e = Fe(e);
                  return Qn(), (t.flags |= 98560), t;
                }
                if (null !== r && null !== r.dehydrated) {
                  if (((r = Jn(t)), null === e)) {
                    if (!r) throw Error(o(318));
                    if (!K) throw Error(o(344));
                    if (
                      !(e =
                        null !== (e = t.memoizedState) ? e.dehydrated : null)
                    )
                      throw Error(o(317));
                    We(e, t);
                  } else
                    Qn(),
                      0 === (128 & t.flags) && (t.memoizedState = null),
                      (t.flags |= 4);
                  return Ii(t), null;
                }
                return (
                  null !== jn && (Ao(jn), (jn = null)),
                  0 !== (128 & t.flags)
                    ? ((t.lanes = n), t)
                    : ((r = null !== r),
                      (n = !1),
                      null === e ? Jn(t) : (n = null !== e.memoizedState),
                      r &&
                        !n &&
                        ((t.child.flags |= 8192),
                        0 !== (1 & t.mode) &&
                          (null === e || 0 !== (1 & mr.current)
                            ? 0 === Qa && (Qa = 3)
                            : Do())),
                      null !== t.updateQueue && (t.flags |= 4),
                      Ii(t),
                      null)
                );
              case 4:
                return (
                  hr(),
                  _i(e, t),
                  null === e && J(t.stateNode.containerInfo),
                  Ii(t),
                  null
                );
              case 10:
                return ln(t.type._context), Ii(t), null;
              case 19:
                if ((st(mr), null === (i = t.memoizedState)))
                  return Ii(t), null;
                if (((r = 0 !== (128 & t.flags)), null === (a = i.rendering)))
                  if (r) Li(i, !1);
                  else {
                    if (0 !== Qa || (null !== e && 0 !== (128 & e.flags)))
                      for (e = t.child; null !== e; ) {
                        if (null !== (a = gr(e))) {
                          for (
                            t.flags |= 128,
                              Li(i, !1),
                              null !== (e = a.updateQueue) &&
                                ((t.updateQueue = e), (t.flags |= 4)),
                              t.subtreeFlags = 0,
                              e = n,
                              r = t.child;
                            null !== r;

                          )
                            (i = e),
                              ((n = r).flags &= 14680066),
                              null === (a = n.alternate)
                                ? ((n.childLanes = 0),
                                  (n.lanes = i),
                                  (n.child = null),
                                  (n.subtreeFlags = 0),
                                  (n.memoizedProps = null),
                                  (n.memoizedState = null),
                                  (n.updateQueue = null),
                                  (n.dependencies = null),
                                  (n.stateNode = null))
                                : ((n.childLanes = a.childLanes),
                                  (n.lanes = a.lanes),
                                  (n.child = a.child),
                                  (n.subtreeFlags = 0),
                                  (n.deletions = null),
                                  (n.memoizedProps = a.memoizedProps),
                                  (n.memoizedState = a.memoizedState),
                                  (n.updateQueue = a.updateQueue),
                                  (n.type = a.type),
                                  (i = a.dependencies),
                                  (n.dependencies =
                                    null === i
                                      ? null
                                      : {
                                          lanes: i.lanes,
                                          firstContext: i.firstContext,
                                        })),
                              (r = r.sibling);
                          return lt(mr, (1 & mr.current) | 2), t.child;
                        }
                        e = e.sibling;
                      }
                    null !== i.tail &&
                      zt() > so &&
                      ((t.flags |= 128),
                      (r = !0),
                      Li(i, !1),
                      (t.lanes = 4194304));
                  }
                else {
                  if (!r)
                    if (null !== (e = gr(a))) {
                      if (
                        ((t.flags |= 128),
                        (r = !0),
                        null !== (e = e.updateQueue) &&
                          ((t.updateQueue = e), (t.flags |= 4)),
                        Li(i, !0),
                        null === i.tail &&
                          "hidden" === i.tailMode &&
                          !a.alternate &&
                          !Gn)
                      )
                        return Ii(t), null;
                    } else
                      2 * zt() - i.renderingStartTime > so &&
                        1073741824 !== n &&
                        ((t.flags |= 128),
                        (r = !0),
                        Li(i, !1),
                        (t.lanes = 4194304));
                  i.isBackwards
                    ? ((a.sibling = t.child), (t.child = a))
                    : (null !== (e = i.last) ? (e.sibling = a) : (t.child = a),
                      (i.last = a));
                }
                return null !== i.tail
                  ? ((t = i.tail),
                    (i.rendering = t),
                    (i.tail = t.sibling),
                    (i.renderingStartTime = zt()),
                    (t.sibling = null),
                    (e = mr.current),
                    lt(mr, r ? (1 & e) | 2 : 1 & e),
                    t)
                  : (Ii(t), null);
              case 22:
              case 23:
                return (
                  Lo(),
                  (r = null !== t.memoizedState),
                  null !== e &&
                    (null !== e.memoizedState) !== r &&
                    (t.flags |= 8192),
                  r && 0 !== (1 & t.mode)
                    ? 0 !== (1073741824 & $a) &&
                      (Ii(t), q && 6 & t.subtreeFlags && (t.flags |= 8192))
                    : Ii(t),
                  null
                );
              case 24:
              case 25:
                return null;
            }
            throw Error(o(156, t.tag));
          }
          var Oi = s.ReactCurrentOwner,
            Di = !1;
          function Ui(e, t, n, r) {
            t.child = null === e ? or(t, null, n, r) : ar(t, e.child, n, r);
          }
          function zi(e, t, n, r, i) {
            n = n.render;
            var a = t.ref;
            return (
              cn(t, i),
              (r = Lr(e, t, n, r, a, i)),
              (n = Ir()),
              null === e || Di
                ? (Gn && n && Bn(t), (t.flags |= 1), Ui(e, t, r, i), t.child)
                : ((t.updateQueue = e.updateQueue),
                  (t.flags &= -2053),
                  (e.lanes &= ~i),
                  ia(e, t, i))
            );
          }
          function Fi(e, t, n, r, i) {
            if (null === e) {
              var a = n.type;
              return "function" !== typeof a ||
                Qo(a) ||
                void 0 !== a.defaultProps ||
                null !== n.compare ||
                void 0 !== n.defaultProps
                ? (((e = ts(n.type, null, r, t, t.mode, i)).ref = t.ref),
                  (e.return = t),
                  (t.child = e))
                : ((t.tag = 15), (t.type = a), Bi(e, t, a, r, i));
            }
            if (((a = e.child), 0 === (e.lanes & i))) {
              var o = a.memoizedProps;
              if (
                (n = null !== (n = n.compare) ? n : Jt)(o, r) &&
                e.ref === t.ref
              )
                return ia(e, t, i);
            }
            return (
              (t.flags |= 1),
              ((e = es(a, r)).ref = t.ref),
              (e.return = t),
              (t.child = e)
            );
          }
          function Bi(e, t, n, r, i) {
            if (null !== e && Jt(e.memoizedProps, r) && e.ref === t.ref) {
              if (((Di = !1), 0 === (e.lanes & i)))
                return (t.lanes = e.lanes), ia(e, t, i);
              0 !== (131072 & e.flags) && (Di = !0);
            }
            return Vi(e, t, n, r, i);
          }
          function Zi(e, t, n) {
            var r = t.pendingProps,
              i = r.children,
              a = null !== e ? e.memoizedState : null;
            if ("hidden" === r.mode)
              if (0 === (1 & t.mode))
                (t.memoizedState = { baseLanes: 0, cachePool: null }),
                  lt(Ja, $a),
                  ($a |= n);
              else {
                if (0 === (1073741824 & n))
                  return (
                    (e = null !== a ? a.baseLanes | n : n),
                    (t.lanes = t.childLanes = 1073741824),
                    (t.memoizedState = { baseLanes: e, cachePool: null }),
                    (t.updateQueue = null),
                    lt(Ja, $a),
                    ($a |= e),
                    null
                  );
                (t.memoizedState = { baseLanes: 0, cachePool: null }),
                  (r = null !== a ? a.baseLanes : n),
                  lt(Ja, $a),
                  ($a |= r);
              }
            else
              null !== a
                ? ((r = a.baseLanes | n), (t.memoizedState = null))
                : (r = n),
                lt(Ja, $a),
                ($a |= r);
            return Ui(e, t, i, n), t.child;
          }
          function Hi(e, t) {
            var n = t.ref;
            ((null === e && null !== n) || (null !== e && e.ref !== n)) &&
              ((t.flags |= 512), (t.flags |= 2097152));
          }
          function Vi(e, t, n, r, i) {
            var a = pt(n) ? ft : ct.current;
            return (
              (a = ht(t, a)),
              cn(t, i),
              (n = Lr(e, t, n, r, a, i)),
              (r = Ir()),
              null === e || Di
                ? (Gn && r && Bn(t), (t.flags |= 1), Ui(e, t, n, i), t.child)
                : ((t.updateQueue = e.updateQueue),
                  (t.flags &= -2053),
                  (e.lanes &= ~i),
                  ia(e, t, i))
            );
          }
          function Gi(e, t, n, r, i) {
            if (pt(n)) {
              var a = !0;
              yt(t);
            } else a = !1;
            if ((cn(t, i), null === t.stateNode))
              null !== e &&
                ((e.alternate = null), (t.alternate = null), (t.flags |= 2)),
                kn(t, n, r),
                An(t, n, r, i),
                (r = !0);
            else if (null === e) {
              var o = t.stateNode,
                s = t.memoizedProps;
              o.props = s;
              var l = o.context,
                u = n.contextType;
              "object" === typeof u && null !== u
                ? (u = dn(u))
                : (u = ht(t, (u = pt(n) ? ft : ct.current)));
              var c = n.getDerivedStateFromProps,
                d =
                  "function" === typeof c ||
                  "function" === typeof o.getSnapshotBeforeUpdate;
              d ||
                ("function" !== typeof o.UNSAFE_componentWillReceiveProps &&
                  "function" !== typeof o.componentWillReceiveProps) ||
                ((s !== r || l !== u) && Tn(t, o, r, u)),
                (hn = !1);
              var f = t.memoizedState;
              (o.state = f),
                _n(t, r, o, i),
                (l = t.memoizedState),
                s !== r || f !== l || dt.current || hn
                  ? ("function" === typeof c &&
                      (wn(t, n, c, r), (l = t.memoizedState)),
                    (s = hn || En(t, n, s, r, f, l, u))
                      ? (d ||
                          ("function" !== typeof o.UNSAFE_componentWillMount &&
                            "function" !== typeof o.componentWillMount) ||
                          ("function" === typeof o.componentWillMount &&
                            o.componentWillMount(),
                          "function" === typeof o.UNSAFE_componentWillMount &&
                            o.UNSAFE_componentWillMount()),
                        "function" === typeof o.componentDidMount &&
                          (t.flags |= 4194308))
                      : ("function" === typeof o.componentDidMount &&
                          (t.flags |= 4194308),
                        (t.memoizedProps = r),
                        (t.memoizedState = l)),
                    (o.props = r),
                    (o.state = l),
                    (o.context = u),
                    (r = s))
                  : ("function" === typeof o.componentDidMount &&
                      (t.flags |= 4194308),
                    (r = !1));
            } else {
              (o = t.stateNode),
                vn(e, t),
                (s = t.memoizedProps),
                (u = t.type === t.elementType ? s : en(t.type, s)),
                (o.props = u),
                (d = t.pendingProps),
                (f = o.context),
                "object" === typeof (l = n.contextType) && null !== l
                  ? (l = dn(l))
                  : (l = ht(t, (l = pt(n) ? ft : ct.current)));
              var h = n.getDerivedStateFromProps;
              (c =
                "function" === typeof h ||
                "function" === typeof o.getSnapshotBeforeUpdate) ||
                ("function" !== typeof o.UNSAFE_componentWillReceiveProps &&
                  "function" !== typeof o.componentWillReceiveProps) ||
                ((s !== d || f !== l) && Tn(t, o, r, l)),
                (hn = !1),
                (f = t.memoizedState),
                (o.state = f),
                _n(t, r, o, i);
              var p = t.memoizedState;
              s !== d || f !== p || dt.current || hn
                ? ("function" === typeof h &&
                    (wn(t, n, h, r), (p = t.memoizedState)),
                  (u = hn || En(t, n, u, r, f, p, l) || !1)
                    ? (c ||
                        ("function" !== typeof o.UNSAFE_componentWillUpdate &&
                          "function" !== typeof o.componentWillUpdate) ||
                        ("function" === typeof o.componentWillUpdate &&
                          o.componentWillUpdate(r, p, l),
                        "function" === typeof o.UNSAFE_componentWillUpdate &&
                          o.UNSAFE_componentWillUpdate(r, p, l)),
                      "function" === typeof o.componentDidUpdate &&
                        (t.flags |= 4),
                      "function" === typeof o.getSnapshotBeforeUpdate &&
                        (t.flags |= 1024))
                    : ("function" !== typeof o.componentDidUpdate ||
                        (s === e.memoizedProps && f === e.memoizedState) ||
                        (t.flags |= 4),
                      "function" !== typeof o.getSnapshotBeforeUpdate ||
                        (s === e.memoizedProps && f === e.memoizedState) ||
                        (t.flags |= 1024),
                      (t.memoizedProps = r),
                      (t.memoizedState = p)),
                  (o.props = r),
                  (o.state = p),
                  (o.context = l),
                  (r = u))
                : ("function" !== typeof o.componentDidUpdate ||
                    (s === e.memoizedProps && f === e.memoizedState) ||
                    (t.flags |= 4),
                  "function" !== typeof o.getSnapshotBeforeUpdate ||
                    (s === e.memoizedProps && f === e.memoizedState) ||
                    (t.flags |= 1024),
                  (r = !1));
            }
            return Wi(e, t, n, r, a, i);
          }
          function Wi(e, t, n, r, i, a) {
            Hi(e, t);
            var o = 0 !== (128 & t.flags);
            if (!r && !o) return i && bt(t, n, !1), ia(e, t, a);
            (r = t.stateNode), (Oi.current = t);
            var s =
              o && "function" !== typeof n.getDerivedStateFromError
                ? null
                : r.render();
            return (
              (t.flags |= 1),
              null !== e && o
                ? ((t.child = ar(t, e.child, null, a)),
                  (t.child = ar(t, null, s, a)))
                : Ui(e, t, s, a),
              (t.memoizedState = r.state),
              i && bt(t, n, !0),
              t.child
            );
          }
          function ji(e) {
            var t = e.stateNode;
            t.pendingContext
              ? mt(0, t.pendingContext, t.pendingContext !== t.context)
              : t.context && mt(0, t.context, !1),
              fr(e, t.containerInfo);
          }
          function Xi(e, t, n, r, i) {
            return Qn(), er(i), (t.flags |= 256), Ui(e, t, n, r), t.child;
          }
          var qi = { dehydrated: null, treeContext: null, retryLane: 0 };
          function Yi(e) {
            return { baseLanes: e, cachePool: null };
          }
          function Ki(e, t, n) {
            var r,
              i = t.pendingProps,
              a = mr.current,
              s = !1,
              l = 0 !== (128 & t.flags);
            if (
              ((r = l) ||
                (r = (null === e || null !== e.memoizedState) && 0 !== (2 & a)),
              r
                ? ((s = !0), (t.flags &= -129))
                : (null !== e && null === e.memoizedState) || (a |= 1),
              lt(mr, 1 & a),
              null === e)
            )
              return (
                Kn(t),
                null !== (e = t.memoizedState) && null !== (e = e.dehydrated)
                  ? (0 === (1 & t.mode)
                      ? (t.lanes = 1)
                      : Ue(e)
                      ? (t.lanes = 8)
                      : (t.lanes = 1073741824),
                    null)
                  : ((a = i.children),
                    (e = i.fallback),
                    s
                      ? ((i = t.mode),
                        (s = t.child),
                        (a = { mode: "hidden", children: a }),
                        0 === (1 & i) && null !== s
                          ? ((s.childLanes = 0), (s.pendingProps = a))
                          : (s = rs(a, i, 0, null)),
                        (e = ns(e, i, n, null)),
                        (s.return = t),
                        (e.return = t),
                        (s.sibling = e),
                        (t.child = s),
                        (t.child.memoizedState = Yi(n)),
                        (t.memoizedState = qi),
                        e)
                      : $i(t, a))
              );
            if (null !== (a = e.memoizedState)) {
              if (null !== (r = a.dehydrated)) {
                if (l)
                  return 256 & t.flags
                    ? ((t.flags &= -257), ea(e, t, n, Error(o(422))))
                    : null !== t.memoizedState
                    ? ((t.child = e.child), (t.flags |= 128), null)
                    : ((s = i.fallback),
                      (a = t.mode),
                      (i = rs(
                        { mode: "visible", children: i.children },
                        a,
                        0,
                        null
                      )),
                      ((s = ns(s, a, n, null)).flags |= 2),
                      (i.return = t),
                      (s.return = t),
                      (i.sibling = s),
                      (t.child = i),
                      0 !== (1 & t.mode) && ar(t, e.child, null, n),
                      (t.child.memoizedState = Yi(n)),
                      (t.memoizedState = qi),
                      s);
                if (0 === (1 & t.mode)) t = ea(e, t, n, null);
                else if (Ue(r)) t = ea(e, t, n, Error(o(419)));
                else if (((i = 0 !== (n & e.childLanes)), Di || i)) {
                  if (null !== (i = qa)) {
                    switch (n & -n) {
                      case 4:
                        s = 2;
                        break;
                      case 16:
                        s = 8;
                        break;
                      case 64:
                      case 128:
                      case 256:
                      case 512:
                      case 1024:
                      case 2048:
                      case 4096:
                      case 8192:
                      case 16384:
                      case 32768:
                      case 65536:
                      case 131072:
                      case 262144:
                      case 524288:
                      case 1048576:
                      case 2097152:
                      case 4194304:
                      case 8388608:
                      case 16777216:
                      case 33554432:
                      case 67108864:
                        s = 32;
                        break;
                      case 536870912:
                        s = 268435456;
                        break;
                      default:
                        s = 0;
                    }
                    0 !== (i = 0 !== (s & (i.suspendedLanes | n)) ? 0 : s) &&
                      i !== a.retryLane &&
                      ((a.retryLane = i), wo(e, i, -1));
                  }
                  Do(), (t = ea(e, t, n, Error(o(421))));
                } else
                  De(r)
                    ? ((t.flags |= 128),
                      (t.child = e.child),
                      (t = qo.bind(null, e)),
                      ze(r, t),
                      (t = null))
                    : ((n = a.treeContext),
                      K &&
                        ((Vn = He(r)),
                        (Hn = t),
                        (Gn = !0),
                        (jn = null),
                        (Wn = !1),
                        null !== n &&
                          ((In[Nn++] = Dn),
                          (In[Nn++] = Un),
                          (In[Nn++] = On),
                          (Dn = n.id),
                          (Un = n.overflow),
                          (On = t))),
                      ((t = $i(t, t.pendingProps.children)).flags |= 4096));
                return t;
              }
              return s
                ? ((i = Qi(e, t, i.children, i.fallback, n)),
                  (s = t.child),
                  (a = e.child.memoizedState),
                  (s.memoizedState =
                    null === a
                      ? Yi(n)
                      : { baseLanes: a.baseLanes | n, cachePool: null }),
                  (s.childLanes = e.childLanes & ~n),
                  (t.memoizedState = qi),
                  i)
                : ((n = Ji(e, t, i.children, n)), (t.memoizedState = null), n);
            }
            return s
              ? ((i = Qi(e, t, i.children, i.fallback, n)),
                (s = t.child),
                (a = e.child.memoizedState),
                (s.memoizedState =
                  null === a
                    ? Yi(n)
                    : { baseLanes: a.baseLanes | n, cachePool: null }),
                (s.childLanes = e.childLanes & ~n),
                (t.memoizedState = qi),
                i)
              : ((n = Ji(e, t, i.children, n)), (t.memoizedState = null), n);
          }
          function $i(e, t) {
            return (
              ((t = rs(
                { mode: "visible", children: t },
                e.mode,
                0,
                null
              )).return = e),
              (e.child = t)
            );
          }
          function Ji(e, t, n, r) {
            var i = e.child;
            return (
              (e = i.sibling),
              (n = es(i, { mode: "visible", children: n })),
              0 === (1 & t.mode) && (n.lanes = r),
              (n.return = t),
              (n.sibling = null),
              null !== e &&
                (null === (r = t.deletions)
                  ? ((t.deletions = [e]), (t.flags |= 16))
                  : r.push(e)),
              (t.child = n)
            );
          }
          function Qi(e, t, n, r, i) {
            var a = t.mode,
              o = (e = e.child).sibling,
              s = { mode: "hidden", children: n };
            return (
              0 === (1 & a) && t.child !== e
                ? (((n = t.child).childLanes = 0),
                  (n.pendingProps = s),
                  (t.deletions = null))
                : ((n = es(e, s)).subtreeFlags = 14680064 & e.subtreeFlags),
              null !== o
                ? (r = es(o, r))
                : ((r = ns(r, a, i, null)).flags |= 2),
              (r.return = t),
              (n.return = t),
              (n.sibling = r),
              (t.child = n),
              r
            );
          }
          function ea(e, t, n, r) {
            return (
              null !== r && er(r),
              ar(t, e.child, null, n),
              ((e = $i(t, t.pendingProps.children)).flags |= 2),
              (t.memoizedState = null),
              e
            );
          }
          function ta(e, t, n) {
            e.lanes |= t;
            var r = e.alternate;
            null !== r && (r.lanes |= t), un(e.return, t, n);
          }
          function na(e, t, n, r, i) {
            var a = e.memoizedState;
            null === a
              ? (e.memoizedState = {
                  isBackwards: t,
                  rendering: null,
                  renderingStartTime: 0,
                  last: r,
                  tail: n,
                  tailMode: i,
                })
              : ((a.isBackwards = t),
                (a.rendering = null),
                (a.renderingStartTime = 0),
                (a.last = r),
                (a.tail = n),
                (a.tailMode = i));
          }
          function ra(e, t, n) {
            var r = t.pendingProps,
              i = r.revealOrder,
              a = r.tail;
            if ((Ui(e, t, r.children, n), 0 !== (2 & (r = mr.current))))
              (r = (1 & r) | 2), (t.flags |= 128);
            else {
              if (null !== e && 0 !== (128 & e.flags))
                e: for (e = t.child; null !== e; ) {
                  if (13 === e.tag) null !== e.memoizedState && ta(e, n, t);
                  else if (19 === e.tag) ta(e, n, t);
                  else if (null !== e.child) {
                    (e.child.return = e), (e = e.child);
                    continue;
                  }
                  if (e === t) break e;
                  for (; null === e.sibling; ) {
                    if (null === e.return || e.return === t) break e;
                    e = e.return;
                  }
                  (e.sibling.return = e.return), (e = e.sibling);
                }
              r &= 1;
            }
            if ((lt(mr, r), 0 === (1 & t.mode))) t.memoizedState = null;
            else
              switch (i) {
                case "forwards":
                  for (n = t.child, i = null; null !== n; )
                    null !== (e = n.alternate) && null === gr(e) && (i = n),
                      (n = n.sibling);
                  null === (n = i)
                    ? ((i = t.child), (t.child = null))
                    : ((i = n.sibling), (n.sibling = null)),
                    na(t, !1, i, n, a);
                  break;
                case "backwards":
                  for (n = null, i = t.child, t.child = null; null !== i; ) {
                    if (null !== (e = i.alternate) && null === gr(e)) {
                      t.child = i;
                      break;
                    }
                    (e = i.sibling), (i.sibling = n), (n = i), (i = e);
                  }
                  na(t, !0, n, null, a);
                  break;
                case "together":
                  na(t, !1, null, null, void 0);
                  break;
                default:
                  t.memoizedState = null;
              }
            return t.child;
          }
          function ia(e, t, n) {
            if (
              (null !== e && (t.dependencies = e.dependencies),
              (to |= t.lanes),
              0 === (n & t.childLanes))
            )
              return null;
            if (null !== e && t.child !== e.child) throw Error(o(153));
            if (null !== t.child) {
              for (
                n = es((e = t.child), e.pendingProps),
                  t.child = n,
                  n.return = t;
                null !== e.sibling;

              )
                (e = e.sibling),
                  ((n = n.sibling = es(e, e.pendingProps)).return = t);
              n.sibling = null;
            }
            return t.child;
          }
          function aa(e, t) {
            switch ((Zn(t), t.tag)) {
              case 1:
                return (
                  pt(t.type) && vt(),
                  65536 & (e = t.flags)
                    ? ((t.flags = (-65537 & e) | 128), t)
                    : null
                );
              case 3:
                return (
                  hr(),
                  st(dt),
                  st(ct),
                  br(),
                  0 !== (65536 & (e = t.flags)) && 0 === (128 & e)
                    ? ((t.flags = (-65537 & e) | 128), t)
                    : null
                );
              case 5:
                return vr(t), null;
              case 13:
                if (
                  (st(mr),
                  null !== (e = t.memoizedState) && null !== e.dehydrated)
                ) {
                  if (null === t.alternate) throw Error(o(340));
                  Qn();
                }
                return 65536 & (e = t.flags)
                  ? ((t.flags = (-65537 & e) | 128), t)
                  : null;
              case 19:
                return st(mr), null;
              case 4:
                return hr(), null;
              case 10:
                return ln(t.type._context), null;
              case 22:
              case 23:
                return Lo(), null;
              default:
                return null;
            }
          }
          var oa = !1,
            sa = !1,
            la = "function" === typeof WeakSet ? WeakSet : Set,
            ua = null;
          function ca(e, t) {
            var n = e.ref;
            if (null !== n)
              if ("function" === typeof n)
                try {
                  n(null);
                } catch (r) {
                  Wo(e, t, r);
                }
              else n.current = null;
          }
          function da(e, t, n) {
            try {
              n();
            } catch (r) {
              Wo(e, t, r);
            }
          }
          var fa = !1;
          function ha(e, t, n) {
            var r = t.updateQueue;
            if (null !== (r = null !== r ? r.lastEffect : null)) {
              var i = (r = r.next);
              do {
                if ((i.tag & e) === e) {
                  var a = i.destroy;
                  (i.destroy = void 0), void 0 !== a && da(t, n, a);
                }
                i = i.next;
              } while (i !== r);
            }
          }
          function pa(e, t) {
            if (
              null !== (t = null !== (t = t.updateQueue) ? t.lastEffect : null)
            ) {
              var n = (t = t.next);
              do {
                if ((n.tag & e) === e) {
                  var r = n.create;
                  n.destroy = r();
                }
                n = n.next;
              } while (n !== t);
            }
          }
          function va(e) {
            var t = e.ref;
            if (null !== t) {
              var n = e.stateNode;
              if (5 === e.tag) e = I(n);
              else e = n;
              "function" === typeof t ? t(e) : (t.current = e);
            }
          }
          function ma(e, t, n) {
            if (Gt && "function" === typeof Gt.onCommitFiberUnmount)
              try {
                Gt.onCommitFiberUnmount(Vt, t);
              } catch (o) {}
            switch (t.tag) {
              case 0:
              case 11:
              case 14:
              case 15:
                if (
                  null !== (e = t.updateQueue) &&
                  null !== (e = e.lastEffect)
                ) {
                  var r = (e = e.next);
                  do {
                    var i = r,
                      a = i.destroy;
                    (i = i.tag),
                      void 0 !== a &&
                        (0 !== (2 & i) || 0 !== (4 & i)) &&
                        da(t, n, a),
                      (r = r.next);
                  } while (r !== e);
                }
                break;
              case 1:
                if (
                  (ca(t, n),
                  "function" === typeof (e = t.stateNode).componentWillUnmount)
                )
                  try {
                    (e.props = t.memoizedProps),
                      (e.state = t.memoizedState),
                      e.componentWillUnmount();
                  } catch (o) {
                    Wo(t, n, o);
                  }
                break;
              case 5:
                ca(t, n);
                break;
              case 4:
                q
                  ? Ma(e, t, n)
                  : Y &&
                    Y &&
                    ((t = t.stateNode.containerInfo), (n = Te(t)), Pe(t, n));
            }
          }
          function ga(e, t, n) {
            for (var r = t; ; )
              if ((ma(e, r, n), null === r.child || (q && 4 === r.tag))) {
                if (r === t) break;
                for (; null === r.sibling; ) {
                  if (null === r.return || r.return === t) return;
                  r = r.return;
                }
                (r.sibling.return = r.return), (r = r.sibling);
              } else (r.child.return = r), (r = r.child);
          }
          function ya(e) {
            var t = e.alternate;
            null !== t && ((e.alternate = null), ya(t)),
              (e.child = null),
              (e.deletions = null),
              (e.sibling = null),
              5 === e.tag && null !== (t = e.stateNode) && ee(t),
              (e.stateNode = null),
              (e.return = null),
              (e.dependencies = null),
              (e.memoizedProps = null),
              (e.memoizedState = null),
              (e.pendingProps = null),
              (e.stateNode = null),
              (e.updateQueue = null);
          }
          function ba(e) {
            return 5 === e.tag || 3 === e.tag || 4 === e.tag;
          }
          function _a(e) {
            e: for (;;) {
              for (; null === e.sibling; ) {
                if (null === e.return || ba(e.return)) return null;
                e = e.return;
              }
              for (
                e.sibling.return = e.return, e = e.sibling;
                5 !== e.tag && 6 !== e.tag && 18 !== e.tag;

              ) {
                if (2 & e.flags) continue e;
                if (null === e.child || 4 === e.tag) continue e;
                (e.child.return = e), (e = e.child);
              }
              if (!(2 & e.flags)) return e.stateNode;
            }
          }
          function xa(e) {
            if (q) {
              e: {
                for (var t = e.return; null !== t; ) {
                  if (ba(t)) break e;
                  t = t.return;
                }
                throw Error(o(160));
              }
              var n = t;
              switch (n.tag) {
                case 5:
                  (t = n.stateNode),
                    32 & n.flags && (_e(t), (n.flags &= -33)),
                    wa(e, (n = _a(e)), t);
                  break;
                case 3:
                case 4:
                  (t = n.stateNode.containerInfo), Sa(e, (n = _a(e)), t);
                  break;
                default:
                  throw Error(o(161));
              }
            }
          }
          function Sa(e, t, n) {
            var r = e.tag;
            if (5 === r || 6 === r)
              (e = e.stateNode), t ? ge(n, e, t) : fe(n, e);
            else if (4 !== r && null !== (e = e.child))
              for (Sa(e, t, n), e = e.sibling; null !== e; )
                Sa(e, t, n), (e = e.sibling);
          }
          function wa(e, t, n) {
            var r = e.tag;
            if (5 === r || 6 === r)
              (e = e.stateNode), t ? me(n, e, t) : de(n, e);
            else if (4 !== r && null !== (e = e.child))
              for (wa(e, t, n), e = e.sibling; null !== e; )
                wa(e, t, n), (e = e.sibling);
          }
          function Ma(e, t, n) {
            for (var r, i, a = t, s = !1; ; ) {
              if (!s) {
                s = a.return;
                e: for (;;) {
                  if (null === s) throw Error(o(160));
                  switch (((r = s.stateNode), s.tag)) {
                    case 5:
                      i = !1;
                      break e;
                    case 3:
                    case 4:
                      (r = r.containerInfo), (i = !0);
                      break e;
                  }
                  s = s.return;
                }
                s = !0;
              }
              if (5 === a.tag || 6 === a.tag)
                ga(e, a, n), i ? be(r, a.stateNode) : ye(r, a.stateNode);
              else if (18 === a.tag)
                i ? Ke(r, a.stateNode) : Ye(r, a.stateNode);
              else if (4 === a.tag) {
                if (null !== a.child) {
                  (r = a.stateNode.containerInfo),
                    (i = !0),
                    (a.child.return = a),
                    (a = a.child);
                  continue;
                }
              } else if ((ma(e, a, n), null !== a.child)) {
                (a.child.return = a), (a = a.child);
                continue;
              }
              if (a === t) break;
              for (; null === a.sibling; ) {
                if (null === a.return || a.return === t) return;
                4 === (a = a.return).tag && (s = !1);
              }
              (a.sibling.return = a.return), (a = a.sibling);
            }
          }
          function Ea(e, t) {
            if (q) {
              switch (t.tag) {
                case 0:
                case 11:
                case 14:
                case 15:
                  return ha(3, t, t.return), pa(3, t), void ha(5, t, t.return);
                case 1:
                case 12:
                case 17:
                  return;
                case 5:
                  var n = t.stateNode;
                  if (null != n) {
                    var r = t.memoizedProps;
                    e = null !== e ? e.memoizedProps : r;
                    var i = t.type,
                      a = t.updateQueue;
                    (t.updateQueue = null), null !== a && ve(n, a, i, e, r, t);
                  }
                  return;
                case 6:
                  if (null === t.stateNode) throw Error(o(162));
                  return (
                    (n = t.memoizedProps),
                    void he(t.stateNode, null !== e ? e.memoizedProps : n, n)
                  );
                case 3:
                  return void (
                    K &&
                    null !== e &&
                    e.memoizedState.isDehydrated &&
                    Xe(t.stateNode.containerInfo)
                  );
                case 13:
                case 19:
                  return void ka(t);
              }
              throw Error(o(163));
            }
            switch (t.tag) {
              case 0:
              case 11:
              case 14:
              case 15:
                return ha(3, t, t.return), pa(3, t), void ha(5, t, t.return);
              case 12:
              case 22:
              case 23:
                return;
              case 13:
              case 19:
                return void ka(t);
              case 3:
                K &&
                  null !== e &&
                  e.memoizedState.isDehydrated &&
                  Xe(t.stateNode.containerInfo);
            }
            e: if (Y) {
              switch (t.tag) {
                case 1:
                case 5:
                case 6:
                  break e;
                case 3:
                case 4:
                  (t = t.stateNode), Pe(t.containerInfo, t.pendingChildren);
                  break e;
              }
              throw Error(o(163));
            }
          }
          function ka(e) {
            var t = e.updateQueue;
            if (null !== t) {
              e.updateQueue = null;
              var n = e.stateNode;
              null === n && (n = e.stateNode = new la()),
                t.forEach(function (t) {
                  var r = Yo.bind(null, e, t);
                  n.has(t) || (n.add(t), t.then(r, r));
                });
            }
          }
          function Ta(e, t, n) {
            (ua = e), Aa(e, t, n);
          }
          function Aa(e, t, n) {
            for (var r = 0 !== (1 & e.mode); null !== ua; ) {
              var i = ua,
                a = i.child;
              if (22 === i.tag && r) {
                var o = null !== i.memoizedState || oa;
                if (!o) {
                  var s = i.alternate,
                    l = (null !== s && null !== s.memoizedState) || sa;
                  s = oa;
                  var u = sa;
                  if (((oa = o), (sa = l) && !u))
                    for (ua = i; null !== ua; )
                      (l = (o = ua).child),
                        22 === o.tag && null !== o.memoizedState
                          ? Ra(i)
                          : null !== l
                          ? ((l.return = o), (ua = l))
                          : Ra(i);
                  for (; null !== a; ) (ua = a), Aa(a, t, n), (a = a.sibling);
                  (ua = i), (oa = s), (sa = u);
                }
                Ca(e);
              } else
                0 !== (8772 & i.subtreeFlags) && null !== a
                  ? ((a.return = i), (ua = a))
                  : Ca(e);
            }
          }
          function Ca(e) {
            for (; null !== ua; ) {
              var t = ua;
              if (0 !== (8772 & t.flags)) {
                var n = t.alternate;
                try {
                  if (0 !== (8772 & t.flags))
                    switch (t.tag) {
                      case 0:
                      case 11:
                      case 15:
                        sa || pa(5, t);
                        break;
                      case 1:
                        var r = t.stateNode;
                        if (4 & t.flags && !sa)
                          if (null === n) r.componentDidMount();
                          else {
                            var i =
                              t.elementType === t.type
                                ? n.memoizedProps
                                : en(t.type, n.memoizedProps);
                            r.componentDidUpdate(
                              i,
                              n.memoizedState,
                              r.__reactInternalSnapshotBeforeUpdate
                            );
                          }
                        var a = t.updateQueue;
                        null !== a && xn(t, a, r);
                        break;
                      case 3:
                        var s = t.updateQueue;
                        if (null !== s) {
                          if (((n = null), null !== t.child))
                            switch (t.child.tag) {
                              case 5:
                                n = I(t.child.stateNode);
                                break;
                              case 1:
                                n = t.child.stateNode;
                            }
                          xn(t, s, n);
                        }
                        break;
                      case 5:
                        var l = t.stateNode;
                        null === n &&
                          4 & t.flags &&
                          pe(l, t.type, t.memoizedProps, t);
                        break;
                      case 6:
                      case 4:
                      case 12:
                      case 19:
                      case 17:
                      case 21:
                      case 22:
                      case 23:
                        break;
                      case 13:
                        if (K && null === t.memoizedState) {
                          var u = t.alternate;
                          if (null !== u) {
                            var c = u.memoizedState;
                            if (null !== c) {
                              var d = c.dehydrated;
                              null !== d && qe(d);
                            }
                          }
                        }
                        break;
                      default:
                        throw Error(o(163));
                    }
                  sa || (512 & t.flags && va(t));
                } catch (f) {
                  Wo(t, t.return, f);
                }
              }
              if (t === e) {
                ua = null;
                break;
              }
              if (null !== (n = t.sibling)) {
                (n.return = t.return), (ua = n);
                break;
              }
              ua = t.return;
            }
          }
          function Pa(e) {
            for (; null !== ua; ) {
              var t = ua;
              if (t === e) {
                ua = null;
                break;
              }
              var n = t.sibling;
              if (null !== n) {
                (n.return = t.return), (ua = n);
                break;
              }
              ua = t.return;
            }
          }
          function Ra(e) {
            for (; null !== ua; ) {
              var t = ua;
              try {
                switch (t.tag) {
                  case 0:
                  case 11:
                  case 15:
                    var n = t.return;
                    try {
                      pa(4, t);
                    } catch (l) {
                      Wo(t, n, l);
                    }
                    break;
                  case 1:
                    var r = t.stateNode;
                    if ("function" === typeof r.componentDidMount) {
                      var i = t.return;
                      try {
                        r.componentDidMount();
                      } catch (l) {
                        Wo(t, i, l);
                      }
                    }
                    var a = t.return;
                    try {
                      va(t);
                    } catch (l) {
                      Wo(t, a, l);
                    }
                    break;
                  case 5:
                    var o = t.return;
                    try {
                      va(t);
                    } catch (l) {
                      Wo(t, o, l);
                    }
                }
              } catch (l) {
                Wo(t, t.return, l);
              }
              if (t === e) {
                ua = null;
                break;
              }
              var s = t.sibling;
              if (null !== s) {
                (s.return = t.return), (ua = s);
                break;
              }
              ua = t.return;
            }
          }
          var La = 0,
            Ia = 1,
            Na = 2,
            Oa = 3,
            Da = 4;
          if ("function" === typeof Symbol && Symbol.for) {
            var Ua = Symbol.for;
            (La = Ua("selector.component")),
              (Ia = Ua("selector.has_pseudo_class")),
              (Na = Ua("selector.role")),
              (Oa = Ua("selector.test_id")),
              (Da = Ua("selector.text"));
          }
          function za(e) {
            var t = $(e);
            if (null != t) {
              if ("string" !== typeof t.memoizedProps["data-testname"])
                throw Error(o(364));
              return t;
            }
            if (null === (e = ie(e))) throw Error(o(362));
            return e.stateNode.current;
          }
          function Fa(e, t) {
            switch (t.$$typeof) {
              case La:
                if (e.type === t.value) return !0;
                break;
              case Ia:
                e: {
                  (t = t.value), (e = [e, 0]);
                  for (var n = 0; n < e.length; ) {
                    var r = e[n++],
                      i = e[n++],
                      a = t[i];
                    if (5 !== r.tag || !se(r)) {
                      for (; null != a && Fa(r, a); ) a = t[++i];
                      if (i === t.length) {
                        t = !0;
                        break e;
                      }
                      for (r = r.child; null !== r; )
                        e.push(r, i), (r = r.sibling);
                    }
                  }
                  t = !1;
                }
                return t;
              case Na:
                if (5 === e.tag && le(e.stateNode, t.value)) return !0;
                break;
              case Da:
                if (
                  (5 === e.tag || 6 === e.tag) &&
                  null !== (e = oe(e)) &&
                  0 <= e.indexOf(t.value)
                )
                  return !0;
                break;
              case Oa:
                if (
                  5 === e.tag &&
                  "string" === typeof (e = e.memoizedProps["data-testname"]) &&
                  e.toLowerCase() === t.value.toLowerCase()
                )
                  return !0;
                break;
              default:
                throw Error(o(365));
            }
            return !1;
          }
          function Ba(e) {
            switch (e.$$typeof) {
              case La:
                return "<" + (w(e.value) || "Unknown") + ">";
              case Ia:
                return ":has(" + (Ba(e) || "") + ")";
              case Na:
                return '[role="' + e.value + '"]';
              case Da:
                return '"' + e.value + '"';
              case Oa:
                return '[data-testname="' + e.value + '"]';
              default:
                throw Error(o(365));
            }
          }
          function Za(e, t) {
            var n = [];
            e = [e, 0];
            for (var r = 0; r < e.length; ) {
              var i = e[r++],
                a = e[r++],
                o = t[a];
              if (5 !== i.tag || !se(i)) {
                for (; null != o && Fa(i, o); ) o = t[++a];
                if (a === t.length) n.push(i);
                else
                  for (i = i.child; null !== i; ) e.push(i, a), (i = i.sibling);
              }
            }
            return n;
          }
          function Ha(e, t) {
            if (!re) throw Error(o(363));
            (e = Za((e = za(e)), t)), (t = []), (e = Array.from(e));
            for (var n = 0; n < e.length; ) {
              var r = e[n++];
              if (5 === r.tag) se(r) || t.push(r.stateNode);
              else for (r = r.child; null !== r; ) e.push(r), (r = r.sibling);
            }
            return t;
          }
          var Va = Math.ceil,
            Ga = s.ReactCurrentDispatcher,
            Wa = s.ReactCurrentOwner,
            ja = s.ReactCurrentBatchConfig,
            Xa = 0,
            qa = null,
            Ya = null,
            Ka = 0,
            $a = 0,
            Ja = ot(0),
            Qa = 0,
            eo = null,
            to = 0,
            no = 0,
            ro = 0,
            io = null,
            ao = null,
            oo = 0,
            so = 1 / 0;
          function lo() {
            so = zt() + 500;
          }
          var uo,
            co = !1,
            fo = null,
            ho = null,
            po = !1,
            vo = null,
            mo = 0,
            go = 0,
            yo = null,
            bo = -1,
            _o = 0;
          function xo() {
            return 0 !== (6 & Xa) ? zt() : -1 !== bo ? bo : (bo = zt());
          }
          function So(e) {
            return 0 === (1 & e.mode)
              ? 1
              : 0 !== (2 & Xa) && 0 !== Ka
              ? Ka & -Ka
              : null !== $t.transition
              ? (0 === _o &&
                  ((e = wt),
                  0 === (4194240 & (wt <<= 1)) && (wt = 64),
                  (_o = e)),
                _o)
              : 0 !== (e = Lt)
              ? e
              : Q();
          }
          function wo(e, t, n) {
            if (50 < go) throw ((go = 0), (yo = null), Error(o(185)));
            var r = Mo(e, t);
            return null === r
              ? null
              : (Pt(r, t, n),
                (0 !== (2 & Xa) && r === qa) ||
                  (r === qa &&
                    (0 === (2 & Xa) && (no |= t), 4 === Qa && Co(r, Ka)),
                  Eo(r, n),
                  1 === t &&
                    0 === Xa &&
                    0 === (1 & e.mode) &&
                    (lo(), Xt && Kt())),
                r);
          }
          function Mo(e, t) {
            e.lanes |= t;
            var n = e.alternate;
            for (
              null !== n && (n.lanes |= t), n = e, e = e.return;
              null !== e;

            )
              (e.childLanes |= t),
                null !== (n = e.alternate) && (n.childLanes |= t),
                (n = e),
                (e = e.return);
            return 3 === n.tag ? n.stateNode : null;
          }
          function Eo(e, t) {
            var n = e.callbackNode;
            !(function (e, t) {
              for (
                var n = e.suspendedLanes,
                  r = e.pingedLanes,
                  i = e.expirationTimes,
                  a = e.pendingLanes;
                0 < a;

              ) {
                var o = 31 - _t(a),
                  s = 1 << o,
                  l = i[o];
                -1 === l
                  ? (0 !== (s & n) && 0 === (s & r)) || (i[o] = Tt(s, t))
                  : l <= t && (e.expiredLanes |= s),
                  (a &= ~s);
              }
            })(e, t);
            var r = kt(e, e === qa ? Ka : 0);
            if (0 === r)
              null !== n && Ot(n),
                (e.callbackNode = null),
                (e.callbackPriority = 0);
            else if (((t = r & -r), e.callbackPriority !== t)) {
              if ((null != n && Ot(n), 1 === t))
                0 === e.tag
                  ? (function (e) {
                      (Xt = !0), Yt(e);
                    })(Po.bind(null, e))
                  : Yt(Po.bind(null, e)),
                  te
                    ? ne(function () {
                        0 === Xa && Kt();
                      })
                    : Nt(Ft, Kt),
                  (n = null);
              else {
                switch (It(r)) {
                  case 1:
                    n = Ft;
                    break;
                  case 4:
                    n = Bt;
                    break;
                  case 16:
                  default:
                    n = Zt;
                    break;
                  case 536870912:
                    n = Ht;
                }
                n = Ko(n, ko.bind(null, e));
              }
              (e.callbackPriority = t), (e.callbackNode = n);
            }
          }
          function ko(e, t) {
            if (((bo = -1), (_o = 0), 0 !== (6 & Xa))) throw Error(o(327));
            var n = e.callbackNode;
            if (Vo() && e.callbackNode !== n) return null;
            var r = kt(e, e === qa ? Ka : 0);
            if (0 === r) return null;
            if (0 !== (30 & r) || 0 !== (r & e.expiredLanes) || t) t = Uo(e, r);
            else {
              t = r;
              var i = Xa;
              Xa |= 2;
              var a = Oo();
              for ((qa === e && Ka === t) || (lo(), Io(e, t)); ; )
                try {
                  Fo();
                  break;
                } catch (l) {
                  No(e, l);
                }
              on(),
                (Ga.current = a),
                (Xa = i),
                null !== Ya ? (t = 0) : ((qa = null), (Ka = 0), (t = Qa));
            }
            if (0 !== t) {
              if (
                (2 === t && 0 !== (i = At(e)) && ((r = i), (t = To(e, i))),
                1 === t)
              )
                throw ((n = eo), Io(e, 0), Co(e, r), Eo(e, zt()), n);
              if (6 === t) Co(e, r);
              else {
                if (
                  ((i = e.current.alternate),
                  0 === (30 & r) &&
                    !(function (e) {
                      for (var t = e; ; ) {
                        if (16384 & t.flags) {
                          var n = t.updateQueue;
                          if (null !== n && null !== (n = n.stores))
                            for (var r = 0; r < n.length; r++) {
                              var i = n[r],
                                a = i.getSnapshot;
                              i = i.value;
                              try {
                                if (!Wt(a(), i)) return !1;
                              } catch (s) {
                                return !1;
                              }
                            }
                        }
                        if (
                          ((n = t.child), 16384 & t.subtreeFlags && null !== n)
                        )
                          (n.return = t), (t = n);
                        else {
                          if (t === e) break;
                          for (; null === t.sibling; ) {
                            if (null === t.return || t.return === e) return !0;
                            t = t.return;
                          }
                          (t.sibling.return = t.return), (t = t.sibling);
                        }
                      }
                      return !0;
                    })(i) &&
                    (2 === (t = Uo(e, r)) &&
                      0 !== (a = At(e)) &&
                      ((r = a), (t = To(e, a))),
                    1 === t))
                )
                  throw ((n = eo), Io(e, 0), Co(e, r), Eo(e, zt()), n);
                switch (((e.finishedWork = i), (e.finishedLanes = r), t)) {
                  case 0:
                  case 1:
                    throw Error(o(345));
                  case 2:
                  case 5:
                    Ho(e, ao);
                    break;
                  case 3:
                    if (
                      (Co(e, r),
                      (130023424 & r) === r && 10 < (t = oo + 500 - zt()))
                    ) {
                      if (0 !== kt(e, 0)) break;
                      if (((i = e.suspendedLanes) & r) !== r) {
                        xo(), (e.pingedLanes |= e.suspendedLanes & i);
                        break;
                      }
                      e.timeoutHandle = G(Ho.bind(null, e, ao), t);
                      break;
                    }
                    Ho(e, ao);
                    break;
                  case 4:
                    if ((Co(e, r), (4194240 & r) === r)) break;
                    for (t = e.eventTimes, i = -1; 0 < r; ) {
                      var s = 31 - _t(r);
                      (a = 1 << s), (s = t[s]) > i && (i = s), (r &= ~a);
                    }
                    if (
                      ((r = i),
                      10 <
                        (r =
                          (120 > (r = zt() - r)
                            ? 120
                            : 480 > r
                            ? 480
                            : 1080 > r
                            ? 1080
                            : 1920 > r
                            ? 1920
                            : 3e3 > r
                            ? 3e3
                            : 4320 > r
                            ? 4320
                            : 1960 * Va(r / 1960)) - r))
                    ) {
                      e.timeoutHandle = G(Ho.bind(null, e, ao), r);
                      break;
                    }
                    Ho(e, ao);
                    break;
                  default:
                    throw Error(o(329));
                }
              }
            }
            return Eo(e, zt()), e.callbackNode === n ? ko.bind(null, e) : null;
          }
          function To(e, t) {
            var n = io;
            return (
              e.current.memoizedState.isDehydrated && (Io(e, t).flags |= 256),
              2 !== (e = Uo(e, t)) && ((t = ao), (ao = n), null !== t && Ao(t)),
              e
            );
          }
          function Ao(e) {
            null === ao ? (ao = e) : ao.push.apply(ao, e);
          }
          function Co(e, t) {
            for (
              t &= ~ro,
                t &= ~no,
                e.suspendedLanes |= t,
                e.pingedLanes &= ~t,
                e = e.expirationTimes;
              0 < t;

            ) {
              var n = 31 - _t(t),
                r = 1 << n;
              (e[n] = -1), (t &= ~r);
            }
          }
          function Po(e) {
            if (0 !== (6 & Xa)) throw Error(o(327));
            Vo();
            var t = kt(e, 0);
            if (0 === (1 & t)) return Eo(e, zt()), null;
            var n = Uo(e, t);
            if (0 !== e.tag && 2 === n) {
              var r = At(e);
              0 !== r && ((t = r), (n = To(e, r)));
            }
            if (1 === n) throw ((n = eo), Io(e, 0), Co(e, t), Eo(e, zt()), n);
            if (6 === n) throw Error(o(345));
            return (
              (e.finishedWork = e.current.alternate),
              (e.finishedLanes = t),
              Ho(e, ao),
              Eo(e, zt()),
              null
            );
          }
          function Ro(e) {
            null !== vo && 0 === vo.tag && 0 === (6 & Xa) && Vo();
            var t = Xa;
            Xa |= 1;
            var n = ja.transition,
              r = Lt;
            try {
              if (((ja.transition = null), (Lt = 1), e)) return e();
            } finally {
              (Lt = r), (ja.transition = n), 0 === (6 & (Xa = t)) && Kt();
            }
          }
          function Lo() {
            ($a = Ja.current), st(Ja);
          }
          function Io(e, t) {
            (e.finishedWork = null), (e.finishedLanes = 0);
            var n = e.timeoutHandle;
            if ((n !== j && ((e.timeoutHandle = j), W(n)), null !== Ya))
              for (n = Ya.return; null !== n; ) {
                var r = n;
                switch ((Zn(r), r.tag)) {
                  case 1:
                    null !== (r = r.type.childContextTypes) &&
                      void 0 !== r &&
                      vt();
                    break;
                  case 3:
                    hr(), st(dt), st(ct), br();
                    break;
                  case 5:
                    vr(r);
                    break;
                  case 4:
                    hr();
                    break;
                  case 13:
                  case 19:
                    st(mr);
                    break;
                  case 10:
                    ln(r.type._context);
                    break;
                  case 22:
                  case 23:
                    Lo();
                }
                n = n.return;
              }
            if (
              ((qa = e),
              (Ya = e = es(e.current, null)),
              (Ka = $a = t),
              (Qa = 0),
              (eo = null),
              (ro = no = to = 0),
              (ao = io = null),
              null !== fn)
            ) {
              for (t = 0; t < fn.length; t++)
                if (null !== (r = (n = fn[t]).interleaved)) {
                  n.interleaved = null;
                  var i = r.next,
                    a = n.pending;
                  if (null !== a) {
                    var o = a.next;
                    (a.next = i), (r.next = o);
                  }
                  n.pending = r;
                }
              fn = null;
            }
            return e;
          }
          function No(e, t) {
            for (;;) {
              var n = Ya;
              try {
                if ((on(), (_r.current = hi), kr)) {
                  for (var r = wr.memoizedState; null !== r; ) {
                    var i = r.queue;
                    null !== i && (i.pending = null), (r = r.next);
                  }
                  kr = !1;
                }
                if (
                  ((Sr = 0),
                  (Er = Mr = wr = null),
                  (Tr = !1),
                  (Ar = 0),
                  (Wa.current = null),
                  null === n || null === n.return)
                ) {
                  (Qa = 1), (eo = t), (Ya = null);
                  break;
                }
                e: {
                  var a = e,
                    s = n.return,
                    l = n,
                    u = t;
                  if (
                    ((t = Ka),
                    (l.flags |= 32768),
                    null !== u &&
                      "object" === typeof u &&
                      "function" === typeof u.then)
                  ) {
                    var c = u,
                      d = l,
                      f = d.tag;
                    if (
                      0 === (1 & d.mode) &&
                      (0 === f || 11 === f || 15 === f)
                    ) {
                      var h = d.alternate;
                      h
                        ? ((d.updateQueue = h.updateQueue),
                          (d.memoizedState = h.memoizedState),
                          (d.lanes = h.lanes))
                        : ((d.updateQueue = null), (d.memoizedState = null));
                    }
                    var p = Ti(s);
                    if (null !== p) {
                      (p.flags &= -257),
                        Ai(p, s, l, 0, t),
                        1 & p.mode && ki(a, c, t),
                        (u = c);
                      var v = (t = p).updateQueue;
                      if (null === v) {
                        var m = new Set();
                        m.add(u), (t.updateQueue = m);
                      } else v.add(u);
                      break e;
                    }
                    if (0 === (1 & t)) {
                      ki(a, c, t), Do();
                      break e;
                    }
                    u = Error(o(426));
                  } else if (Gn && 1 & l.mode) {
                    var g = Ti(s);
                    if (null !== g) {
                      0 === (65536 & g.flags) && (g.flags |= 256),
                        Ai(g, s, l, 0, t),
                        er(u);
                      break e;
                    }
                  }
                  (a = u),
                    4 !== Qa && (Qa = 2),
                    null === io ? (io = [a]) : io.push(a),
                    (u = gi(u, l)),
                    (l = s);
                  do {
                    switch (l.tag) {
                      case 3:
                        (l.flags |= 65536),
                          (t &= -t),
                          (l.lanes |= t),
                          bn(l, Mi(0, u, t));
                        break e;
                      case 1:
                        a = u;
                        var y = l.type,
                          b = l.stateNode;
                        if (
                          0 === (128 & l.flags) &&
                          ("function" === typeof y.getDerivedStateFromError ||
                            (null !== b &&
                              "function" === typeof b.componentDidCatch &&
                              (null === ho || !ho.has(b))))
                        ) {
                          (l.flags |= 65536),
                            (t &= -t),
                            (l.lanes |= t),
                            bn(l, Ei(l, a, t));
                          break e;
                        }
                    }
                    l = l.return;
                  } while (null !== l);
                }
                Zo(n);
              } catch (_) {
                (t = _), Ya === n && null !== n && (Ya = n = n.return);
                continue;
              }
              break;
            }
          }
          function Oo() {
            var e = Ga.current;
            return (Ga.current = hi), null === e ? hi : e;
          }
          function Do() {
            (0 !== Qa && 3 !== Qa && 2 !== Qa) || (Qa = 4),
              null === qa ||
                (0 === (268435455 & to) && 0 === (268435455 & no)) ||
                Co(qa, Ka);
          }
          function Uo(e, t) {
            var n = Xa;
            Xa |= 2;
            var r = Oo();
            for ((qa === e && Ka === t) || Io(e, t); ; )
              try {
                zo();
                break;
              } catch (i) {
                No(e, i);
              }
            if ((on(), (Xa = n), (Ga.current = r), null !== Ya))
              throw Error(o(261));
            return (qa = null), (Ka = 0), Qa;
          }
          function zo() {
            for (; null !== Ya; ) Bo(Ya);
          }
          function Fo() {
            for (; null !== Ya && !Dt(); ) Bo(Ya);
          }
          function Bo(e) {
            var t = uo(e.alternate, e, $a);
            (e.memoizedProps = e.pendingProps),
              null === t ? Zo(e) : (Ya = t),
              (Wa.current = null);
          }
          function Zo(e) {
            var t = e;
            do {
              var n = t.alternate;
              if (((e = t.return), 0 === (32768 & t.flags))) {
                if (null !== (n = Ni(n, t, $a))) return void (Ya = n);
              } else {
                if (null !== (n = aa(n, t)))
                  return (n.flags &= 32767), void (Ya = n);
                if (null === e) return (Qa = 6), void (Ya = null);
                (e.flags |= 32768), (e.subtreeFlags = 0), (e.deletions = null);
              }
              if (null !== (t = t.sibling)) return void (Ya = t);
              Ya = t = e;
            } while (null !== t);
            0 === Qa && (Qa = 5);
          }
          function Ho(e, t) {
            var n = Lt,
              r = ja.transition;
            try {
              (ja.transition = null),
                (Lt = 1),
                (function (e, t, n) {
                  do {
                    Vo();
                  } while (null !== vo);
                  if (0 !== (6 & Xa)) throw Error(o(327));
                  var r = e.finishedWork,
                    i = e.finishedLanes;
                  if (null === r) return null;
                  if (
                    ((e.finishedWork = null),
                    (e.finishedLanes = 0),
                    r === e.current)
                  )
                    throw Error(o(177));
                  (e.callbackNode = null), (e.callbackPriority = 0);
                  var a = r.lanes | r.childLanes;
                  if (
                    ((function (e, t) {
                      var n = e.pendingLanes & ~t;
                      (e.pendingLanes = t),
                        (e.suspendedLanes = 0),
                        (e.pingedLanes = 0),
                        (e.expiredLanes &= t),
                        (e.mutableReadLanes &= t),
                        (e.entangledLanes &= t),
                        (t = e.entanglements);
                      var r = e.eventTimes;
                      for (e = e.expirationTimes; 0 < n; ) {
                        var i = 31 - _t(n),
                          a = 1 << i;
                        (t[i] = 0), (r[i] = -1), (e[i] = -1), (n &= ~a);
                      }
                    })(e, a),
                    e === qa && ((Ya = qa = null), (Ka = 0)),
                    (0 === (2064 & r.subtreeFlags) && 0 === (2064 & r.flags)) ||
                      po ||
                      ((po = !0),
                      Ko(Zt, function () {
                        return Vo(), null;
                      })),
                    (a = 0 !== (15990 & r.flags)),
                    0 !== (15990 & r.subtreeFlags) || a)
                  ) {
                    (a = ja.transition), (ja.transition = null);
                    var s = Lt;
                    Lt = 1;
                    var l = Xa;
                    (Xa |= 4),
                      (Wa.current = null),
                      (function (e, t) {
                        for (D(e.containerInfo), ua = t; null !== ua; )
                          if (
                            ((t = (e = ua).child),
                            0 !== (1028 & e.subtreeFlags) && null !== t)
                          )
                            (t.return = e), (ua = t);
                          else
                            for (; null !== ua; ) {
                              e = ua;
                              try {
                                var n = e.alternate;
                                if (0 !== (1024 & e.flags))
                                  switch (e.tag) {
                                    case 0:
                                    case 11:
                                    case 15:
                                    case 5:
                                    case 6:
                                    case 4:
                                    case 17:
                                      break;
                                    case 1:
                                      if (null !== n) {
                                        var r = n.memoizedProps,
                                          i = n.memoizedState,
                                          a = e.stateNode,
                                          s = a.getSnapshotBeforeUpdate(
                                            e.elementType === e.type
                                              ? r
                                              : en(e.type, r),
                                            i
                                          );
                                        a.__reactInternalSnapshotBeforeUpdate =
                                          s;
                                      }
                                      break;
                                    case 3:
                                      q && Ee(e.stateNode.containerInfo);
                                      break;
                                    default:
                                      throw Error(o(163));
                                  }
                              } catch (l) {
                                Wo(e, e.return, l);
                              }
                              if (null !== (t = e.sibling)) {
                                (t.return = e.return), (ua = t);
                                break;
                              }
                              ua = e.return;
                            }
                        (n = fa), (fa = !1);
                      })(e, r),
                      (function (e, t) {
                        for (ua = t; null !== ua; ) {
                          var n = (t = ua).deletions;
                          if (null !== n)
                            for (var r = 0; r < n.length; r++) {
                              var i = n[r];
                              try {
                                var a = e;
                                q ? Ma(a, i, t) : ga(a, i, t);
                                var o = i.alternate;
                                null !== o && (o.return = null),
                                  (i.return = null);
                              } catch (x) {
                                Wo(i, t, x);
                              }
                            }
                          if (
                            ((n = t.child),
                            0 !== (12854 & t.subtreeFlags) && null !== n)
                          )
                            (n.return = t), (ua = n);
                          else
                            for (; null !== ua; ) {
                              t = ua;
                              try {
                                var s = t.flags;
                                if ((32 & s && q && _e(t.stateNode), 512 & s)) {
                                  var l = t.alternate;
                                  if (null !== l) {
                                    var u = l.ref;
                                    null !== u &&
                                      ("function" === typeof u
                                        ? u(null)
                                        : (u.current = null));
                                  }
                                }
                                if (8192 & s)
                                  switch (t.tag) {
                                    case 13:
                                      if (null !== t.memoizedState) {
                                        var c = t.alternate;
                                        (null !== c &&
                                          null !== c.memoizedState) ||
                                          (oo = zt());
                                      }
                                      break;
                                    case 22:
                                      var d = null !== t.memoizedState,
                                        f = t.alternate,
                                        h =
                                          null !== f &&
                                          null !== f.memoizedState;
                                      if (((n = t), q))
                                        e: if (
                                          ((r = n), (i = d), (a = null), q)
                                        )
                                          for (var p = r; ; ) {
                                            if (5 === p.tag) {
                                              if (null === a) {
                                                a = p;
                                                var v = p.stateNode;
                                                i
                                                  ? xe(v)
                                                  : we(
                                                      p.stateNode,
                                                      p.memoizedProps
                                                    );
                                              }
                                            } else if (6 === p.tag) {
                                              if (null === a) {
                                                var m = p.stateNode;
                                                i
                                                  ? Se(m)
                                                  : Me(m, p.memoizedProps);
                                              }
                                            } else if (
                                              ((22 !== p.tag && 23 !== p.tag) ||
                                                null === p.memoizedState ||
                                                p === r) &&
                                              null !== p.child
                                            ) {
                                              (p.child.return = p),
                                                (p = p.child);
                                              continue;
                                            }
                                            if (p === r) break;
                                            for (; null === p.sibling; ) {
                                              if (
                                                null === p.return ||
                                                p.return === r
                                              )
                                                break e;
                                              a === p && (a = null),
                                                (p = p.return);
                                            }
                                            a === p && (a = null),
                                              (p.sibling.return = p.return),
                                              (p = p.sibling);
                                          }
                                      if (d && !h && 0 !== (1 & n.mode)) {
                                        ua = n;
                                        for (var g = n.child; null !== g; ) {
                                          for (n = ua = g; null !== ua; ) {
                                            var y = (r = ua).child;
                                            switch (r.tag) {
                                              case 0:
                                              case 11:
                                              case 14:
                                              case 15:
                                                ha(4, r, r.return);
                                                break;
                                              case 1:
                                                ca(r, r.return);
                                                var b = r.stateNode;
                                                if (
                                                  "function" ===
                                                  typeof b.componentWillUnmount
                                                ) {
                                                  var _ = r.return;
                                                  try {
                                                    (b.props = r.memoizedProps),
                                                      (b.state =
                                                        r.memoizedState),
                                                      b.componentWillUnmount();
                                                  } catch (x) {
                                                    Wo(r, _, x);
                                                  }
                                                }
                                                break;
                                              case 5:
                                                ca(r, r.return);
                                                break;
                                              case 22:
                                                if (null !== r.memoizedState) {
                                                  Pa(n);
                                                  continue;
                                                }
                                            }
                                            null !== y
                                              ? ((y.return = r), (ua = y))
                                              : Pa(n);
                                          }
                                          g = g.sibling;
                                        }
                                      }
                                  }
                                switch (4102 & s) {
                                  case 2:
                                    xa(t), (t.flags &= -3);
                                    break;
                                  case 6:
                                    xa(t), (t.flags &= -3), Ea(t.alternate, t);
                                    break;
                                  case 4096:
                                    t.flags &= -4097;
                                    break;
                                  case 4100:
                                    (t.flags &= -4097), Ea(t.alternate, t);
                                    break;
                                  case 4:
                                    Ea(t.alternate, t);
                                }
                              } catch (x) {
                                Wo(t, t.return, x);
                              }
                              if (null !== (n = t.sibling)) {
                                (n.return = t.return), (ua = n);
                                break;
                              }
                              ua = t.return;
                            }
                        }
                      })(e, r),
                      U(e.containerInfo),
                      (e.current = r),
                      Ta(r, e, i),
                      Ut(),
                      (Xa = l),
                      (Lt = s),
                      (ja.transition = a);
                  } else e.current = r;
                  if (
                    (po && ((po = !1), (vo = e), (mo = i)),
                    (a = e.pendingLanes),
                    0 === a && (ho = null),
                    (function (e) {
                      if (Gt && "function" === typeof Gt.onCommitFiberRoot)
                        try {
                          Gt.onCommitFiberRoot(
                            Vt,
                            e,
                            void 0,
                            128 === (128 & e.current.flags)
                          );
                        } catch (t) {}
                    })(r.stateNode),
                    Eo(e, zt()),
                    null !== t)
                  )
                    for (n = e.onRecoverableError, r = 0; r < t.length; r++)
                      n(t[r]);
                  if (co) throw ((co = !1), (e = fo), (fo = null), e);
                  0 !== (1 & mo) && 0 !== e.tag && Vo(),
                    (a = e.pendingLanes),
                    0 !== (1 & a)
                      ? e === yo
                        ? go++
                        : ((go = 0), (yo = e))
                      : (go = 0),
                    Kt();
                })(e, t, n);
            } finally {
              (ja.transition = r), (Lt = n);
            }
            return null;
          }
          function Vo() {
            if (null !== vo) {
              var e = It(mo),
                t = ja.transition,
                n = Lt;
              try {
                if (
                  ((ja.transition = null), (Lt = 16 > e ? 16 : e), null === vo)
                )
                  var r = !1;
                else {
                  if (((e = vo), (vo = null), (mo = 0), 0 !== (6 & Xa)))
                    throw Error(o(331));
                  var i = Xa;
                  for (Xa |= 4, ua = e.current; null !== ua; ) {
                    var a = ua,
                      s = a.child;
                    if (0 !== (16 & ua.flags)) {
                      var l = a.deletions;
                      if (null !== l) {
                        for (var u = 0; u < l.length; u++) {
                          var c = l[u];
                          for (ua = c; null !== ua; ) {
                            var d = ua;
                            switch (d.tag) {
                              case 0:
                              case 11:
                              case 15:
                                ha(8, d, a);
                            }
                            var f = d.child;
                            if (null !== f) (f.return = d), (ua = f);
                            else
                              for (; null !== ua; ) {
                                var h = (d = ua).sibling,
                                  p = d.return;
                                if ((ya(d), d === c)) {
                                  ua = null;
                                  break;
                                }
                                if (null !== h) {
                                  (h.return = p), (ua = h);
                                  break;
                                }
                                ua = p;
                              }
                          }
                        }
                        var v = a.alternate;
                        if (null !== v) {
                          var m = v.child;
                          if (null !== m) {
                            v.child = null;
                            do {
                              var g = m.sibling;
                              (m.sibling = null), (m = g);
                            } while (null !== m);
                          }
                        }
                        ua = a;
                      }
                    }
                    if (0 !== (2064 & a.subtreeFlags) && null !== s)
                      (s.return = a), (ua = s);
                    else
                      e: for (; null !== ua; ) {
                        if (0 !== (2048 & (a = ua).flags))
                          switch (a.tag) {
                            case 0:
                            case 11:
                            case 15:
                              ha(9, a, a.return);
                          }
                        var y = a.sibling;
                        if (null !== y) {
                          (y.return = a.return), (ua = y);
                          break e;
                        }
                        ua = a.return;
                      }
                  }
                  var b = e.current;
                  for (ua = b; null !== ua; ) {
                    var _ = (s = ua).child;
                    if (0 !== (2064 & s.subtreeFlags) && null !== _)
                      (_.return = s), (ua = _);
                    else
                      e: for (s = b; null !== ua; ) {
                        if (0 !== (2048 & (l = ua).flags))
                          try {
                            switch (l.tag) {
                              case 0:
                              case 11:
                              case 15:
                                pa(9, l);
                            }
                          } catch (S) {
                            Wo(l, l.return, S);
                          }
                        if (l === s) {
                          ua = null;
                          break e;
                        }
                        var x = l.sibling;
                        if (null !== x) {
                          (x.return = l.return), (ua = x);
                          break e;
                        }
                        ua = l.return;
                      }
                  }
                  if (
                    ((Xa = i),
                    Kt(),
                    Gt && "function" === typeof Gt.onPostCommitFiberRoot)
                  )
                    try {
                      Gt.onPostCommitFiberRoot(Vt, e);
                    } catch (S) {}
                  r = !0;
                }
                return r;
              } finally {
                (Lt = n), (ja.transition = t);
              }
            }
            return !1;
          }
          function Go(e, t, n) {
            gn(e, (t = Mi(0, (t = gi(n, t)), 1))),
              (t = xo()),
              null !== (e = Mo(e, 1)) && (Pt(e, 1, t), Eo(e, t));
          }
          function Wo(e, t, n) {
            if (3 === e.tag) Go(e, e, n);
            else
              for (; null !== t; ) {
                if (3 === t.tag) {
                  Go(t, e, n);
                  break;
                }
                if (1 === t.tag) {
                  var r = t.stateNode;
                  if (
                    "function" === typeof t.type.getDerivedStateFromError ||
                    ("function" === typeof r.componentDidCatch &&
                      (null === ho || !ho.has(r)))
                  ) {
                    gn(t, (e = Ei(t, (e = gi(n, e)), 1))),
                      (e = xo()),
                      null !== (t = Mo(t, 1)) && (Pt(t, 1, e), Eo(t, e));
                    break;
                  }
                }
                t = t.return;
              }
          }
          function jo(e, t, n) {
            var r = e.pingCache;
            null !== r && r.delete(t),
              (t = xo()),
              (e.pingedLanes |= e.suspendedLanes & n),
              qa === e &&
                (Ka & n) === n &&
                (4 === Qa ||
                (3 === Qa && (130023424 & Ka) === Ka && 500 > zt() - oo)
                  ? Io(e, 0)
                  : (ro |= n)),
              Eo(e, t);
          }
          function Xo(e, t) {
            0 === t &&
              (0 === (1 & e.mode)
                ? (t = 1)
                : ((t = Mt), 0 === (130023424 & (Mt <<= 1)) && (Mt = 4194304)));
            var n = xo();
            null !== (e = Mo(e, t)) && (Pt(e, t, n), Eo(e, n));
          }
          function qo(e) {
            var t = e.memoizedState,
              n = 0;
            null !== t && (n = t.retryLane), Xo(e, n);
          }
          function Yo(e, t) {
            var n = 0;
            switch (e.tag) {
              case 13:
                var r = e.stateNode,
                  i = e.memoizedState;
                null !== i && (n = i.retryLane);
                break;
              case 19:
                r = e.stateNode;
                break;
              default:
                throw Error(o(314));
            }
            null !== r && r.delete(t), Xo(e, n);
          }
          function Ko(e, t) {
            return Nt(e, t);
          }
          function $o(e, t, n, r) {
            (this.tag = e),
              (this.key = n),
              (this.sibling =
                this.child =
                this.return =
                this.stateNode =
                this.type =
                this.elementType =
                  null),
              (this.index = 0),
              (this.ref = null),
              (this.pendingProps = t),
              (this.dependencies =
                this.memoizedState =
                this.updateQueue =
                this.memoizedProps =
                  null),
              (this.mode = r),
              (this.subtreeFlags = this.flags = 0),
              (this.deletions = null),
              (this.childLanes = this.lanes = 0),
              (this.alternate = null);
          }
          function Jo(e, t, n, r) {
            return new $o(e, t, n, r);
          }
          function Qo(e) {
            return !(!(e = e.prototype) || !e.isReactComponent);
          }
          function es(e, t) {
            var n = e.alternate;
            return (
              null === n
                ? (((n = Jo(e.tag, t, e.key, e.mode)).elementType =
                    e.elementType),
                  (n.type = e.type),
                  (n.stateNode = e.stateNode),
                  (n.alternate = e),
                  (e.alternate = n))
                : ((n.pendingProps = t),
                  (n.type = e.type),
                  (n.flags = 0),
                  (n.subtreeFlags = 0),
                  (n.deletions = null)),
              (n.flags = 14680064 & e.flags),
              (n.childLanes = e.childLanes),
              (n.lanes = e.lanes),
              (n.child = e.child),
              (n.memoizedProps = e.memoizedProps),
              (n.memoizedState = e.memoizedState),
              (n.updateQueue = e.updateQueue),
              (t = e.dependencies),
              (n.dependencies =
                null === t
                  ? null
                  : { lanes: t.lanes, firstContext: t.firstContext }),
              (n.sibling = e.sibling),
              (n.index = e.index),
              (n.ref = e.ref),
              n
            );
          }
          function ts(e, t, n, r, i, a) {
            var s = 2;
            if (((r = e), "function" === typeof e)) Qo(e) && (s = 1);
            else if ("string" === typeof e) s = 5;
            else
              e: switch (e) {
                case c:
                  return ns(n.children, i, a, t);
                case d:
                  (s = 8), (i |= 8);
                  break;
                case f:
                  return (
                    ((e = Jo(12, n, t, 2 | i)).elementType = f),
                    (e.lanes = a),
                    e
                  );
                case m:
                  return (
                    ((e = Jo(13, n, t, i)).elementType = m), (e.lanes = a), e
                  );
                case g:
                  return (
                    ((e = Jo(19, n, t, i)).elementType = g), (e.lanes = a), e
                  );
                case _:
                  return rs(n, i, a, t);
                default:
                  if ("object" === typeof e && null !== e)
                    switch (e.$$typeof) {
                      case h:
                        s = 10;
                        break e;
                      case p:
                        s = 9;
                        break e;
                      case v:
                        s = 11;
                        break e;
                      case y:
                        s = 14;
                        break e;
                      case b:
                        (s = 16), (r = null);
                        break e;
                    }
                  throw Error(o(130, null == e ? e : typeof e, ""));
              }
            return (
              ((t = Jo(s, n, t, i)).elementType = e),
              (t.type = r),
              (t.lanes = a),
              t
            );
          }
          function ns(e, t, n, r) {
            return ((e = Jo(7, e, r, t)).lanes = n), e;
          }
          function rs(e, t, n, r) {
            return (
              ((e = Jo(22, e, r, t)).elementType = _),
              (e.lanes = n),
              (e.stateNode = {}),
              e
            );
          }
          function is(e, t, n) {
            return ((e = Jo(6, e, null, t)).lanes = n), e;
          }
          function as(e, t, n) {
            return (
              ((t = Jo(
                4,
                null !== e.children ? e.children : [],
                e.key,
                t
              )).lanes = n),
              (t.stateNode = {
                containerInfo: e.containerInfo,
                pendingChildren: null,
                implementation: e.implementation,
              }),
              t
            );
          }
          function os(e, t, n, r, i) {
            (this.tag = t),
              (this.containerInfo = e),
              (this.finishedWork =
                this.pingCache =
                this.current =
                this.pendingChildren =
                  null),
              (this.timeoutHandle = j),
              (this.callbackNode = this.pendingContext = this.context = null),
              (this.callbackPriority = 0),
              (this.eventTimes = Ct(0)),
              (this.expirationTimes = Ct(-1)),
              (this.entangledLanes =
                this.finishedLanes =
                this.mutableReadLanes =
                this.expiredLanes =
                this.pingedLanes =
                this.suspendedLanes =
                this.pendingLanes =
                  0),
              (this.entanglements = Ct(0)),
              (this.identifierPrefix = r),
              (this.onRecoverableError = i),
              K && (this.mutableSourceEagerHydrationData = null);
          }
          function ss(e, t, n, r, i, a, o, s, l) {
            return (
              (e = new os(e, t, n, s, l)),
              1 === t ? ((t = 1), !0 === a && (t |= 8)) : (t = 0),
              (a = Jo(3, null, null, t)),
              (e.current = a),
              (a.stateNode = e),
              (a.memoizedState = {
                element: r,
                isDehydrated: n,
                cache: null,
                transitions: null,
              }),
              pn(a),
              e
            );
          }
          function ls(e) {
            if (!e) return ut;
            e: {
              if (E((e = e._reactInternals)) !== e || 1 !== e.tag)
                throw Error(o(170));
              var t = e;
              do {
                switch (t.tag) {
                  case 3:
                    t = t.stateNode.context;
                    break e;
                  case 1:
                    if (pt(t.type)) {
                      t = t.stateNode.__reactInternalMemoizedMergedChildContext;
                      break e;
                    }
                }
                t = t.return;
              } while (null !== t);
              throw Error(o(171));
            }
            if (1 === e.tag) {
              var n = e.type;
              if (pt(n)) return gt(e, n, t);
            }
            return t;
          }
          function us(e) {
            var t = e._reactInternals;
            if (void 0 === t) {
              if ("function" === typeof e.render) throw Error(o(188));
              throw ((e = Object.keys(e).join(",")), Error(o(268, e)));
            }
            return null === (e = A(t)) ? null : e.stateNode;
          }
          function cs(e, t) {
            if (null !== (e = e.memoizedState) && null !== e.dehydrated) {
              var n = e.retryLane;
              e.retryLane = 0 !== n && n < t ? n : t;
            }
          }
          function ds(e, t) {
            cs(e, t), (e = e.alternate) && cs(e, t);
          }
          function fs(e) {
            return null === (e = A(e)) ? null : e.stateNode;
          }
          function hs() {
            return null;
          }
          return (
            (uo = function (e, t, n) {
              if (null !== e)
                if (e.memoizedProps !== t.pendingProps || dt.current) Di = !0;
                else {
                  if (0 === (e.lanes & n) && 0 === (128 & t.flags))
                    return (
                      (Di = !1),
                      (function (e, t, n) {
                        switch (t.tag) {
                          case 3:
                            ji(t), Qn();
                            break;
                          case 5:
                            pr(t);
                            break;
                          case 1:
                            pt(t.type) && yt(t);
                            break;
                          case 4:
                            fr(t, t.stateNode.containerInfo);
                            break;
                          case 10:
                            sn(0, t.type._context, t.memoizedProps.value);
                            break;
                          case 13:
                            var r = t.memoizedState;
                            if (null !== r)
                              return null !== r.dehydrated
                                ? (lt(mr, 1 & mr.current),
                                  (t.flags |= 128),
                                  null)
                                : 0 !== (n & t.child.childLanes)
                                ? Ki(e, t, n)
                                : (lt(mr, 1 & mr.current),
                                  null !== (e = ia(e, t, n))
                                    ? e.sibling
                                    : null);
                            lt(mr, 1 & mr.current);
                            break;
                          case 19:
                            if (
                              ((r = 0 !== (n & t.childLanes)),
                              0 !== (128 & e.flags))
                            ) {
                              if (r) return ra(e, t, n);
                              t.flags |= 128;
                            }
                            var i = t.memoizedState;
                            if (
                              (null !== i &&
                                ((i.rendering = null),
                                (i.tail = null),
                                (i.lastEffect = null)),
                              lt(mr, mr.current),
                              r)
                            )
                              break;
                            return null;
                          case 22:
                          case 23:
                            return (t.lanes = 0), Zi(e, t, n);
                        }
                        return ia(e, t, n);
                      })(e, t, n)
                    );
                  Di = 0 !== (131072 & e.flags);
                }
              else
                (Di = !1),
                  Gn && 0 !== (1048576 & t.flags) && Fn(t, Ln, t.index);
              switch (((t.lanes = 0), t.tag)) {
                case 2:
                  var r = t.type;
                  null !== e &&
                    ((e.alternate = null),
                    (t.alternate = null),
                    (t.flags |= 2)),
                    (e = t.pendingProps);
                  var i = ht(t, ct.current);
                  cn(t, n), (i = Lr(null, t, r, e, i, n));
                  var a = Ir();
                  return (
                    (t.flags |= 1),
                    "object" === typeof i &&
                    null !== i &&
                    "function" === typeof i.render &&
                    void 0 === i.$$typeof
                      ? ((t.tag = 1),
                        (t.memoizedState = null),
                        (t.updateQueue = null),
                        pt(r) ? ((a = !0), yt(t)) : (a = !1),
                        (t.memoizedState =
                          null !== i.state && void 0 !== i.state
                            ? i.state
                            : null),
                        pn(t),
                        (i.updater = Mn),
                        (t.stateNode = i),
                        (i._reactInternals = t),
                        An(t, r, e, n),
                        (t = Wi(null, t, r, !0, a, n)))
                      : ((t.tag = 0),
                        Gn && a && Bn(t),
                        Ui(null, t, i, n),
                        (t = t.child)),
                    t
                  );
                case 16:
                  r = t.elementType;
                  e: {
                    switch (
                      (null !== e &&
                        ((e.alternate = null),
                        (t.alternate = null),
                        (t.flags |= 2)),
                      (e = t.pendingProps),
                      (r = (i = r._init)(r._payload)),
                      (t.type = r),
                      (i = t.tag =
                        (function (e) {
                          if ("function" === typeof e) return Qo(e) ? 1 : 0;
                          if (void 0 !== e && null !== e) {
                            if ((e = e.$$typeof) === v) return 11;
                            if (e === y) return 14;
                          }
                          return 2;
                        })(r)),
                      (e = en(r, e)),
                      i)
                    ) {
                      case 0:
                        t = Vi(null, t, r, e, n);
                        break e;
                      case 1:
                        t = Gi(null, t, r, e, n);
                        break e;
                      case 11:
                        t = zi(null, t, r, e, n);
                        break e;
                      case 14:
                        t = Fi(null, t, r, en(r.type, e), n);
                        break e;
                    }
                    throw Error(o(306, r, ""));
                  }
                  return t;
                case 0:
                  return (
                    (r = t.type),
                    (i = t.pendingProps),
                    Vi(e, t, r, (i = t.elementType === r ? i : en(r, i)), n)
                  );
                case 1:
                  return (
                    (r = t.type),
                    (i = t.pendingProps),
                    Gi(e, t, r, (i = t.elementType === r ? i : en(r, i)), n)
                  );
                case 3:
                  e: {
                    if ((ji(t), null === e)) throw Error(o(387));
                    (r = t.pendingProps),
                      (i = (a = t.memoizedState).element),
                      vn(e, t),
                      _n(t, r, null, n);
                    var s = t.memoizedState;
                    if (((r = s.element), K && a.isDehydrated)) {
                      if (
                        ((a = {
                          element: r,
                          isDehydrated: !1,
                          cache: s.cache,
                          transitions: s.transitions,
                        }),
                        (t.updateQueue.baseState = a),
                        (t.memoizedState = a),
                        256 & t.flags)
                      ) {
                        t = Xi(e, t, r, n, (i = Error(o(423))));
                        break e;
                      }
                      if (r !== i) {
                        t = Xi(e, t, r, n, (i = Error(o(424))));
                        break e;
                      }
                      for (
                        K &&
                          ((Vn = Ze(t.stateNode.containerInfo)),
                          (Hn = t),
                          (Gn = !0),
                          (jn = null),
                          (Wn = !1)),
                          n = or(t, null, r, n),
                          t.child = n;
                        n;

                      )
                        (n.flags = (-3 & n.flags) | 4096), (n = n.sibling);
                    } else {
                      if ((Qn(), r === i)) {
                        t = ia(e, t, n);
                        break e;
                      }
                      Ui(e, t, r, n);
                    }
                    t = t.child;
                  }
                  return t;
                case 5:
                  return (
                    pr(t),
                    null === e && Kn(t),
                    (r = t.type),
                    (i = t.pendingProps),
                    (a = null !== e ? e.memoizedProps : null),
                    (s = i.children),
                    H(r, i)
                      ? (s = null)
                      : null !== a && H(r, a) && (t.flags |= 32),
                    Hi(e, t),
                    Ui(e, t, s, n),
                    t.child
                  );
                case 6:
                  return null === e && Kn(t), null;
                case 13:
                  return Ki(e, t, n);
                case 4:
                  return (
                    fr(t, t.stateNode.containerInfo),
                    (r = t.pendingProps),
                    null === e ? (t.child = ar(t, null, r, n)) : Ui(e, t, r, n),
                    t.child
                  );
                case 11:
                  return (
                    (r = t.type),
                    (i = t.pendingProps),
                    zi(e, t, r, (i = t.elementType === r ? i : en(r, i)), n)
                  );
                case 7:
                  return Ui(e, t, t.pendingProps, n), t.child;
                case 8:
                case 12:
                  return Ui(e, t, t.pendingProps.children, n), t.child;
                case 10:
                  e: {
                    if (
                      ((r = t.type._context),
                      (i = t.pendingProps),
                      (a = t.memoizedProps),
                      sn(0, r, (s = i.value)),
                      null !== a)
                    )
                      if (Wt(a.value, s)) {
                        if (a.children === i.children && !dt.current) {
                          t = ia(e, t, n);
                          break e;
                        }
                      } else
                        for (
                          null !== (a = t.child) && (a.return = t);
                          null !== a;

                        ) {
                          var l = a.dependencies;
                          if (null !== l) {
                            s = a.child;
                            for (var u = l.firstContext; null !== u; ) {
                              if (u.context === r) {
                                if (1 === a.tag) {
                                  (u = mn(-1, n & -n)).tag = 2;
                                  var c = a.updateQueue;
                                  if (null !== c) {
                                    var d = (c = c.shared).pending;
                                    null === d
                                      ? (u.next = u)
                                      : ((u.next = d.next), (d.next = u)),
                                      (c.pending = u);
                                  }
                                }
                                (a.lanes |= n),
                                  null !== (u = a.alternate) && (u.lanes |= n),
                                  un(a.return, n, t),
                                  (l.lanes |= n);
                                break;
                              }
                              u = u.next;
                            }
                          } else if (10 === a.tag)
                            s = a.type === t.type ? null : a.child;
                          else if (18 === a.tag) {
                            if (null === (s = a.return)) throw Error(o(341));
                            (s.lanes |= n),
                              null !== (l = s.alternate) && (l.lanes |= n),
                              un(s, n, t),
                              (s = a.sibling);
                          } else s = a.child;
                          if (null !== s) s.return = a;
                          else
                            for (s = a; null !== s; ) {
                              if (s === t) {
                                s = null;
                                break;
                              }
                              if (null !== (a = s.sibling)) {
                                (a.return = s.return), (s = a);
                                break;
                              }
                              s = s.return;
                            }
                          a = s;
                        }
                    Ui(e, t, i.children, n), (t = t.child);
                  }
                  return t;
                case 9:
                  return (
                    (i = t.type),
                    (r = t.pendingProps.children),
                    cn(t, n),
                    (r = r((i = dn(i)))),
                    (t.flags |= 1),
                    Ui(e, t, r, n),
                    t.child
                  );
                case 14:
                  return (
                    (i = en((r = t.type), t.pendingProps)),
                    Fi(e, t, r, (i = en(r.type, i)), n)
                  );
                case 15:
                  return Bi(e, t, t.type, t.pendingProps, n);
                case 17:
                  return (
                    (r = t.type),
                    (i = t.pendingProps),
                    (i = t.elementType === r ? i : en(r, i)),
                    null !== e &&
                      ((e.alternate = null),
                      (t.alternate = null),
                      (t.flags |= 2)),
                    (t.tag = 1),
                    pt(r) ? ((e = !0), yt(t)) : (e = !1),
                    cn(t, n),
                    kn(t, r, i),
                    An(t, r, i, n),
                    Wi(null, t, r, !0, e, n)
                  );
                case 19:
                  return ra(e, t, n);
                case 22:
                  return Zi(e, t, n);
              }
              throw Error(o(156, t.tag));
            }),
            (t.attemptContinuousHydration = function (e) {
              13 === e.tag && (wo(e, 134217728, xo()), ds(e, 134217728));
            }),
            (t.attemptHydrationAtCurrentPriority = function (e) {
              if (13 === e.tag) {
                var t = xo(),
                  n = So(e);
                wo(e, n, t), ds(e, n);
              }
            }),
            (t.attemptSynchronousHydration = function (e) {
              switch (e.tag) {
                case 3:
                  var t = e.stateNode;
                  if (t.current.memoizedState.isDehydrated) {
                    var n = Et(t.pendingLanes);
                    0 !== n &&
                      (Rt(t, 1 | n),
                      Eo(t, zt()),
                      0 === (6 & Xa) && (lo(), Kt()));
                  }
                  break;
                case 13:
                  var r = xo();
                  Ro(function () {
                    return wo(e, 1, r);
                  }),
                    ds(e, 1);
              }
            }),
            (t.batchedUpdates = function (e, t) {
              var n = Xa;
              Xa |= 1;
              try {
                return e(t);
              } finally {
                0 === (Xa = n) && (lo(), Xt && Kt());
              }
            }),
            (t.createComponentSelector = function (e) {
              return { $$typeof: La, value: e };
            }),
            (t.createContainer = function (e, t, n, r, i, a, o) {
              return ss(e, t, !1, null, 0, r, 0, a, o);
            }),
            (t.createHasPseudoClassSelector = function (e) {
              return { $$typeof: Ia, value: e };
            }),
            (t.createHydrationContainer = function (e, t, n, r, i, a, o, s, l) {
              return (
                ((e = ss(n, r, !0, e, 0, a, 0, s, l)).context = ls(null)),
                (n = e.current),
                ((a = mn((r = xo()), (i = So(n)))).callback =
                  void 0 !== t && null !== t ? t : null),
                gn(n, a),
                (e.current.lanes = i),
                Pt(e, i, r),
                Eo(e, r),
                e
              );
            }),
            (t.createPortal = function (e, t, n) {
              var r =
                3 < arguments.length && void 0 !== arguments[3]
                  ? arguments[3]
                  : null;
              return {
                $$typeof: u,
                key: null == r ? null : "" + r,
                children: e,
                containerInfo: t,
                implementation: n,
              };
            }),
            (t.createRoleSelector = function (e) {
              return { $$typeof: Na, value: e };
            }),
            (t.createTestNameSelector = function (e) {
              return { $$typeof: Oa, value: e };
            }),
            (t.createTextSelector = function (e) {
              return { $$typeof: Da, value: e };
            }),
            (t.deferredUpdates = function (e) {
              var t = Lt,
                n = ja.transition;
              try {
                return (ja.transition = null), (Lt = 16), e();
              } finally {
                (Lt = t), (ja.transition = n);
              }
            }),
            (t.discreteUpdates = function (e, t, n, r, i) {
              var a = Lt,
                o = ja.transition;
              try {
                return (ja.transition = null), (Lt = 1), e(t, n, r, i);
              } finally {
                (Lt = a), (ja.transition = o), 0 === Xa && lo();
              }
            }),
            (t.findAllNodes = Ha),
            (t.findBoundingRects = function (e, t) {
              if (!re) throw Error(o(363));
              (t = Ha(e, t)), (e = []);
              for (var n = 0; n < t.length; n++) e.push(ae(t[n]));
              for (t = e.length - 1; 0 < t; t--)
                for (
                  var r = (n = e[t]).x,
                    i = r + n.width,
                    a = n.y,
                    s = a + n.height,
                    l = t - 1;
                  0 <= l;
                  l--
                )
                  if (t !== l) {
                    var u = e[l],
                      c = u.x,
                      d = c + u.width,
                      f = u.y,
                      h = f + u.height;
                    if (r >= c && a >= f && i <= d && s <= h) {
                      e.splice(t, 1);
                      break;
                    }
                    if (!(r !== c || n.width !== u.width || h < a || f > s)) {
                      f > a && ((u.height += f - a), (u.y = a)),
                        h < s && (u.height = s - f),
                        e.splice(t, 1);
                      break;
                    }
                    if (!(a !== f || n.height !== u.height || d < r || c > i)) {
                      c > r && ((u.width += c - r), (u.x = r)),
                        d < i && (u.width = i - c),
                        e.splice(t, 1);
                      break;
                    }
                  }
              return e;
            }),
            (t.findHostInstance = us),
            (t.findHostInstanceWithNoPortals = function (e) {
              return null === (e = null !== (e = T(e)) ? P(e) : null)
                ? null
                : e.stateNode;
            }),
            (t.findHostInstanceWithWarning = function (e) {
              return us(e);
            }),
            (t.flushControlled = function (e) {
              var t = Xa;
              Xa |= 1;
              var n = ja.transition,
                r = Lt;
              try {
                (ja.transition = null), (Lt = 1), e();
              } finally {
                (Lt = r), (ja.transition = n), 0 === (Xa = t) && (lo(), Kt());
              }
            }),
            (t.flushPassiveEffects = Vo),
            (t.flushSync = Ro),
            (t.focusWithin = function (e, t) {
              if (!re) throw Error(o(363));
              for (
                t = Za((e = za(e)), t), t = Array.from(t), e = 0;
                e < t.length;

              ) {
                var n = t[e++];
                if (!se(n)) {
                  if (5 === n.tag && ue(n.stateNode)) return !0;
                  for (n = n.child; null !== n; ) t.push(n), (n = n.sibling);
                }
              }
              return !1;
            }),
            (t.getCurrentUpdatePriority = function () {
              return Lt;
            }),
            (t.getFindAllNodesFailureDescription = function (e, t) {
              if (!re) throw Error(o(363));
              var n = 0,
                r = [];
              e = [za(e), 0];
              for (var i = 0; i < e.length; ) {
                var a = e[i++],
                  s = e[i++],
                  l = t[s];
                if (
                  (5 !== a.tag || !se(a)) &&
                  (Fa(a, l) && (r.push(Ba(l)), ++s > n && (n = s)),
                  s < t.length)
                )
                  for (a = a.child; null !== a; ) e.push(a, s), (a = a.sibling);
              }
              if (n < t.length) {
                for (e = []; n < t.length; n++) e.push(Ba(t[n]));
                return (
                  "findAllNodes was able to match part of the selector:\n  " +
                  r.join(" > ") +
                  "\n\nNo matching component was found for:\n  " +
                  e.join(" > ")
                );
              }
              return null;
            }),
            (t.getPublicRootInstance = function (e) {
              return (e = e.current).child
                ? 5 === e.child.tag
                  ? I(e.child.stateNode)
                  : e.child.stateNode
                : null;
            }),
            (t.injectIntoDevTools = function (e) {
              if (
                ((e = {
                  bundleType: e.bundleType,
                  version: e.version,
                  rendererPackageName: e.rendererPackageName,
                  rendererConfig: e.rendererConfig,
                  overrideHookState: null,
                  overrideHookStateDeletePath: null,
                  overrideHookStateRenamePath: null,
                  overrideProps: null,
                  overridePropsDeletePath: null,
                  overridePropsRenamePath: null,
                  setErrorHandler: null,
                  setSuspenseHandler: null,
                  scheduleUpdate: null,
                  currentDispatcherRef: s.ReactCurrentDispatcher,
                  findHostInstanceByFiber: fs,
                  findFiberByHostInstance: e.findFiberByHostInstance || hs,
                  findHostInstancesForRefresh: null,
                  scheduleRefresh: null,
                  scheduleRoot: null,
                  setRefreshHandler: null,
                  getCurrentFiber: null,
                  reconcilerVersion: "18.0.0-fc46dba67-20220329",
                }),
                "undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)
              )
                e = !1;
              else {
                var t = __REACT_DEVTOOLS_GLOBAL_HOOK__;
                if (t.isDisabled || !t.supportsFiber) e = !0;
                else {
                  try {
                    (Vt = t.inject(e)), (Gt = t);
                  } catch (n) {}
                  e = !!t.checkDCE;
                }
              }
              return e;
            }),
            (t.isAlreadyRendering = function () {
              return !1;
            }),
            (t.observeVisibleRects = function (e, t, n, r) {
              if (!re) throw Error(o(363));
              e = Ha(e, t);
              var i = ce(e, n, r).disconnect;
              return {
                disconnect: function () {
                  i();
                },
              };
            }),
            (t.registerMutableSourceForHydration = function (e, t) {
              var n = t._getVersion;
              (n = n(t._source)),
                null == e.mutableSourceEagerHydrationData
                  ? (e.mutableSourceEagerHydrationData = [t, n])
                  : e.mutableSourceEagerHydrationData.push(t, n);
            }),
            (t.runWithPriority = function (e, t) {
              var n = Lt;
              try {
                return (Lt = e), t();
              } finally {
                Lt = n;
              }
            }),
            (t.shouldError = function () {
              return null;
            }),
            (t.shouldSuspend = function () {
              return !1;
            }),
            (t.updateContainer = function (e, t, n, r) {
              var i = t.current,
                a = xo(),
                o = So(i);
              return (
                (n = ls(n)),
                null === t.context ? (t.context = n) : (t.pendingContext = n),
                ((t = mn(a, o)).payload = { element: e }),
                null !== (r = void 0 === r ? null : r) && (t.callback = r),
                gn(i, t),
                null !== (e = wo(i, o, a)) && yn(e, i, o),
                o
              );
            }),
            t
          );
        };
      },
      4585: function (e, t, n) {
        "use strict";
        e.exports = n(4976);
      },
      258: function (e, t, n) {
        "use strict";
        e.exports = n(3721);
      },
      5783: function (e, t) {
        "use strict";
        function n(e, t) {
          var n = e.length;
          e.push(t);
          e: for (; 0 < n; ) {
            var r = (n - 1) >>> 1,
              i = e[r];
            if (!(0 < a(i, t))) break e;
            (e[r] = t), (e[n] = i), (n = r);
          }
        }
        function r(e) {
          return 0 === e.length ? null : e[0];
        }
        function i(e) {
          if (0 === e.length) return null;
          var t = e[0],
            n = e.pop();
          if (n !== t) {
            e[0] = n;
            e: for (var r = 0, i = e.length, o = i >>> 1; r < o; ) {
              var s = 2 * (r + 1) - 1,
                l = e[s],
                u = s + 1,
                c = e[u];
              if (0 > a(l, n))
                u < i && 0 > a(c, l)
                  ? ((e[r] = c), (e[u] = n), (r = u))
                  : ((e[r] = l), (e[s] = n), (r = s));
              else {
                if (!(u < i && 0 > a(c, n))) break e;
                (e[r] = c), (e[u] = n), (r = u);
              }
            }
          }
          return t;
        }
        function a(e, t) {
          var n = e.sortIndex - t.sortIndex;
          return 0 !== n ? n : e.id - t.id;
        }
        if (
          "object" === typeof performance &&
          "function" === typeof performance.now
        ) {
          var o = performance;
          t.unstable_now = function () {
            return o.now();
          };
        } else {
          var s = Date,
            l = s.now();
          t.unstable_now = function () {
            return s.now() - l;
          };
        }
        var u = [],
          c = [],
          d = 1,
          f = null,
          h = 3,
          p = !1,
          v = !1,
          m = !1,
          g = "function" === typeof setTimeout ? setTimeout : null,
          y = "function" === typeof clearTimeout ? clearTimeout : null,
          b = "undefined" !== typeof setImmediate ? setImmediate : null;
        function _(e) {
          for (var t = r(c); null !== t; ) {
            if (null === t.callback) i(c);
            else {
              if (!(t.startTime <= e)) break;
              i(c), (t.sortIndex = t.expirationTime), n(u, t);
            }
            t = r(c);
          }
        }
        function x(e) {
          if (((m = !1), _(e), !v))
            if (null !== r(u)) (v = !0), I(S);
            else {
              var t = r(c);
              null !== t && N(x, t.startTime - e);
            }
        }
        function S(e, n) {
          (v = !1), m && ((m = !1), y(k), (k = -1)), (p = !0);
          var a = h;
          try {
            for (
              _(n), f = r(u);
              null !== f && (!(f.expirationTime > n) || (e && !C()));

            ) {
              var o = f.callback;
              if ("function" === typeof o) {
                (f.callback = null), (h = f.priorityLevel);
                var s = o(f.expirationTime <= n);
                (n = t.unstable_now()),
                  "function" === typeof s
                    ? (f.callback = s)
                    : f === r(u) && i(u),
                  _(n);
              } else i(u);
              f = r(u);
            }
            if (null !== f) var l = !0;
            else {
              var d = r(c);
              null !== d && N(x, d.startTime - n), (l = !1);
            }
            return l;
          } finally {
            (f = null), (h = a), (p = !1);
          }
        }
        "undefined" !== typeof navigator &&
          void 0 !== navigator.scheduling &&
          void 0 !== navigator.scheduling.isInputPending &&
          navigator.scheduling.isInputPending.bind(navigator.scheduling);
        var w,
          M = !1,
          E = null,
          k = -1,
          T = 5,
          A = -1;
        function C() {
          return !(t.unstable_now() - A < T);
        }
        function P() {
          if (null !== E) {
            var e = t.unstable_now();
            A = e;
            var n = !0;
            try {
              n = E(!0, e);
            } finally {
              n ? w() : ((M = !1), (E = null));
            }
          } else M = !1;
        }
        if ("function" === typeof b)
          w = function () {
            b(P);
          };
        else if ("undefined" !== typeof MessageChannel) {
          var R = new MessageChannel(),
            L = R.port2;
          (R.port1.onmessage = P),
            (w = function () {
              L.postMessage(null);
            });
        } else
          w = function () {
            g(P, 0);
          };
        function I(e) {
          (E = e), M || ((M = !0), w());
        }
        function N(e, n) {
          k = g(function () {
            e(t.unstable_now());
          }, n);
        }
        (t.unstable_IdlePriority = 5),
          (t.unstable_ImmediatePriority = 1),
          (t.unstable_LowPriority = 4),
          (t.unstable_NormalPriority = 3),
          (t.unstable_Profiling = null),
          (t.unstable_UserBlockingPriority = 2),
          (t.unstable_cancelCallback = function (e) {
            e.callback = null;
          }),
          (t.unstable_continueExecution = function () {
            v || p || ((v = !0), I(S));
          }),
          (t.unstable_forceFrameRate = function (e) {
            0 > e || 125 < e
              ? console.error(
                  "forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"
                )
              : (T = 0 < e ? Math.floor(1e3 / e) : 5);
          }),
          (t.unstable_getCurrentPriorityLevel = function () {
            return h;
          }),
          (t.unstable_getFirstCallbackNode = function () {
            return r(u);
          }),
          (t.unstable_next = function (e) {
            switch (h) {
              case 1:
              case 2:
              case 3:
                var t = 3;
                break;
              default:
                t = h;
            }
            var n = h;
            h = t;
            try {
              return e();
            } finally {
              h = n;
            }
          }),
          (t.unstable_pauseExecution = function () {}),
          (t.unstable_requestPaint = function () {}),
          (t.unstable_runWithPriority = function (e, t) {
            switch (e) {
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
                break;
              default:
                e = 3;
            }
            var n = h;
            h = e;
            try {
              return t();
            } finally {
              h = n;
            }
          }),
          (t.unstable_scheduleCallback = function (e, i, a) {
            var o = t.unstable_now();
            switch (
              ("object" === typeof a && null !== a
                ? (a = "number" === typeof (a = a.delay) && 0 < a ? o + a : o)
                : (a = o),
              e)
            ) {
              case 1:
                var s = -1;
                break;
              case 2:
                s = 250;
                break;
              case 5:
                s = 1073741823;
                break;
              case 4:
                s = 1e4;
                break;
              default:
                s = 5e3;
            }
            return (
              (e = {
                id: d++,
                callback: i,
                priorityLevel: e,
                startTime: a,
                expirationTime: (s = a + s),
                sortIndex: -1,
              }),
              a > o
                ? ((e.sortIndex = a),
                  n(c, e),
                  null === r(u) &&
                    e === r(c) &&
                    (m ? (y(k), (k = -1)) : (m = !0), N(x, a - o)))
                : ((e.sortIndex = s), n(u, e), v || p || ((v = !0), I(S))),
              e
            );
          }),
          (t.unstable_shouldYield = C),
          (t.unstable_wrapCallback = function (e) {
            var t = h;
            return function () {
              var n = h;
              h = t;
              try {
                return e.apply(this, arguments);
              } finally {
                h = n;
              }
            };
          });
      },
      3100: function (e, t, n) {
        "use strict";
        e.exports = n(5783);
      },
      6374: function (e, t, n) {
        "use strict";
        var r = n(2791),
          i = Symbol.for("react.element"),
          a = Symbol.for("react.fragment"),
          o = Object.prototype.hasOwnProperty,
          s =
            r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
              .ReactCurrentOwner,
          l = { key: !0, ref: !0, __self: !0, __source: !0 };
        function u(e, t, n) {
          var r,
            a = {},
            u = null,
            c = null;
          for (r in (void 0 !== n && (u = "" + n),
          void 0 !== t.key && (u = "" + t.key),
          void 0 !== t.ref && (c = t.ref),
          t))
            o.call(t, r) && !l.hasOwnProperty(r) && (a[r] = t[r]);
          if (e && e.defaultProps)
            for (r in (t = e.defaultProps)) void 0 === a[r] && (a[r] = t[r]);
          return {
            $$typeof: i,
            type: e,
            key: u,
            ref: c,
            props: a,
            _owner: s.current,
          };
        }
        (t.Fragment = a), (t.jsx = u), (t.jsxs = u);
      },
      9117: function (e, t) {
        "use strict";
        var n = Symbol.for("react.element"),
          r = Symbol.for("react.portal"),
          i = Symbol.for("react.fragment"),
          a = Symbol.for("react.strict_mode"),
          o = Symbol.for("react.profiler"),
          s = Symbol.for("react.provider"),
          l = Symbol.for("react.context"),
          u = Symbol.for("react.forward_ref"),
          c = Symbol.for("react.suspense"),
          d = Symbol.for("react.memo"),
          f = Symbol.for("react.lazy"),
          h = Symbol.iterator;
        var p = {
            isMounted: function () {
              return !1;
            },
            enqueueForceUpdate: function () {},
            enqueueReplaceState: function () {},
            enqueueSetState: function () {},
          },
          v = Object.assign,
          m = {};
        function g(e, t, n) {
          (this.props = e),
            (this.context = t),
            (this.refs = m),
            (this.updater = n || p);
        }
        function y() {}
        function b(e, t, n) {
          (this.props = e),
            (this.context = t),
            (this.refs = m),
            (this.updater = n || p);
        }
        (g.prototype.isReactComponent = {}),
          (g.prototype.setState = function (e, t) {
            if ("object" !== typeof e && "function" !== typeof e && null != e)
              throw Error(
                "setState(...): takes an object of state variables to update or a function which returns an object of state variables."
              );
            this.updater.enqueueSetState(this, e, t, "setState");
          }),
          (g.prototype.forceUpdate = function (e) {
            this.updater.enqueueForceUpdate(this, e, "forceUpdate");
          }),
          (y.prototype = g.prototype);
        var _ = (b.prototype = new y());
        (_.constructor = b), v(_, g.prototype), (_.isPureReactComponent = !0);
        var x = Array.isArray,
          S = Object.prototype.hasOwnProperty,
          w = { current: null },
          M = { key: !0, ref: !0, __self: !0, __source: !0 };
        function E(e, t, r) {
          var i,
            a = {},
            o = null,
            s = null;
          if (null != t)
            for (i in (void 0 !== t.ref && (s = t.ref),
            void 0 !== t.key && (o = "" + t.key),
            t))
              S.call(t, i) && !M.hasOwnProperty(i) && (a[i] = t[i]);
          var l = arguments.length - 2;
          if (1 === l) a.children = r;
          else if (1 < l) {
            for (var u = Array(l), c = 0; c < l; c++) u[c] = arguments[c + 2];
            a.children = u;
          }
          if (e && e.defaultProps)
            for (i in (l = e.defaultProps)) void 0 === a[i] && (a[i] = l[i]);
          return {
            $$typeof: n,
            type: e,
            key: o,
            ref: s,
            props: a,
            _owner: w.current,
          };
        }
        function k(e) {
          return "object" === typeof e && null !== e && e.$$typeof === n;
        }
        var T = /\/+/g;
        function A(e, t) {
          return "object" === typeof e && null !== e && null != e.key
            ? (function (e) {
                var t = { "=": "=0", ":": "=2" };
                return (
                  "$" +
                  e.replace(/[=:]/g, function (e) {
                    return t[e];
                  })
                );
              })("" + e.key)
            : t.toString(36);
        }
        function C(e, t, i, a, o) {
          var s = typeof e;
          ("undefined" !== s && "boolean" !== s) || (e = null);
          var l = !1;
          if (null === e) l = !0;
          else
            switch (s) {
              case "string":
              case "number":
                l = !0;
                break;
              case "object":
                switch (e.$$typeof) {
                  case n:
                  case r:
                    l = !0;
                }
            }
          if (l)
            return (
              (o = o((l = e))),
              (e = "" === a ? "." + A(l, 0) : a),
              x(o)
                ? ((i = ""),
                  null != e && (i = e.replace(T, "$&/") + "/"),
                  C(o, t, i, "", function (e) {
                    return e;
                  }))
                : null != o &&
                  (k(o) &&
                    (o = (function (e, t) {
                      return {
                        $$typeof: n,
                        type: e.type,
                        key: t,
                        ref: e.ref,
                        props: e.props,
                        _owner: e._owner,
                      };
                    })(
                      o,
                      i +
                        (!o.key || (l && l.key === o.key)
                          ? ""
                          : ("" + o.key).replace(T, "$&/") + "/") +
                        e
                    )),
                  t.push(o)),
              1
            );
          if (((l = 0), (a = "" === a ? "." : a + ":"), x(e)))
            for (var u = 0; u < e.length; u++) {
              var c = a + A((s = e[u]), u);
              l += C(s, t, i, c, o);
            }
          else if (
            ((c = (function (e) {
              return null === e || "object" !== typeof e
                ? null
                : "function" === typeof (e = (h && e[h]) || e["@@iterator"])
                ? e
                : null;
            })(e)),
            "function" === typeof c)
          )
            for (e = c.call(e), u = 0; !(s = e.next()).done; )
              l += C((s = s.value), t, i, (c = a + A(s, u++)), o);
          else if ("object" === s)
            throw (
              ((t = String(e)),
              Error(
                "Objects are not valid as a React child (found: " +
                  ("[object Object]" === t
                    ? "object with keys {" + Object.keys(e).join(", ") + "}"
                    : t) +
                  "). If you meant to render a collection of children, use an array instead."
              ))
            );
          return l;
        }
        function P(e, t, n) {
          if (null == e) return e;
          var r = [],
            i = 0;
          return (
            C(e, r, "", "", function (e) {
              return t.call(n, e, i++);
            }),
            r
          );
        }
        function R(e) {
          if (-1 === e._status) {
            var t = e._result;
            (t = t()).then(
              function (t) {
                (0 !== e._status && -1 !== e._status) ||
                  ((e._status = 1), (e._result = t));
              },
              function (t) {
                (0 !== e._status && -1 !== e._status) ||
                  ((e._status = 2), (e._result = t));
              }
            ),
              -1 === e._status && ((e._status = 0), (e._result = t));
          }
          if (1 === e._status) return e._result.default;
          throw e._result;
        }
        var L = { current: null },
          I = { transition: null },
          N = {
            ReactCurrentDispatcher: L,
            ReactCurrentBatchConfig: I,
            ReactCurrentOwner: w,
          };
        (t.Children = {
          map: P,
          forEach: function (e, t, n) {
            P(
              e,
              function () {
                t.apply(this, arguments);
              },
              n
            );
          },
          count: function (e) {
            var t = 0;
            return (
              P(e, function () {
                t++;
              }),
              t
            );
          },
          toArray: function (e) {
            return (
              P(e, function (e) {
                return e;
              }) || []
            );
          },
          only: function (e) {
            if (!k(e))
              throw Error(
                "React.Children.only expected to receive a single React element child."
              );
            return e;
          },
        }),
          (t.Component = g),
          (t.Fragment = i),
          (t.Profiler = o),
          (t.PureComponent = b),
          (t.StrictMode = a),
          (t.Suspense = c),
          (t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = N),
          (t.cloneElement = function (e, t, r) {
            if (null === e || void 0 === e)
              throw Error(
                "React.cloneElement(...): The argument must be a React element, but you passed " +
                  e +
                  "."
              );
            var i = v({}, e.props),
              a = e.key,
              o = e.ref,
              s = e._owner;
            if (null != t) {
              if (
                (void 0 !== t.ref && ((o = t.ref), (s = w.current)),
                void 0 !== t.key && (a = "" + t.key),
                e.type && e.type.defaultProps)
              )
                var l = e.type.defaultProps;
              for (u in t)
                S.call(t, u) &&
                  !M.hasOwnProperty(u) &&
                  (i[u] = void 0 === t[u] && void 0 !== l ? l[u] : t[u]);
            }
            var u = arguments.length - 2;
            if (1 === u) i.children = r;
            else if (1 < u) {
              l = Array(u);
              for (var c = 0; c < u; c++) l[c] = arguments[c + 2];
              i.children = l;
            }
            return {
              $$typeof: n,
              type: e.type,
              key: a,
              ref: o,
              props: i,
              _owner: s,
            };
          }),
          (t.createContext = function (e) {
            return (
              ((e = {
                $$typeof: l,
                _currentValue: e,
                _currentValue2: e,
                _threadCount: 0,
                Provider: null,
                Consumer: null,
                _defaultValue: null,
                _globalName: null,
              }).Provider = { $$typeof: s, _context: e }),
              (e.Consumer = e)
            );
          }),
          (t.createElement = E),
          (t.createFactory = function (e) {
            var t = E.bind(null, e);
            return (t.type = e), t;
          }),
          (t.createRef = function () {
            return { current: null };
          }),
          (t.forwardRef = function (e) {
            return { $$typeof: u, render: e };
          }),
          (t.isValidElement = k),
          (t.lazy = function (e) {
            return {
              $$typeof: f,
              _payload: { _status: -1, _result: e },
              _init: R,
            };
          }),
          (t.memo = function (e, t) {
            return { $$typeof: d, type: e, compare: void 0 === t ? null : t };
          }),
          (t.startTransition = function (e) {
            var t = I.transition;
            I.transition = {};
            try {
              e();
            } finally {
              I.transition = t;
            }
          }),
          (t.unstable_act = function () {
            throw Error(
              "act(...) is not supported in production builds of React."
            );
          }),
          (t.useCallback = function (e, t) {
            return L.current.useCallback(e, t);
          }),
          (t.useContext = function (e) {
            return L.current.useContext(e);
          }),
          (t.useDebugValue = function () {}),
          (t.useDeferredValue = function (e) {
            return L.current.useDeferredValue(e);
          }),
          (t.useEffect = function (e, t) {
            return L.current.useEffect(e, t);
          }),
          (t.useId = function () {
            return L.current.useId();
          }),
          (t.useImperativeHandle = function (e, t, n) {
            return L.current.useImperativeHandle(e, t, n);
          }),
          (t.useInsertionEffect = function (e, t) {
            return L.current.useInsertionEffect(e, t);
          }),
          (t.useLayoutEffect = function (e, t) {
            return L.current.useLayoutEffect(e, t);
          }),
          (t.useMemo = function (e, t) {
            return L.current.useMemo(e, t);
          }),
          (t.useReducer = function (e, t, n) {
            return L.current.useReducer(e, t, n);
          }),
          (t.useRef = function (e) {
            return L.current.useRef(e);
          }),
          (t.useState = function (e) {
            return L.current.useState(e);
          }),
          (t.useSyncExternalStore = function (e, t, n) {
            return L.current.useSyncExternalStore(e, t, n);
          }),
          (t.useTransition = function () {
            return L.current.useTransition();
          }),
          (t.version = "18.2.0");
      },
      2791: function (e, t, n) {
        "use strict";
        e.exports = n(9117);
      },
      184: function (e, t, n) {
        "use strict";
        e.exports = n(6374);
      },
      6813: function (e, t) {
        "use strict";
        function n(e, t) {
          var n = e.length;
          e.push(t);
          e: for (; 0 < n; ) {
            var r = (n - 1) >>> 1,
              i = e[r];
            if (!(0 < a(i, t))) break e;
            (e[r] = t), (e[n] = i), (n = r);
          }
        }
        function r(e) {
          return 0 === e.length ? null : e[0];
        }
        function i(e) {
          if (0 === e.length) return null;
          var t = e[0],
            n = e.pop();
          if (n !== t) {
            e[0] = n;
            e: for (var r = 0, i = e.length, o = i >>> 1; r < o; ) {
              var s = 2 * (r + 1) - 1,
                l = e[s],
                u = s + 1,
                c = e[u];
              if (0 > a(l, n))
                u < i && 0 > a(c, l)
                  ? ((e[r] = c), (e[u] = n), (r = u))
                  : ((e[r] = l), (e[s] = n), (r = s));
              else {
                if (!(u < i && 0 > a(c, n))) break e;
                (e[r] = c), (e[u] = n), (r = u);
              }
            }
          }
          return t;
        }
        function a(e, t) {
          var n = e.sortIndex - t.sortIndex;
          return 0 !== n ? n : e.id - t.id;
        }
        if (
          "object" === typeof performance &&
          "function" === typeof performance.now
        ) {
          var o = performance;
          t.unstable_now = function () {
            return o.now();
          };
        } else {
          var s = Date,
            l = s.now();
          t.unstable_now = function () {
            return s.now() - l;
          };
        }
        var u = [],
          c = [],
          d = 1,
          f = null,
          h = 3,
          p = !1,
          v = !1,
          m = !1,
          g = "function" === typeof setTimeout ? setTimeout : null,
          y = "function" === typeof clearTimeout ? clearTimeout : null,
          b = "undefined" !== typeof setImmediate ? setImmediate : null;
        function _(e) {
          for (var t = r(c); null !== t; ) {
            if (null === t.callback) i(c);
            else {
              if (!(t.startTime <= e)) break;
              i(c), (t.sortIndex = t.expirationTime), n(u, t);
            }
            t = r(c);
          }
        }
        function x(e) {
          if (((m = !1), _(e), !v))
            if (null !== r(u)) (v = !0), I(S);
            else {
              var t = r(c);
              null !== t && N(x, t.startTime - e);
            }
        }
        function S(e, n) {
          (v = !1), m && ((m = !1), y(k), (k = -1)), (p = !0);
          var a = h;
          try {
            for (
              _(n), f = r(u);
              null !== f && (!(f.expirationTime > n) || (e && !C()));

            ) {
              var o = f.callback;
              if ("function" === typeof o) {
                (f.callback = null), (h = f.priorityLevel);
                var s = o(f.expirationTime <= n);
                (n = t.unstable_now()),
                  "function" === typeof s
                    ? (f.callback = s)
                    : f === r(u) && i(u),
                  _(n);
              } else i(u);
              f = r(u);
            }
            if (null !== f) var l = !0;
            else {
              var d = r(c);
              null !== d && N(x, d.startTime - n), (l = !1);
            }
            return l;
          } finally {
            (f = null), (h = a), (p = !1);
          }
        }
        "undefined" !== typeof navigator &&
          void 0 !== navigator.scheduling &&
          void 0 !== navigator.scheduling.isInputPending &&
          navigator.scheduling.isInputPending.bind(navigator.scheduling);
        var w,
          M = !1,
          E = null,
          k = -1,
          T = 5,
          A = -1;
        function C() {
          return !(t.unstable_now() - A < T);
        }
        function P() {
          if (null !== E) {
            var e = t.unstable_now();
            A = e;
            var n = !0;
            try {
              n = E(!0, e);
            } finally {
              n ? w() : ((M = !1), (E = null));
            }
          } else M = !1;
        }
        if ("function" === typeof b)
          w = function () {
            b(P);
          };
        else if ("undefined" !== typeof MessageChannel) {
          var R = new MessageChannel(),
            L = R.port2;
          (R.port1.onmessage = P),
            (w = function () {
              L.postMessage(null);
            });
        } else
          w = function () {
            g(P, 0);
          };
        function I(e) {
          (E = e), M || ((M = !0), w());
        }
        function N(e, n) {
          k = g(function () {
            e(t.unstable_now());
          }, n);
        }
        (t.unstable_IdlePriority = 5),
          (t.unstable_ImmediatePriority = 1),
          (t.unstable_LowPriority = 4),
          (t.unstable_NormalPriority = 3),
          (t.unstable_Profiling = null),
          (t.unstable_UserBlockingPriority = 2),
          (t.unstable_cancelCallback = function (e) {
            e.callback = null;
          }),
          (t.unstable_continueExecution = function () {
            v || p || ((v = !0), I(S));
          }),
          (t.unstable_forceFrameRate = function (e) {
            0 > e || 125 < e
              ? console.error(
                  "forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"
                )
              : (T = 0 < e ? Math.floor(1e3 / e) : 5);
          }),
          (t.unstable_getCurrentPriorityLevel = function () {
            return h;
          }),
          (t.unstable_getFirstCallbackNode = function () {
            return r(u);
          }),
          (t.unstable_next = function (e) {
            switch (h) {
              case 1:
              case 2:
              case 3:
                var t = 3;
                break;
              default:
                t = h;
            }
            var n = h;
            h = t;
            try {
              return e();
            } finally {
              h = n;
            }
          }),
          (t.unstable_pauseExecution = function () {}),
          (t.unstable_requestPaint = function () {}),
          (t.unstable_runWithPriority = function (e, t) {
            switch (e) {
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
                break;
              default:
                e = 3;
            }
            var n = h;
            h = e;
            try {
              return t();
            } finally {
              h = n;
            }
          }),
          (t.unstable_scheduleCallback = function (e, i, a) {
            var o = t.unstable_now();
            switch (
              ("object" === typeof a && null !== a
                ? (a = "number" === typeof (a = a.delay) && 0 < a ? o + a : o)
                : (a = o),
              e)
            ) {
              case 1:
                var s = -1;
                break;
              case 2:
                s = 250;
                break;
              case 5:
                s = 1073741823;
                break;
              case 4:
                s = 1e4;
                break;
              default:
                s = 5e3;
            }
            return (
              (e = {
                id: d++,
                callback: i,
                priorityLevel: e,
                startTime: a,
                expirationTime: (s = a + s),
                sortIndex: -1,
              }),
              a > o
                ? ((e.sortIndex = a),
                  n(c, e),
                  null === r(u) &&
                    e === r(c) &&
                    (m ? (y(k), (k = -1)) : (m = !0), N(x, a - o)))
                : ((e.sortIndex = s), n(u, e), v || p || ((v = !0), I(S))),
              e
            );
          }),
          (t.unstable_shouldYield = C),
          (t.unstable_wrapCallback = function (e) {
            var t = h;
            return function () {
              var n = h;
              h = t;
              try {
                return e.apply(this, arguments);
              } finally {
                h = n;
              }
            };
          });
      },
      5296: function (e, t, n) {
        "use strict";
        e.exports = n(6813);
      },
      4836: function (e) {
        (e.exports = function (e) {
          return e && e.__esModule ? e : { default: e };
        }),
          (e.exports.__esModule = !0),
          (e.exports.default = e.exports);
      },
      907: function (e, t, n) {
        "use strict";
        function r(e, t) {
          (null == t || t > e.length) && (t = e.length);
          for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
          return r;
        }
        n.d(t, {
          Z: function () {
            return r;
          },
        });
      },
      3878: function (e, t, n) {
        "use strict";
        function r(e) {
          if (Array.isArray(e)) return e;
        }
        n.d(t, {
          Z: function () {
            return r;
          },
        });
      },
      4942: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return i;
          },
        });
        var r = n(9142);
        function i(e, t, n) {
          return (
            (t = (0, r.Z)(t)) in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
      },
      7462: function (e, t, n) {
        "use strict";
        function r() {
          return (
            (r = Object.assign
              ? Object.assign.bind()
              : function (e) {
                  for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n)
                      Object.prototype.hasOwnProperty.call(n, r) &&
                        (e[r] = n[r]);
                  }
                  return e;
                }),
            r.apply(this, arguments)
          );
        }
        n.d(t, {
          Z: function () {
            return r;
          },
        });
      },
      9199: function (e, t, n) {
        "use strict";
        function r(e) {
          if (
            ("undefined" !== typeof Symbol && null != e[Symbol.iterator]) ||
            null != e["@@iterator"]
          )
            return Array.from(e);
        }
        n.d(t, {
          Z: function () {
            return r;
          },
        });
      },
      5267: function (e, t, n) {
        "use strict";
        function r() {
          throw new TypeError(
            "Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
          );
        }
        n.d(t, {
          Z: function () {
            return r;
          },
        });
      },
      1413: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return a;
          },
        });
        var r = n(4942);
        function i(e, t) {
          var n = Object.keys(e);
          if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            t &&
              (r = r.filter(function (t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
              })),
              n.push.apply(n, r);
          }
          return n;
        }
        function a(e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2
              ? i(Object(n), !0).forEach(function (t) {
                  (0, r.Z)(e, t, n[t]);
                })
              : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
              : i(Object(n)).forEach(function (t) {
                  Object.defineProperty(
                    e,
                    t,
                    Object.getOwnPropertyDescriptor(n, t)
                  );
                });
          }
          return e;
        }
      },
      3366: function (e, t, n) {
        "use strict";
        function r(e, t) {
          if (null == e) return {};
          var n,
            r,
            i = {},
            a = Object.keys(e);
          for (r = 0; r < a.length; r++)
            (n = a[r]), t.indexOf(n) >= 0 || (i[n] = e[n]);
          return i;
        }
        n.d(t, {
          Z: function () {
            return r;
          },
        });
      },
      9439: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return o;
          },
        });
        var r = n(3878);
        var i = n(181),
          a = n(5267);
        function o(e, t) {
          return (
            (0, r.Z)(e) ||
            (function (e, t) {
              var n =
                null == e
                  ? null
                  : ("undefined" != typeof Symbol && e[Symbol.iterator]) ||
                    e["@@iterator"];
              if (null != n) {
                var r,
                  i,
                  a,
                  o,
                  s = [],
                  l = !0,
                  u = !1;
                try {
                  if (((a = (n = n.call(e)).next), 0 === t)) {
                    if (Object(n) !== n) return;
                    l = !1;
                  } else
                    for (
                      ;
                      !(l = (r = a.call(n)).done) &&
                      (s.push(r.value), s.length !== t);
                      l = !0
                    );
                } catch (c) {
                  (u = !0), (i = c);
                } finally {
                  try {
                    if (
                      !l &&
                      null != n.return &&
                      ((o = n.return()), Object(o) !== o)
                    )
                      return;
                  } finally {
                    if (u) throw i;
                  }
                }
                return s;
              }
            })(e, t) ||
            (0, i.Z)(e, t) ||
            (0, a.Z)()
          );
        }
      },
      3433: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return o;
          },
        });
        var r = n(907);
        var i = n(9199),
          a = n(181);
        function o(e) {
          return (
            (function (e) {
              if (Array.isArray(e)) return (0, r.Z)(e);
            })(e) ||
            (0, i.Z)(e) ||
            (0, a.Z)(e) ||
            (function () {
              throw new TypeError(
                "Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
              );
            })()
          );
        }
      },
      9142: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return i;
          },
        });
        var r = n(1002);
        function i(e) {
          var t = (function (e, t) {
            if ("object" !== (0, r.Z)(e) || null === e) return e;
            var n = e[Symbol.toPrimitive];
            if (void 0 !== n) {
              var i = n.call(e, t || "default");
              if ("object" !== (0, r.Z)(i)) return i;
              throw new TypeError(
                "@@toPrimitive must return a primitive value."
              );
            }
            return ("string" === t ? String : Number)(e);
          })(e, "string");
          return "symbol" === (0, r.Z)(t) ? t : String(t);
        }
      },
      1002: function (e, t, n) {
        "use strict";
        function r(e) {
          return (
            (r =
              "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                ? function (e) {
                    return typeof e;
                  }
                : function (e) {
                    return e &&
                      "function" == typeof Symbol &&
                      e.constructor === Symbol &&
                      e !== Symbol.prototype
                      ? "symbol"
                      : typeof e;
                  }),
            r(e)
          );
        }
        n.d(t, {
          Z: function () {
            return r;
          },
        });
      },
      181: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return i;
          },
        });
        var r = n(907);
        function i(e, t) {
          if (e) {
            if ("string" === typeof e) return (0, r.Z)(e, t);
            var n = Object.prototype.toString.call(e).slice(8, -1);
            return (
              "Object" === n && e.constructor && (n = e.constructor.name),
              "Map" === n || "Set" === n
                ? Array.from(e)
                : "Arguments" === n ||
                  /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
                ? (0, r.Z)(e, t)
                : void 0
            );
          }
        }
      },
    },
    t = {};
  function n(r) {
    var i = t[r];
    if (void 0 !== i) return i.exports;
    var a = (t[r] = { exports: {} });
    return e[r](a, a.exports, n), a.exports;
  }
  (n.n = function (e) {
    var t =
      e && e.__esModule
        ? function () {
            return e.default;
          }
        : function () {
            return e;
          };
    return n.d(t, { a: t }), t;
  }),
    (function () {
      var e,
        t = Object.getPrototypeOf
          ? function (e) {
              return Object.getPrototypeOf(e);
            }
          : function (e) {
              return e.__proto__;
            };
      n.t = function (r, i) {
        if ((1 & i && (r = this(r)), 8 & i)) return r;
        if ("object" === typeof r && r) {
          if (4 & i && r.__esModule) return r;
          if (16 & i && "function" === typeof r.then) return r;
        }
        var a = Object.create(null);
        n.r(a);
        var o = {};
        e = e || [null, t({}), t([]), t(t)];
        for (
          var s = 2 & i && r;
          "object" == typeof s && !~e.indexOf(s);
          s = t(s)
        )
          Object.getOwnPropertyNames(s).forEach(function (e) {
            o[e] = function () {
              return r[e];
            };
          });
        return (
          (o.default = function () {
            return r;
          }),
          n.d(a, o),
          a
        );
      };
    })(),
    (n.d = function (e, t) {
      for (var r in t)
        n.o(t, r) &&
          !n.o(e, r) &&
          Object.defineProperty(e, r, { enumerable: !0, get: t[r] });
    }),
    (n.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }),
    (n.r = function (e) {
      "undefined" !== typeof Symbol &&
        Symbol.toStringTag &&
        Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }),
        Object.defineProperty(e, "__esModule", { value: !0 });
    }),
    (function () {
      "use strict";
      var e = {};
      n.r(e),
        n.d(e, {
          ACESFilmicToneMapping: function () {
            return Le;
          },
          AddEquation: function () {
            return te;
          },
          AddOperation: function () {
            return Te;
          },
          AdditiveAnimationBlendMode: function () {
            return ln;
          },
          AdditiveBlending: function () {
            return $;
          },
          AlphaFormat: function () {
            return ct;
          },
          AlwaysDepth: function () {
            return ye;
          },
          AlwaysStencilFunc: function () {
            return Un;
          },
          AmbientLight: function () {
            return Wf;
          },
          AmbientLightProbe: function () {
            return sh;
          },
          AnimationAction: function () {
            return Dh;
          },
          AnimationClip: function () {
            return pf;
          },
          AnimationLoader: function () {
            return Mf;
          },
          AnimationMixer: function () {
            return zh;
          },
          AnimationObjectGroup: function () {
            return Oh;
          },
          AnimationUtils: function () {
            return ef;
          },
          ArcCurve: function () {
            return gc;
          },
          ArrayCamera: function () {
            return Gl;
          },
          ArrowHelper: function () {
            return Cp;
          },
          Audio: function () {
            return bh;
          },
          AudioAnalyser: function () {
            return Eh;
          },
          AudioContext: function () {
            return ih;
          },
          AudioListener: function () {
            return yh;
          },
          AudioLoader: function () {
            return ah;
          },
          AxesHelper: function () {
            return Pp;
          },
          BackSide: function () {
            return j;
          },
          BasicDepthPacking: function () {
            return pn;
          },
          BasicShadowMap: function () {
            return Z;
          },
          Bone: function () {
            return Lu;
          },
          BooleanKeyframeTrack: function () {
            return sf;
          },
          Box2: function () {
            return Kh;
          },
          Box3: function () {
            return Gr;
          },
          Box3Helper: function () {
            return kp;
          },
          BoxBufferGeometry: function () {
            return Lp;
          },
          BoxGeometry: function () {
            return to;
          },
          BoxHelper: function () {
            return Ep;
          },
          BufferAttribute: function () {
            return ga;
          },
          BufferGeometry: function () {
            return Oa;
          },
          BufferGeometryLoader: function () {
            return Jf;
          },
          ByteType: function () {
            return et;
          },
          Cache: function () {
            return gf;
          },
          Camera: function () {
            return so;
          },
          CameraHelper: function () {
            return _p;
          },
          CanvasTexture: function () {
            return pc;
          },
          CapsuleBufferGeometry: function () {
            return Ip;
          },
          CapsuleGeometry: function () {
            return zc;
          },
          CatmullRomCurve3: function () {
            return wc;
          },
          CineonToneMapping: function () {
            return Re;
          },
          CircleBufferGeometry: function () {
            return Np;
          },
          CircleGeometry: function () {
            return Fc;
          },
          ClampToEdgeWrapping: function () {
            return Ze;
          },
          Clock: function () {
            return fh;
          },
          Color: function () {
            return sa;
          },
          ColorKeyframeTrack: function () {
            return lf;
          },
          ColorManagement: function () {
            return Tr;
          },
          CompressedArrayTexture: function () {
            return hc;
          },
          CompressedTexture: function () {
            return fc;
          },
          CompressedTextureLoader: function () {
            return Ef;
          },
          ConeBufferGeometry: function () {
            return Op;
          },
          ConeGeometry: function () {
            return Zc;
          },
          CubeCamera: function () {
            return co;
          },
          CubeReflectionMapping: function () {
            return Oe;
          },
          CubeRefractionMapping: function () {
            return De;
          },
          CubeTexture: function () {
            return fo;
          },
          CubeTextureLoader: function () {
            return Tf;
          },
          CubeUVReflectionMapping: function () {
            return Fe;
          },
          CubicBezierCurve: function () {
            return Tc;
          },
          CubicBezierCurve3: function () {
            return Ac;
          },
          CubicInterpolant: function () {
            return nf;
          },
          CullFaceBack: function () {
            return z;
          },
          CullFaceFront: function () {
            return F;
          },
          CullFaceFrontBack: function () {
            return B;
          },
          CullFaceNone: function () {
            return U;
          },
          Curve: function () {
            return vc;
          },
          CurvePath: function () {
            return Oc;
          },
          CustomBlending: function () {
            return ee;
          },
          CustomToneMapping: function () {
            return Ie;
          },
          CylinderBufferGeometry: function () {
            return Dp;
          },
          CylinderGeometry: function () {
            return Bc;
          },
          Cylindrical: function () {
            return qh;
          },
          Data3DTexture: function () {
            return Ur;
          },
          DataArrayTexture: function () {
            return Or;
          },
          DataTexture: function () {
            return Iu;
          },
          DataTextureLoader: function () {
            return Af;
          },
          DataUtils: function () {
            return pa;
          },
          DecrementStencilOp: function () {
            return kn;
          },
          DecrementWrapStencilOp: function () {
            return An;
          },
          DefaultLoadingManager: function () {
            return bf;
          },
          DepthFormat: function () {
            return pt;
          },
          DepthStencilFormat: function () {
            return vt;
          },
          DepthTexture: function () {
            return ql;
          },
          DirectionalLight: function () {
            return Gf;
          },
          DirectionalLightHelper: function () {
            return gp;
          },
          DiscreteInterpolant: function () {
            return af;
          },
          DisplayP3ColorSpace: function () {
            return xn;
          },
          DodecahedronBufferGeometry: function () {
            return Up;
          },
          DodecahedronGeometry: function () {
            return Vc;
          },
          DoubleSide: function () {
            return X;
          },
          DstAlphaFactor: function () {
            return fe;
          },
          DstColorFactor: function () {
            return pe;
          },
          DynamicCopyUsage: function () {
            return Wn;
          },
          DynamicDrawUsage: function () {
            return Fn;
          },
          DynamicReadUsage: function () {
            return Hn;
          },
          EdgesGeometry: function () {
            return qc;
          },
          EllipseCurve: function () {
            return mc;
          },
          EqualDepth: function () {
            return xe;
          },
          EqualStencilFunc: function () {
            return Ln;
          },
          EquirectangularReflectionMapping: function () {
            return Ue;
          },
          EquirectangularRefractionMapping: function () {
            return ze;
          },
          Euler: function () {
            return Ti;
          },
          EventDispatcher: function () {
            return Kn;
          },
          ExtrudeBufferGeometry: function () {
            return zp;
          },
          ExtrudeGeometry: function () {
            return Md;
          },
          FileLoader: function () {
            return wf;
          },
          Float16BufferAttribute: function () {
            return Ea;
          },
          Float32BufferAttribute: function () {
            return ka;
          },
          Float64BufferAttribute: function () {
            return Ta;
          },
          FloatType: function () {
            return at;
          },
          Fog: function () {
            return nu;
          },
          FogExp2: function () {
            return tu;
          },
          FramebufferTexture: function () {
            return dc;
          },
          FrontSide: function () {
            return W;
          },
          Frustum: function () {
            return _o;
          },
          GLBufferAttribute: function () {
            return Vh;
          },
          GLSL1: function () {
            return Xn;
          },
          GLSL3: function () {
            return qn;
          },
          GreaterDepth: function () {
            return we;
          },
          GreaterEqualDepth: function () {
            return Se;
          },
          GreaterEqualStencilFunc: function () {
            return Dn;
          },
          GreaterStencilFunc: function () {
            return Nn;
          },
          GridHelper: function () {
            return fp;
          },
          Group: function () {
            return Wl;
          },
          HalfFloatType: function () {
            return ot;
          },
          HemisphereLight: function () {
            return Rf;
          },
          HemisphereLightHelper: function () {
            return dp;
          },
          HemisphereLightProbe: function () {
            return oh;
          },
          IcosahedronBufferGeometry: function () {
            return Fp;
          },
          IcosahedronGeometry: function () {
            return kd;
          },
          ImageBitmapLoader: function () {
            return rh;
          },
          ImageLoader: function () {
            return kf;
          },
          ImageUtils: function () {
            return Ar;
          },
          IncrementStencilOp: function () {
            return En;
          },
          IncrementWrapStencilOp: function () {
            return Tn;
          },
          InstancedBufferAttribute: function () {
            return Uu;
          },
          InstancedBufferGeometry: function () {
            return $f;
          },
          InstancedInterleavedBuffer: function () {
            return Hh;
          },
          InstancedMesh: function () {
            return Wu;
          },
          Int16BufferAttribute: function () {
            return xa;
          },
          Int32BufferAttribute: function () {
            return wa;
          },
          Int8BufferAttribute: function () {
            return ya;
          },
          IntType: function () {
            return rt;
          },
          InterleavedBuffer: function () {
            return iu;
          },
          InterleavedBufferAttribute: function () {
            return ou;
          },
          Interpolant: function () {
            return tf;
          },
          InterpolateDiscrete: function () {
            return en;
          },
          InterpolateLinear: function () {
            return tn;
          },
          InterpolateSmooth: function () {
            return nn;
          },
          InvertStencilOp: function () {
            return Cn;
          },
          KeepStencilOp: function () {
            return wn;
          },
          KeyframeTrack: function () {
            return of;
          },
          LOD: function () {
            return Mu;
          },
          LatheBufferGeometry: function () {
            return Bp;
          },
          LatheGeometry: function () {
            return Uc;
          },
          Layers: function () {
            return Ai;
          },
          LessDepth: function () {
            return be;
          },
          LessEqualDepth: function () {
            return _e;
          },
          LessEqualStencilFunc: function () {
            return In;
          },
          LessStencilFunc: function () {
            return Rn;
          },
          Light: function () {
            return Pf;
          },
          LightProbe: function () {
            return qf;
          },
          Line: function () {
            return Ju;
          },
          Line3: function () {
            return Qh;
          },
          LineBasicMaterial: function () {
            return ju;
          },
          LineCurve: function () {
            return Cc;
          },
          LineCurve3: function () {
            return Pc;
          },
          LineDashedMaterial: function () {
            return Xd;
          },
          LineLoop: function () {
            return nc;
          },
          LineSegments: function () {
            return tc;
          },
          LinearEncoding: function () {
            return fn;
          },
          LinearFilter: function () {
            return qe;
          },
          LinearInterpolant: function () {
            return rf;
          },
          LinearMipMapLinearFilter: function () {
            return Je;
          },
          LinearMipMapNearestFilter: function () {
            return Ke;
          },
          LinearMipmapLinearFilter: function () {
            return $e;
          },
          LinearMipmapNearestFilter: function () {
            return Ye;
          },
          LinearSRGBColorSpace: function () {
            return _n;
          },
          LinearToneMapping: function () {
            return Ce;
          },
          Loader: function () {
            return _f;
          },
          LoaderUtils: function () {
            return Kf;
          },
          LoadingManager: function () {
            return yf;
          },
          LoopOnce: function () {
            return $t;
          },
          LoopPingPong: function () {
            return Qt;
          },
          LoopRepeat: function () {
            return Jt;
          },
          LuminanceAlphaFormat: function () {
            return ht;
          },
          LuminanceFormat: function () {
            return ft;
          },
          MOUSE: function () {
            return O;
          },
          Material: function () {
            return na;
          },
          MaterialLoader: function () {
            return Yf;
          },
          MathUtils: function () {
            return cr;
          },
          Matrix3: function () {
            return fr;
          },
          Matrix4: function () {
            return gi;
          },
          MaxEquation: function () {
            return ae;
          },
          Mesh: function () {
            return Qa;
          },
          MeshBasicMaterial: function () {
            return ua;
          },
          MeshDepthMaterial: function () {
            return zl;
          },
          MeshDistanceMaterial: function () {
            return Fl;
          },
          MeshLambertMaterial: function () {
            return Wd;
          },
          MeshMatcapMaterial: function () {
            return jd;
          },
          MeshNormalMaterial: function () {
            return Gd;
          },
          MeshPhongMaterial: function () {
            return Hd;
          },
          MeshPhysicalMaterial: function () {
            return Zd;
          },
          MeshStandardMaterial: function () {
            return Bd;
          },
          MeshToonMaterial: function () {
            return Vd;
          },
          MinEquation: function () {
            return ie;
          },
          MirroredRepeatWrapping: function () {
            return He;
          },
          MixOperation: function () {
            return ke;
          },
          MultiplyBlending: function () {
            return Q;
          },
          MultiplyOperation: function () {
            return Ee;
          },
          NearestFilter: function () {
            return Ve;
          },
          NearestMipMapLinearFilter: function () {
            return Xe;
          },
          NearestMipMapNearestFilter: function () {
            return We;
          },
          NearestMipmapLinearFilter: function () {
            return je;
          },
          NearestMipmapNearestFilter: function () {
            return Ge;
          },
          NeverDepth: function () {
            return ge;
          },
          NeverStencilFunc: function () {
            return Pn;
          },
          NoBlending: function () {
            return Y;
          },
          NoColorSpace: function () {
            return yn;
          },
          NoToneMapping: function () {
            return Ae;
          },
          NormalAnimationBlendMode: function () {
            return sn;
          },
          NormalBlending: function () {
            return K;
          },
          NotEqualDepth: function () {
            return Me;
          },
          NotEqualStencilFunc: function () {
            return On;
          },
          NumberKeyframeTrack: function () {
            return uf;
          },
          Object3D: function () {
            return Hi;
          },
          ObjectLoader: function () {
            return Qf;
          },
          ObjectSpaceNormalMap: function () {
            return gn;
          },
          OctahedronBufferGeometry: function () {
            return Zp;
          },
          OctahedronGeometry: function () {
            return Td;
          },
          OneFactor: function () {
            return se;
          },
          OneMinusDstAlphaFactor: function () {
            return he;
          },
          OneMinusDstColorFactor: function () {
            return ve;
          },
          OneMinusSrcAlphaFactor: function () {
            return de;
          },
          OneMinusSrcColorFactor: function () {
            return ue;
          },
          OrthographicCamera: function () {
            return No;
          },
          PCFShadowMap: function () {
            return H;
          },
          PCFSoftShadowMap: function () {
            return V;
          },
          PMREMGenerator: function () {
            return Vo;
          },
          Path: function () {
            return Dc;
          },
          PerspectiveCamera: function () {
            return lo;
          },
          Plane: function () {
            return go;
          },
          PlaneBufferGeometry: function () {
            return Hp;
          },
          PlaneGeometry: function () {
            return wo;
          },
          PlaneHelper: function () {
            return Tp;
          },
          PointLight: function () {
            return Hf;
          },
          PointLightHelper: function () {
            return sp;
          },
          Points: function () {
            return lc;
          },
          PointsMaterial: function () {
            return rc;
          },
          PolarGridHelper: function () {
            return hp;
          },
          PolyhedronBufferGeometry: function () {
            return Vp;
          },
          PolyhedronGeometry: function () {
            return Hc;
          },
          PositionalAudio: function () {
            return Mh;
          },
          PropertyBinding: function () {
            return Nh;
          },
          PropertyMixer: function () {
            return kh;
          },
          QuadraticBezierCurve: function () {
            return Rc;
          },
          QuadraticBezierCurve3: function () {
            return Lc;
          },
          Quaternion: function () {
            return Br;
          },
          QuaternionKeyframeTrack: function () {
            return df;
          },
          QuaternionLinearInterpolant: function () {
            return cf;
          },
          RED_GREEN_RGTC2_Format: function () {
            return Yt;
          },
          RED_RGTC1_Format: function () {
            return Xt;
          },
          REVISION: function () {
            return N;
          },
          RGBADepthPacking: function () {
            return vn;
          },
          RGBAFormat: function () {
            return dt;
          },
          RGBAIntegerFormat: function () {
            return _t;
          },
          RGBA_ASTC_10x10_Format: function () {
            return Vt;
          },
          RGBA_ASTC_10x5_Format: function () {
            return Bt;
          },
          RGBA_ASTC_10x6_Format: function () {
            return Zt;
          },
          RGBA_ASTC_10x8_Format: function () {
            return Ht;
          },
          RGBA_ASTC_12x10_Format: function () {
            return Gt;
          },
          RGBA_ASTC_12x12_Format: function () {
            return Wt;
          },
          RGBA_ASTC_4x4_Format: function () {
            return Lt;
          },
          RGBA_ASTC_5x4_Format: function () {
            return It;
          },
          RGBA_ASTC_5x5_Format: function () {
            return Nt;
          },
          RGBA_ASTC_6x5_Format: function () {
            return Ot;
          },
          RGBA_ASTC_6x6_Format: function () {
            return Dt;
          },
          RGBA_ASTC_8x5_Format: function () {
            return Ut;
          },
          RGBA_ASTC_8x6_Format: function () {
            return zt;
          },
          RGBA_ASTC_8x8_Format: function () {
            return Ft;
          },
          RGBA_BPTC_Format: function () {
            return jt;
          },
          RGBA_ETC2_EAC_Format: function () {
            return Rt;
          },
          RGBA_PVRTC_2BPPV1_Format: function () {
            return At;
          },
          RGBA_PVRTC_4BPPV1_Format: function () {
            return Tt;
          },
          RGBA_S3TC_DXT1_Format: function () {
            return St;
          },
          RGBA_S3TC_DXT3_Format: function () {
            return wt;
          },
          RGBA_S3TC_DXT5_Format: function () {
            return Mt;
          },
          RGB_ETC1_Format: function () {
            return Ct;
          },
          RGB_ETC2_Format: function () {
            return Pt;
          },
          RGB_PVRTC_2BPPV1_Format: function () {
            return kt;
          },
          RGB_PVRTC_4BPPV1_Format: function () {
            return Et;
          },
          RGB_S3TC_DXT1_Format: function () {
            return xt;
          },
          RGFormat: function () {
            return yt;
          },
          RGIntegerFormat: function () {
            return bt;
          },
          RawShaderMaterial: function () {
            return Fd;
          },
          Ray: function () {
            return mi;
          },
          Raycaster: function () {
            return Gh;
          },
          RectAreaLight: function () {
            return jf;
          },
          RedFormat: function () {
            return mt;
          },
          RedIntegerFormat: function () {
            return gt;
          },
          ReinhardToneMapping: function () {
            return Pe;
          },
          RepeatWrapping: function () {
            return Be;
          },
          ReplaceStencilOp: function () {
            return Mn;
          },
          ReverseSubtractEquation: function () {
            return re;
          },
          RingBufferGeometry: function () {
            return Gp;
          },
          RingGeometry: function () {
            return Ad;
          },
          SIGNED_RED_GREEN_RGTC2_Format: function () {
            return Kt;
          },
          SIGNED_RED_RGTC1_Format: function () {
            return qt;
          },
          SRGBColorSpace: function () {
            return bn;
          },
          Scene: function () {
            return ru;
          },
          ShaderChunk: function () {
            return Mo;
          },
          ShaderLib: function () {
            return ko;
          },
          ShaderMaterial: function () {
            return oo;
          },
          ShadowMaterial: function () {
            return zd;
          },
          Shape: function () {
            return Yc;
          },
          ShapeBufferGeometry: function () {
            return Wp;
          },
          ShapeGeometry: function () {
            return Cd;
          },
          ShapePath: function () {
            return Rp;
          },
          ShapeUtils: function () {
            return xd;
          },
          ShortType: function () {
            return tt;
          },
          Skeleton: function () {
            return Du;
          },
          SkeletonHelper: function () {
            return ap;
          },
          SkinnedMesh: function () {
            return Ru;
          },
          Source: function () {
            return Cr;
          },
          Sphere: function () {
            return li;
          },
          SphereBufferGeometry: function () {
            return jp;
          },
          SphereGeometry: function () {
            return Pd;
          },
          Spherical: function () {
            return Xh;
          },
          SphericalHarmonics3: function () {
            return Xf;
          },
          SplineCurve: function () {
            return Ic;
          },
          SpotLight: function () {
            return Uf;
          },
          SpotLightHelper: function () {
            return tp;
          },
          Sprite: function () {
            return _u;
          },
          SpriteMaterial: function () {
            return su;
          },
          SrcAlphaFactor: function () {
            return ce;
          },
          SrcAlphaSaturateFactor: function () {
            return me;
          },
          SrcColorFactor: function () {
            return le;
          },
          StaticCopyUsage: function () {
            return Gn;
          },
          StaticDrawUsage: function () {
            return zn;
          },
          StaticReadUsage: function () {
            return Zn;
          },
          StereoCamera: function () {
            return dh;
          },
          StreamCopyUsage: function () {
            return jn;
          },
          StreamDrawUsage: function () {
            return Bn;
          },
          StreamReadUsage: function () {
            return Vn;
          },
          StringKeyframeTrack: function () {
            return ff;
          },
          SubtractEquation: function () {
            return ne;
          },
          SubtractiveBlending: function () {
            return J;
          },
          TOUCH: function () {
            return D;
          },
          TangentSpaceNormalMap: function () {
            return mn;
          },
          TetrahedronBufferGeometry: function () {
            return Xp;
          },
          TetrahedronGeometry: function () {
            return Rd;
          },
          Texture: function () {
            return Lr;
          },
          TextureLoader: function () {
            return Cf;
          },
          TorusBufferGeometry: function () {
            return qp;
          },
          TorusGeometry: function () {
            return Ld;
          },
          TorusKnotBufferGeometry: function () {
            return Yp;
          },
          TorusKnotGeometry: function () {
            return Id;
          },
          Triangle: function () {
            return ea;
          },
          TriangleFanDrawMode: function () {
            return dn;
          },
          TriangleStripDrawMode: function () {
            return cn;
          },
          TrianglesDrawMode: function () {
            return un;
          },
          TubeBufferGeometry: function () {
            return Kp;
          },
          TubeGeometry: function () {
            return Nd;
          },
          TwoPassDoubleSide: function () {
            return q;
          },
          UVMapping: function () {
            return Ne;
          },
          Uint16BufferAttribute: function () {
            return Sa;
          },
          Uint32BufferAttribute: function () {
            return Ma;
          },
          Uint8BufferAttribute: function () {
            return ba;
          },
          Uint8ClampedBufferAttribute: function () {
            return _a;
          },
          Uniform: function () {
            return Fh;
          },
          UniformsGroup: function () {
            return Zh;
          },
          UniformsLib: function () {
            return Eo;
          },
          UniformsUtils: function () {
            return ao;
          },
          UnsignedByteType: function () {
            return Qe;
          },
          UnsignedInt248Type: function () {
            return ut;
          },
          UnsignedIntType: function () {
            return it;
          },
          UnsignedShort4444Type: function () {
            return st;
          },
          UnsignedShort5551Type: function () {
            return lt;
          },
          UnsignedShortType: function () {
            return nt;
          },
          VSMShadowMap: function () {
            return G;
          },
          Vector2: function () {
            return dr;
          },
          Vector3: function () {
            return Zr;
          },
          Vector4: function () {
            return Ir;
          },
          VectorKeyframeTrack: function () {
            return hf;
          },
          VideoTexture: function () {
            return cc;
          },
          WebGL1Renderer: function () {
            return Ql;
          },
          WebGL3DRenderTarget: function () {
            return zr;
          },
          WebGLArrayRenderTarget: function () {
            return Dr;
          },
          WebGLCubeRenderTarget: function () {
            return ho;
          },
          WebGLMultipleRenderTargets: function () {
            return Fr;
          },
          WebGLRenderTarget: function () {
            return Nr;
          },
          WebGLRenderer: function () {
            return Jl;
          },
          WebGLUtils: function () {
            return Vl;
          },
          WireframeGeometry: function () {
            return Od;
          },
          WrapAroundEnding: function () {
            return on;
          },
          ZeroCurvatureEnding: function () {
            return rn;
          },
          ZeroFactor: function () {
            return oe;
          },
          ZeroSlopeEnding: function () {
            return an;
          },
          ZeroStencilOp: function () {
            return Sn;
          },
          _SRGBAFormat: function () {
            return Yn;
          },
          sRGBEncoding: function () {
            return hn;
          },
        });
      var t = n(1250),
        r = n(3433),
        i = n(9439),
        a = n(2791),
        o = n(3366);
      function s(e, t) {
        if (null == e) return {};
        var n,
          r,
          i = (0, o.Z)(e, t);
        if (Object.getOwnPropertySymbols) {
          var a = Object.getOwnPropertySymbols(e);
          for (r = 0; r < a.length; r++)
            (n = a[r]),
              t.indexOf(n) >= 0 ||
                (Object.prototype.propertyIsEnumerable.call(e, n) &&
                  (i[n] = e[n]));
        }
        return i;
      }
      var l = n(4942),
        u = n(1413),
        c = n(3878),
        d = n(9199),
        f = n(181),
        h = n(5267);
      function p(e, t) {
        if (!(e instanceof t))
          throw new TypeError("Cannot call a class as a function");
      }
      var v = n(9142);
      function m(e, t) {
        for (var n = 0; n < t.length; n++) {
          var r = t[n];
          (r.enumerable = r.enumerable || !1),
            (r.configurable = !0),
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, (0, v.Z)(r.key), r);
        }
      }
      function g(e, t, n) {
        return (
          t && m(e.prototype, t),
          n && m(e, n),
          Object.defineProperty(e, "prototype", { writable: !1 }),
          e
        );
      }
      function y(e, t) {
        return (
          (y = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (e, t) {
                return (e.__proto__ = t), e;
              }),
          y(e, t)
        );
      }
      function b(e, t) {
        if ("function" !== typeof t && null !== t)
          throw new TypeError(
            "Super expression must either be null or a function"
          );
        (e.prototype = Object.create(t && t.prototype, {
          constructor: { value: e, writable: !0, configurable: !0 },
        })),
          Object.defineProperty(e, "prototype", { writable: !1 }),
          t && y(e, t);
      }
      function _(e) {
        return (
          (_ = Object.setPrototypeOf
            ? Object.getPrototypeOf.bind()
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              }),
          _(e)
        );
      }
      function x() {
        if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" === typeof Proxy) return !0;
        try {
          return (
            Boolean.prototype.valueOf.call(
              Reflect.construct(Boolean, [], function () {})
            ),
            !0
          );
        } catch (e) {
          return !1;
        }
      }
      var S,
        w,
        M = n(1002);
      function E(e) {
        if (void 0 === e)
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        return e;
      }
      function k(e) {
        var t = x();
        return function () {
          var n,
            r = _(e);
          if (t) {
            var i = _(this).constructor;
            n = Reflect.construct(r, arguments, i);
          } else n = r.apply(this, arguments);
          return (function (e, t) {
            if (t && ("object" === (0, M.Z)(t) || "function" === typeof t))
              return t;
            if (void 0 !== t)
              throw new TypeError(
                "Derived constructors may only return object or undefined"
              );
            return E(e);
          })(this, n);
        };
      }
      function T(e, t) {
        var n =
          ("undefined" !== typeof Symbol && e[Symbol.iterator]) ||
          e["@@iterator"];
        if (!n) {
          if (
            Array.isArray(e) ||
            (n = (0, f.Z)(e)) ||
            (t && e && "number" === typeof e.length)
          ) {
            n && (e = n);
            var r = 0,
              i = function () {};
            return {
              s: i,
              n: function () {
                return r >= e.length
                  ? { done: !0 }
                  : { done: !1, value: e[r++] };
              },
              e: function (e) {
                throw e;
              },
              f: i,
            };
          }
          throw new TypeError(
            "Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
          );
        }
        var a,
          o = !0,
          s = !1;
        return {
          s: function () {
            n = n.call(e);
          },
          n: function () {
            var e = n.next();
            return (o = e.done), e;
          },
          e: function (e) {
            (s = !0), (a = e);
          },
          f: function () {
            try {
              o || null == n.return || n.return();
            } finally {
              if (s) throw a;
            }
          },
        };
      }
      function A(e, t, n) {
        return (
          (A = x()
            ? Reflect.construct.bind()
            : function (e, t, n) {
                var r = [null];
                r.push.apply(r, t);
                var i = new (Function.bind.apply(e, r))();
                return n && y(i, n.prototype), i;
              }),
          A.apply(null, arguments)
        );
      }
      function C(e) {
        var t = "function" === typeof Map ? new Map() : void 0;
        return (
          (C = function (e) {
            if (
              null === e ||
              ((n = e),
              -1 === Function.toString.call(n).indexOf("[native code]"))
            )
              return e;
            var n;
            if ("function" !== typeof e)
              throw new TypeError(
                "Super expression must either be null or a function"
              );
            if ("undefined" !== typeof t) {
              if (t.has(e)) return t.get(e);
              t.set(e, r);
            }
            function r() {
              return A(e, arguments, _(this).constructor);
            }
            return (
              (r.prototype = Object.create(e.prototype, {
                constructor: {
                  value: r,
                  enumerable: !1,
                  writable: !0,
                  configurable: !0,
                },
              })),
              y(r, e)
            );
          }),
          C(e)
        );
      }
      function P(e, t, n, r, i, a, o) {
        try {
          var s = e[a](o),
            l = s.value;
        } catch (u) {
          return void n(u);
        }
        s.done ? t(l) : Promise.resolve(l).then(r, i);
      }
      function R(e) {
        return function () {
          var t = this,
            n = arguments;
          return new Promise(function (r, i) {
            var a = e.apply(t, n);
            function o(e) {
              P(a, r, i, o, s, "next", e);
            }
            function s(e) {
              P(a, r, i, o, s, "throw", e);
            }
            o(void 0);
          });
        };
      }
      function L() {
        return (
          (L =
            "undefined" !== typeof Reflect && Reflect.get
              ? Reflect.get.bind()
              : function (e, t, n) {
                  var r = (function (e, t) {
                    for (
                      ;
                      !Object.prototype.hasOwnProperty.call(e, t) &&
                      null !== (e = _(e));

                    );
                    return e;
                  })(e, t);
                  if (r) {
                    var i = Object.getOwnPropertyDescriptor(r, t);
                    return i.get
                      ? i.get.call(arguments.length < 3 ? e : n)
                      : i.value;
                  }
                }),
          L.apply(this, arguments)
        );
      }
      function I() {
        I = function () {
          return e;
        };
        var e = {},
          t = Object.prototype,
          n = t.hasOwnProperty,
          r =
            Object.defineProperty ||
            function (e, t, n) {
              e[t] = n.value;
            },
          i = "function" == typeof Symbol ? Symbol : {},
          a = i.iterator || "@@iterator",
          o = i.asyncIterator || "@@asyncIterator",
          s = i.toStringTag || "@@toStringTag";
        function l(e, t, n) {
          return (
            Object.defineProperty(e, t, {
              value: n,
              enumerable: !0,
              configurable: !0,
              writable: !0,
            }),
            e[t]
          );
        }
        try {
          l({}, "");
        } catch (C) {
          l = function (e, t, n) {
            return (e[t] = n);
          };
        }
        function u(e, t, n, i) {
          var a = t && t.prototype instanceof f ? t : f,
            o = Object.create(a.prototype),
            s = new k(i || []);
          return r(o, "_invoke", { value: x(e, n, s) }), o;
        }
        function c(e, t, n) {
          try {
            return { type: "normal", arg: e.call(t, n) };
          } catch (C) {
            return { type: "throw", arg: C };
          }
        }
        e.wrap = u;
        var d = {};
        function f() {}
        function h() {}
        function p() {}
        var v = {};
        l(v, a, function () {
          return this;
        });
        var m = Object.getPrototypeOf,
          g = m && m(m(T([])));
        g && g !== t && n.call(g, a) && (v = g);
        var y = (p.prototype = f.prototype = Object.create(v));
        function b(e) {
          ["next", "throw", "return"].forEach(function (t) {
            l(e, t, function (e) {
              return this._invoke(t, e);
            });
          });
        }
        function _(e, t) {
          function i(r, a, o, s) {
            var l = c(e[r], e, a);
            if ("throw" !== l.type) {
              var u = l.arg,
                d = u.value;
              return d && "object" == (0, M.Z)(d) && n.call(d, "__await")
                ? t.resolve(d.__await).then(
                    function (e) {
                      i("next", e, o, s);
                    },
                    function (e) {
                      i("throw", e, o, s);
                    }
                  )
                : t.resolve(d).then(
                    function (e) {
                      (u.value = e), o(u);
                    },
                    function (e) {
                      return i("throw", e, o, s);
                    }
                  );
            }
            s(l.arg);
          }
          var a;
          r(this, "_invoke", {
            value: function (e, n) {
              function r() {
                return new t(function (t, r) {
                  i(e, n, t, r);
                });
              }
              return (a = a ? a.then(r, r) : r());
            },
          });
        }
        function x(e, t, n) {
          var r = "suspendedStart";
          return function (i, a) {
            if ("executing" === r)
              throw new Error("Generator is already running");
            if ("completed" === r) {
              if ("throw" === i) throw a;
              return A();
            }
            for (n.method = i, n.arg = a; ; ) {
              var o = n.delegate;
              if (o) {
                var s = S(o, n);
                if (s) {
                  if (s === d) continue;
                  return s;
                }
              }
              if ("next" === n.method) n.sent = n._sent = n.arg;
              else if ("throw" === n.method) {
                if ("suspendedStart" === r) throw ((r = "completed"), n.arg);
                n.dispatchException(n.arg);
              } else "return" === n.method && n.abrupt("return", n.arg);
              r = "executing";
              var l = c(e, t, n);
              if ("normal" === l.type) {
                if (
                  ((r = n.done ? "completed" : "suspendedYield"), l.arg === d)
                )
                  continue;
                return { value: l.arg, done: n.done };
              }
              "throw" === l.type &&
                ((r = "completed"), (n.method = "throw"), (n.arg = l.arg));
            }
          };
        }
        function S(e, t) {
          var n = t.method,
            r = e.iterator[n];
          if (void 0 === r)
            return (
              (t.delegate = null),
              ("throw" === n &&
                e.iterator.return &&
                ((t.method = "return"),
                (t.arg = void 0),
                S(e, t),
                "throw" === t.method)) ||
                ("return" !== n &&
                  ((t.method = "throw"),
                  (t.arg = new TypeError(
                    "The iterator does not provide a '" + n + "' method"
                  )))),
              d
            );
          var i = c(r, e.iterator, t.arg);
          if ("throw" === i.type)
            return (
              (t.method = "throw"), (t.arg = i.arg), (t.delegate = null), d
            );
          var a = i.arg;
          return a
            ? a.done
              ? ((t[e.resultName] = a.value),
                (t.next = e.nextLoc),
                "return" !== t.method &&
                  ((t.method = "next"), (t.arg = void 0)),
                (t.delegate = null),
                d)
              : a
            : ((t.method = "throw"),
              (t.arg = new TypeError("iterator result is not an object")),
              (t.delegate = null),
              d);
        }
        function w(e) {
          var t = { tryLoc: e[0] };
          1 in e && (t.catchLoc = e[1]),
            2 in e && ((t.finallyLoc = e[2]), (t.afterLoc = e[3])),
            this.tryEntries.push(t);
        }
        function E(e) {
          var t = e.completion || {};
          (t.type = "normal"), delete t.arg, (e.completion = t);
        }
        function k(e) {
          (this.tryEntries = [{ tryLoc: "root" }]),
            e.forEach(w, this),
            this.reset(!0);
        }
        function T(e) {
          if (e) {
            var t = e[a];
            if (t) return t.call(e);
            if ("function" == typeof e.next) return e;
            if (!isNaN(e.length)) {
              var r = -1,
                i = function t() {
                  for (; ++r < e.length; )
                    if (n.call(e, r)) return (t.value = e[r]), (t.done = !1), t;
                  return (t.value = void 0), (t.done = !0), t;
                };
              return (i.next = i);
            }
          }
          return { next: A };
        }
        function A() {
          return { value: void 0, done: !0 };
        }
        return (
          (h.prototype = p),
          r(y, "constructor", { value: p, configurable: !0 }),
          r(p, "constructor", { value: h, configurable: !0 }),
          (h.displayName = l(p, s, "GeneratorFunction")),
          (e.isGeneratorFunction = function (e) {
            var t = "function" == typeof e && e.constructor;
            return (
              !!t &&
              (t === h || "GeneratorFunction" === (t.displayName || t.name))
            );
          }),
          (e.mark = function (e) {
            return (
              Object.setPrototypeOf
                ? Object.setPrototypeOf(e, p)
                : ((e.__proto__ = p), l(e, s, "GeneratorFunction")),
              (e.prototype = Object.create(y)),
              e
            );
          }),
          (e.awrap = function (e) {
            return { __await: e };
          }),
          b(_.prototype),
          l(_.prototype, o, function () {
            return this;
          }),
          (e.AsyncIterator = _),
          (e.async = function (t, n, r, i, a) {
            void 0 === a && (a = Promise);
            var o = new _(u(t, n, r, i), a);
            return e.isGeneratorFunction(n)
              ? o
              : o.next().then(function (e) {
                  return e.done ? e.value : o.next();
                });
          }),
          b(y),
          l(y, s, "Generator"),
          l(y, a, function () {
            return this;
          }),
          l(y, "toString", function () {
            return "[object Generator]";
          }),
          (e.keys = function (e) {
            var t = Object(e),
              n = [];
            for (var r in t) n.push(r);
            return (
              n.reverse(),
              function e() {
                for (; n.length; ) {
                  var r = n.pop();
                  if (r in t) return (e.value = r), (e.done = !1), e;
                }
                return (e.done = !0), e;
              }
            );
          }),
          (e.values = T),
          (k.prototype = {
            constructor: k,
            reset: function (e) {
              if (
                ((this.prev = 0),
                (this.next = 0),
                (this.sent = this._sent = void 0),
                (this.done = !1),
                (this.delegate = null),
                (this.method = "next"),
                (this.arg = void 0),
                this.tryEntries.forEach(E),
                !e)
              )
                for (var t in this)
                  "t" === t.charAt(0) &&
                    n.call(this, t) &&
                    !isNaN(+t.slice(1)) &&
                    (this[t] = void 0);
            },
            stop: function () {
              this.done = !0;
              var e = this.tryEntries[0].completion;
              if ("throw" === e.type) throw e.arg;
              return this.rval;
            },
            dispatchException: function (e) {
              if (this.done) throw e;
              var t = this;
              function r(n, r) {
                return (
                  (o.type = "throw"),
                  (o.arg = e),
                  (t.next = n),
                  r && ((t.method = "next"), (t.arg = void 0)),
                  !!r
                );
              }
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var a = this.tryEntries[i],
                  o = a.completion;
                if ("root" === a.tryLoc) return r("end");
                if (a.tryLoc <= this.prev) {
                  var s = n.call(a, "catchLoc"),
                    l = n.call(a, "finallyLoc");
                  if (s && l) {
                    if (this.prev < a.catchLoc) return r(a.catchLoc, !0);
                    if (this.prev < a.finallyLoc) return r(a.finallyLoc);
                  } else if (s) {
                    if (this.prev < a.catchLoc) return r(a.catchLoc, !0);
                  } else {
                    if (!l)
                      throw new Error("try statement without catch or finally");
                    if (this.prev < a.finallyLoc) return r(a.finallyLoc);
                  }
                }
              }
            },
            abrupt: function (e, t) {
              for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                var i = this.tryEntries[r];
                if (
                  i.tryLoc <= this.prev &&
                  n.call(i, "finallyLoc") &&
                  this.prev < i.finallyLoc
                ) {
                  var a = i;
                  break;
                }
              }
              a &&
                ("break" === e || "continue" === e) &&
                a.tryLoc <= t &&
                t <= a.finallyLoc &&
                (a = null);
              var o = a ? a.completion : {};
              return (
                (o.type = e),
                (o.arg = t),
                a
                  ? ((this.method = "next"), (this.next = a.finallyLoc), d)
                  : this.complete(o)
              );
            },
            complete: function (e, t) {
              if ("throw" === e.type) throw e.arg;
              return (
                "break" === e.type || "continue" === e.type
                  ? (this.next = e.arg)
                  : "return" === e.type
                  ? ((this.rval = this.arg = e.arg),
                    (this.method = "return"),
                    (this.next = "end"))
                  : "normal" === e.type && t && (this.next = t),
                d
              );
            },
            finish: function (e) {
              for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                var n = this.tryEntries[t];
                if (n.finallyLoc === e)
                  return this.complete(n.completion, n.afterLoc), E(n), d;
              }
            },
            catch: function (e) {
              for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                var n = this.tryEntries[t];
                if (n.tryLoc === e) {
                  var r = n.completion;
                  if ("throw" === r.type) {
                    var i = r.arg;
                    E(n);
                  }
                  return i;
                }
              }
              throw new Error("illegal catch attempt");
            },
            delegateYield: function (e, t, n) {
              return (
                (this.delegate = { iterator: T(e), resultName: t, nextLoc: n }),
                "next" === this.method && (this.arg = void 0),
                d
              );
            },
          }),
          e
        );
      }
      var N = "152",
        O = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 },
        D = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 },
        U = 0,
        z = 1,
        F = 2,
        B = 3,
        Z = 0,
        H = 1,
        V = 2,
        G = 3,
        W = 0,
        j = 1,
        X = 2,
        q = 2,
        Y = 0,
        K = 1,
        $ = 2,
        J = 3,
        Q = 4,
        ee = 5,
        te = 100,
        ne = 101,
        re = 102,
        ie = 103,
        ae = 104,
        oe = 200,
        se = 201,
        le = 202,
        ue = 203,
        ce = 204,
        de = 205,
        fe = 206,
        he = 207,
        pe = 208,
        ve = 209,
        me = 210,
        ge = 0,
        ye = 1,
        be = 2,
        _e = 3,
        xe = 4,
        Se = 5,
        we = 6,
        Me = 7,
        Ee = 0,
        ke = 1,
        Te = 2,
        Ae = 0,
        Ce = 1,
        Pe = 2,
        Re = 3,
        Le = 4,
        Ie = 5,
        Ne = 300,
        Oe = 301,
        De = 302,
        Ue = 303,
        ze = 304,
        Fe = 306,
        Be = 1e3,
        Ze = 1001,
        He = 1002,
        Ve = 1003,
        Ge = 1004,
        We = 1004,
        je = 1005,
        Xe = 1005,
        qe = 1006,
        Ye = 1007,
        Ke = 1007,
        $e = 1008,
        Je = 1008,
        Qe = 1009,
        et = 1010,
        tt = 1011,
        nt = 1012,
        rt = 1013,
        it = 1014,
        at = 1015,
        ot = 1016,
        st = 1017,
        lt = 1018,
        ut = 1020,
        ct = 1021,
        dt = 1023,
        ft = 1024,
        ht = 1025,
        pt = 1026,
        vt = 1027,
        mt = 1028,
        gt = 1029,
        yt = 1030,
        bt = 1031,
        _t = 1033,
        xt = 33776,
        St = 33777,
        wt = 33778,
        Mt = 33779,
        Et = 35840,
        kt = 35841,
        Tt = 35842,
        At = 35843,
        Ct = 36196,
        Pt = 37492,
        Rt = 37496,
        Lt = 37808,
        It = 37809,
        Nt = 37810,
        Ot = 37811,
        Dt = 37812,
        Ut = 37813,
        zt = 37814,
        Ft = 37815,
        Bt = 37816,
        Zt = 37817,
        Ht = 37818,
        Vt = 37819,
        Gt = 37820,
        Wt = 37821,
        jt = 36492,
        Xt = 36283,
        qt = 36284,
        Yt = 36285,
        Kt = 36286,
        $t = 2200,
        Jt = 2201,
        Qt = 2202,
        en = 2300,
        tn = 2301,
        nn = 2302,
        rn = 2400,
        an = 2401,
        on = 2402,
        sn = 2500,
        ln = 2501,
        un = 0,
        cn = 1,
        dn = 2,
        fn = 3e3,
        hn = 3001,
        pn = 3200,
        vn = 3201,
        mn = 0,
        gn = 1,
        yn = "",
        bn = "srgb",
        _n = "srgb-linear",
        xn = "display-p3",
        Sn = 0,
        wn = 7680,
        Mn = 7681,
        En = 7682,
        kn = 7683,
        Tn = 34055,
        An = 34056,
        Cn = 5386,
        Pn = 512,
        Rn = 513,
        Ln = 514,
        In = 515,
        Nn = 516,
        On = 517,
        Dn = 518,
        Un = 519,
        zn = 35044,
        Fn = 35048,
        Bn = 35040,
        Zn = 35045,
        Hn = 35049,
        Vn = 35041,
        Gn = 35046,
        Wn = 35050,
        jn = 35042,
        Xn = "100",
        qn = "300 es",
        Yn = 1035,
        Kn = (function () {
          function e() {
            p(this, e);
          }
          return (
            g(e, [
              {
                key: "addEventListener",
                value: function (e, t) {
                  void 0 === this._listeners && (this._listeners = {});
                  var n = this._listeners;
                  void 0 === n[e] && (n[e] = []),
                    -1 === n[e].indexOf(t) && n[e].push(t);
                },
              },
              {
                key: "hasEventListener",
                value: function (e, t) {
                  if (void 0 === this._listeners) return !1;
                  var n = this._listeners;
                  return void 0 !== n[e] && -1 !== n[e].indexOf(t);
                },
              },
              {
                key: "removeEventListener",
                value: function (e, t) {
                  if (void 0 !== this._listeners) {
                    var n = this._listeners[e];
                    if (void 0 !== n) {
                      var r = n.indexOf(t);
                      -1 !== r && n.splice(r, 1);
                    }
                  }
                },
              },
              {
                key: "dispatchEvent",
                value: function (e) {
                  if (void 0 !== this._listeners) {
                    var t = this._listeners[e.type];
                    if (void 0 !== t) {
                      e.target = this;
                      for (var n = t.slice(0), r = 0, i = n.length; r < i; r++)
                        n[r].call(this, e);
                      e.target = null;
                    }
                  }
                },
              },
            ]),
            e
          );
        })(),
        $n = [
          "00",
          "01",
          "02",
          "03",
          "04",
          "05",
          "06",
          "07",
          "08",
          "09",
          "0a",
          "0b",
          "0c",
          "0d",
          "0e",
          "0f",
          "10",
          "11",
          "12",
          "13",
          "14",
          "15",
          "16",
          "17",
          "18",
          "19",
          "1a",
          "1b",
          "1c",
          "1d",
          "1e",
          "1f",
          "20",
          "21",
          "22",
          "23",
          "24",
          "25",
          "26",
          "27",
          "28",
          "29",
          "2a",
          "2b",
          "2c",
          "2d",
          "2e",
          "2f",
          "30",
          "31",
          "32",
          "33",
          "34",
          "35",
          "36",
          "37",
          "38",
          "39",
          "3a",
          "3b",
          "3c",
          "3d",
          "3e",
          "3f",
          "40",
          "41",
          "42",
          "43",
          "44",
          "45",
          "46",
          "47",
          "48",
          "49",
          "4a",
          "4b",
          "4c",
          "4d",
          "4e",
          "4f",
          "50",
          "51",
          "52",
          "53",
          "54",
          "55",
          "56",
          "57",
          "58",
          "59",
          "5a",
          "5b",
          "5c",
          "5d",
          "5e",
          "5f",
          "60",
          "61",
          "62",
          "63",
          "64",
          "65",
          "66",
          "67",
          "68",
          "69",
          "6a",
          "6b",
          "6c",
          "6d",
          "6e",
          "6f",
          "70",
          "71",
          "72",
          "73",
          "74",
          "75",
          "76",
          "77",
          "78",
          "79",
          "7a",
          "7b",
          "7c",
          "7d",
          "7e",
          "7f",
          "80",
          "81",
          "82",
          "83",
          "84",
          "85",
          "86",
          "87",
          "88",
          "89",
          "8a",
          "8b",
          "8c",
          "8d",
          "8e",
          "8f",
          "90",
          "91",
          "92",
          "93",
          "94",
          "95",
          "96",
          "97",
          "98",
          "99",
          "9a",
          "9b",
          "9c",
          "9d",
          "9e",
          "9f",
          "a0",
          "a1",
          "a2",
          "a3",
          "a4",
          "a5",
          "a6",
          "a7",
          "a8",
          "a9",
          "aa",
          "ab",
          "ac",
          "ad",
          "ae",
          "af",
          "b0",
          "b1",
          "b2",
          "b3",
          "b4",
          "b5",
          "b6",
          "b7",
          "b8",
          "b9",
          "ba",
          "bb",
          "bc",
          "bd",
          "be",
          "bf",
          "c0",
          "c1",
          "c2",
          "c3",
          "c4",
          "c5",
          "c6",
          "c7",
          "c8",
          "c9",
          "ca",
          "cb",
          "cc",
          "cd",
          "ce",
          "cf",
          "d0",
          "d1",
          "d2",
          "d3",
          "d4",
          "d5",
          "d6",
          "d7",
          "d8",
          "d9",
          "da",
          "db",
          "dc",
          "dd",
          "de",
          "df",
          "e0",
          "e1",
          "e2",
          "e3",
          "e4",
          "e5",
          "e6",
          "e7",
          "e8",
          "e9",
          "ea",
          "eb",
          "ec",
          "ed",
          "ee",
          "ef",
          "f0",
          "f1",
          "f2",
          "f3",
          "f4",
          "f5",
          "f6",
          "f7",
          "f8",
          "f9",
          "fa",
          "fb",
          "fc",
          "fd",
          "fe",
          "ff",
        ],
        Jn = 1234567,
        Qn = Math.PI / 180,
        er = 180 / Math.PI;
      function tr() {
        var e = (4294967295 * Math.random()) | 0,
          t = (4294967295 * Math.random()) | 0,
          n = (4294967295 * Math.random()) | 0,
          r = (4294967295 * Math.random()) | 0;
        return (
          $n[255 & e] +
          $n[(e >> 8) & 255] +
          $n[(e >> 16) & 255] +
          $n[(e >> 24) & 255] +
          "-" +
          $n[255 & t] +
          $n[(t >> 8) & 255] +
          "-" +
          $n[((t >> 16) & 15) | 64] +
          $n[(t >> 24) & 255] +
          "-" +
          $n[(63 & n) | 128] +
          $n[(n >> 8) & 255] +
          "-" +
          $n[(n >> 16) & 255] +
          $n[(n >> 24) & 255] +
          $n[255 & r] +
          $n[(r >> 8) & 255] +
          $n[(r >> 16) & 255] +
          $n[(r >> 24) & 255]
        ).toLowerCase();
      }
      function nr(e, t, n) {
        return Math.max(t, Math.min(n, e));
      }
      function rr(e, t) {
        return ((e % t) + t) % t;
      }
      function ir(e, t, n) {
        return (1 - n) * e + n * t;
      }
      function ar(e) {
        return 0 === (e & (e - 1)) && 0 !== e;
      }
      function or(e) {
        return Math.pow(2, Math.ceil(Math.log(e) / Math.LN2));
      }
      function sr(e) {
        return Math.pow(2, Math.floor(Math.log(e) / Math.LN2));
      }
      function lr(e, t) {
        switch (t.constructor) {
          case Float32Array:
            return e;
          case Uint16Array:
            return e / 65535;
          case Uint8Array:
            return e / 255;
          case Int16Array:
            return Math.max(e / 32767, -1);
          case Int8Array:
            return Math.max(e / 127, -1);
          default:
            throw new Error("Invalid component type.");
        }
      }
      function ur(e, t) {
        switch (t.constructor) {
          case Float32Array:
            return e;
          case Uint16Array:
            return Math.round(65535 * e);
          case Uint8Array:
            return Math.round(255 * e);
          case Int16Array:
            return Math.round(32767 * e);
          case Int8Array:
            return Math.round(127 * e);
          default:
            throw new Error("Invalid component type.");
        }
      }
      var cr = {
          DEG2RAD: Qn,
          RAD2DEG: er,
          generateUUID: tr,
          clamp: nr,
          euclideanModulo: rr,
          mapLinear: function (e, t, n, r, i) {
            return r + ((e - t) * (i - r)) / (n - t);
          },
          inverseLerp: function (e, t, n) {
            return e !== t ? (n - e) / (t - e) : 0;
          },
          lerp: ir,
          damp: function (e, t, n, r) {
            return ir(e, t, 1 - Math.exp(-n * r));
          },
          pingpong: function (e) {
            var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 1;
            return t - Math.abs(rr(e, 2 * t) - t);
          },
          smoothstep: function (e, t, n) {
            return e <= t
              ? 0
              : e >= n
              ? 1
              : (e = (e - t) / (n - t)) * e * (3 - 2 * e);
          },
          smootherstep: function (e, t, n) {
            return e <= t
              ? 0
              : e >= n
              ? 1
              : (e = (e - t) / (n - t)) * e * e * (e * (6 * e - 15) + 10);
          },
          randInt: function (e, t) {
            return e + Math.floor(Math.random() * (t - e + 1));
          },
          randFloat: function (e, t) {
            return e + Math.random() * (t - e);
          },
          randFloatSpread: function (e) {
            return e * (0.5 - Math.random());
          },
          seededRandom: function (e) {
            void 0 !== e && (Jn = e);
            var t = (Jn += 1831565813);
            return (
              (t = Math.imul(t ^ (t >>> 15), 1 | t)),
              (((t ^= t + Math.imul(t ^ (t >>> 7), 61 | t)) ^ (t >>> 14)) >>>
                0) /
                4294967296
            );
          },
          degToRad: function (e) {
            return e * Qn;
          },
          radToDeg: function (e) {
            return e * er;
          },
          isPowerOfTwo: ar,
          ceilPowerOfTwo: or,
          floorPowerOfTwo: sr,
          setQuaternionFromProperEuler: function (e, t, n, r, i) {
            var a = Math.cos,
              o = Math.sin,
              s = a(n / 2),
              l = o(n / 2),
              u = a((t + r) / 2),
              c = o((t + r) / 2),
              d = a((t - r) / 2),
              f = o((t - r) / 2),
              h = a((r - t) / 2),
              p = o((r - t) / 2);
            switch (i) {
              case "XYX":
                e.set(s * c, l * d, l * f, s * u);
                break;
              case "YZY":
                e.set(l * f, s * c, l * d, s * u);
                break;
              case "ZXZ":
                e.set(l * d, l * f, s * c, s * u);
                break;
              case "XZX":
                e.set(s * c, l * p, l * h, s * u);
                break;
              case "YXY":
                e.set(l * h, s * c, l * p, s * u);
                break;
              case "ZYZ":
                e.set(l * p, l * h, s * c, s * u);
                break;
              default:
                console.warn(
                  "THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: " +
                    i
                );
            }
          },
          normalize: ur,
          denormalize: lr,
        },
        dr = (function (e) {
          function t() {
            var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0,
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0;
            p(this, t),
              (t.prototype.isVector2 = !0),
              (this.x = e),
              (this.y = n);
          }
          return (
            g(t, [
              {
                key: "width",
                get: function () {
                  return this.x;
                },
                set: function (e) {
                  this.x = e;
                },
              },
              {
                key: "height",
                get: function () {
                  return this.y;
                },
                set: function (e) {
                  this.y = e;
                },
              },
              {
                key: "set",
                value: function (e, t) {
                  return (this.x = e), (this.y = t), this;
                },
              },
              {
                key: "setScalar",
                value: function (e) {
                  return (this.x = e), (this.y = e), this;
                },
              },
              {
                key: "setX",
                value: function (e) {
                  return (this.x = e), this;
                },
              },
              {
                key: "setY",
                value: function (e) {
                  return (this.y = e), this;
                },
              },
              {
                key: "setComponent",
                value: function (e, t) {
                  switch (e) {
                    case 0:
                      this.x = t;
                      break;
                    case 1:
                      this.y = t;
                      break;
                    default:
                      throw new Error("index is out of range: " + e);
                  }
                  return this;
                },
              },
              {
                key: "getComponent",
                value: function (e) {
                  switch (e) {
                    case 0:
                      return this.x;
                    case 1:
                      return this.y;
                    default:
                      throw new Error("index is out of range: " + e);
                  }
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor(this.x, this.y);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (this.x = e.x), (this.y = e.y), this;
                },
              },
              {
                key: "add",
                value: function (e) {
                  return (this.x += e.x), (this.y += e.y), this;
                },
              },
              {
                key: "addScalar",
                value: function (e) {
                  return (this.x += e), (this.y += e), this;
                },
              },
              {
                key: "addVectors",
                value: function (e, t) {
                  return (this.x = e.x + t.x), (this.y = e.y + t.y), this;
                },
              },
              {
                key: "addScaledVector",
                value: function (e, t) {
                  return (this.x += e.x * t), (this.y += e.y * t), this;
                },
              },
              {
                key: "sub",
                value: function (e) {
                  return (this.x -= e.x), (this.y -= e.y), this;
                },
              },
              {
                key: "subScalar",
                value: function (e) {
                  return (this.x -= e), (this.y -= e), this;
                },
              },
              {
                key: "subVectors",
                value: function (e, t) {
                  return (this.x = e.x - t.x), (this.y = e.y - t.y), this;
                },
              },
              {
                key: "multiply",
                value: function (e) {
                  return (this.x *= e.x), (this.y *= e.y), this;
                },
              },
              {
                key: "multiplyScalar",
                value: function (e) {
                  return (this.x *= e), (this.y *= e), this;
                },
              },
              {
                key: "divide",
                value: function (e) {
                  return (this.x /= e.x), (this.y /= e.y), this;
                },
              },
              {
                key: "divideScalar",
                value: function (e) {
                  return this.multiplyScalar(1 / e);
                },
              },
              {
                key: "applyMatrix3",
                value: function (e) {
                  var t = this.x,
                    n = this.y,
                    r = e.elements;
                  return (
                    (this.x = r[0] * t + r[3] * n + r[6]),
                    (this.y = r[1] * t + r[4] * n + r[7]),
                    this
                  );
                },
              },
              {
                key: "min",
                value: function (e) {
                  return (
                    (this.x = Math.min(this.x, e.x)),
                    (this.y = Math.min(this.y, e.y)),
                    this
                  );
                },
              },
              {
                key: "max",
                value: function (e) {
                  return (
                    (this.x = Math.max(this.x, e.x)),
                    (this.y = Math.max(this.y, e.y)),
                    this
                  );
                },
              },
              {
                key: "clamp",
                value: function (e, t) {
                  return (
                    (this.x = Math.max(e.x, Math.min(t.x, this.x))),
                    (this.y = Math.max(e.y, Math.min(t.y, this.y))),
                    this
                  );
                },
              },
              {
                key: "clampScalar",
                value: function (e, t) {
                  return (
                    (this.x = Math.max(e, Math.min(t, this.x))),
                    (this.y = Math.max(e, Math.min(t, this.y))),
                    this
                  );
                },
              },
              {
                key: "clampLength",
                value: function (e, t) {
                  var n = this.length();
                  return this.divideScalar(n || 1).multiplyScalar(
                    Math.max(e, Math.min(t, n))
                  );
                },
              },
              {
                key: "floor",
                value: function () {
                  return (
                    (this.x = Math.floor(this.x)),
                    (this.y = Math.floor(this.y)),
                    this
                  );
                },
              },
              {
                key: "ceil",
                value: function () {
                  return (
                    (this.x = Math.ceil(this.x)),
                    (this.y = Math.ceil(this.y)),
                    this
                  );
                },
              },
              {
                key: "round",
                value: function () {
                  return (
                    (this.x = Math.round(this.x)),
                    (this.y = Math.round(this.y)),
                    this
                  );
                },
              },
              {
                key: "roundToZero",
                value: function () {
                  return (
                    (this.x =
                      this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
                    (this.y =
                      this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
                    this
                  );
                },
              },
              {
                key: "negate",
                value: function () {
                  return (this.x = -this.x), (this.y = -this.y), this;
                },
              },
              {
                key: "dot",
                value: function (e) {
                  return this.x * e.x + this.y * e.y;
                },
              },
              {
                key: "cross",
                value: function (e) {
                  return this.x * e.y - this.y * e.x;
                },
              },
              {
                key: "lengthSq",
                value: function () {
                  return this.x * this.x + this.y * this.y;
                },
              },
              {
                key: "length",
                value: function () {
                  return Math.sqrt(this.x * this.x + this.y * this.y);
                },
              },
              {
                key: "manhattanLength",
                value: function () {
                  return Math.abs(this.x) + Math.abs(this.y);
                },
              },
              {
                key: "normalize",
                value: function () {
                  return this.divideScalar(this.length() || 1);
                },
              },
              {
                key: "angle",
                value: function () {
                  var e = Math.atan2(-this.y, -this.x) + Math.PI;
                  return e;
                },
              },
              {
                key: "angleTo",
                value: function (e) {
                  var t = Math.sqrt(this.lengthSq() * e.lengthSq());
                  if (0 === t) return Math.PI / 2;
                  var n = this.dot(e) / t;
                  return Math.acos(nr(n, -1, 1));
                },
              },
              {
                key: "distanceTo",
                value: function (e) {
                  return Math.sqrt(this.distanceToSquared(e));
                },
              },
              {
                key: "distanceToSquared",
                value: function (e) {
                  var t = this.x - e.x,
                    n = this.y - e.y;
                  return t * t + n * n;
                },
              },
              {
                key: "manhattanDistanceTo",
                value: function (e) {
                  return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);
                },
              },
              {
                key: "setLength",
                value: function (e) {
                  return this.normalize().multiplyScalar(e);
                },
              },
              {
                key: "lerp",
                value: function (e, t) {
                  return (
                    (this.x += (e.x - this.x) * t),
                    (this.y += (e.y - this.y) * t),
                    this
                  );
                },
              },
              {
                key: "lerpVectors",
                value: function (e, t, n) {
                  return (
                    (this.x = e.x + (t.x - e.x) * n),
                    (this.y = e.y + (t.y - e.y) * n),
                    this
                  );
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return e.x === this.x && e.y === this.y;
                },
              },
              {
                key: "fromArray",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0;
                  return (this.x = e[t]), (this.y = e[t + 1]), this;
                },
              },
              {
                key: "toArray",
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : [],
                    t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0;
                  return (e[t] = this.x), (e[t + 1] = this.y), e;
                },
              },
              {
                key: "fromBufferAttribute",
                value: function (e, t) {
                  return (this.x = e.getX(t)), (this.y = e.getY(t)), this;
                },
              },
              {
                key: "rotateAround",
                value: function (e, t) {
                  var n = Math.cos(t),
                    r = Math.sin(t),
                    i = this.x - e.x,
                    a = this.y - e.y;
                  return (
                    (this.x = i * n - a * r + e.x),
                    (this.y = i * r + a * n + e.y),
                    this
                  );
                },
              },
              {
                key: "random",
                value: function () {
                  return (
                    (this.x = Math.random()), (this.y = Math.random()), this
                  );
                },
              },
              {
                key: Symbol.iterator,
                value: I().mark(function e() {
                  return I().wrap(
                    function (e) {
                      for (;;)
                        switch ((e.prev = e.next)) {
                          case 0:
                            return (e.next = 2), this.x;
                          case 2:
                            return (e.next = 4), this.y;
                          case 4:
                          case "end":
                            return e.stop();
                        }
                    },
                    e,
                    this
                  );
                }),
              },
            ]),
            t
          );
        })(),
        fr = (function () {
          function e() {
            p(this, e),
              (e.prototype.isMatrix3 = !0),
              (this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1]);
          }
          return (
            g(e, [
              {
                key: "set",
                value: function (e, t, n, r, i, a, o, s, l) {
                  var u = this.elements;
                  return (
                    (u[0] = e),
                    (u[1] = r),
                    (u[2] = o),
                    (u[3] = t),
                    (u[4] = i),
                    (u[5] = s),
                    (u[6] = n),
                    (u[7] = a),
                    (u[8] = l),
                    this
                  );
                },
              },
              {
                key: "identity",
                value: function () {
                  return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  var t = this.elements,
                    n = e.elements;
                  return (
                    (t[0] = n[0]),
                    (t[1] = n[1]),
                    (t[2] = n[2]),
                    (t[3] = n[3]),
                    (t[4] = n[4]),
                    (t[5] = n[5]),
                    (t[6] = n[6]),
                    (t[7] = n[7]),
                    (t[8] = n[8]),
                    this
                  );
                },
              },
              {
                key: "extractBasis",
                value: function (e, t, n) {
                  return (
                    e.setFromMatrix3Column(this, 0),
                    t.setFromMatrix3Column(this, 1),
                    n.setFromMatrix3Column(this, 2),
                    this
                  );
                },
              },
              {
                key: "setFromMatrix4",
                value: function (e) {
                  var t = e.elements;
                  return (
                    this.set(
                      t[0],
                      t[4],
                      t[8],
                      t[1],
                      t[5],
                      t[9],
                      t[2],
                      t[6],
                      t[10]
                    ),
                    this
                  );
                },
              },
              {
                key: "multiply",
                value: function (e) {
                  return this.multiplyMatrices(this, e);
                },
              },
              {
                key: "premultiply",
                value: function (e) {
                  return this.multiplyMatrices(e, this);
                },
              },
              {
                key: "multiplyMatrices",
                value: function (e, t) {
                  var n = e.elements,
                    r = t.elements,
                    i = this.elements,
                    a = n[0],
                    o = n[3],
                    s = n[6],
                    l = n[1],
                    u = n[4],
                    c = n[7],
                    d = n[2],
                    f = n[5],
                    h = n[8],
                    p = r[0],
                    v = r[3],
                    m = r[6],
                    g = r[1],
                    y = r[4],
                    b = r[7],
                    _ = r[2],
                    x = r[5],
                    S = r[8];
                  return (
                    (i[0] = a * p + o * g + s * _),
                    (i[3] = a * v + o * y + s * x),
                    (i[6] = a * m + o * b + s * S),
                    (i[1] = l * p + u * g + c * _),
                    (i[4] = l * v + u * y + c * x),
                    (i[7] = l * m + u * b + c * S),
                    (i[2] = d * p + f * g + h * _),
                    (i[5] = d * v + f * y + h * x),
                    (i[8] = d * m + f * b + h * S),
                    this
                  );
                },
              },
              {
                key: "multiplyScalar",
                value: function (e) {
                  var t = this.elements;
                  return (
                    (t[0] *= e),
                    (t[3] *= e),
                    (t[6] *= e),
                    (t[1] *= e),
                    (t[4] *= e),
                    (t[7] *= e),
                    (t[2] *= e),
                    (t[5] *= e),
                    (t[8] *= e),
                    this
                  );
                },
              },
              {
                key: "determinant",
                value: function () {
                  var e = this.elements,
                    t = e[0],
                    n = e[1],
                    r = e[2],
                    i = e[3],
                    a = e[4],
                    o = e[5],
                    s = e[6],
                    l = e[7],
                    u = e[8];
                  return (
                    t * a * u -
                    t * o * l -
                    n * i * u +
                    n * o * s +
                    r * i * l -
                    r * a * s
                  );
                },
              },
              {
                key: "invert",
                value: function () {
                  var e = this.elements,
                    t = e[0],
                    n = e[1],
                    r = e[2],
                    i = e[3],
                    a = e[4],
                    o = e[5],
                    s = e[6],
                    l = e[7],
                    u = e[8],
                    c = u * a - o * l,
                    d = o * s - u * i,
                    f = l * i - a * s,
                    h = t * c + n * d + r * f;
                  if (0 === h) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
                  var p = 1 / h;
                  return (
                    (e[0] = c * p),
                    (e[1] = (r * l - u * n) * p),
                    (e[2] = (o * n - r * a) * p),
                    (e[3] = d * p),
                    (e[4] = (u * t - r * s) * p),
                    (e[5] = (r * i - o * t) * p),
                    (e[6] = f * p),
                    (e[7] = (n * s - l * t) * p),
                    (e[8] = (a * t - n * i) * p),
                    this
                  );
                },
              },
              {
                key: "transpose",
                value: function () {
                  var e,
                    t = this.elements;
                  return (
                    (e = t[1]),
                    (t[1] = t[3]),
                    (t[3] = e),
                    (e = t[2]),
                    (t[2] = t[6]),
                    (t[6] = e),
                    (e = t[5]),
                    (t[5] = t[7]),
                    (t[7] = e),
                    this
                  );
                },
              },
              {
                key: "getNormalMatrix",
                value: function (e) {
                  return this.setFromMatrix4(e).invert().transpose();
                },
              },
              {
                key: "transposeIntoArray",
                value: function (e) {
                  var t = this.elements;
                  return (
                    (e[0] = t[0]),
                    (e[1] = t[3]),
                    (e[2] = t[6]),
                    (e[3] = t[1]),
                    (e[4] = t[4]),
                    (e[5] = t[7]),
                    (e[6] = t[2]),
                    (e[7] = t[5]),
                    (e[8] = t[8]),
                    this
                  );
                },
              },
              {
                key: "setUvTransform",
                value: function (e, t, n, r, i, a, o) {
                  var s = Math.cos(i),
                    l = Math.sin(i);
                  return (
                    this.set(
                      n * s,
                      n * l,
                      -n * (s * a + l * o) + a + e,
                      -r * l,
                      r * s,
                      -r * (-l * a + s * o) + o + t,
                      0,
                      0,
                      1
                    ),
                    this
                  );
                },
              },
              {
                key: "scale",
                value: function (e, t) {
                  return this.premultiply(hr.makeScale(e, t)), this;
                },
              },
              {
                key: "rotate",
                value: function (e) {
                  return this.premultiply(hr.makeRotation(-e)), this;
                },
              },
              {
                key: "translate",
                value: function (e, t) {
                  return this.premultiply(hr.makeTranslation(e, t)), this;
                },
              },
              {
                key: "makeTranslation",
                value: function (e, t) {
                  return this.set(1, 0, e, 0, 1, t, 0, 0, 1), this;
                },
              },
              {
                key: "makeRotation",
                value: function (e) {
                  var t = Math.cos(e),
                    n = Math.sin(e);
                  return this.set(t, -n, 0, n, t, 0, 0, 0, 1), this;
                },
              },
              {
                key: "makeScale",
                value: function (e, t) {
                  return this.set(e, 0, 0, 0, t, 0, 0, 0, 1), this;
                },
              },
              {
                key: "equals",
                value: function (e) {
                  for (var t = this.elements, n = e.elements, r = 0; r < 9; r++)
                    if (t[r] !== n[r]) return !1;
                  return !0;
                },
              },
              {
                key: "fromArray",
                value: function (e) {
                  for (
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : 0,
                      n = 0;
                    n < 9;
                    n++
                  )
                    this.elements[n] = e[n + t];
                  return this;
                },
              },
              {
                key: "toArray",
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : [],
                    t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0,
                    n = this.elements;
                  return (
                    (e[t] = n[0]),
                    (e[t + 1] = n[1]),
                    (e[t + 2] = n[2]),
                    (e[t + 3] = n[3]),
                    (e[t + 4] = n[4]),
                    (e[t + 5] = n[5]),
                    (e[t + 6] = n[6]),
                    (e[t + 7] = n[7]),
                    (e[t + 8] = n[8]),
                    e
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().fromArray(this.elements);
                },
              },
            ]),
            e
          );
        })(),
        hr = new fr();
      function pr(e) {
        for (var t = e.length - 1; t >= 0; --t) if (e[t] >= 65535) return !0;
        return !1;
      }
      var vr = {
        Int8Array: Int8Array,
        Uint8Array: Uint8Array,
        Uint8ClampedArray: Uint8ClampedArray,
        Int16Array: Int16Array,
        Uint16Array: Uint16Array,
        Int32Array: Int32Array,
        Uint32Array: Uint32Array,
        Float32Array: Float32Array,
        Float64Array: Float64Array,
      };
      function mr(e, t) {
        return new vr[e](t);
      }
      function gr(e) {
        return document.createElementNS("http://www.w3.org/1999/xhtml", e);
      }
      var yr = {};
      function br(e) {
        e in yr || ((yr[e] = !0), console.warn(e));
      }
      function _r(e) {
        return e < 0.04045
          ? 0.0773993808 * e
          : Math.pow(0.9478672986 * e + 0.0521327014, 2.4);
      }
      function xr(e) {
        return e < 0.0031308 ? 12.92 * e : 1.055 * Math.pow(e, 0.41666) - 0.055;
      }
      var Sr = new fr().fromArray([
          0.8224621, 0.0331941, 0.0170827, 0.177538, 0.9668058, 0.0723974,
          -1e-7, 1e-7, 0.9105199,
        ]),
        wr = new fr().fromArray([
          1.2249401, -0.0420569, -0.0196376, -0.2249404, 1.0420571, -0.0786361,
          1e-7, 0, 1.0982735,
        ]);
      var Mr,
        Er =
          ((S = {}),
          (0, l.Z)(S, _n, function (e) {
            return e;
          }),
          (0, l.Z)(S, bn, function (e) {
            return e.convertSRGBToLinear();
          }),
          (0, l.Z)(S, xn, function (e) {
            return e.convertSRGBToLinear().applyMatrix3(wr);
          }),
          S),
        kr =
          ((w = {}),
          (0, l.Z)(w, _n, function (e) {
            return e;
          }),
          (0, l.Z)(w, bn, function (e) {
            return e.convertLinearToSRGB();
          }),
          (0, l.Z)(w, xn, function (e) {
            return e.applyMatrix3(Sr).convertLinearToSRGB();
          }),
          w),
        Tr = {
          enabled: !0,
          get legacyMode() {
            return (
              console.warn(
                "THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."
              ),
              !this.enabled
            );
          },
          set legacyMode(e) {
            console.warn(
              "THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."
            ),
              (this.enabled = !e);
          },
          get workingColorSpace() {
            return _n;
          },
          set workingColorSpace(e) {
            console.warn(
              "THREE.ColorManagement: .workingColorSpace is readonly."
            );
          },
          convert: function (e, t, n) {
            if (!1 === this.enabled || t === n || !t || !n) return e;
            var r = Er[t],
              i = kr[n];
            if (void 0 === r || void 0 === i)
              throw new Error(
                'Unsupported color space conversion, "'
                  .concat(t, '" to "')
                  .concat(n, '".')
              );
            return i(r(e));
          },
          fromWorkingColorSpace: function (e, t) {
            return this.convert(e, this.workingColorSpace, t);
          },
          toWorkingColorSpace: function (e, t) {
            return this.convert(e, t, this.workingColorSpace);
          },
        },
        Ar = (function () {
          function e() {
            p(this, e);
          }
          return (
            g(e, null, [
              {
                key: "getDataURL",
                value: function (e) {
                  if (/^data:/i.test(e.src)) return e.src;
                  if ("undefined" === typeof HTMLCanvasElement) return e.src;
                  var t;
                  if (e instanceof HTMLCanvasElement) t = e;
                  else {
                    void 0 === Mr && (Mr = gr("canvas")),
                      (Mr.width = e.width),
                      (Mr.height = e.height);
                    var n = Mr.getContext("2d");
                    e instanceof ImageData
                      ? n.putImageData(e, 0, 0)
                      : n.drawImage(e, 0, 0, e.width, e.height),
                      (t = Mr);
                  }
                  return t.width > 2048 || t.height > 2048
                    ? (console.warn(
                        "THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",
                        e
                      ),
                      t.toDataURL("image/jpeg", 0.6))
                    : t.toDataURL("image/png");
                },
              },
              {
                key: "sRGBToLinear",
                value: function (e) {
                  if (
                    ("undefined" !== typeof HTMLImageElement &&
                      e instanceof HTMLImageElement) ||
                    ("undefined" !== typeof HTMLCanvasElement &&
                      e instanceof HTMLCanvasElement) ||
                    ("undefined" !== typeof ImageBitmap &&
                      e instanceof ImageBitmap)
                  ) {
                    var t = gr("canvas");
                    (t.width = e.width), (t.height = e.height);
                    var n = t.getContext("2d");
                    n.drawImage(e, 0, 0, e.width, e.height);
                    for (
                      var r = n.getImageData(0, 0, e.width, e.height),
                        i = r.data,
                        a = 0;
                      a < i.length;
                      a++
                    )
                      i[a] = 255 * _r(i[a] / 255);
                    return n.putImageData(r, 0, 0), t;
                  }
                  if (e.data) {
                    for (var o = e.data.slice(0), s = 0; s < o.length; s++)
                      o instanceof Uint8Array || o instanceof Uint8ClampedArray
                        ? (o[s] = Math.floor(255 * _r(o[s] / 255)))
                        : (o[s] = _r(o[s]));
                    return { data: o, width: e.width, height: e.height };
                  }
                  return (
                    console.warn(
                      "THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."
                    ),
                    e
                  );
                },
              },
            ]),
            e
          );
        })(),
        Cr = (function () {
          function e() {
            var t =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : null;
            p(this, e),
              (this.isSource = !0),
              (this.uuid = tr()),
              (this.data = t),
              (this.version = 0);
          }
          return (
            g(e, [
              {
                key: "needsUpdate",
                set: function (e) {
                  !0 === e && this.version++;
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = void 0 === e || "string" === typeof e;
                  if (!t && void 0 !== e.images[this.uuid])
                    return e.images[this.uuid];
                  var n = { uuid: this.uuid, url: "" },
                    r = this.data;
                  if (null !== r) {
                    var i;
                    if (Array.isArray(r)) {
                      i = [];
                      for (var a = 0, o = r.length; a < o; a++)
                        r[a].isDataTexture
                          ? i.push(Pr(r[a].image))
                          : i.push(Pr(r[a]));
                    } else i = Pr(r);
                    n.url = i;
                  }
                  return t || (e.images[this.uuid] = n), n;
                },
              },
            ]),
            e
          );
        })();
      function Pr(e) {
        return ("undefined" !== typeof HTMLImageElement &&
          e instanceof HTMLImageElement) ||
          ("undefined" !== typeof HTMLCanvasElement &&
            e instanceof HTMLCanvasElement) ||
          ("undefined" !== typeof ImageBitmap && e instanceof ImageBitmap)
          ? Ar.getDataURL(e)
          : e.data
          ? {
              data: Array.from(e.data),
              width: e.width,
              height: e.height,
              type: e.data.constructor.name,
            }
          : (console.warn("THREE.Texture: Unable to serialize Texture."), {});
      }
      var Rr = 0,
        Lr = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : n.DEFAULT_IMAGE,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : n.DEFAULT_MAPPING,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : Ze,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : Ze,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : qe,
              l =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : $e,
              u =
                arguments.length > 6 && void 0 !== arguments[6]
                  ? arguments[6]
                  : dt,
              c =
                arguments.length > 7 && void 0 !== arguments[7]
                  ? arguments[7]
                  : Qe,
              d =
                arguments.length > 8 && void 0 !== arguments[8]
                  ? arguments[8]
                  : n.DEFAULT_ANISOTROPY,
              f =
                arguments.length > 9 && void 0 !== arguments[9]
                  ? arguments[9]
                  : yn;
            return (
              p(this, n),
              ((e = t.call(this)).isTexture = !0),
              Object.defineProperty(E(e), "id", { value: Rr++ }),
              (e.uuid = tr()),
              (e.name = ""),
              (e.source = new Cr(r)),
              (e.mipmaps = []),
              (e.mapping = i),
              (e.channel = 0),
              (e.wrapS = a),
              (e.wrapT = o),
              (e.magFilter = s),
              (e.minFilter = l),
              (e.anisotropy = d),
              (e.format = u),
              (e.internalFormat = null),
              (e.type = c),
              (e.offset = new dr(0, 0)),
              (e.repeat = new dr(1, 1)),
              (e.center = new dr(0, 0)),
              (e.rotation = 0),
              (e.matrixAutoUpdate = !0),
              (e.matrix = new fr()),
              (e.generateMipmaps = !0),
              (e.premultiplyAlpha = !1),
              (e.flipY = !0),
              (e.unpackAlignment = 4),
              "string" === typeof f
                ? (e.colorSpace = f)
                : (br(
                    "THREE.Texture: Property .encoding has been replaced by .colorSpace."
                  ),
                  (e.colorSpace = f === hn ? bn : yn)),
              (e.userData = {}),
              (e.version = 0),
              (e.onUpdate = null),
              (e.isRenderTargetTexture = !1),
              (e.needsPMREMUpdate = !1),
              e
            );
          }
          return (
            g(n, [
              {
                key: "image",
                get: function () {
                  return this.source.data;
                },
                set: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : null;
                  this.source.data = e;
                },
              },
              {
                key: "updateMatrix",
                value: function () {
                  this.matrix.setUvTransform(
                    this.offset.x,
                    this.offset.y,
                    this.repeat.x,
                    this.repeat.y,
                    this.rotation,
                    this.center.x,
                    this.center.y
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    (this.name = e.name),
                    (this.source = e.source),
                    (this.mipmaps = e.mipmaps.slice(0)),
                    (this.mapping = e.mapping),
                    (this.channel = e.channel),
                    (this.wrapS = e.wrapS),
                    (this.wrapT = e.wrapT),
                    (this.magFilter = e.magFilter),
                    (this.minFilter = e.minFilter),
                    (this.anisotropy = e.anisotropy),
                    (this.format = e.format),
                    (this.internalFormat = e.internalFormat),
                    (this.type = e.type),
                    this.offset.copy(e.offset),
                    this.repeat.copy(e.repeat),
                    this.center.copy(e.center),
                    (this.rotation = e.rotation),
                    (this.matrixAutoUpdate = e.matrixAutoUpdate),
                    this.matrix.copy(e.matrix),
                    (this.generateMipmaps = e.generateMipmaps),
                    (this.premultiplyAlpha = e.premultiplyAlpha),
                    (this.flipY = e.flipY),
                    (this.unpackAlignment = e.unpackAlignment),
                    (this.colorSpace = e.colorSpace),
                    (this.userData = JSON.parse(JSON.stringify(e.userData))),
                    (this.needsUpdate = !0),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = void 0 === e || "string" === typeof e;
                  if (!t && void 0 !== e.textures[this.uuid])
                    return e.textures[this.uuid];
                  var n = {
                    metadata: {
                      version: 4.5,
                      type: "Texture",
                      generator: "Texture.toJSON",
                    },
                    uuid: this.uuid,
                    name: this.name,
                    image: this.source.toJSON(e).uuid,
                    mapping: this.mapping,
                    channel: this.channel,
                    repeat: [this.repeat.x, this.repeat.y],
                    offset: [this.offset.x, this.offset.y],
                    center: [this.center.x, this.center.y],
                    rotation: this.rotation,
                    wrap: [this.wrapS, this.wrapT],
                    format: this.format,
                    internalFormat: this.internalFormat,
                    type: this.type,
                    colorSpace: this.colorSpace,
                    minFilter: this.minFilter,
                    magFilter: this.magFilter,
                    anisotropy: this.anisotropy,
                    flipY: this.flipY,
                    generateMipmaps: this.generateMipmaps,
                    premultiplyAlpha: this.premultiplyAlpha,
                    unpackAlignment: this.unpackAlignment,
                  };
                  return (
                    Object.keys(this.userData).length > 0 &&
                      (n.userData = this.userData),
                    t || (e.textures[this.uuid] = n),
                    n
                  );
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.dispatchEvent({ type: "dispose" });
                },
              },
              {
                key: "transformUv",
                value: function (e) {
                  if (this.mapping !== Ne) return e;
                  if ((e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1))
                    switch (this.wrapS) {
                      case Be:
                        e.x = e.x - Math.floor(e.x);
                        break;
                      case Ze:
                        e.x = e.x < 0 ? 0 : 1;
                        break;
                      case He:
                        1 === Math.abs(Math.floor(e.x) % 2)
                          ? (e.x = Math.ceil(e.x) - e.x)
                          : (e.x = e.x - Math.floor(e.x));
                    }
                  if (e.y < 0 || e.y > 1)
                    switch (this.wrapT) {
                      case Be:
                        e.y = e.y - Math.floor(e.y);
                        break;
                      case Ze:
                        e.y = e.y < 0 ? 0 : 1;
                        break;
                      case He:
                        1 === Math.abs(Math.floor(e.y) % 2)
                          ? (e.y = Math.ceil(e.y) - e.y)
                          : (e.y = e.y - Math.floor(e.y));
                    }
                  return this.flipY && (e.y = 1 - e.y), e;
                },
              },
              {
                key: "needsUpdate",
                set: function (e) {
                  !0 === e && (this.version++, (this.source.needsUpdate = !0));
                },
              },
              {
                key: "encoding",
                get: function () {
                  return (
                    br(
                      "THREE.Texture: Property .encoding has been replaced by .colorSpace."
                    ),
                    this.colorSpace === bn ? hn : fn
                  );
                },
                set: function (e) {
                  br(
                    "THREE.Texture: Property .encoding has been replaced by .colorSpace."
                  ),
                    (this.colorSpace = e === hn ? bn : yn);
                },
              },
            ]),
            n
          );
        })(Kn);
      (Lr.DEFAULT_IMAGE = null),
        (Lr.DEFAULT_MAPPING = Ne),
        (Lr.DEFAULT_ANISOTROPY = 1);
      var Ir = (function (e) {
          function t() {
            var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0,
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0,
              i =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1;
            p(this, t),
              (t.prototype.isVector4 = !0),
              (this.x = e),
              (this.y = n),
              (this.z = r),
              (this.w = i);
          }
          return (
            g(t, [
              {
                key: "width",
                get: function () {
                  return this.z;
                },
                set: function (e) {
                  this.z = e;
                },
              },
              {
                key: "height",
                get: function () {
                  return this.w;
                },
                set: function (e) {
                  this.w = e;
                },
              },
              {
                key: "set",
                value: function (e, t, n, r) {
                  return (
                    (this.x = e), (this.y = t), (this.z = n), (this.w = r), this
                  );
                },
              },
              {
                key: "setScalar",
                value: function (e) {
                  return (
                    (this.x = e), (this.y = e), (this.z = e), (this.w = e), this
                  );
                },
              },
              {
                key: "setX",
                value: function (e) {
                  return (this.x = e), this;
                },
              },
              {
                key: "setY",
                value: function (e) {
                  return (this.y = e), this;
                },
              },
              {
                key: "setZ",
                value: function (e) {
                  return (this.z = e), this;
                },
              },
              {
                key: "setW",
                value: function (e) {
                  return (this.w = e), this;
                },
              },
              {
                key: "setComponent",
                value: function (e, t) {
                  switch (e) {
                    case 0:
                      this.x = t;
                      break;
                    case 1:
                      this.y = t;
                      break;
                    case 2:
                      this.z = t;
                      break;
                    case 3:
                      this.w = t;
                      break;
                    default:
                      throw new Error("index is out of range: " + e);
                  }
                  return this;
                },
              },
              {
                key: "getComponent",
                value: function (e) {
                  switch (e) {
                    case 0:
                      return this.x;
                    case 1:
                      return this.y;
                    case 2:
                      return this.z;
                    case 3:
                      return this.w;
                    default:
                      throw new Error("index is out of range: " + e);
                  }
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor(this.x, this.y, this.z, this.w);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    (this.x = e.x),
                    (this.y = e.y),
                    (this.z = e.z),
                    (this.w = void 0 !== e.w ? e.w : 1),
                    this
                  );
                },
              },
              {
                key: "add",
                value: function (e) {
                  return (
                    (this.x += e.x),
                    (this.y += e.y),
                    (this.z += e.z),
                    (this.w += e.w),
                    this
                  );
                },
              },
              {
                key: "addScalar",
                value: function (e) {
                  return (
                    (this.x += e),
                    (this.y += e),
                    (this.z += e),
                    (this.w += e),
                    this
                  );
                },
              },
              {
                key: "addVectors",
                value: function (e, t) {
                  return (
                    (this.x = e.x + t.x),
                    (this.y = e.y + t.y),
                    (this.z = e.z + t.z),
                    (this.w = e.w + t.w),
                    this
                  );
                },
              },
              {
                key: "addScaledVector",
                value: function (e, t) {
                  return (
                    (this.x += e.x * t),
                    (this.y += e.y * t),
                    (this.z += e.z * t),
                    (this.w += e.w * t),
                    this
                  );
                },
              },
              {
                key: "sub",
                value: function (e) {
                  return (
                    (this.x -= e.x),
                    (this.y -= e.y),
                    (this.z -= e.z),
                    (this.w -= e.w),
                    this
                  );
                },
              },
              {
                key: "subScalar",
                value: function (e) {
                  return (
                    (this.x -= e),
                    (this.y -= e),
                    (this.z -= e),
                    (this.w -= e),
                    this
                  );
                },
              },
              {
                key: "subVectors",
                value: function (e, t) {
                  return (
                    (this.x = e.x - t.x),
                    (this.y = e.y - t.y),
                    (this.z = e.z - t.z),
                    (this.w = e.w - t.w),
                    this
                  );
                },
              },
              {
                key: "multiply",
                value: function (e) {
                  return (
                    (this.x *= e.x),
                    (this.y *= e.y),
                    (this.z *= e.z),
                    (this.w *= e.w),
                    this
                  );
                },
              },
              {
                key: "multiplyScalar",
                value: function (e) {
                  return (
                    (this.x *= e),
                    (this.y *= e),
                    (this.z *= e),
                    (this.w *= e),
                    this
                  );
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  var t = this.x,
                    n = this.y,
                    r = this.z,
                    i = this.w,
                    a = e.elements;
                  return (
                    (this.x = a[0] * t + a[4] * n + a[8] * r + a[12] * i),
                    (this.y = a[1] * t + a[5] * n + a[9] * r + a[13] * i),
                    (this.z = a[2] * t + a[6] * n + a[10] * r + a[14] * i),
                    (this.w = a[3] * t + a[7] * n + a[11] * r + a[15] * i),
                    this
                  );
                },
              },
              {
                key: "divideScalar",
                value: function (e) {
                  return this.multiplyScalar(1 / e);
                },
              },
              {
                key: "setAxisAngleFromQuaternion",
                value: function (e) {
                  this.w = 2 * Math.acos(e.w);
                  var t = Math.sqrt(1 - e.w * e.w);
                  return (
                    t < 1e-4
                      ? ((this.x = 1), (this.y = 0), (this.z = 0))
                      : ((this.x = e.x / t),
                        (this.y = e.y / t),
                        (this.z = e.z / t)),
                    this
                  );
                },
              },
              {
                key: "setAxisAngleFromRotationMatrix",
                value: function (e) {
                  var t,
                    n,
                    r,
                    i,
                    a = 0.01,
                    o = 0.1,
                    s = e.elements,
                    l = s[0],
                    u = s[4],
                    c = s[8],
                    d = s[1],
                    f = s[5],
                    h = s[9],
                    p = s[2],
                    v = s[6],
                    m = s[10];
                  if (
                    Math.abs(u - d) < a &&
                    Math.abs(c - p) < a &&
                    Math.abs(h - v) < a
                  ) {
                    if (
                      Math.abs(u + d) < o &&
                      Math.abs(c + p) < o &&
                      Math.abs(h + v) < o &&
                      Math.abs(l + f + m - 3) < o
                    )
                      return this.set(1, 0, 0, 0), this;
                    t = Math.PI;
                    var g = (l + 1) / 2,
                      y = (f + 1) / 2,
                      b = (m + 1) / 2,
                      _ = (u + d) / 4,
                      x = (c + p) / 4,
                      S = (h + v) / 4;
                    return (
                      g > y && g > b
                        ? g < a
                          ? ((n = 0), (r = 0.707106781), (i = 0.707106781))
                          : ((r = _ / (n = Math.sqrt(g))), (i = x / n))
                        : y > b
                        ? y < a
                          ? ((n = 0.707106781), (r = 0), (i = 0.707106781))
                          : ((n = _ / (r = Math.sqrt(y))), (i = S / r))
                        : b < a
                        ? ((n = 0.707106781), (r = 0.707106781), (i = 0))
                        : ((n = x / (i = Math.sqrt(b))), (r = S / i)),
                      this.set(n, r, i, t),
                      this
                    );
                  }
                  var w = Math.sqrt(
                    (v - h) * (v - h) + (c - p) * (c - p) + (d - u) * (d - u)
                  );
                  return (
                    Math.abs(w) < 0.001 && (w = 1),
                    (this.x = (v - h) / w),
                    (this.y = (c - p) / w),
                    (this.z = (d - u) / w),
                    (this.w = Math.acos((l + f + m - 1) / 2)),
                    this
                  );
                },
              },
              {
                key: "min",
                value: function (e) {
                  return (
                    (this.x = Math.min(this.x, e.x)),
                    (this.y = Math.min(this.y, e.y)),
                    (this.z = Math.min(this.z, e.z)),
                    (this.w = Math.min(this.w, e.w)),
                    this
                  );
                },
              },
              {
                key: "max",
                value: function (e) {
                  return (
                    (this.x = Math.max(this.x, e.x)),
                    (this.y = Math.max(this.y, e.y)),
                    (this.z = Math.max(this.z, e.z)),
                    (this.w = Math.max(this.w, e.w)),
                    this
                  );
                },
              },
              {
                key: "clamp",
                value: function (e, t) {
                  return (
                    (this.x = Math.max(e.x, Math.min(t.x, this.x))),
                    (this.y = Math.max(e.y, Math.min(t.y, this.y))),
                    (this.z = Math.max(e.z, Math.min(t.z, this.z))),
                    (this.w = Math.max(e.w, Math.min(t.w, this.w))),
                    this
                  );
                },
              },
              {
                key: "clampScalar",
                value: function (e, t) {
                  return (
                    (this.x = Math.max(e, Math.min(t, this.x))),
                    (this.y = Math.max(e, Math.min(t, this.y))),
                    (this.z = Math.max(e, Math.min(t, this.z))),
                    (this.w = Math.max(e, Math.min(t, this.w))),
                    this
                  );
                },
              },
              {
                key: "clampLength",
                value: function (e, t) {
                  var n = this.length();
                  return this.divideScalar(n || 1).multiplyScalar(
                    Math.max(e, Math.min(t, n))
                  );
                },
              },
              {
                key: "floor",
                value: function () {
                  return (
                    (this.x = Math.floor(this.x)),
                    (this.y = Math.floor(this.y)),
                    (this.z = Math.floor(this.z)),
                    (this.w = Math.floor(this.w)),
                    this
                  );
                },
              },
              {
                key: "ceil",
                value: function () {
                  return (
                    (this.x = Math.ceil(this.x)),
                    (this.y = Math.ceil(this.y)),
                    (this.z = Math.ceil(this.z)),
                    (this.w = Math.ceil(this.w)),
                    this
                  );
                },
              },
              {
                key: "round",
                value: function () {
                  return (
                    (this.x = Math.round(this.x)),
                    (this.y = Math.round(this.y)),
                    (this.z = Math.round(this.z)),
                    (this.w = Math.round(this.w)),
                    this
                  );
                },
              },
              {
                key: "roundToZero",
                value: function () {
                  return (
                    (this.x =
                      this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
                    (this.y =
                      this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
                    (this.z =
                      this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z)),
                    (this.w =
                      this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w)),
                    this
                  );
                },
              },
              {
                key: "negate",
                value: function () {
                  return (
                    (this.x = -this.x),
                    (this.y = -this.y),
                    (this.z = -this.z),
                    (this.w = -this.w),
                    this
                  );
                },
              },
              {
                key: "dot",
                value: function (e) {
                  return (
                    this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w
                  );
                },
              },
              {
                key: "lengthSq",
                value: function () {
                  return (
                    this.x * this.x +
                    this.y * this.y +
                    this.z * this.z +
                    this.w * this.w
                  );
                },
              },
              {
                key: "length",
                value: function () {
                  return Math.sqrt(
                    this.x * this.x +
                      this.y * this.y +
                      this.z * this.z +
                      this.w * this.w
                  );
                },
              },
              {
                key: "manhattanLength",
                value: function () {
                  return (
                    Math.abs(this.x) +
                    Math.abs(this.y) +
                    Math.abs(this.z) +
                    Math.abs(this.w)
                  );
                },
              },
              {
                key: "normalize",
                value: function () {
                  return this.divideScalar(this.length() || 1);
                },
              },
              {
                key: "setLength",
                value: function (e) {
                  return this.normalize().multiplyScalar(e);
                },
              },
              {
                key: "lerp",
                value: function (e, t) {
                  return (
                    (this.x += (e.x - this.x) * t),
                    (this.y += (e.y - this.y) * t),
                    (this.z += (e.z - this.z) * t),
                    (this.w += (e.w - this.w) * t),
                    this
                  );
                },
              },
              {
                key: "lerpVectors",
                value: function (e, t, n) {
                  return (
                    (this.x = e.x + (t.x - e.x) * n),
                    (this.y = e.y + (t.y - e.y) * n),
                    (this.z = e.z + (t.z - e.z) * n),
                    (this.w = e.w + (t.w - e.w) * n),
                    this
                  );
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return (
                    e.x === this.x &&
                    e.y === this.y &&
                    e.z === this.z &&
                    e.w === this.w
                  );
                },
              },
              {
                key: "fromArray",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0;
                  return (
                    (this.x = e[t]),
                    (this.y = e[t + 1]),
                    (this.z = e[t + 2]),
                    (this.w = e[t + 3]),
                    this
                  );
                },
              },
              {
                key: "toArray",
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : [],
                    t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0;
                  return (
                    (e[t] = this.x),
                    (e[t + 1] = this.y),
                    (e[t + 2] = this.z),
                    (e[t + 3] = this.w),
                    e
                  );
                },
              },
              {
                key: "fromBufferAttribute",
                value: function (e, t) {
                  return (
                    (this.x = e.getX(t)),
                    (this.y = e.getY(t)),
                    (this.z = e.getZ(t)),
                    (this.w = e.getW(t)),
                    this
                  );
                },
              },
              {
                key: "random",
                value: function () {
                  return (
                    (this.x = Math.random()),
                    (this.y = Math.random()),
                    (this.z = Math.random()),
                    (this.w = Math.random()),
                    this
                  );
                },
              },
              {
                key: Symbol.iterator,
                value: I().mark(function e() {
                  return I().wrap(
                    function (e) {
                      for (;;)
                        switch ((e.prev = e.next)) {
                          case 0:
                            return (e.next = 2), this.x;
                          case 2:
                            return (e.next = 4), this.y;
                          case 4:
                            return (e.next = 6), this.z;
                          case 6:
                            return (e.next = 8), this.w;
                          case 8:
                          case "end":
                            return e.stop();
                        }
                    },
                    e,
                    this
                  );
                }),
              },
            ]),
            t
          );
        })(),
        Nr = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : {};
            p(this, n),
              ((e = t.call(this)).isWebGLRenderTarget = !0),
              (e.width = r),
              (e.height = i),
              (e.depth = 1),
              (e.scissor = new Ir(0, 0, r, i)),
              (e.scissorTest = !1),
              (e.viewport = new Ir(0, 0, r, i));
            var o = { width: r, height: i, depth: 1 };
            return (
              void 0 !== a.encoding &&
                (br(
                  "THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."
                ),
                (a.colorSpace = a.encoding === hn ? bn : yn)),
              (e.texture = new Lr(
                o,
                a.mapping,
                a.wrapS,
                a.wrapT,
                a.magFilter,
                a.minFilter,
                a.format,
                a.type,
                a.anisotropy,
                a.colorSpace
              )),
              (e.texture.isRenderTargetTexture = !0),
              (e.texture.flipY = !1),
              (e.texture.generateMipmaps =
                void 0 !== a.generateMipmaps && a.generateMipmaps),
              (e.texture.internalFormat =
                void 0 !== a.internalFormat ? a.internalFormat : null),
              (e.texture.minFilter = void 0 !== a.minFilter ? a.minFilter : qe),
              (e.depthBuffer = void 0 === a.depthBuffer || a.depthBuffer),
              (e.stencilBuffer = void 0 !== a.stencilBuffer && a.stencilBuffer),
              (e.depthTexture =
                void 0 !== a.depthTexture ? a.depthTexture : null),
              (e.samples = void 0 !== a.samples ? a.samples : 0),
              e
            );
          }
          return (
            g(n, [
              {
                key: "setSize",
                value: function (e, t) {
                  var n =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : 1;
                  (this.width === e && this.height === t && this.depth === n) ||
                    ((this.width = e),
                    (this.height = t),
                    (this.depth = n),
                    (this.texture.image.width = e),
                    (this.texture.image.height = t),
                    (this.texture.image.depth = n),
                    this.dispose()),
                    this.viewport.set(0, 0, e, t),
                    this.scissor.set(0, 0, e, t);
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  (this.width = e.width),
                    (this.height = e.height),
                    (this.depth = e.depth),
                    this.scissor.copy(e.scissor),
                    (this.scissorTest = e.scissorTest),
                    this.viewport.copy(e.viewport),
                    (this.texture = e.texture.clone()),
                    (this.texture.isRenderTargetTexture = !0);
                  var t = Object.assign({}, e.texture.image);
                  return (
                    (this.texture.source = new Cr(t)),
                    (this.depthBuffer = e.depthBuffer),
                    (this.stencilBuffer = e.stencilBuffer),
                    null !== e.depthTexture &&
                      (this.depthTexture = e.depthTexture.clone()),
                    (this.samples = e.samples),
                    this
                  );
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.dispatchEvent({ type: "dispose" });
                },
              },
            ]),
            n
          );
        })(Kn),
        Or = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : null,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1;
            return (
              p(this, n),
              ((e = t.call(this, null)).isDataArrayTexture = !0),
              (e.image = { data: r, width: i, height: a, depth: o }),
              (e.magFilter = Ve),
              (e.minFilter = Ve),
              (e.wrapR = Ze),
              (e.generateMipmaps = !1),
              (e.flipY = !1),
              (e.unpackAlignment = 1),
              e
            );
          }
          return g(n);
        })(Lr),
        Dr = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1;
            return (
              p(this, n),
              ((e = t.call(this, r, i)).isWebGLArrayRenderTarget = !0),
              (e.depth = a),
              (e.texture = new Or(null, r, i, a)),
              (e.texture.isRenderTargetTexture = !0),
              e
            );
          }
          return g(n);
        })(Nr),
        Ur = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : null,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1;
            return (
              p(this, n),
              ((e = t.call(this, null)).isData3DTexture = !0),
              (e.image = { data: r, width: i, height: a, depth: o }),
              (e.magFilter = Ve),
              (e.minFilter = Ve),
              (e.wrapR = Ze),
              (e.generateMipmaps = !1),
              (e.flipY = !1),
              (e.unpackAlignment = 1),
              e
            );
          }
          return g(n);
        })(Lr),
        zr = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1;
            return (
              p(this, n),
              ((e = t.call(this, r, i)).isWebGL3DRenderTarget = !0),
              (e.depth = a),
              (e.texture = new Ur(null, r, i, a)),
              (e.texture.isRenderTargetTexture = !0),
              e
            );
          }
          return g(n);
        })(Nr),
        Fr = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : {};
            p(this, n),
              ((e = t.call(this, r, i, o)).isWebGLMultipleRenderTargets = !0);
            var s = e.texture;
            e.texture = [];
            for (var l = 0; l < a; l++)
              (e.texture[l] = s.clone()),
                (e.texture[l].isRenderTargetTexture = !0);
            return e;
          }
          return (
            g(n, [
              {
                key: "setSize",
                value: function (e, t) {
                  var n =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : 1;
                  if (
                    this.width !== e ||
                    this.height !== t ||
                    this.depth !== n
                  ) {
                    (this.width = e), (this.height = t), (this.depth = n);
                    for (var r = 0, i = this.texture.length; r < i; r++)
                      (this.texture[r].image.width = e),
                        (this.texture[r].image.height = t),
                        (this.texture[r].image.depth = n);
                    this.dispose();
                  }
                  return (
                    this.viewport.set(0, 0, e, t),
                    this.scissor.set(0, 0, e, t),
                    this
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  this.dispose(),
                    (this.width = e.width),
                    (this.height = e.height),
                    (this.depth = e.depth),
                    this.scissor.copy(e.scissor),
                    (this.scissorTest = e.scissorTest),
                    this.viewport.copy(e.viewport),
                    (this.depthBuffer = e.depthBuffer),
                    (this.stencilBuffer = e.stencilBuffer),
                    null !== e.depthTexture &&
                      (this.depthTexture = e.depthTexture.clone()),
                    (this.texture.length = 0);
                  for (var t = 0, n = e.texture.length; t < n; t++)
                    (this.texture[t] = e.texture[t].clone()),
                      (this.texture[t].isRenderTargetTexture = !0);
                  return this;
                },
              },
            ]),
            n
          );
        })(Nr),
        Br = (function (e) {
          function t() {
            var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0,
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0,
              i =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1;
            p(this, t),
              (this.isQuaternion = !0),
              (this._x = e),
              (this._y = n),
              (this._z = r),
              (this._w = i);
          }
          return (
            g(
              t,
              [
                {
                  key: "x",
                  get: function () {
                    return this._x;
                  },
                  set: function (e) {
                    (this._x = e), this._onChangeCallback();
                  },
                },
                {
                  key: "y",
                  get: function () {
                    return this._y;
                  },
                  set: function (e) {
                    (this._y = e), this._onChangeCallback();
                  },
                },
                {
                  key: "z",
                  get: function () {
                    return this._z;
                  },
                  set: function (e) {
                    (this._z = e), this._onChangeCallback();
                  },
                },
                {
                  key: "w",
                  get: function () {
                    return this._w;
                  },
                  set: function (e) {
                    (this._w = e), this._onChangeCallback();
                  },
                },
                {
                  key: "set",
                  value: function (e, t, n, r) {
                    return (
                      (this._x = e),
                      (this._y = t),
                      (this._z = n),
                      (this._w = r),
                      this._onChangeCallback(),
                      this
                    );
                  },
                },
                {
                  key: "clone",
                  value: function () {
                    return new this.constructor(
                      this._x,
                      this._y,
                      this._z,
                      this._w
                    );
                  },
                },
                {
                  key: "copy",
                  value: function (e) {
                    return (
                      (this._x = e.x),
                      (this._y = e.y),
                      (this._z = e.z),
                      (this._w = e.w),
                      this._onChangeCallback(),
                      this
                    );
                  },
                },
                {
                  key: "setFromEuler",
                  value: function (e, t) {
                    var n = e._x,
                      r = e._y,
                      i = e._z,
                      a = e._order,
                      o = Math.cos,
                      s = Math.sin,
                      l = o(n / 2),
                      u = o(r / 2),
                      c = o(i / 2),
                      d = s(n / 2),
                      f = s(r / 2),
                      h = s(i / 2);
                    switch (a) {
                      case "XYZ":
                        (this._x = d * u * c + l * f * h),
                          (this._y = l * f * c - d * u * h),
                          (this._z = l * u * h + d * f * c),
                          (this._w = l * u * c - d * f * h);
                        break;
                      case "YXZ":
                        (this._x = d * u * c + l * f * h),
                          (this._y = l * f * c - d * u * h),
                          (this._z = l * u * h - d * f * c),
                          (this._w = l * u * c + d * f * h);
                        break;
                      case "ZXY":
                        (this._x = d * u * c - l * f * h),
                          (this._y = l * f * c + d * u * h),
                          (this._z = l * u * h + d * f * c),
                          (this._w = l * u * c - d * f * h);
                        break;
                      case "ZYX":
                        (this._x = d * u * c - l * f * h),
                          (this._y = l * f * c + d * u * h),
                          (this._z = l * u * h - d * f * c),
                          (this._w = l * u * c + d * f * h);
                        break;
                      case "YZX":
                        (this._x = d * u * c + l * f * h),
                          (this._y = l * f * c + d * u * h),
                          (this._z = l * u * h - d * f * c),
                          (this._w = l * u * c - d * f * h);
                        break;
                      case "XZY":
                        (this._x = d * u * c - l * f * h),
                          (this._y = l * f * c - d * u * h),
                          (this._z = l * u * h + d * f * c),
                          (this._w = l * u * c + d * f * h);
                        break;
                      default:
                        console.warn(
                          "THREE.Quaternion: .setFromEuler() encountered an unknown order: " +
                            a
                        );
                    }
                    return !1 !== t && this._onChangeCallback(), this;
                  },
                },
                {
                  key: "setFromAxisAngle",
                  value: function (e, t) {
                    var n = t / 2,
                      r = Math.sin(n);
                    return (
                      (this._x = e.x * r),
                      (this._y = e.y * r),
                      (this._z = e.z * r),
                      (this._w = Math.cos(n)),
                      this._onChangeCallback(),
                      this
                    );
                  },
                },
                {
                  key: "setFromRotationMatrix",
                  value: function (e) {
                    var t = e.elements,
                      n = t[0],
                      r = t[4],
                      i = t[8],
                      a = t[1],
                      o = t[5],
                      s = t[9],
                      l = t[2],
                      u = t[6],
                      c = t[10],
                      d = n + o + c;
                    if (d > 0) {
                      var f = 0.5 / Math.sqrt(d + 1);
                      (this._w = 0.25 / f),
                        (this._x = (u - s) * f),
                        (this._y = (i - l) * f),
                        (this._z = (a - r) * f);
                    } else if (n > o && n > c) {
                      var h = 2 * Math.sqrt(1 + n - o - c);
                      (this._w = (u - s) / h),
                        (this._x = 0.25 * h),
                        (this._y = (r + a) / h),
                        (this._z = (i + l) / h);
                    } else if (o > c) {
                      var p = 2 * Math.sqrt(1 + o - n - c);
                      (this._w = (i - l) / p),
                        (this._x = (r + a) / p),
                        (this._y = 0.25 * p),
                        (this._z = (s + u) / p);
                    } else {
                      var v = 2 * Math.sqrt(1 + c - n - o);
                      (this._w = (a - r) / v),
                        (this._x = (i + l) / v),
                        (this._y = (s + u) / v),
                        (this._z = 0.25 * v);
                    }
                    return this._onChangeCallback(), this;
                  },
                },
                {
                  key: "setFromUnitVectors",
                  value: function (e, t) {
                    var n = e.dot(t) + 1;
                    return (
                      n < Number.EPSILON
                        ? ((n = 0),
                          Math.abs(e.x) > Math.abs(e.z)
                            ? ((this._x = -e.y),
                              (this._y = e.x),
                              (this._z = 0),
                              (this._w = n))
                            : ((this._x = 0),
                              (this._y = -e.z),
                              (this._z = e.y),
                              (this._w = n)))
                        : ((this._x = e.y * t.z - e.z * t.y),
                          (this._y = e.z * t.x - e.x * t.z),
                          (this._z = e.x * t.y - e.y * t.x),
                          (this._w = n)),
                      this.normalize()
                    );
                  },
                },
                {
                  key: "angleTo",
                  value: function (e) {
                    return 2 * Math.acos(Math.abs(nr(this.dot(e), -1, 1)));
                  },
                },
                {
                  key: "rotateTowards",
                  value: function (e, t) {
                    var n = this.angleTo(e);
                    if (0 === n) return this;
                    var r = Math.min(1, t / n);
                    return this.slerp(e, r), this;
                  },
                },
                {
                  key: "identity",
                  value: function () {
                    return this.set(0, 0, 0, 1);
                  },
                },
                {
                  key: "invert",
                  value: function () {
                    return this.conjugate();
                  },
                },
                {
                  key: "conjugate",
                  value: function () {
                    return (
                      (this._x *= -1),
                      (this._y *= -1),
                      (this._z *= -1),
                      this._onChangeCallback(),
                      this
                    );
                  },
                },
                {
                  key: "dot",
                  value: function (e) {
                    return (
                      this._x * e._x +
                      this._y * e._y +
                      this._z * e._z +
                      this._w * e._w
                    );
                  },
                },
                {
                  key: "lengthSq",
                  value: function () {
                    return (
                      this._x * this._x +
                      this._y * this._y +
                      this._z * this._z +
                      this._w * this._w
                    );
                  },
                },
                {
                  key: "length",
                  value: function () {
                    return Math.sqrt(
                      this._x * this._x +
                        this._y * this._y +
                        this._z * this._z +
                        this._w * this._w
                    );
                  },
                },
                {
                  key: "normalize",
                  value: function () {
                    var e = this.length();
                    return (
                      0 === e
                        ? ((this._x = 0),
                          (this._y = 0),
                          (this._z = 0),
                          (this._w = 1))
                        : ((e = 1 / e),
                          (this._x = this._x * e),
                          (this._y = this._y * e),
                          (this._z = this._z * e),
                          (this._w = this._w * e)),
                      this._onChangeCallback(),
                      this
                    );
                  },
                },
                {
                  key: "multiply",
                  value: function (e) {
                    return this.multiplyQuaternions(this, e);
                  },
                },
                {
                  key: "premultiply",
                  value: function (e) {
                    return this.multiplyQuaternions(e, this);
                  },
                },
                {
                  key: "multiplyQuaternions",
                  value: function (e, t) {
                    var n = e._x,
                      r = e._y,
                      i = e._z,
                      a = e._w,
                      o = t._x,
                      s = t._y,
                      l = t._z,
                      u = t._w;
                    return (
                      (this._x = n * u + a * o + r * l - i * s),
                      (this._y = r * u + a * s + i * o - n * l),
                      (this._z = i * u + a * l + n * s - r * o),
                      (this._w = a * u - n * o - r * s - i * l),
                      this._onChangeCallback(),
                      this
                    );
                  },
                },
                {
                  key: "slerp",
                  value: function (e, t) {
                    if (0 === t) return this;
                    if (1 === t) return this.copy(e);
                    var n = this._x,
                      r = this._y,
                      i = this._z,
                      a = this._w,
                      o = a * e._w + n * e._x + r * e._y + i * e._z;
                    if (
                      (o < 0
                        ? ((this._w = -e._w),
                          (this._x = -e._x),
                          (this._y = -e._y),
                          (this._z = -e._z),
                          (o = -o))
                        : this.copy(e),
                      o >= 1)
                    )
                      return (
                        (this._w = a),
                        (this._x = n),
                        (this._y = r),
                        (this._z = i),
                        this
                      );
                    var s = 1 - o * o;
                    if (s <= Number.EPSILON) {
                      var l = 1 - t;
                      return (
                        (this._w = l * a + t * this._w),
                        (this._x = l * n + t * this._x),
                        (this._y = l * r + t * this._y),
                        (this._z = l * i + t * this._z),
                        this.normalize(),
                        this._onChangeCallback(),
                        this
                      );
                    }
                    var u = Math.sqrt(s),
                      c = Math.atan2(u, o),
                      d = Math.sin((1 - t) * c) / u,
                      f = Math.sin(t * c) / u;
                    return (
                      (this._w = a * d + this._w * f),
                      (this._x = n * d + this._x * f),
                      (this._y = r * d + this._y * f),
                      (this._z = i * d + this._z * f),
                      this._onChangeCallback(),
                      this
                    );
                  },
                },
                {
                  key: "slerpQuaternions",
                  value: function (e, t, n) {
                    return this.copy(e).slerp(t, n);
                  },
                },
                {
                  key: "random",
                  value: function () {
                    var e = Math.random(),
                      t = Math.sqrt(1 - e),
                      n = Math.sqrt(e),
                      r = 2 * Math.PI * Math.random(),
                      i = 2 * Math.PI * Math.random();
                    return this.set(
                      t * Math.cos(r),
                      n * Math.sin(i),
                      n * Math.cos(i),
                      t * Math.sin(r)
                    );
                  },
                },
                {
                  key: "equals",
                  value: function (e) {
                    return (
                      e._x === this._x &&
                      e._y === this._y &&
                      e._z === this._z &&
                      e._w === this._w
                    );
                  },
                },
                {
                  key: "fromArray",
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0;
                    return (
                      (this._x = e[t]),
                      (this._y = e[t + 1]),
                      (this._z = e[t + 2]),
                      (this._w = e[t + 3]),
                      this._onChangeCallback(),
                      this
                    );
                  },
                },
                {
                  key: "toArray",
                  value: function () {
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : [],
                      t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : 0;
                    return (
                      (e[t] = this._x),
                      (e[t + 1] = this._y),
                      (e[t + 2] = this._z),
                      (e[t + 3] = this._w),
                      e
                    );
                  },
                },
                {
                  key: "fromBufferAttribute",
                  value: function (e, t) {
                    return (
                      (this._x = e.getX(t)),
                      (this._y = e.getY(t)),
                      (this._z = e.getZ(t)),
                      (this._w = e.getW(t)),
                      this
                    );
                  },
                },
                {
                  key: "toJSON",
                  value: function () {
                    return this.toArray();
                  },
                },
                {
                  key: "_onChange",
                  value: function (e) {
                    return (this._onChangeCallback = e), this;
                  },
                },
                { key: "_onChangeCallback", value: function () {} },
                {
                  key: Symbol.iterator,
                  value: I().mark(function e() {
                    return I().wrap(
                      function (e) {
                        for (;;)
                          switch ((e.prev = e.next)) {
                            case 0:
                              return (e.next = 2), this._x;
                            case 2:
                              return (e.next = 4), this._y;
                            case 4:
                              return (e.next = 6), this._z;
                            case 6:
                              return (e.next = 8), this._w;
                            case 8:
                            case "end":
                              return e.stop();
                          }
                      },
                      e,
                      this
                    );
                  }),
                },
              ],
              [
                {
                  key: "slerpFlat",
                  value: function (e, t, n, r, i, a, o) {
                    var s = n[r + 0],
                      l = n[r + 1],
                      u = n[r + 2],
                      c = n[r + 3],
                      d = i[a + 0],
                      f = i[a + 1],
                      h = i[a + 2],
                      p = i[a + 3];
                    if (0 === o)
                      return (
                        (e[t + 0] = s),
                        (e[t + 1] = l),
                        (e[t + 2] = u),
                        void (e[t + 3] = c)
                      );
                    if (1 === o)
                      return (
                        (e[t + 0] = d),
                        (e[t + 1] = f),
                        (e[t + 2] = h),
                        void (e[t + 3] = p)
                      );
                    if (c !== p || s !== d || l !== f || u !== h) {
                      var v = 1 - o,
                        m = s * d + l * f + u * h + c * p,
                        g = m >= 0 ? 1 : -1,
                        y = 1 - m * m;
                      if (y > Number.EPSILON) {
                        var b = Math.sqrt(y),
                          _ = Math.atan2(b, m * g);
                        (v = Math.sin(v * _) / b), (o = Math.sin(o * _) / b);
                      }
                      var x = o * g;
                      if (
                        ((s = s * v + d * x),
                        (l = l * v + f * x),
                        (u = u * v + h * x),
                        (c = c * v + p * x),
                        v === 1 - o)
                      ) {
                        var S = 1 / Math.sqrt(s * s + l * l + u * u + c * c);
                        (s *= S), (l *= S), (u *= S), (c *= S);
                      }
                    }
                    (e[t] = s), (e[t + 1] = l), (e[t + 2] = u), (e[t + 3] = c);
                  },
                },
                {
                  key: "multiplyQuaternionsFlat",
                  value: function (e, t, n, r, i, a) {
                    var o = n[r],
                      s = n[r + 1],
                      l = n[r + 2],
                      u = n[r + 3],
                      c = i[a],
                      d = i[a + 1],
                      f = i[a + 2],
                      h = i[a + 3];
                    return (
                      (e[t] = o * h + u * c + s * f - l * d),
                      (e[t + 1] = s * h + u * d + l * c - o * f),
                      (e[t + 2] = l * h + u * f + o * d - s * c),
                      (e[t + 3] = u * h - o * c - s * d - l * f),
                      e
                    );
                  },
                },
              ]
            ),
            t
          );
        })(),
        Zr = (function (e) {
          function t() {
            var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0,
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0;
            p(this, t),
              (t.prototype.isVector3 = !0),
              (this.x = e),
              (this.y = n),
              (this.z = r);
          }
          return (
            g(t, [
              {
                key: "set",
                value: function (e, t, n) {
                  return (
                    void 0 === n && (n = this.z),
                    (this.x = e),
                    (this.y = t),
                    (this.z = n),
                    this
                  );
                },
              },
              {
                key: "setScalar",
                value: function (e) {
                  return (this.x = e), (this.y = e), (this.z = e), this;
                },
              },
              {
                key: "setX",
                value: function (e) {
                  return (this.x = e), this;
                },
              },
              {
                key: "setY",
                value: function (e) {
                  return (this.y = e), this;
                },
              },
              {
                key: "setZ",
                value: function (e) {
                  return (this.z = e), this;
                },
              },
              {
                key: "setComponent",
                value: function (e, t) {
                  switch (e) {
                    case 0:
                      this.x = t;
                      break;
                    case 1:
                      this.y = t;
                      break;
                    case 2:
                      this.z = t;
                      break;
                    default:
                      throw new Error("index is out of range: " + e);
                  }
                  return this;
                },
              },
              {
                key: "getComponent",
                value: function (e) {
                  switch (e) {
                    case 0:
                      return this.x;
                    case 1:
                      return this.y;
                    case 2:
                      return this.z;
                    default:
                      throw new Error("index is out of range: " + e);
                  }
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor(this.x, this.y, this.z);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (this.x = e.x), (this.y = e.y), (this.z = e.z), this;
                },
              },
              {
                key: "add",
                value: function (e) {
                  return (
                    (this.x += e.x), (this.y += e.y), (this.z += e.z), this
                  );
                },
              },
              {
                key: "addScalar",
                value: function (e) {
                  return (this.x += e), (this.y += e), (this.z += e), this;
                },
              },
              {
                key: "addVectors",
                value: function (e, t) {
                  return (
                    (this.x = e.x + t.x),
                    (this.y = e.y + t.y),
                    (this.z = e.z + t.z),
                    this
                  );
                },
              },
              {
                key: "addScaledVector",
                value: function (e, t) {
                  return (
                    (this.x += e.x * t),
                    (this.y += e.y * t),
                    (this.z += e.z * t),
                    this
                  );
                },
              },
              {
                key: "sub",
                value: function (e) {
                  return (
                    (this.x -= e.x), (this.y -= e.y), (this.z -= e.z), this
                  );
                },
              },
              {
                key: "subScalar",
                value: function (e) {
                  return (this.x -= e), (this.y -= e), (this.z -= e), this;
                },
              },
              {
                key: "subVectors",
                value: function (e, t) {
                  return (
                    (this.x = e.x - t.x),
                    (this.y = e.y - t.y),
                    (this.z = e.z - t.z),
                    this
                  );
                },
              },
              {
                key: "multiply",
                value: function (e) {
                  return (
                    (this.x *= e.x), (this.y *= e.y), (this.z *= e.z), this
                  );
                },
              },
              {
                key: "multiplyScalar",
                value: function (e) {
                  return (this.x *= e), (this.y *= e), (this.z *= e), this;
                },
              },
              {
                key: "multiplyVectors",
                value: function (e, t) {
                  return (
                    (this.x = e.x * t.x),
                    (this.y = e.y * t.y),
                    (this.z = e.z * t.z),
                    this
                  );
                },
              },
              {
                key: "applyEuler",
                value: function (e) {
                  return this.applyQuaternion(Vr.setFromEuler(e));
                },
              },
              {
                key: "applyAxisAngle",
                value: function (e, t) {
                  return this.applyQuaternion(Vr.setFromAxisAngle(e, t));
                },
              },
              {
                key: "applyMatrix3",
                value: function (e) {
                  var t = this.x,
                    n = this.y,
                    r = this.z,
                    i = e.elements;
                  return (
                    (this.x = i[0] * t + i[3] * n + i[6] * r),
                    (this.y = i[1] * t + i[4] * n + i[7] * r),
                    (this.z = i[2] * t + i[5] * n + i[8] * r),
                    this
                  );
                },
              },
              {
                key: "applyNormalMatrix",
                value: function (e) {
                  return this.applyMatrix3(e).normalize();
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  var t = this.x,
                    n = this.y,
                    r = this.z,
                    i = e.elements,
                    a = 1 / (i[3] * t + i[7] * n + i[11] * r + i[15]);
                  return (
                    (this.x = (i[0] * t + i[4] * n + i[8] * r + i[12]) * a),
                    (this.y = (i[1] * t + i[5] * n + i[9] * r + i[13]) * a),
                    (this.z = (i[2] * t + i[6] * n + i[10] * r + i[14]) * a),
                    this
                  );
                },
              },
              {
                key: "applyQuaternion",
                value: function (e) {
                  var t = this.x,
                    n = this.y,
                    r = this.z,
                    i = e.x,
                    a = e.y,
                    o = e.z,
                    s = e.w,
                    l = s * t + a * r - o * n,
                    u = s * n + o * t - i * r,
                    c = s * r + i * n - a * t,
                    d = -i * t - a * n - o * r;
                  return (
                    (this.x = l * s + d * -i + u * -o - c * -a),
                    (this.y = u * s + d * -a + c * -i - l * -o),
                    (this.z = c * s + d * -o + l * -a - u * -i),
                    this
                  );
                },
              },
              {
                key: "project",
                value: function (e) {
                  return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(
                    e.projectionMatrix
                  );
                },
              },
              {
                key: "unproject",
                value: function (e) {
                  return this.applyMatrix4(
                    e.projectionMatrixInverse
                  ).applyMatrix4(e.matrixWorld);
                },
              },
              {
                key: "transformDirection",
                value: function (e) {
                  var t = this.x,
                    n = this.y,
                    r = this.z,
                    i = e.elements;
                  return (
                    (this.x = i[0] * t + i[4] * n + i[8] * r),
                    (this.y = i[1] * t + i[5] * n + i[9] * r),
                    (this.z = i[2] * t + i[6] * n + i[10] * r),
                    this.normalize()
                  );
                },
              },
              {
                key: "divide",
                value: function (e) {
                  return (
                    (this.x /= e.x), (this.y /= e.y), (this.z /= e.z), this
                  );
                },
              },
              {
                key: "divideScalar",
                value: function (e) {
                  return this.multiplyScalar(1 / e);
                },
              },
              {
                key: "min",
                value: function (e) {
                  return (
                    (this.x = Math.min(this.x, e.x)),
                    (this.y = Math.min(this.y, e.y)),
                    (this.z = Math.min(this.z, e.z)),
                    this
                  );
                },
              },
              {
                key: "max",
                value: function (e) {
                  return (
                    (this.x = Math.max(this.x, e.x)),
                    (this.y = Math.max(this.y, e.y)),
                    (this.z = Math.max(this.z, e.z)),
                    this
                  );
                },
              },
              {
                key: "clamp",
                value: function (e, t) {
                  return (
                    (this.x = Math.max(e.x, Math.min(t.x, this.x))),
                    (this.y = Math.max(e.y, Math.min(t.y, this.y))),
                    (this.z = Math.max(e.z, Math.min(t.z, this.z))),
                    this
                  );
                },
              },
              {
                key: "clampScalar",
                value: function (e, t) {
                  return (
                    (this.x = Math.max(e, Math.min(t, this.x))),
                    (this.y = Math.max(e, Math.min(t, this.y))),
                    (this.z = Math.max(e, Math.min(t, this.z))),
                    this
                  );
                },
              },
              {
                key: "clampLength",
                value: function (e, t) {
                  var n = this.length();
                  return this.divideScalar(n || 1).multiplyScalar(
                    Math.max(e, Math.min(t, n))
                  );
                },
              },
              {
                key: "floor",
                value: function () {
                  return (
                    (this.x = Math.floor(this.x)),
                    (this.y = Math.floor(this.y)),
                    (this.z = Math.floor(this.z)),
                    this
                  );
                },
              },
              {
                key: "ceil",
                value: function () {
                  return (
                    (this.x = Math.ceil(this.x)),
                    (this.y = Math.ceil(this.y)),
                    (this.z = Math.ceil(this.z)),
                    this
                  );
                },
              },
              {
                key: "round",
                value: function () {
                  return (
                    (this.x = Math.round(this.x)),
                    (this.y = Math.round(this.y)),
                    (this.z = Math.round(this.z)),
                    this
                  );
                },
              },
              {
                key: "roundToZero",
                value: function () {
                  return (
                    (this.x =
                      this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
                    (this.y =
                      this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
                    (this.z =
                      this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z)),
                    this
                  );
                },
              },
              {
                key: "negate",
                value: function () {
                  return (
                    (this.x = -this.x),
                    (this.y = -this.y),
                    (this.z = -this.z),
                    this
                  );
                },
              },
              {
                key: "dot",
                value: function (e) {
                  return this.x * e.x + this.y * e.y + this.z * e.z;
                },
              },
              {
                key: "lengthSq",
                value: function () {
                  return this.x * this.x + this.y * this.y + this.z * this.z;
                },
              },
              {
                key: "length",
                value: function () {
                  return Math.sqrt(
                    this.x * this.x + this.y * this.y + this.z * this.z
                  );
                },
              },
              {
                key: "manhattanLength",
                value: function () {
                  return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
                },
              },
              {
                key: "normalize",
                value: function () {
                  return this.divideScalar(this.length() || 1);
                },
              },
              {
                key: "setLength",
                value: function (e) {
                  return this.normalize().multiplyScalar(e);
                },
              },
              {
                key: "lerp",
                value: function (e, t) {
                  return (
                    (this.x += (e.x - this.x) * t),
                    (this.y += (e.y - this.y) * t),
                    (this.z += (e.z - this.z) * t),
                    this
                  );
                },
              },
              {
                key: "lerpVectors",
                value: function (e, t, n) {
                  return (
                    (this.x = e.x + (t.x - e.x) * n),
                    (this.y = e.y + (t.y - e.y) * n),
                    (this.z = e.z + (t.z - e.z) * n),
                    this
                  );
                },
              },
              {
                key: "cross",
                value: function (e) {
                  return this.crossVectors(this, e);
                },
              },
              {
                key: "crossVectors",
                value: function (e, t) {
                  var n = e.x,
                    r = e.y,
                    i = e.z,
                    a = t.x,
                    o = t.y,
                    s = t.z;
                  return (
                    (this.x = r * s - i * o),
                    (this.y = i * a - n * s),
                    (this.z = n * o - r * a),
                    this
                  );
                },
              },
              {
                key: "projectOnVector",
                value: function (e) {
                  var t = e.lengthSq();
                  if (0 === t) return this.set(0, 0, 0);
                  var n = e.dot(this) / t;
                  return this.copy(e).multiplyScalar(n);
                },
              },
              {
                key: "projectOnPlane",
                value: function (e) {
                  return Hr.copy(this).projectOnVector(e), this.sub(Hr);
                },
              },
              {
                key: "reflect",
                value: function (e) {
                  return this.sub(Hr.copy(e).multiplyScalar(2 * this.dot(e)));
                },
              },
              {
                key: "angleTo",
                value: function (e) {
                  var t = Math.sqrt(this.lengthSq() * e.lengthSq());
                  if (0 === t) return Math.PI / 2;
                  var n = this.dot(e) / t;
                  return Math.acos(nr(n, -1, 1));
                },
              },
              {
                key: "distanceTo",
                value: function (e) {
                  return Math.sqrt(this.distanceToSquared(e));
                },
              },
              {
                key: "distanceToSquared",
                value: function (e) {
                  var t = this.x - e.x,
                    n = this.y - e.y,
                    r = this.z - e.z;
                  return t * t + n * n + r * r;
                },
              },
              {
                key: "manhattanDistanceTo",
                value: function (e) {
                  return (
                    Math.abs(this.x - e.x) +
                    Math.abs(this.y - e.y) +
                    Math.abs(this.z - e.z)
                  );
                },
              },
              {
                key: "setFromSpherical",
                value: function (e) {
                  return this.setFromSphericalCoords(e.radius, e.phi, e.theta);
                },
              },
              {
                key: "setFromSphericalCoords",
                value: function (e, t, n) {
                  var r = Math.sin(t) * e;
                  return (
                    (this.x = r * Math.sin(n)),
                    (this.y = Math.cos(t) * e),
                    (this.z = r * Math.cos(n)),
                    this
                  );
                },
              },
              {
                key: "setFromCylindrical",
                value: function (e) {
                  return this.setFromCylindricalCoords(e.radius, e.theta, e.y);
                },
              },
              {
                key: "setFromCylindricalCoords",
                value: function (e, t, n) {
                  return (
                    (this.x = e * Math.sin(t)),
                    (this.y = n),
                    (this.z = e * Math.cos(t)),
                    this
                  );
                },
              },
              {
                key: "setFromMatrixPosition",
                value: function (e) {
                  var t = e.elements;
                  return (
                    (this.x = t[12]), (this.y = t[13]), (this.z = t[14]), this
                  );
                },
              },
              {
                key: "setFromMatrixScale",
                value: function (e) {
                  var t = this.setFromMatrixColumn(e, 0).length(),
                    n = this.setFromMatrixColumn(e, 1).length(),
                    r = this.setFromMatrixColumn(e, 2).length();
                  return (this.x = t), (this.y = n), (this.z = r), this;
                },
              },
              {
                key: "setFromMatrixColumn",
                value: function (e, t) {
                  return this.fromArray(e.elements, 4 * t);
                },
              },
              {
                key: "setFromMatrix3Column",
                value: function (e, t) {
                  return this.fromArray(e.elements, 3 * t);
                },
              },
              {
                key: "setFromEuler",
                value: function (e) {
                  return (
                    (this.x = e._x), (this.y = e._y), (this.z = e._z), this
                  );
                },
              },
              {
                key: "setFromColor",
                value: function (e) {
                  return (this.x = e.r), (this.y = e.g), (this.z = e.b), this;
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return e.x === this.x && e.y === this.y && e.z === this.z;
                },
              },
              {
                key: "fromArray",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0;
                  return (
                    (this.x = e[t]),
                    (this.y = e[t + 1]),
                    (this.z = e[t + 2]),
                    this
                  );
                },
              },
              {
                key: "toArray",
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : [],
                    t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0;
                  return (
                    (e[t] = this.x), (e[t + 1] = this.y), (e[t + 2] = this.z), e
                  );
                },
              },
              {
                key: "fromBufferAttribute",
                value: function (e, t) {
                  return (
                    (this.x = e.getX(t)),
                    (this.y = e.getY(t)),
                    (this.z = e.getZ(t)),
                    this
                  );
                },
              },
              {
                key: "random",
                value: function () {
                  return (
                    (this.x = Math.random()),
                    (this.y = Math.random()),
                    (this.z = Math.random()),
                    this
                  );
                },
              },
              {
                key: "randomDirection",
                value: function () {
                  var e = 2 * (Math.random() - 0.5),
                    t = Math.random() * Math.PI * 2,
                    n = Math.sqrt(1 - Math.pow(e, 2));
                  return (
                    (this.x = n * Math.cos(t)),
                    (this.y = n * Math.sin(t)),
                    (this.z = e),
                    this
                  );
                },
              },
              {
                key: Symbol.iterator,
                value: I().mark(function e() {
                  return I().wrap(
                    function (e) {
                      for (;;)
                        switch ((e.prev = e.next)) {
                          case 0:
                            return (e.next = 2), this.x;
                          case 2:
                            return (e.next = 4), this.y;
                          case 4:
                            return (e.next = 6), this.z;
                          case 6:
                          case "end":
                            return e.stop();
                        }
                    },
                    e,
                    this
                  );
                }),
              },
            ]),
            t
          );
        })(),
        Hr = new Zr(),
        Vr = new Br(),
        Gr = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Zr(1 / 0, 1 / 0, 1 / 0),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new Zr(-1 / 0, -1 / 0, -1 / 0);
            p(this, e), (this.isBox3 = !0), (this.min = t), (this.max = n);
          }
          return (
            g(e, [
              {
                key: "set",
                value: function (e, t) {
                  return this.min.copy(e), this.max.copy(t), this;
                },
              },
              {
                key: "setFromArray",
                value: function (e) {
                  this.makeEmpty();
                  for (var t = 0, n = e.length; t < n; t += 3)
                    this.expandByPoint(jr.fromArray(e, t));
                  return this;
                },
              },
              {
                key: "setFromBufferAttribute",
                value: function (e) {
                  this.makeEmpty();
                  for (var t = 0, n = e.count; t < n; t++)
                    this.expandByPoint(jr.fromBufferAttribute(e, t));
                  return this;
                },
              },
              {
                key: "setFromPoints",
                value: function (e) {
                  this.makeEmpty();
                  for (var t = 0, n = e.length; t < n; t++)
                    this.expandByPoint(e[t]);
                  return this;
                },
              },
              {
                key: "setFromCenterAndSize",
                value: function (e, t) {
                  var n = jr.copy(t).multiplyScalar(0.5);
                  return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
                },
              },
              {
                key: "setFromObject",
                value: function (e) {
                  var t =
                    arguments.length > 1 &&
                    void 0 !== arguments[1] &&
                    arguments[1];
                  return this.makeEmpty(), this.expandByObject(e, t);
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return this.min.copy(e.min), this.max.copy(e.max), this;
                },
              },
              {
                key: "makeEmpty",
                value: function () {
                  return (
                    (this.min.x = this.min.y = this.min.z = 1 / 0),
                    (this.max.x = this.max.y = this.max.z = -1 / 0),
                    this
                  );
                },
              },
              {
                key: "isEmpty",
                value: function () {
                  return (
                    this.max.x < this.min.x ||
                    this.max.y < this.min.y ||
                    this.max.z < this.min.z
                  );
                },
              },
              {
                key: "getCenter",
                value: function (e) {
                  return this.isEmpty()
                    ? e.set(0, 0, 0)
                    : e.addVectors(this.min, this.max).multiplyScalar(0.5);
                },
              },
              {
                key: "getSize",
                value: function (e) {
                  return this.isEmpty()
                    ? e.set(0, 0, 0)
                    : e.subVectors(this.max, this.min);
                },
              },
              {
                key: "expandByPoint",
                value: function (e) {
                  return this.min.min(e), this.max.max(e), this;
                },
              },
              {
                key: "expandByVector",
                value: function (e) {
                  return this.min.sub(e), this.max.add(e), this;
                },
              },
              {
                key: "expandByScalar",
                value: function (e) {
                  return this.min.addScalar(-e), this.max.addScalar(e), this;
                },
              },
              {
                key: "expandByObject",
                value: function (e) {
                  var t =
                    arguments.length > 1 &&
                    void 0 !== arguments[1] &&
                    arguments[1];
                  if ((e.updateWorldMatrix(!1, !1), void 0 !== e.boundingBox))
                    null === e.boundingBox && e.computeBoundingBox(),
                      Xr.copy(e.boundingBox),
                      Xr.applyMatrix4(e.matrixWorld),
                      this.union(Xr);
                  else {
                    var n = e.geometry;
                    if (void 0 !== n)
                      if (
                        t &&
                        void 0 !== n.attributes &&
                        void 0 !== n.attributes.position
                      )
                        for (
                          var r = n.attributes.position, i = 0, a = r.count;
                          i < a;
                          i++
                        )
                          jr
                            .fromBufferAttribute(r, i)
                            .applyMatrix4(e.matrixWorld),
                            this.expandByPoint(jr);
                      else
                        null === n.boundingBox && n.computeBoundingBox(),
                          Xr.copy(n.boundingBox),
                          Xr.applyMatrix4(e.matrixWorld),
                          this.union(Xr);
                  }
                  for (var o = e.children, s = 0, l = o.length; s < l; s++)
                    this.expandByObject(o[s], t);
                  return this;
                },
              },
              {
                key: "containsPoint",
                value: function (e) {
                  return !(
                    e.x < this.min.x ||
                    e.x > this.max.x ||
                    e.y < this.min.y ||
                    e.y > this.max.y ||
                    e.z < this.min.z ||
                    e.z > this.max.z
                  );
                },
              },
              {
                key: "containsBox",
                value: function (e) {
                  return (
                    this.min.x <= e.min.x &&
                    e.max.x <= this.max.x &&
                    this.min.y <= e.min.y &&
                    e.max.y <= this.max.y &&
                    this.min.z <= e.min.z &&
                    e.max.z <= this.max.z
                  );
                },
              },
              {
                key: "getParameter",
                value: function (e, t) {
                  return t.set(
                    (e.x - this.min.x) / (this.max.x - this.min.x),
                    (e.y - this.min.y) / (this.max.y - this.min.y),
                    (e.z - this.min.z) / (this.max.z - this.min.z)
                  );
                },
              },
              {
                key: "intersectsBox",
                value: function (e) {
                  return !(
                    e.max.x < this.min.x ||
                    e.min.x > this.max.x ||
                    e.max.y < this.min.y ||
                    e.min.y > this.max.y ||
                    e.max.z < this.min.z ||
                    e.min.z > this.max.z
                  );
                },
              },
              {
                key: "intersectsSphere",
                value: function (e) {
                  return (
                    this.clampPoint(e.center, jr),
                    jr.distanceToSquared(e.center) <= e.radius * e.radius
                  );
                },
              },
              {
                key: "intersectsPlane",
                value: function (e) {
                  var t, n;
                  return (
                    e.normal.x > 0
                      ? ((t = e.normal.x * this.min.x),
                        (n = e.normal.x * this.max.x))
                      : ((t = e.normal.x * this.max.x),
                        (n = e.normal.x * this.min.x)),
                    e.normal.y > 0
                      ? ((t += e.normal.y * this.min.y),
                        (n += e.normal.y * this.max.y))
                      : ((t += e.normal.y * this.max.y),
                        (n += e.normal.y * this.min.y)),
                    e.normal.z > 0
                      ? ((t += e.normal.z * this.min.z),
                        (n += e.normal.z * this.max.z))
                      : ((t += e.normal.z * this.max.z),
                        (n += e.normal.z * this.min.z)),
                    t <= -e.constant && n >= -e.constant
                  );
                },
              },
              {
                key: "intersectsTriangle",
                value: function (e) {
                  if (this.isEmpty()) return !1;
                  this.getCenter(ei),
                    ti.subVectors(this.max, ei),
                    qr.subVectors(e.a, ei),
                    Yr.subVectors(e.b, ei),
                    Kr.subVectors(e.c, ei),
                    $r.subVectors(Yr, qr),
                    Jr.subVectors(Kr, Yr),
                    Qr.subVectors(qr, Kr);
                  var t = [
                    0,
                    -$r.z,
                    $r.y,
                    0,
                    -Jr.z,
                    Jr.y,
                    0,
                    -Qr.z,
                    Qr.y,
                    $r.z,
                    0,
                    -$r.x,
                    Jr.z,
                    0,
                    -Jr.x,
                    Qr.z,
                    0,
                    -Qr.x,
                    -$r.y,
                    $r.x,
                    0,
                    -Jr.y,
                    Jr.x,
                    0,
                    -Qr.y,
                    Qr.x,
                    0,
                  ];
                  return (
                    !!ii(t, qr, Yr, Kr, ti) &&
                    !!ii((t = [1, 0, 0, 0, 1, 0, 0, 0, 1]), qr, Yr, Kr, ti) &&
                    (ni.crossVectors($r, Jr),
                    ii((t = [ni.x, ni.y, ni.z]), qr, Yr, Kr, ti))
                  );
                },
              },
              {
                key: "clampPoint",
                value: function (e, t) {
                  return t.copy(e).clamp(this.min, this.max);
                },
              },
              {
                key: "distanceToPoint",
                value: function (e) {
                  return this.clampPoint(e, jr).distanceTo(e);
                },
              },
              {
                key: "getBoundingSphere",
                value: function (e) {
                  return (
                    this.isEmpty()
                      ? e.makeEmpty()
                      : (this.getCenter(e.center),
                        (e.radius = 0.5 * this.getSize(jr).length())),
                    e
                  );
                },
              },
              {
                key: "intersect",
                value: function (e) {
                  return (
                    this.min.max(e.min),
                    this.max.min(e.max),
                    this.isEmpty() && this.makeEmpty(),
                    this
                  );
                },
              },
              {
                key: "union",
                value: function (e) {
                  return this.min.min(e.min), this.max.max(e.max), this;
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  return (
                    this.isEmpty() ||
                      (Wr[0]
                        .set(this.min.x, this.min.y, this.min.z)
                        .applyMatrix4(e),
                      Wr[1]
                        .set(this.min.x, this.min.y, this.max.z)
                        .applyMatrix4(e),
                      Wr[2]
                        .set(this.min.x, this.max.y, this.min.z)
                        .applyMatrix4(e),
                      Wr[3]
                        .set(this.min.x, this.max.y, this.max.z)
                        .applyMatrix4(e),
                      Wr[4]
                        .set(this.max.x, this.min.y, this.min.z)
                        .applyMatrix4(e),
                      Wr[5]
                        .set(this.max.x, this.min.y, this.max.z)
                        .applyMatrix4(e),
                      Wr[6]
                        .set(this.max.x, this.max.y, this.min.z)
                        .applyMatrix4(e),
                      Wr[7]
                        .set(this.max.x, this.max.y, this.max.z)
                        .applyMatrix4(e),
                      this.setFromPoints(Wr)),
                    this
                  );
                },
              },
              {
                key: "translate",
                value: function (e) {
                  return this.min.add(e), this.max.add(e), this;
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return e.min.equals(this.min) && e.max.equals(this.max);
                },
              },
            ]),
            e
          );
        })(),
        Wr = [
          new Zr(),
          new Zr(),
          new Zr(),
          new Zr(),
          new Zr(),
          new Zr(),
          new Zr(),
          new Zr(),
        ],
        jr = new Zr(),
        Xr = new Gr(),
        qr = new Zr(),
        Yr = new Zr(),
        Kr = new Zr(),
        $r = new Zr(),
        Jr = new Zr(),
        Qr = new Zr(),
        ei = new Zr(),
        ti = new Zr(),
        ni = new Zr(),
        ri = new Zr();
      function ii(e, t, n, r, i) {
        for (var a = 0, o = e.length - 3; a <= o; a += 3) {
          ri.fromArray(e, a);
          var s =
              i.x * Math.abs(ri.x) +
              i.y * Math.abs(ri.y) +
              i.z * Math.abs(ri.z),
            l = t.dot(ri),
            u = n.dot(ri),
            c = r.dot(ri);
          if (Math.max(-Math.max(l, u, c), Math.min(l, u, c)) > s) return !1;
        }
        return !0;
      }
      var ai = new Gr(),
        oi = new Zr(),
        si = new Zr(),
        li = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Zr(),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : -1;
            p(this, e), (this.center = t), (this.radius = n);
          }
          return (
            g(e, [
              {
                key: "set",
                value: function (e, t) {
                  return this.center.copy(e), (this.radius = t), this;
                },
              },
              {
                key: "setFromPoints",
                value: function (e, t) {
                  var n = this.center;
                  void 0 !== t ? n.copy(t) : ai.setFromPoints(e).getCenter(n);
                  for (var r = 0, i = 0, a = e.length; i < a; i++)
                    r = Math.max(r, n.distanceToSquared(e[i]));
                  return (this.radius = Math.sqrt(r)), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    this.center.copy(e.center), (this.radius = e.radius), this
                  );
                },
              },
              {
                key: "isEmpty",
                value: function () {
                  return this.radius < 0;
                },
              },
              {
                key: "makeEmpty",
                value: function () {
                  return this.center.set(0, 0, 0), (this.radius = -1), this;
                },
              },
              {
                key: "containsPoint",
                value: function (e) {
                  return (
                    e.distanceToSquared(this.center) <=
                    this.radius * this.radius
                  );
                },
              },
              {
                key: "distanceToPoint",
                value: function (e) {
                  return e.distanceTo(this.center) - this.radius;
                },
              },
              {
                key: "intersectsSphere",
                value: function (e) {
                  var t = this.radius + e.radius;
                  return e.center.distanceToSquared(this.center) <= t * t;
                },
              },
              {
                key: "intersectsBox",
                value: function (e) {
                  return e.intersectsSphere(this);
                },
              },
              {
                key: "intersectsPlane",
                value: function (e) {
                  return (
                    Math.abs(e.distanceToPoint(this.center)) <= this.radius
                  );
                },
              },
              {
                key: "clampPoint",
                value: function (e, t) {
                  var n = this.center.distanceToSquared(e);
                  return (
                    t.copy(e),
                    n > this.radius * this.radius &&
                      (t.sub(this.center).normalize(),
                      t.multiplyScalar(this.radius).add(this.center)),
                    t
                  );
                },
              },
              {
                key: "getBoundingBox",
                value: function (e) {
                  return this.isEmpty()
                    ? (e.makeEmpty(), e)
                    : (e.set(this.center, this.center),
                      e.expandByScalar(this.radius),
                      e);
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  return (
                    this.center.applyMatrix4(e),
                    (this.radius = this.radius * e.getMaxScaleOnAxis()),
                    this
                  );
                },
              },
              {
                key: "translate",
                value: function (e) {
                  return this.center.add(e), this;
                },
              },
              {
                key: "expandByPoint",
                value: function (e) {
                  if (this.isEmpty())
                    return this.center.copy(e), (this.radius = 0), this;
                  oi.subVectors(e, this.center);
                  var t = oi.lengthSq();
                  if (t > this.radius * this.radius) {
                    var n = Math.sqrt(t),
                      r = 0.5 * (n - this.radius);
                    this.center.addScaledVector(oi, r / n), (this.radius += r);
                  }
                  return this;
                },
              },
              {
                key: "union",
                value: function (e) {
                  return e.isEmpty()
                    ? this
                    : this.isEmpty()
                    ? (this.copy(e), this)
                    : (!0 === this.center.equals(e.center)
                        ? (this.radius = Math.max(this.radius, e.radius))
                        : (si
                            .subVectors(e.center, this.center)
                            .setLength(e.radius),
                          this.expandByPoint(oi.copy(e.center).add(si)),
                          this.expandByPoint(oi.copy(e.center).sub(si))),
                      this);
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return (
                    e.center.equals(this.center) && e.radius === this.radius
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            e
          );
        })(),
        ui = new Zr(),
        ci = new Zr(),
        di = new Zr(),
        fi = new Zr(),
        hi = new Zr(),
        pi = new Zr(),
        vi = new Zr(),
        mi = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Zr(),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new Zr(0, 0, -1);
            p(this, e), (this.origin = t), (this.direction = n);
          }
          return (
            g(e, [
              {
                key: "set",
                value: function (e, t) {
                  return this.origin.copy(e), this.direction.copy(t), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    this.origin.copy(e.origin),
                    this.direction.copy(e.direction),
                    this
                  );
                },
              },
              {
                key: "at",
                value: function (e, t) {
                  return t.copy(this.origin).addScaledVector(this.direction, e);
                },
              },
              {
                key: "lookAt",
                value: function (e) {
                  return (
                    this.direction.copy(e).sub(this.origin).normalize(), this
                  );
                },
              },
              {
                key: "recast",
                value: function (e) {
                  return this.origin.copy(this.at(e, ui)), this;
                },
              },
              {
                key: "closestPointToPoint",
                value: function (e, t) {
                  t.subVectors(e, this.origin);
                  var n = t.dot(this.direction);
                  return n < 0
                    ? t.copy(this.origin)
                    : t.copy(this.origin).addScaledVector(this.direction, n);
                },
              },
              {
                key: "distanceToPoint",
                value: function (e) {
                  return Math.sqrt(this.distanceSqToPoint(e));
                },
              },
              {
                key: "distanceSqToPoint",
                value: function (e) {
                  var t = ui.subVectors(e, this.origin).dot(this.direction);
                  return t < 0
                    ? this.origin.distanceToSquared(e)
                    : (ui.copy(this.origin).addScaledVector(this.direction, t),
                      ui.distanceToSquared(e));
                },
              },
              {
                key: "distanceSqToSegment",
                value: function (e, t, n, r) {
                  ci.copy(e).add(t).multiplyScalar(0.5),
                    di.copy(t).sub(e).normalize(),
                    fi.copy(this.origin).sub(ci);
                  var i,
                    a,
                    o,
                    s,
                    l = 0.5 * e.distanceTo(t),
                    u = -this.direction.dot(di),
                    c = fi.dot(this.direction),
                    d = -fi.dot(di),
                    f = fi.lengthSq(),
                    h = Math.abs(1 - u * u);
                  if (h > 0)
                    if (((a = u * c - d), (s = l * h), (i = u * d - c) >= 0))
                      if (a >= -s)
                        if (a <= s) {
                          var p = 1 / h;
                          o =
                            (i *= p) * (i + u * (a *= p) + 2 * c) +
                            a * (u * i + a + 2 * d) +
                            f;
                        } else
                          (a = l),
                            (o =
                              -(i = Math.max(0, -(u * a + c))) * i +
                              a * (a + 2 * d) +
                              f);
                      else
                        (a = -l),
                          (o =
                            -(i = Math.max(0, -(u * a + c))) * i +
                            a * (a + 2 * d) +
                            f);
                    else
                      a <= -s
                        ? (o =
                            -(i = Math.max(0, -(-u * l + c))) * i +
                            (a = i > 0 ? -l : Math.min(Math.max(-l, -d), l)) *
                              (a + 2 * d) +
                            f)
                        : a <= s
                        ? ((i = 0),
                          (o =
                            (a = Math.min(Math.max(-l, -d), l)) * (a + 2 * d) +
                            f))
                        : (o =
                            -(i = Math.max(0, -(u * l + c))) * i +
                            (a = i > 0 ? l : Math.min(Math.max(-l, -d), l)) *
                              (a + 2 * d) +
                            f);
                  else
                    (a = u > 0 ? -l : l),
                      (o =
                        -(i = Math.max(0, -(u * a + c))) * i +
                        a * (a + 2 * d) +
                        f);
                  return (
                    n && n.copy(this.origin).addScaledVector(this.direction, i),
                    r && r.copy(ci).addScaledVector(di, a),
                    o
                  );
                },
              },
              {
                key: "intersectSphere",
                value: function (e, t) {
                  ui.subVectors(e.center, this.origin);
                  var n = ui.dot(this.direction),
                    r = ui.dot(ui) - n * n,
                    i = e.radius * e.radius;
                  if (r > i) return null;
                  var a = Math.sqrt(i - r),
                    o = n - a,
                    s = n + a;
                  return s < 0 ? null : o < 0 ? this.at(s, t) : this.at(o, t);
                },
              },
              {
                key: "intersectsSphere",
                value: function (e) {
                  return (
                    this.distanceSqToPoint(e.center) <= e.radius * e.radius
                  );
                },
              },
              {
                key: "distanceToPlane",
                value: function (e) {
                  var t = e.normal.dot(this.direction);
                  if (0 === t)
                    return 0 === e.distanceToPoint(this.origin) ? 0 : null;
                  var n = -(this.origin.dot(e.normal) + e.constant) / t;
                  return n >= 0 ? n : null;
                },
              },
              {
                key: "intersectPlane",
                value: function (e, t) {
                  var n = this.distanceToPlane(e);
                  return null === n ? null : this.at(n, t);
                },
              },
              {
                key: "intersectsPlane",
                value: function (e) {
                  var t = e.distanceToPoint(this.origin);
                  return 0 === t || e.normal.dot(this.direction) * t < 0;
                },
              },
              {
                key: "intersectBox",
                value: function (e, t) {
                  var n,
                    r,
                    i,
                    a,
                    o,
                    s,
                    l = 1 / this.direction.x,
                    u = 1 / this.direction.y,
                    c = 1 / this.direction.z,
                    d = this.origin;
                  return (
                    l >= 0
                      ? ((n = (e.min.x - d.x) * l), (r = (e.max.x - d.x) * l))
                      : ((n = (e.max.x - d.x) * l), (r = (e.min.x - d.x) * l)),
                    u >= 0
                      ? ((i = (e.min.y - d.y) * u), (a = (e.max.y - d.y) * u))
                      : ((i = (e.max.y - d.y) * u), (a = (e.min.y - d.y) * u)),
                    n > a || i > r
                      ? null
                      : ((i > n || isNaN(n)) && (n = i),
                        (a < r || isNaN(r)) && (r = a),
                        c >= 0
                          ? ((o = (e.min.z - d.z) * c),
                            (s = (e.max.z - d.z) * c))
                          : ((o = (e.max.z - d.z) * c),
                            (s = (e.min.z - d.z) * c)),
                        n > s || o > r
                          ? null
                          : ((o > n || n !== n) && (n = o),
                            (s < r || r !== r) && (r = s),
                            r < 0 ? null : this.at(n >= 0 ? n : r, t)))
                  );
                },
              },
              {
                key: "intersectsBox",
                value: function (e) {
                  return null !== this.intersectBox(e, ui);
                },
              },
              {
                key: "intersectTriangle",
                value: function (e, t, n, r, i) {
                  hi.subVectors(t, e),
                    pi.subVectors(n, e),
                    vi.crossVectors(hi, pi);
                  var a,
                    o = this.direction.dot(vi);
                  if (o > 0) {
                    if (r) return null;
                    a = 1;
                  } else {
                    if (!(o < 0)) return null;
                    (a = -1), (o = -o);
                  }
                  fi.subVectors(this.origin, e);
                  var s = a * this.direction.dot(pi.crossVectors(fi, pi));
                  if (s < 0) return null;
                  var l = a * this.direction.dot(hi.cross(fi));
                  if (l < 0) return null;
                  if (s + l > o) return null;
                  var u = -a * fi.dot(vi);
                  return u < 0 ? null : this.at(u / o, i);
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  return (
                    this.origin.applyMatrix4(e),
                    this.direction.transformDirection(e),
                    this
                  );
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return (
                    e.origin.equals(this.origin) &&
                    e.direction.equals(this.direction)
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            e
          );
        })(),
        gi = (function () {
          function e() {
            p(this, e),
              (e.prototype.isMatrix4 = !0),
              (this.elements = [
                1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1,
              ]);
          }
          return (
            g(e, [
              {
                key: "set",
                value: function (
                  e,
                  t,
                  n,
                  r,
                  i,
                  a,
                  o,
                  s,
                  l,
                  u,
                  c,
                  d,
                  f,
                  h,
                  p,
                  v
                ) {
                  var m = this.elements;
                  return (
                    (m[0] = e),
                    (m[4] = t),
                    (m[8] = n),
                    (m[12] = r),
                    (m[1] = i),
                    (m[5] = a),
                    (m[9] = o),
                    (m[13] = s),
                    (m[2] = l),
                    (m[6] = u),
                    (m[10] = c),
                    (m[14] = d),
                    (m[3] = f),
                    (m[7] = h),
                    (m[11] = p),
                    (m[15] = v),
                    this
                  );
                },
              },
              {
                key: "identity",
                value: function () {
                  return (
                    this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new e().fromArray(this.elements);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  var t = this.elements,
                    n = e.elements;
                  return (
                    (t[0] = n[0]),
                    (t[1] = n[1]),
                    (t[2] = n[2]),
                    (t[3] = n[3]),
                    (t[4] = n[4]),
                    (t[5] = n[5]),
                    (t[6] = n[6]),
                    (t[7] = n[7]),
                    (t[8] = n[8]),
                    (t[9] = n[9]),
                    (t[10] = n[10]),
                    (t[11] = n[11]),
                    (t[12] = n[12]),
                    (t[13] = n[13]),
                    (t[14] = n[14]),
                    (t[15] = n[15]),
                    this
                  );
                },
              },
              {
                key: "copyPosition",
                value: function (e) {
                  var t = this.elements,
                    n = e.elements;
                  return (
                    (t[12] = n[12]), (t[13] = n[13]), (t[14] = n[14]), this
                  );
                },
              },
              {
                key: "setFromMatrix3",
                value: function (e) {
                  var t = e.elements;
                  return (
                    this.set(
                      t[0],
                      t[3],
                      t[6],
                      0,
                      t[1],
                      t[4],
                      t[7],
                      0,
                      t[2],
                      t[5],
                      t[8],
                      0,
                      0,
                      0,
                      0,
                      1
                    ),
                    this
                  );
                },
              },
              {
                key: "extractBasis",
                value: function (e, t, n) {
                  return (
                    e.setFromMatrixColumn(this, 0),
                    t.setFromMatrixColumn(this, 1),
                    n.setFromMatrixColumn(this, 2),
                    this
                  );
                },
              },
              {
                key: "makeBasis",
                value: function (e, t, n) {
                  return (
                    this.set(
                      e.x,
                      t.x,
                      n.x,
                      0,
                      e.y,
                      t.y,
                      n.y,
                      0,
                      e.z,
                      t.z,
                      n.z,
                      0,
                      0,
                      0,
                      0,
                      1
                    ),
                    this
                  );
                },
              },
              {
                key: "extractRotation",
                value: function (e) {
                  var t = this.elements,
                    n = e.elements,
                    r = 1 / yi.setFromMatrixColumn(e, 0).length(),
                    i = 1 / yi.setFromMatrixColumn(e, 1).length(),
                    a = 1 / yi.setFromMatrixColumn(e, 2).length();
                  return (
                    (t[0] = n[0] * r),
                    (t[1] = n[1] * r),
                    (t[2] = n[2] * r),
                    (t[3] = 0),
                    (t[4] = n[4] * i),
                    (t[5] = n[5] * i),
                    (t[6] = n[6] * i),
                    (t[7] = 0),
                    (t[8] = n[8] * a),
                    (t[9] = n[9] * a),
                    (t[10] = n[10] * a),
                    (t[11] = 0),
                    (t[12] = 0),
                    (t[13] = 0),
                    (t[14] = 0),
                    (t[15] = 1),
                    this
                  );
                },
              },
              {
                key: "makeRotationFromEuler",
                value: function (e) {
                  var t = this.elements,
                    n = e.x,
                    r = e.y,
                    i = e.z,
                    a = Math.cos(n),
                    o = Math.sin(n),
                    s = Math.cos(r),
                    l = Math.sin(r),
                    u = Math.cos(i),
                    c = Math.sin(i);
                  if ("XYZ" === e.order) {
                    var d = a * u,
                      f = a * c,
                      h = o * u,
                      p = o * c;
                    (t[0] = s * u),
                      (t[4] = -s * c),
                      (t[8] = l),
                      (t[1] = f + h * l),
                      (t[5] = d - p * l),
                      (t[9] = -o * s),
                      (t[2] = p - d * l),
                      (t[6] = h + f * l),
                      (t[10] = a * s);
                  } else if ("YXZ" === e.order) {
                    var v = s * u,
                      m = s * c,
                      g = l * u,
                      y = l * c;
                    (t[0] = v + y * o),
                      (t[4] = g * o - m),
                      (t[8] = a * l),
                      (t[1] = a * c),
                      (t[5] = a * u),
                      (t[9] = -o),
                      (t[2] = m * o - g),
                      (t[6] = y + v * o),
                      (t[10] = a * s);
                  } else if ("ZXY" === e.order) {
                    var b = s * u,
                      _ = s * c,
                      x = l * u,
                      S = l * c;
                    (t[0] = b - S * o),
                      (t[4] = -a * c),
                      (t[8] = x + _ * o),
                      (t[1] = _ + x * o),
                      (t[5] = a * u),
                      (t[9] = S - b * o),
                      (t[2] = -a * l),
                      (t[6] = o),
                      (t[10] = a * s);
                  } else if ("ZYX" === e.order) {
                    var w = a * u,
                      M = a * c,
                      E = o * u,
                      k = o * c;
                    (t[0] = s * u),
                      (t[4] = E * l - M),
                      (t[8] = w * l + k),
                      (t[1] = s * c),
                      (t[5] = k * l + w),
                      (t[9] = M * l - E),
                      (t[2] = -l),
                      (t[6] = o * s),
                      (t[10] = a * s);
                  } else if ("YZX" === e.order) {
                    var T = a * s,
                      A = a * l,
                      C = o * s,
                      P = o * l;
                    (t[0] = s * u),
                      (t[4] = P - T * c),
                      (t[8] = C * c + A),
                      (t[1] = c),
                      (t[5] = a * u),
                      (t[9] = -o * u),
                      (t[2] = -l * u),
                      (t[6] = A * c + C),
                      (t[10] = T - P * c);
                  } else if ("XZY" === e.order) {
                    var R = a * s,
                      L = a * l,
                      I = o * s,
                      N = o * l;
                    (t[0] = s * u),
                      (t[4] = -c),
                      (t[8] = l * u),
                      (t[1] = R * c + N),
                      (t[5] = a * u),
                      (t[9] = L * c - I),
                      (t[2] = I * c - L),
                      (t[6] = o * u),
                      (t[10] = N * c + R);
                  }
                  return (
                    (t[3] = 0),
                    (t[7] = 0),
                    (t[11] = 0),
                    (t[12] = 0),
                    (t[13] = 0),
                    (t[14] = 0),
                    (t[15] = 1),
                    this
                  );
                },
              },
              {
                key: "makeRotationFromQuaternion",
                value: function (e) {
                  return this.compose(_i, e, xi);
                },
              },
              {
                key: "lookAt",
                value: function (e, t, n) {
                  var r = this.elements;
                  return (
                    Mi.subVectors(e, t),
                    0 === Mi.lengthSq() && (Mi.z = 1),
                    Mi.normalize(),
                    Si.crossVectors(n, Mi),
                    0 === Si.lengthSq() &&
                      (1 === Math.abs(n.z) ? (Mi.x += 1e-4) : (Mi.z += 1e-4),
                      Mi.normalize(),
                      Si.crossVectors(n, Mi)),
                    Si.normalize(),
                    wi.crossVectors(Mi, Si),
                    (r[0] = Si.x),
                    (r[4] = wi.x),
                    (r[8] = Mi.x),
                    (r[1] = Si.y),
                    (r[5] = wi.y),
                    (r[9] = Mi.y),
                    (r[2] = Si.z),
                    (r[6] = wi.z),
                    (r[10] = Mi.z),
                    this
                  );
                },
              },
              {
                key: "multiply",
                value: function (e) {
                  return this.multiplyMatrices(this, e);
                },
              },
              {
                key: "premultiply",
                value: function (e) {
                  return this.multiplyMatrices(e, this);
                },
              },
              {
                key: "multiplyMatrices",
                value: function (e, t) {
                  var n = e.elements,
                    r = t.elements,
                    i = this.elements,
                    a = n[0],
                    o = n[4],
                    s = n[8],
                    l = n[12],
                    u = n[1],
                    c = n[5],
                    d = n[9],
                    f = n[13],
                    h = n[2],
                    p = n[6],
                    v = n[10],
                    m = n[14],
                    g = n[3],
                    y = n[7],
                    b = n[11],
                    _ = n[15],
                    x = r[0],
                    S = r[4],
                    w = r[8],
                    M = r[12],
                    E = r[1],
                    k = r[5],
                    T = r[9],
                    A = r[13],
                    C = r[2],
                    P = r[6],
                    R = r[10],
                    L = r[14],
                    I = r[3],
                    N = r[7],
                    O = r[11],
                    D = r[15];
                  return (
                    (i[0] = a * x + o * E + s * C + l * I),
                    (i[4] = a * S + o * k + s * P + l * N),
                    (i[8] = a * w + o * T + s * R + l * O),
                    (i[12] = a * M + o * A + s * L + l * D),
                    (i[1] = u * x + c * E + d * C + f * I),
                    (i[5] = u * S + c * k + d * P + f * N),
                    (i[9] = u * w + c * T + d * R + f * O),
                    (i[13] = u * M + c * A + d * L + f * D),
                    (i[2] = h * x + p * E + v * C + m * I),
                    (i[6] = h * S + p * k + v * P + m * N),
                    (i[10] = h * w + p * T + v * R + m * O),
                    (i[14] = h * M + p * A + v * L + m * D),
                    (i[3] = g * x + y * E + b * C + _ * I),
                    (i[7] = g * S + y * k + b * P + _ * N),
                    (i[11] = g * w + y * T + b * R + _ * O),
                    (i[15] = g * M + y * A + b * L + _ * D),
                    this
                  );
                },
              },
              {
                key: "multiplyScalar",
                value: function (e) {
                  var t = this.elements;
                  return (
                    (t[0] *= e),
                    (t[4] *= e),
                    (t[8] *= e),
                    (t[12] *= e),
                    (t[1] *= e),
                    (t[5] *= e),
                    (t[9] *= e),
                    (t[13] *= e),
                    (t[2] *= e),
                    (t[6] *= e),
                    (t[10] *= e),
                    (t[14] *= e),
                    (t[3] *= e),
                    (t[7] *= e),
                    (t[11] *= e),
                    (t[15] *= e),
                    this
                  );
                },
              },
              {
                key: "determinant",
                value: function () {
                  var e = this.elements,
                    t = e[0],
                    n = e[4],
                    r = e[8],
                    i = e[12],
                    a = e[1],
                    o = e[5],
                    s = e[9],
                    l = e[13],
                    u = e[2],
                    c = e[6],
                    d = e[10],
                    f = e[14];
                  return (
                    e[3] *
                      (+i * s * c -
                        r * l * c -
                        i * o * d +
                        n * l * d +
                        r * o * f -
                        n * s * f) +
                    e[7] *
                      (+t * s * f -
                        t * l * d +
                        i * a * d -
                        r * a * f +
                        r * l * u -
                        i * s * u) +
                    e[11] *
                      (+t * l * c -
                        t * o * f -
                        i * a * c +
                        n * a * f +
                        i * o * u -
                        n * l * u) +
                    e[15] *
                      (-r * o * u -
                        t * s * c +
                        t * o * d +
                        r * a * c -
                        n * a * d +
                        n * s * u)
                  );
                },
              },
              {
                key: "transpose",
                value: function () {
                  var e,
                    t = this.elements;
                  return (
                    (e = t[1]),
                    (t[1] = t[4]),
                    (t[4] = e),
                    (e = t[2]),
                    (t[2] = t[8]),
                    (t[8] = e),
                    (e = t[6]),
                    (t[6] = t[9]),
                    (t[9] = e),
                    (e = t[3]),
                    (t[3] = t[12]),
                    (t[12] = e),
                    (e = t[7]),
                    (t[7] = t[13]),
                    (t[13] = e),
                    (e = t[11]),
                    (t[11] = t[14]),
                    (t[14] = e),
                    this
                  );
                },
              },
              {
                key: "setPosition",
                value: function (e, t, n) {
                  var r = this.elements;
                  return (
                    e.isVector3
                      ? ((r[12] = e.x), (r[13] = e.y), (r[14] = e.z))
                      : ((r[12] = e), (r[13] = t), (r[14] = n)),
                    this
                  );
                },
              },
              {
                key: "invert",
                value: function () {
                  var e = this.elements,
                    t = e[0],
                    n = e[1],
                    r = e[2],
                    i = e[3],
                    a = e[4],
                    o = e[5],
                    s = e[6],
                    l = e[7],
                    u = e[8],
                    c = e[9],
                    d = e[10],
                    f = e[11],
                    h = e[12],
                    p = e[13],
                    v = e[14],
                    m = e[15],
                    g =
                      c * v * l -
                      p * d * l +
                      p * s * f -
                      o * v * f -
                      c * s * m +
                      o * d * m,
                    y =
                      h * d * l -
                      u * v * l -
                      h * s * f +
                      a * v * f +
                      u * s * m -
                      a * d * m,
                    b =
                      u * p * l -
                      h * c * l +
                      h * o * f -
                      a * p * f -
                      u * o * m +
                      a * c * m,
                    _ =
                      h * c * s -
                      u * p * s -
                      h * o * d +
                      a * p * d +
                      u * o * v -
                      a * c * v,
                    x = t * g + n * y + r * b + i * _;
                  if (0 === x)
                    return this.set(
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    );
                  var S = 1 / x;
                  return (
                    (e[0] = g * S),
                    (e[1] =
                      (p * d * i -
                        c * v * i -
                        p * r * f +
                        n * v * f +
                        c * r * m -
                        n * d * m) *
                      S),
                    (e[2] =
                      (o * v * i -
                        p * s * i +
                        p * r * l -
                        n * v * l -
                        o * r * m +
                        n * s * m) *
                      S),
                    (e[3] =
                      (c * s * i -
                        o * d * i -
                        c * r * l +
                        n * d * l +
                        o * r * f -
                        n * s * f) *
                      S),
                    (e[4] = y * S),
                    (e[5] =
                      (u * v * i -
                        h * d * i +
                        h * r * f -
                        t * v * f -
                        u * r * m +
                        t * d * m) *
                      S),
                    (e[6] =
                      (h * s * i -
                        a * v * i -
                        h * r * l +
                        t * v * l +
                        a * r * m -
                        t * s * m) *
                      S),
                    (e[7] =
                      (a * d * i -
                        u * s * i +
                        u * r * l -
                        t * d * l -
                        a * r * f +
                        t * s * f) *
                      S),
                    (e[8] = b * S),
                    (e[9] =
                      (h * c * i -
                        u * p * i -
                        h * n * f +
                        t * p * f +
                        u * n * m -
                        t * c * m) *
                      S),
                    (e[10] =
                      (a * p * i -
                        h * o * i +
                        h * n * l -
                        t * p * l -
                        a * n * m +
                        t * o * m) *
                      S),
                    (e[11] =
                      (u * o * i -
                        a * c * i -
                        u * n * l +
                        t * c * l +
                        a * n * f -
                        t * o * f) *
                      S),
                    (e[12] = _ * S),
                    (e[13] =
                      (u * p * r -
                        h * c * r +
                        h * n * d -
                        t * p * d -
                        u * n * v +
                        t * c * v) *
                      S),
                    (e[14] =
                      (h * o * r -
                        a * p * r -
                        h * n * s +
                        t * p * s +
                        a * n * v -
                        t * o * v) *
                      S),
                    (e[15] =
                      (a * c * r -
                        u * o * r +
                        u * n * s -
                        t * c * s -
                        a * n * d +
                        t * o * d) *
                      S),
                    this
                  );
                },
              },
              {
                key: "scale",
                value: function (e) {
                  var t = this.elements,
                    n = e.x,
                    r = e.y,
                    i = e.z;
                  return (
                    (t[0] *= n),
                    (t[4] *= r),
                    (t[8] *= i),
                    (t[1] *= n),
                    (t[5] *= r),
                    (t[9] *= i),
                    (t[2] *= n),
                    (t[6] *= r),
                    (t[10] *= i),
                    (t[3] *= n),
                    (t[7] *= r),
                    (t[11] *= i),
                    this
                  );
                },
              },
              {
                key: "getMaxScaleOnAxis",
                value: function () {
                  var e = this.elements,
                    t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2],
                    n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6],
                    r = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
                  return Math.sqrt(Math.max(t, n, r));
                },
              },
              {
                key: "makeTranslation",
                value: function (e, t, n) {
                  return (
                    this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "makeRotationX",
                value: function (e) {
                  var t = Math.cos(e),
                    n = Math.sin(e);
                  return (
                    this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "makeRotationY",
                value: function (e) {
                  var t = Math.cos(e),
                    n = Math.sin(e);
                  return (
                    this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "makeRotationZ",
                value: function (e) {
                  var t = Math.cos(e),
                    n = Math.sin(e);
                  return (
                    this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "makeRotationAxis",
                value: function (e, t) {
                  var n = Math.cos(t),
                    r = Math.sin(t),
                    i = 1 - n,
                    a = e.x,
                    o = e.y,
                    s = e.z,
                    l = i * a,
                    u = i * o;
                  return (
                    this.set(
                      l * a + n,
                      l * o - r * s,
                      l * s + r * o,
                      0,
                      l * o + r * s,
                      u * o + n,
                      u * s - r * a,
                      0,
                      l * s - r * o,
                      u * s + r * a,
                      i * s * s + n,
                      0,
                      0,
                      0,
                      0,
                      1
                    ),
                    this
                  );
                },
              },
              {
                key: "makeScale",
                value: function (e, t, n) {
                  return (
                    this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "makeShear",
                value: function (e, t, n, r, i, a) {
                  return (
                    this.set(1, n, i, 0, e, 1, a, 0, t, r, 1, 0, 0, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "compose",
                value: function (e, t, n) {
                  var r = this.elements,
                    i = t._x,
                    a = t._y,
                    o = t._z,
                    s = t._w,
                    l = i + i,
                    u = a + a,
                    c = o + o,
                    d = i * l,
                    f = i * u,
                    h = i * c,
                    p = a * u,
                    v = a * c,
                    m = o * c,
                    g = s * l,
                    y = s * u,
                    b = s * c,
                    _ = n.x,
                    x = n.y,
                    S = n.z;
                  return (
                    (r[0] = (1 - (p + m)) * _),
                    (r[1] = (f + b) * _),
                    (r[2] = (h - y) * _),
                    (r[3] = 0),
                    (r[4] = (f - b) * x),
                    (r[5] = (1 - (d + m)) * x),
                    (r[6] = (v + g) * x),
                    (r[7] = 0),
                    (r[8] = (h + y) * S),
                    (r[9] = (v - g) * S),
                    (r[10] = (1 - (d + p)) * S),
                    (r[11] = 0),
                    (r[12] = e.x),
                    (r[13] = e.y),
                    (r[14] = e.z),
                    (r[15] = 1),
                    this
                  );
                },
              },
              {
                key: "decompose",
                value: function (e, t, n) {
                  var r = this.elements,
                    i = yi.set(r[0], r[1], r[2]).length(),
                    a = yi.set(r[4], r[5], r[6]).length(),
                    o = yi.set(r[8], r[9], r[10]).length();
                  this.determinant() < 0 && (i = -i),
                    (e.x = r[12]),
                    (e.y = r[13]),
                    (e.z = r[14]),
                    bi.copy(this);
                  var s = 1 / i,
                    l = 1 / a,
                    u = 1 / o;
                  return (
                    (bi.elements[0] *= s),
                    (bi.elements[1] *= s),
                    (bi.elements[2] *= s),
                    (bi.elements[4] *= l),
                    (bi.elements[5] *= l),
                    (bi.elements[6] *= l),
                    (bi.elements[8] *= u),
                    (bi.elements[9] *= u),
                    (bi.elements[10] *= u),
                    t.setFromRotationMatrix(bi),
                    (n.x = i),
                    (n.y = a),
                    (n.z = o),
                    this
                  );
                },
              },
              {
                key: "makePerspective",
                value: function (e, t, n, r, i, a) {
                  var o = this.elements,
                    s = (2 * i) / (t - e),
                    l = (2 * i) / (n - r),
                    u = (t + e) / (t - e),
                    c = (n + r) / (n - r),
                    d = -(a + i) / (a - i),
                    f = (-2 * a * i) / (a - i);
                  return (
                    (o[0] = s),
                    (o[4] = 0),
                    (o[8] = u),
                    (o[12] = 0),
                    (o[1] = 0),
                    (o[5] = l),
                    (o[9] = c),
                    (o[13] = 0),
                    (o[2] = 0),
                    (o[6] = 0),
                    (o[10] = d),
                    (o[14] = f),
                    (o[3] = 0),
                    (o[7] = 0),
                    (o[11] = -1),
                    (o[15] = 0),
                    this
                  );
                },
              },
              {
                key: "makeOrthographic",
                value: function (e, t, n, r, i, a) {
                  var o = this.elements,
                    s = 1 / (t - e),
                    l = 1 / (n - r),
                    u = 1 / (a - i),
                    c = (t + e) * s,
                    d = (n + r) * l,
                    f = (a + i) * u;
                  return (
                    (o[0] = 2 * s),
                    (o[4] = 0),
                    (o[8] = 0),
                    (o[12] = -c),
                    (o[1] = 0),
                    (o[5] = 2 * l),
                    (o[9] = 0),
                    (o[13] = -d),
                    (o[2] = 0),
                    (o[6] = 0),
                    (o[10] = -2 * u),
                    (o[14] = -f),
                    (o[3] = 0),
                    (o[7] = 0),
                    (o[11] = 0),
                    (o[15] = 1),
                    this
                  );
                },
              },
              {
                key: "equals",
                value: function (e) {
                  for (
                    var t = this.elements, n = e.elements, r = 0;
                    r < 16;
                    r++
                  )
                    if (t[r] !== n[r]) return !1;
                  return !0;
                },
              },
              {
                key: "fromArray",
                value: function (e) {
                  for (
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : 0,
                      n = 0;
                    n < 16;
                    n++
                  )
                    this.elements[n] = e[n + t];
                  return this;
                },
              },
              {
                key: "toArray",
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : [],
                    t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0,
                    n = this.elements;
                  return (
                    (e[t] = n[0]),
                    (e[t + 1] = n[1]),
                    (e[t + 2] = n[2]),
                    (e[t + 3] = n[3]),
                    (e[t + 4] = n[4]),
                    (e[t + 5] = n[5]),
                    (e[t + 6] = n[6]),
                    (e[t + 7] = n[7]),
                    (e[t + 8] = n[8]),
                    (e[t + 9] = n[9]),
                    (e[t + 10] = n[10]),
                    (e[t + 11] = n[11]),
                    (e[t + 12] = n[12]),
                    (e[t + 13] = n[13]),
                    (e[t + 14] = n[14]),
                    (e[t + 15] = n[15]),
                    e
                  );
                },
              },
            ]),
            e
          );
        })(),
        yi = new Zr(),
        bi = new gi(),
        _i = new Zr(0, 0, 0),
        xi = new Zr(1, 1, 1),
        Si = new Zr(),
        wi = new Zr(),
        Mi = new Zr(),
        Ei = new gi(),
        ki = new Br(),
        Ti = (function (e) {
          function t() {
            var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0,
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0,
              i =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : t.DEFAULT_ORDER;
            p(this, t),
              (this.isEuler = !0),
              (this._x = e),
              (this._y = n),
              (this._z = r),
              (this._order = i);
          }
          return (
            g(t, [
              {
                key: "x",
                get: function () {
                  return this._x;
                },
                set: function (e) {
                  (this._x = e), this._onChangeCallback();
                },
              },
              {
                key: "y",
                get: function () {
                  return this._y;
                },
                set: function (e) {
                  (this._y = e), this._onChangeCallback();
                },
              },
              {
                key: "z",
                get: function () {
                  return this._z;
                },
                set: function (e) {
                  (this._z = e), this._onChangeCallback();
                },
              },
              {
                key: "order",
                get: function () {
                  return this._order;
                },
                set: function (e) {
                  (this._order = e), this._onChangeCallback();
                },
              },
              {
                key: "set",
                value: function (e, t, n) {
                  var r =
                    arguments.length > 3 && void 0 !== arguments[3]
                      ? arguments[3]
                      : this._order;
                  return (
                    (this._x = e),
                    (this._y = t),
                    (this._z = n),
                    (this._order = r),
                    this._onChangeCallback(),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor(
                    this._x,
                    this._y,
                    this._z,
                    this._order
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    (this._x = e._x),
                    (this._y = e._y),
                    (this._z = e._z),
                    (this._order = e._order),
                    this._onChangeCallback(),
                    this
                  );
                },
              },
              {
                key: "setFromRotationMatrix",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : this._order,
                    n =
                      !(arguments.length > 2 && void 0 !== arguments[2]) ||
                      arguments[2],
                    r = e.elements,
                    i = r[0],
                    a = r[4],
                    o = r[8],
                    s = r[1],
                    l = r[5],
                    u = r[9],
                    c = r[2],
                    d = r[6],
                    f = r[10];
                  switch (t) {
                    case "XYZ":
                      (this._y = Math.asin(nr(o, -1, 1))),
                        Math.abs(o) < 0.9999999
                          ? ((this._x = Math.atan2(-u, f)),
                            (this._z = Math.atan2(-a, i)))
                          : ((this._x = Math.atan2(d, l)), (this._z = 0));
                      break;
                    case "YXZ":
                      (this._x = Math.asin(-nr(u, -1, 1))),
                        Math.abs(u) < 0.9999999
                          ? ((this._y = Math.atan2(o, f)),
                            (this._z = Math.atan2(s, l)))
                          : ((this._y = Math.atan2(-c, i)), (this._z = 0));
                      break;
                    case "ZXY":
                      (this._x = Math.asin(nr(d, -1, 1))),
                        Math.abs(d) < 0.9999999
                          ? ((this._y = Math.atan2(-c, f)),
                            (this._z = Math.atan2(-a, l)))
                          : ((this._y = 0), (this._z = Math.atan2(s, i)));
                      break;
                    case "ZYX":
                      (this._y = Math.asin(-nr(c, -1, 1))),
                        Math.abs(c) < 0.9999999
                          ? ((this._x = Math.atan2(d, f)),
                            (this._z = Math.atan2(s, i)))
                          : ((this._x = 0), (this._z = Math.atan2(-a, l)));
                      break;
                    case "YZX":
                      (this._z = Math.asin(nr(s, -1, 1))),
                        Math.abs(s) < 0.9999999
                          ? ((this._x = Math.atan2(-u, l)),
                            (this._y = Math.atan2(-c, i)))
                          : ((this._x = 0), (this._y = Math.atan2(o, f)));
                      break;
                    case "XZY":
                      (this._z = Math.asin(-nr(a, -1, 1))),
                        Math.abs(a) < 0.9999999
                          ? ((this._x = Math.atan2(d, l)),
                            (this._y = Math.atan2(o, i)))
                          : ((this._x = Math.atan2(-u, f)), (this._y = 0));
                      break;
                    default:
                      console.warn(
                        "THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " +
                          t
                      );
                  }
                  return (
                    (this._order = t),
                    !0 === n && this._onChangeCallback(),
                    this
                  );
                },
              },
              {
                key: "setFromQuaternion",
                value: function (e, t, n) {
                  return (
                    Ei.makeRotationFromQuaternion(e),
                    this.setFromRotationMatrix(Ei, t, n)
                  );
                },
              },
              {
                key: "setFromVector3",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : this._order;
                  return this.set(e.x, e.y, e.z, t);
                },
              },
              {
                key: "reorder",
                value: function (e) {
                  return ki.setFromEuler(this), this.setFromQuaternion(ki, e);
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return (
                    e._x === this._x &&
                    e._y === this._y &&
                    e._z === this._z &&
                    e._order === this._order
                  );
                },
              },
              {
                key: "fromArray",
                value: function (e) {
                  return (
                    (this._x = e[0]),
                    (this._y = e[1]),
                    (this._z = e[2]),
                    void 0 !== e[3] && (this._order = e[3]),
                    this._onChangeCallback(),
                    this
                  );
                },
              },
              {
                key: "toArray",
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : [],
                    t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0;
                  return (
                    (e[t] = this._x),
                    (e[t + 1] = this._y),
                    (e[t + 2] = this._z),
                    (e[t + 3] = this._order),
                    e
                  );
                },
              },
              {
                key: "_onChange",
                value: function (e) {
                  return (this._onChangeCallback = e), this;
                },
              },
              { key: "_onChangeCallback", value: function () {} },
              {
                key: Symbol.iterator,
                value: I().mark(function e() {
                  return I().wrap(
                    function (e) {
                      for (;;)
                        switch ((e.prev = e.next)) {
                          case 0:
                            return (e.next = 2), this._x;
                          case 2:
                            return (e.next = 4), this._y;
                          case 4:
                            return (e.next = 6), this._z;
                          case 6:
                            return (e.next = 8), this._order;
                          case 8:
                          case "end":
                            return e.stop();
                        }
                    },
                    e,
                    this
                  );
                }),
              },
            ]),
            t
          );
        })();
      Ti.DEFAULT_ORDER = "XYZ";
      var Ai = (function () {
          function e() {
            p(this, e), (this.mask = 1);
          }
          return (
            g(e, [
              {
                key: "set",
                value: function (e) {
                  this.mask = ((1 << e) | 0) >>> 0;
                },
              },
              {
                key: "enable",
                value: function (e) {
                  this.mask |= (1 << e) | 0;
                },
              },
              {
                key: "enableAll",
                value: function () {
                  this.mask = -1;
                },
              },
              {
                key: "toggle",
                value: function (e) {
                  this.mask ^= (1 << e) | 0;
                },
              },
              {
                key: "disable",
                value: function (e) {
                  this.mask &= ~((1 << e) | 0);
                },
              },
              {
                key: "disableAll",
                value: function () {
                  this.mask = 0;
                },
              },
              {
                key: "test",
                value: function (e) {
                  return 0 !== (this.mask & e.mask);
                },
              },
              {
                key: "isEnabled",
                value: function (e) {
                  return 0 !== (this.mask & ((1 << e) | 0));
                },
              },
            ]),
            e
          );
        })(),
        Ci = 0,
        Pi = new Zr(),
        Ri = new Br(),
        Li = new gi(),
        Ii = new Zr(),
        Ni = new Zr(),
        Oi = new Zr(),
        Di = new Br(),
        Ui = new Zr(1, 0, 0),
        zi = new Zr(0, 1, 0),
        Fi = new Zr(0, 0, 1),
        Bi = { type: "added" },
        Zi = { type: "removed" },
        Hi = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e;
            p(this, n),
              ((e = t.call(this)).isObject3D = !0),
              Object.defineProperty(E(e), "id", { value: Ci++ }),
              (e.uuid = tr()),
              (e.name = ""),
              (e.type = "Object3D"),
              (e.parent = null),
              (e.children = []),
              (e.up = n.DEFAULT_UP.clone());
            var r = new Zr(),
              i = new Ti(),
              a = new Br(),
              o = new Zr(1, 1, 1);
            return (
              i._onChange(function () {
                a.setFromEuler(i, !1);
              }),
              a._onChange(function () {
                i.setFromQuaternion(a, void 0, !1);
              }),
              Object.defineProperties(E(e), {
                position: { configurable: !0, enumerable: !0, value: r },
                rotation: { configurable: !0, enumerable: !0, value: i },
                quaternion: { configurable: !0, enumerable: !0, value: a },
                scale: { configurable: !0, enumerable: !0, value: o },
                modelViewMatrix: { value: new gi() },
                normalMatrix: { value: new fr() },
              }),
              (e.matrix = new gi()),
              (e.matrixWorld = new gi()),
              (e.matrixAutoUpdate = n.DEFAULT_MATRIX_AUTO_UPDATE),
              (e.matrixWorldNeedsUpdate = !1),
              (e.matrixWorldAutoUpdate = n.DEFAULT_MATRIX_WORLD_AUTO_UPDATE),
              (e.layers = new Ai()),
              (e.visible = !0),
              (e.castShadow = !1),
              (e.receiveShadow = !1),
              (e.frustumCulled = !0),
              (e.renderOrder = 0),
              (e.animations = []),
              (e.userData = {}),
              e
            );
          }
          return (
            g(n, [
              { key: "onBeforeRender", value: function () {} },
              { key: "onAfterRender", value: function () {} },
              {
                key: "applyMatrix4",
                value: function (e) {
                  this.matrixAutoUpdate && this.updateMatrix(),
                    this.matrix.premultiply(e),
                    this.matrix.decompose(
                      this.position,
                      this.quaternion,
                      this.scale
                    );
                },
              },
              {
                key: "applyQuaternion",
                value: function (e) {
                  return this.quaternion.premultiply(e), this;
                },
              },
              {
                key: "setRotationFromAxisAngle",
                value: function (e, t) {
                  this.quaternion.setFromAxisAngle(e, t);
                },
              },
              {
                key: "setRotationFromEuler",
                value: function (e) {
                  this.quaternion.setFromEuler(e, !0);
                },
              },
              {
                key: "setRotationFromMatrix",
                value: function (e) {
                  this.quaternion.setFromRotationMatrix(e);
                },
              },
              {
                key: "setRotationFromQuaternion",
                value: function (e) {
                  this.quaternion.copy(e);
                },
              },
              {
                key: "rotateOnAxis",
                value: function (e, t) {
                  return (
                    Ri.setFromAxisAngle(e, t),
                    this.quaternion.multiply(Ri),
                    this
                  );
                },
              },
              {
                key: "rotateOnWorldAxis",
                value: function (e, t) {
                  return (
                    Ri.setFromAxisAngle(e, t),
                    this.quaternion.premultiply(Ri),
                    this
                  );
                },
              },
              {
                key: "rotateX",
                value: function (e) {
                  return this.rotateOnAxis(Ui, e);
                },
              },
              {
                key: "rotateY",
                value: function (e) {
                  return this.rotateOnAxis(zi, e);
                },
              },
              {
                key: "rotateZ",
                value: function (e) {
                  return this.rotateOnAxis(Fi, e);
                },
              },
              {
                key: "translateOnAxis",
                value: function (e, t) {
                  return (
                    Pi.copy(e).applyQuaternion(this.quaternion),
                    this.position.add(Pi.multiplyScalar(t)),
                    this
                  );
                },
              },
              {
                key: "translateX",
                value: function (e) {
                  return this.translateOnAxis(Ui, e);
                },
              },
              {
                key: "translateY",
                value: function (e) {
                  return this.translateOnAxis(zi, e);
                },
              },
              {
                key: "translateZ",
                value: function (e) {
                  return this.translateOnAxis(Fi, e);
                },
              },
              {
                key: "localToWorld",
                value: function (e) {
                  return (
                    this.updateWorldMatrix(!0, !1),
                    e.applyMatrix4(this.matrixWorld)
                  );
                },
              },
              {
                key: "worldToLocal",
                value: function (e) {
                  return (
                    this.updateWorldMatrix(!0, !1),
                    e.applyMatrix4(Li.copy(this.matrixWorld).invert())
                  );
                },
              },
              {
                key: "lookAt",
                value: function (e, t, n) {
                  e.isVector3 ? Ii.copy(e) : Ii.set(e, t, n);
                  var r = this.parent;
                  this.updateWorldMatrix(!0, !1),
                    Ni.setFromMatrixPosition(this.matrixWorld),
                    this.isCamera || this.isLight
                      ? Li.lookAt(Ni, Ii, this.up)
                      : Li.lookAt(Ii, Ni, this.up),
                    this.quaternion.setFromRotationMatrix(Li),
                    r &&
                      (Li.extractRotation(r.matrixWorld),
                      Ri.setFromRotationMatrix(Li),
                      this.quaternion.premultiply(Ri.invert()));
                },
              },
              {
                key: "add",
                value: function (e) {
                  if (arguments.length > 1) {
                    for (var t = 0; t < arguments.length; t++)
                      this.add(arguments[t]);
                    return this;
                  }
                  return e === this
                    ? (console.error(
                        "THREE.Object3D.add: object can't be added as a child of itself.",
                        e
                      ),
                      this)
                    : (e && e.isObject3D
                        ? (null !== e.parent && e.parent.remove(e),
                          (e.parent = this),
                          this.children.push(e),
                          e.dispatchEvent(Bi))
                        : console.error(
                            "THREE.Object3D.add: object not an instance of THREE.Object3D.",
                            e
                          ),
                      this);
                },
              },
              {
                key: "remove",
                value: function (e) {
                  if (arguments.length > 1) {
                    for (var t = 0; t < arguments.length; t++)
                      this.remove(arguments[t]);
                    return this;
                  }
                  var n = this.children.indexOf(e);
                  return (
                    -1 !== n &&
                      ((e.parent = null),
                      this.children.splice(n, 1),
                      e.dispatchEvent(Zi)),
                    this
                  );
                },
              },
              {
                key: "removeFromParent",
                value: function () {
                  var e = this.parent;
                  return null !== e && e.remove(this), this;
                },
              },
              {
                key: "clear",
                value: function () {
                  for (var e = 0; e < this.children.length; e++) {
                    var t = this.children[e];
                    (t.parent = null), t.dispatchEvent(Zi);
                  }
                  return (this.children.length = 0), this;
                },
              },
              {
                key: "attach",
                value: function (e) {
                  return (
                    this.updateWorldMatrix(!0, !1),
                    Li.copy(this.matrixWorld).invert(),
                    null !== e.parent &&
                      (e.parent.updateWorldMatrix(!0, !1),
                      Li.multiply(e.parent.matrixWorld)),
                    e.applyMatrix4(Li),
                    this.add(e),
                    e.updateWorldMatrix(!1, !0),
                    this
                  );
                },
              },
              {
                key: "getObjectById",
                value: function (e) {
                  return this.getObjectByProperty("id", e);
                },
              },
              {
                key: "getObjectByName",
                value: function (e) {
                  return this.getObjectByProperty("name", e);
                },
              },
              {
                key: "getObjectByProperty",
                value: function (e, t) {
                  if (this[e] === t) return this;
                  for (var n = 0, r = this.children.length; n < r; n++) {
                    var i = this.children[n].getObjectByProperty(e, t);
                    if (void 0 !== i) return i;
                  }
                },
              },
              {
                key: "getObjectsByProperty",
                value: function (e, t) {
                  var n = [];
                  this[e] === t && n.push(this);
                  for (var r = 0, i = this.children.length; r < i; r++) {
                    var a = this.children[r].getObjectsByProperty(e, t);
                    a.length > 0 && (n = n.concat(a));
                  }
                  return n;
                },
              },
              {
                key: "getWorldPosition",
                value: function (e) {
                  return (
                    this.updateWorldMatrix(!0, !1),
                    e.setFromMatrixPosition(this.matrixWorld)
                  );
                },
              },
              {
                key: "getWorldQuaternion",
                value: function (e) {
                  return (
                    this.updateWorldMatrix(!0, !1),
                    this.matrixWorld.decompose(Ni, e, Oi),
                    e
                  );
                },
              },
              {
                key: "getWorldScale",
                value: function (e) {
                  return (
                    this.updateWorldMatrix(!0, !1),
                    this.matrixWorld.decompose(Ni, Di, e),
                    e
                  );
                },
              },
              {
                key: "getWorldDirection",
                value: function (e) {
                  this.updateWorldMatrix(!0, !1);
                  var t = this.matrixWorld.elements;
                  return e.set(t[8], t[9], t[10]).normalize();
                },
              },
              { key: "raycast", value: function () {} },
              {
                key: "traverse",
                value: function (e) {
                  e(this);
                  for (var t = this.children, n = 0, r = t.length; n < r; n++)
                    t[n].traverse(e);
                },
              },
              {
                key: "traverseVisible",
                value: function (e) {
                  if (!1 !== this.visible) {
                    e(this);
                    for (var t = this.children, n = 0, r = t.length; n < r; n++)
                      t[n].traverseVisible(e);
                  }
                },
              },
              {
                key: "traverseAncestors",
                value: function (e) {
                  var t = this.parent;
                  null !== t && (e(t), t.traverseAncestors(e));
                },
              },
              {
                key: "updateMatrix",
                value: function () {
                  this.matrix.compose(
                    this.position,
                    this.quaternion,
                    this.scale
                  ),
                    (this.matrixWorldNeedsUpdate = !0);
                },
              },
              {
                key: "updateMatrixWorld",
                value: function (e) {
                  this.matrixAutoUpdate && this.updateMatrix(),
                    (this.matrixWorldNeedsUpdate || e) &&
                      (null === this.parent
                        ? this.matrixWorld.copy(this.matrix)
                        : this.matrixWorld.multiplyMatrices(
                            this.parent.matrixWorld,
                            this.matrix
                          ),
                      (this.matrixWorldNeedsUpdate = !1),
                      (e = !0));
                  for (var t = this.children, n = 0, r = t.length; n < r; n++) {
                    var i = t[n];
                    (!0 !== i.matrixWorldAutoUpdate && !0 !== e) ||
                      i.updateMatrixWorld(e);
                  }
                },
              },
              {
                key: "updateWorldMatrix",
                value: function (e, t) {
                  var n = this.parent;
                  if (
                    (!0 === e &&
                      null !== n &&
                      !0 === n.matrixWorldAutoUpdate &&
                      n.updateWorldMatrix(!0, !1),
                    this.matrixAutoUpdate && this.updateMatrix(),
                    null === this.parent
                      ? this.matrixWorld.copy(this.matrix)
                      : this.matrixWorld.multiplyMatrices(
                          this.parent.matrixWorld,
                          this.matrix
                        ),
                    !0 === t)
                  )
                    for (
                      var r = this.children, i = 0, a = r.length;
                      i < a;
                      i++
                    ) {
                      var o = r[i];
                      !0 === o.matrixWorldAutoUpdate &&
                        o.updateWorldMatrix(!1, !0);
                    }
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = void 0 === e || "string" === typeof e,
                    n = {};
                  t &&
                    ((e = {
                      geometries: {},
                      materials: {},
                      textures: {},
                      images: {},
                      shapes: {},
                      skeletons: {},
                      animations: {},
                      nodes: {},
                    }),
                    (n.metadata = {
                      version: 4.5,
                      type: "Object",
                      generator: "Object3D.toJSON",
                    }));
                  var r = {};
                  function i(t, n) {
                    return (
                      void 0 === t[n.uuid] && (t[n.uuid] = n.toJSON(e)), n.uuid
                    );
                  }
                  if (
                    ((r.uuid = this.uuid),
                    (r.type = this.type),
                    "" !== this.name && (r.name = this.name),
                    !0 === this.castShadow && (r.castShadow = !0),
                    !0 === this.receiveShadow && (r.receiveShadow = !0),
                    !1 === this.visible && (r.visible = !1),
                    !1 === this.frustumCulled && (r.frustumCulled = !1),
                    0 !== this.renderOrder &&
                      (r.renderOrder = this.renderOrder),
                    Object.keys(this.userData).length > 0 &&
                      (r.userData = this.userData),
                    (r.layers = this.layers.mask),
                    (r.matrix = this.matrix.toArray()),
                    (r.up = this.up.toArray()),
                    !1 === this.matrixAutoUpdate && (r.matrixAutoUpdate = !1),
                    this.isInstancedMesh &&
                      ((r.type = "InstancedMesh"),
                      (r.count = this.count),
                      (r.instanceMatrix = this.instanceMatrix.toJSON()),
                      null !== this.instanceColor &&
                        (r.instanceColor = this.instanceColor.toJSON())),
                    this.isScene)
                  )
                    this.background &&
                      (this.background.isColor
                        ? (r.background = this.background.toJSON())
                        : this.background.isTexture &&
                          (r.background = this.background.toJSON(e).uuid)),
                      this.environment &&
                        this.environment.isTexture &&
                        !0 !== this.environment.isRenderTargetTexture &&
                        (r.environment = this.environment.toJSON(e).uuid);
                  else if (this.isMesh || this.isLine || this.isPoints) {
                    r.geometry = i(e.geometries, this.geometry);
                    var a = this.geometry.parameters;
                    if (void 0 !== a && void 0 !== a.shapes) {
                      var o = a.shapes;
                      if (Array.isArray(o))
                        for (var s = 0, l = o.length; s < l; s++) {
                          var u = o[s];
                          i(e.shapes, u);
                        }
                      else i(e.shapes, o);
                    }
                  }
                  if (
                    (this.isSkinnedMesh &&
                      ((r.bindMode = this.bindMode),
                      (r.bindMatrix = this.bindMatrix.toArray()),
                      void 0 !== this.skeleton &&
                        (i(e.skeletons, this.skeleton),
                        (r.skeleton = this.skeleton.uuid))),
                    void 0 !== this.material)
                  )
                    if (Array.isArray(this.material)) {
                      for (
                        var c = [], d = 0, f = this.material.length;
                        d < f;
                        d++
                      )
                        c.push(i(e.materials, this.material[d]));
                      r.material = c;
                    } else r.material = i(e.materials, this.material);
                  if (this.children.length > 0) {
                    r.children = [];
                    for (var h = 0; h < this.children.length; h++)
                      r.children.push(this.children[h].toJSON(e).object);
                  }
                  if (this.animations.length > 0) {
                    r.animations = [];
                    for (var p = 0; p < this.animations.length; p++) {
                      var v = this.animations[p];
                      r.animations.push(i(e.animations, v));
                    }
                  }
                  if (t) {
                    var m = M(e.geometries),
                      g = M(e.materials),
                      y = M(e.textures),
                      b = M(e.images),
                      _ = M(e.shapes),
                      x = M(e.skeletons),
                      S = M(e.animations),
                      w = M(e.nodes);
                    m.length > 0 && (n.geometries = m),
                      g.length > 0 && (n.materials = g),
                      y.length > 0 && (n.textures = y),
                      b.length > 0 && (n.images = b),
                      _.length > 0 && (n.shapes = _),
                      x.length > 0 && (n.skeletons = x),
                      S.length > 0 && (n.animations = S),
                      w.length > 0 && (n.nodes = w);
                  }
                  return (n.object = r), n;
                  function M(e) {
                    var t = [];
                    for (var n in e) {
                      var r = e[n];
                      delete r.metadata, t.push(r);
                    }
                    return t;
                  }
                },
              },
              {
                key: "clone",
                value: function (e) {
                  return new this.constructor().copy(this, e);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  var t =
                    !(arguments.length > 1 && void 0 !== arguments[1]) ||
                    arguments[1];
                  if (
                    ((this.name = e.name),
                    this.up.copy(e.up),
                    this.position.copy(e.position),
                    (this.rotation.order = e.rotation.order),
                    this.quaternion.copy(e.quaternion),
                    this.scale.copy(e.scale),
                    this.matrix.copy(e.matrix),
                    this.matrixWorld.copy(e.matrixWorld),
                    (this.matrixAutoUpdate = e.matrixAutoUpdate),
                    (this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate),
                    (this.matrixWorldAutoUpdate = e.matrixWorldAutoUpdate),
                    (this.layers.mask = e.layers.mask),
                    (this.visible = e.visible),
                    (this.castShadow = e.castShadow),
                    (this.receiveShadow = e.receiveShadow),
                    (this.frustumCulled = e.frustumCulled),
                    (this.renderOrder = e.renderOrder),
                    (this.animations = e.animations),
                    (this.userData = JSON.parse(JSON.stringify(e.userData))),
                    !0 === t)
                  )
                    for (var n = 0; n < e.children.length; n++) {
                      var r = e.children[n];
                      this.add(r.clone());
                    }
                  return this;
                },
              },
            ]),
            n
          );
        })(Kn);
      (Hi.DEFAULT_UP = new Zr(0, 1, 0)),
        (Hi.DEFAULT_MATRIX_AUTO_UPDATE = !0),
        (Hi.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = !0);
      var Vi = new Zr(),
        Gi = new Zr(),
        Wi = new Zr(),
        ji = new Zr(),
        Xi = new Zr(),
        qi = new Zr(),
        Yi = new Zr(),
        Ki = new Zr(),
        $i = new Zr(),
        Ji = new Zr(),
        Qi = !1,
        ea = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Zr(),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new Zr(),
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : new Zr();
            p(this, e), (this.a = t), (this.b = n), (this.c = r);
          }
          return (
            g(
              e,
              [
                {
                  key: "set",
                  value: function (e, t, n) {
                    return this.a.copy(e), this.b.copy(t), this.c.copy(n), this;
                  },
                },
                {
                  key: "setFromPointsAndIndices",
                  value: function (e, t, n, r) {
                    return (
                      this.a.copy(e[t]),
                      this.b.copy(e[n]),
                      this.c.copy(e[r]),
                      this
                    );
                  },
                },
                {
                  key: "setFromAttributeAndIndices",
                  value: function (e, t, n, r) {
                    return (
                      this.a.fromBufferAttribute(e, t),
                      this.b.fromBufferAttribute(e, n),
                      this.c.fromBufferAttribute(e, r),
                      this
                    );
                  },
                },
                {
                  key: "clone",
                  value: function () {
                    return new this.constructor().copy(this);
                  },
                },
                {
                  key: "copy",
                  value: function (e) {
                    return (
                      this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this
                    );
                  },
                },
                {
                  key: "getArea",
                  value: function () {
                    return (
                      Vi.subVectors(this.c, this.b),
                      Gi.subVectors(this.a, this.b),
                      0.5 * Vi.cross(Gi).length()
                    );
                  },
                },
                {
                  key: "getMidpoint",
                  value: function (e) {
                    return e
                      .addVectors(this.a, this.b)
                      .add(this.c)
                      .multiplyScalar(1 / 3);
                  },
                },
                {
                  key: "getNormal",
                  value: function (t) {
                    return e.getNormal(this.a, this.b, this.c, t);
                  },
                },
                {
                  key: "getPlane",
                  value: function (e) {
                    return e.setFromCoplanarPoints(this.a, this.b, this.c);
                  },
                },
                {
                  key: "getBarycoord",
                  value: function (t, n) {
                    return e.getBarycoord(t, this.a, this.b, this.c, n);
                  },
                },
                {
                  key: "getUV",
                  value: function (t, n, r, i, a) {
                    return (
                      !1 === Qi &&
                        (console.warn(
                          "THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."
                        ),
                        (Qi = !0)),
                      e.getInterpolation(t, this.a, this.b, this.c, n, r, i, a)
                    );
                  },
                },
                {
                  key: "getInterpolation",
                  value: function (t, n, r, i, a) {
                    return e.getInterpolation(
                      t,
                      this.a,
                      this.b,
                      this.c,
                      n,
                      r,
                      i,
                      a
                    );
                  },
                },
                {
                  key: "containsPoint",
                  value: function (t) {
                    return e.containsPoint(t, this.a, this.b, this.c);
                  },
                },
                {
                  key: "isFrontFacing",
                  value: function (t) {
                    return e.isFrontFacing(this.a, this.b, this.c, t);
                  },
                },
                {
                  key: "intersectsBox",
                  value: function (e) {
                    return e.intersectsTriangle(this);
                  },
                },
                {
                  key: "closestPointToPoint",
                  value: function (e, t) {
                    var n,
                      r,
                      i = this.a,
                      a = this.b,
                      o = this.c;
                    Xi.subVectors(a, i),
                      qi.subVectors(o, i),
                      Ki.subVectors(e, i);
                    var s = Xi.dot(Ki),
                      l = qi.dot(Ki);
                    if (s <= 0 && l <= 0) return t.copy(i);
                    $i.subVectors(e, a);
                    var u = Xi.dot($i),
                      c = qi.dot($i);
                    if (u >= 0 && c <= u) return t.copy(a);
                    var d = s * c - u * l;
                    if (d <= 0 && s >= 0 && u <= 0)
                      return (
                        (n = s / (s - u)), t.copy(i).addScaledVector(Xi, n)
                      );
                    Ji.subVectors(e, o);
                    var f = Xi.dot(Ji),
                      h = qi.dot(Ji);
                    if (h >= 0 && f <= h) return t.copy(o);
                    var p = f * l - s * h;
                    if (p <= 0 && l >= 0 && h <= 0)
                      return (
                        (r = l / (l - h)), t.copy(i).addScaledVector(qi, r)
                      );
                    var v = u * h - f * c;
                    if (v <= 0 && c - u >= 0 && f - h >= 0)
                      return (
                        Yi.subVectors(o, a),
                        (r = (c - u) / (c - u + (f - h))),
                        t.copy(a).addScaledVector(Yi, r)
                      );
                    var m = 1 / (v + p + d);
                    return (
                      (n = p * m),
                      (r = d * m),
                      t.copy(i).addScaledVector(Xi, n).addScaledVector(qi, r)
                    );
                  },
                },
                {
                  key: "equals",
                  value: function (e) {
                    return (
                      e.a.equals(this.a) &&
                      e.b.equals(this.b) &&
                      e.c.equals(this.c)
                    );
                  },
                },
              ],
              [
                {
                  key: "getNormal",
                  value: function (e, t, n, r) {
                    r.subVectors(n, t), Vi.subVectors(e, t), r.cross(Vi);
                    var i = r.lengthSq();
                    return i > 0
                      ? r.multiplyScalar(1 / Math.sqrt(i))
                      : r.set(0, 0, 0);
                  },
                },
                {
                  key: "getBarycoord",
                  value: function (e, t, n, r, i) {
                    Vi.subVectors(r, t),
                      Gi.subVectors(n, t),
                      Wi.subVectors(e, t);
                    var a = Vi.dot(Vi),
                      o = Vi.dot(Gi),
                      s = Vi.dot(Wi),
                      l = Gi.dot(Gi),
                      u = Gi.dot(Wi),
                      c = a * l - o * o;
                    if (0 === c) return i.set(-2, -1, -1);
                    var d = 1 / c,
                      f = (l * s - o * u) * d,
                      h = (a * u - o * s) * d;
                    return i.set(1 - f - h, h, f);
                  },
                },
                {
                  key: "containsPoint",
                  value: function (e, t, n, r) {
                    return (
                      this.getBarycoord(e, t, n, r, ji),
                      ji.x >= 0 && ji.y >= 0 && ji.x + ji.y <= 1
                    );
                  },
                },
                {
                  key: "getUV",
                  value: function (e, t, n, r, i, a, o, s) {
                    return (
                      !1 === Qi &&
                        (console.warn(
                          "THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."
                        ),
                        (Qi = !0)),
                      this.getInterpolation(e, t, n, r, i, a, o, s)
                    );
                  },
                },
                {
                  key: "getInterpolation",
                  value: function (e, t, n, r, i, a, o, s) {
                    return (
                      this.getBarycoord(e, t, n, r, ji),
                      s.setScalar(0),
                      s.addScaledVector(i, ji.x),
                      s.addScaledVector(a, ji.y),
                      s.addScaledVector(o, ji.z),
                      s
                    );
                  },
                },
                {
                  key: "isFrontFacing",
                  value: function (e, t, n, r) {
                    return (
                      Vi.subVectors(n, t),
                      Gi.subVectors(e, t),
                      Vi.cross(Gi).dot(r) < 0
                    );
                  },
                },
              ]
            ),
            e
          );
        })(),
        ta = 0,
        na = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e;
            return (
              p(this, n),
              ((e = t.call(this)).isMaterial = !0),
              Object.defineProperty(E(e), "id", { value: ta++ }),
              (e.uuid = tr()),
              (e.name = ""),
              (e.type = "Material"),
              (e.blending = K),
              (e.side = W),
              (e.vertexColors = !1),
              (e.opacity = 1),
              (e.transparent = !1),
              (e.blendSrc = ce),
              (e.blendDst = de),
              (e.blendEquation = te),
              (e.blendSrcAlpha = null),
              (e.blendDstAlpha = null),
              (e.blendEquationAlpha = null),
              (e.depthFunc = _e),
              (e.depthTest = !0),
              (e.depthWrite = !0),
              (e.stencilWriteMask = 255),
              (e.stencilFunc = Un),
              (e.stencilRef = 0),
              (e.stencilFuncMask = 255),
              (e.stencilFail = wn),
              (e.stencilZFail = wn),
              (e.stencilZPass = wn),
              (e.stencilWrite = !1),
              (e.clippingPlanes = null),
              (e.clipIntersection = !1),
              (e.clipShadows = !1),
              (e.shadowSide = null),
              (e.colorWrite = !0),
              (e.precision = null),
              (e.polygonOffset = !1),
              (e.polygonOffsetFactor = 0),
              (e.polygonOffsetUnits = 0),
              (e.dithering = !1),
              (e.alphaToCoverage = !1),
              (e.premultipliedAlpha = !1),
              (e.forceSinglePass = !1),
              (e.visible = !0),
              (e.toneMapped = !0),
              (e.userData = {}),
              (e.version = 0),
              (e._alphaTest = 0),
              e
            );
          }
          return (
            g(n, [
              {
                key: "alphaTest",
                get: function () {
                  return this._alphaTest;
                },
                set: function (e) {
                  this._alphaTest > 0 !== e > 0 && this.version++,
                    (this._alphaTest = e);
                },
              },
              { key: "onBuild", value: function () {} },
              { key: "onBeforeRender", value: function () {} },
              { key: "onBeforeCompile", value: function () {} },
              {
                key: "customProgramCacheKey",
                value: function () {
                  return this.onBeforeCompile.toString();
                },
              },
              {
                key: "setValues",
                value: function (e) {
                  if (void 0 !== e)
                    for (var t in e) {
                      var n = e[t];
                      if (void 0 !== n) {
                        var r = this[t];
                        void 0 !== r
                          ? r && r.isColor
                            ? r.set(n)
                            : r && r.isVector3 && n && n.isVector3
                            ? r.copy(n)
                            : (this[t] = n)
                          : console.warn(
                              "THREE.Material: '"
                                .concat(t, "' is not a property of THREE.")
                                .concat(this.type, ".")
                            );
                      } else
                        console.warn(
                          "THREE.Material: parameter '".concat(
                            t,
                            "' has value of undefined."
                          )
                        );
                    }
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = void 0 === e || "string" === typeof e;
                  t && (e = { textures: {}, images: {} });
                  var n = {
                    metadata: {
                      version: 4.5,
                      type: "Material",
                      generator: "Material.toJSON",
                    },
                  };
                  function r(e) {
                    var t = [];
                    for (var n in e) {
                      var r = e[n];
                      delete r.metadata, t.push(r);
                    }
                    return t;
                  }
                  if (
                    ((n.uuid = this.uuid),
                    (n.type = this.type),
                    "" !== this.name && (n.name = this.name),
                    this.color &&
                      this.color.isColor &&
                      (n.color = this.color.getHex()),
                    void 0 !== this.roughness && (n.roughness = this.roughness),
                    void 0 !== this.metalness && (n.metalness = this.metalness),
                    void 0 !== this.sheen && (n.sheen = this.sheen),
                    this.sheenColor &&
                      this.sheenColor.isColor &&
                      (n.sheenColor = this.sheenColor.getHex()),
                    void 0 !== this.sheenRoughness &&
                      (n.sheenRoughness = this.sheenRoughness),
                    this.emissive &&
                      this.emissive.isColor &&
                      (n.emissive = this.emissive.getHex()),
                    this.emissiveIntensity &&
                      1 !== this.emissiveIntensity &&
                      (n.emissiveIntensity = this.emissiveIntensity),
                    this.specular &&
                      this.specular.isColor &&
                      (n.specular = this.specular.getHex()),
                    void 0 !== this.specularIntensity &&
                      (n.specularIntensity = this.specularIntensity),
                    this.specularColor &&
                      this.specularColor.isColor &&
                      (n.specularColor = this.specularColor.getHex()),
                    void 0 !== this.shininess && (n.shininess = this.shininess),
                    void 0 !== this.clearcoat && (n.clearcoat = this.clearcoat),
                    void 0 !== this.clearcoatRoughness &&
                      (n.clearcoatRoughness = this.clearcoatRoughness),
                    this.clearcoatMap &&
                      this.clearcoatMap.isTexture &&
                      (n.clearcoatMap = this.clearcoatMap.toJSON(e).uuid),
                    this.clearcoatRoughnessMap &&
                      this.clearcoatRoughnessMap.isTexture &&
                      (n.clearcoatRoughnessMap =
                        this.clearcoatRoughnessMap.toJSON(e).uuid),
                    this.clearcoatNormalMap &&
                      this.clearcoatNormalMap.isTexture &&
                      ((n.clearcoatNormalMap =
                        this.clearcoatNormalMap.toJSON(e).uuid),
                      (n.clearcoatNormalScale =
                        this.clearcoatNormalScale.toArray())),
                    void 0 !== this.iridescence &&
                      (n.iridescence = this.iridescence),
                    void 0 !== this.iridescenceIOR &&
                      (n.iridescenceIOR = this.iridescenceIOR),
                    void 0 !== this.iridescenceThicknessRange &&
                      (n.iridescenceThicknessRange =
                        this.iridescenceThicknessRange),
                    this.iridescenceMap &&
                      this.iridescenceMap.isTexture &&
                      (n.iridescenceMap = this.iridescenceMap.toJSON(e).uuid),
                    this.iridescenceThicknessMap &&
                      this.iridescenceThicknessMap.isTexture &&
                      (n.iridescenceThicknessMap =
                        this.iridescenceThicknessMap.toJSON(e).uuid),
                    this.map &&
                      this.map.isTexture &&
                      (n.map = this.map.toJSON(e).uuid),
                    this.matcap &&
                      this.matcap.isTexture &&
                      (n.matcap = this.matcap.toJSON(e).uuid),
                    this.alphaMap &&
                      this.alphaMap.isTexture &&
                      (n.alphaMap = this.alphaMap.toJSON(e).uuid),
                    this.lightMap &&
                      this.lightMap.isTexture &&
                      ((n.lightMap = this.lightMap.toJSON(e).uuid),
                      (n.lightMapIntensity = this.lightMapIntensity)),
                    this.aoMap &&
                      this.aoMap.isTexture &&
                      ((n.aoMap = this.aoMap.toJSON(e).uuid),
                      (n.aoMapIntensity = this.aoMapIntensity)),
                    this.bumpMap &&
                      this.bumpMap.isTexture &&
                      ((n.bumpMap = this.bumpMap.toJSON(e).uuid),
                      (n.bumpScale = this.bumpScale)),
                    this.normalMap &&
                      this.normalMap.isTexture &&
                      ((n.normalMap = this.normalMap.toJSON(e).uuid),
                      (n.normalMapType = this.normalMapType),
                      (n.normalScale = this.normalScale.toArray())),
                    this.displacementMap &&
                      this.displacementMap.isTexture &&
                      ((n.displacementMap =
                        this.displacementMap.toJSON(e).uuid),
                      (n.displacementScale = this.displacementScale),
                      (n.displacementBias = this.displacementBias)),
                    this.roughnessMap &&
                      this.roughnessMap.isTexture &&
                      (n.roughnessMap = this.roughnessMap.toJSON(e).uuid),
                    this.metalnessMap &&
                      this.metalnessMap.isTexture &&
                      (n.metalnessMap = this.metalnessMap.toJSON(e).uuid),
                    this.emissiveMap &&
                      this.emissiveMap.isTexture &&
                      (n.emissiveMap = this.emissiveMap.toJSON(e).uuid),
                    this.specularMap &&
                      this.specularMap.isTexture &&
                      (n.specularMap = this.specularMap.toJSON(e).uuid),
                    this.specularIntensityMap &&
                      this.specularIntensityMap.isTexture &&
                      (n.specularIntensityMap =
                        this.specularIntensityMap.toJSON(e).uuid),
                    this.specularColorMap &&
                      this.specularColorMap.isTexture &&
                      (n.specularColorMap =
                        this.specularColorMap.toJSON(e).uuid),
                    this.envMap &&
                      this.envMap.isTexture &&
                      ((n.envMap = this.envMap.toJSON(e).uuid),
                      void 0 !== this.combine && (n.combine = this.combine)),
                    void 0 !== this.envMapIntensity &&
                      (n.envMapIntensity = this.envMapIntensity),
                    void 0 !== this.reflectivity &&
                      (n.reflectivity = this.reflectivity),
                    void 0 !== this.refractionRatio &&
                      (n.refractionRatio = this.refractionRatio),
                    this.gradientMap &&
                      this.gradientMap.isTexture &&
                      (n.gradientMap = this.gradientMap.toJSON(e).uuid),
                    void 0 !== this.transmission &&
                      (n.transmission = this.transmission),
                    this.transmissionMap &&
                      this.transmissionMap.isTexture &&
                      (n.transmissionMap = this.transmissionMap.toJSON(e).uuid),
                    void 0 !== this.thickness && (n.thickness = this.thickness),
                    this.thicknessMap &&
                      this.thicknessMap.isTexture &&
                      (n.thicknessMap = this.thicknessMap.toJSON(e).uuid),
                    void 0 !== this.attenuationDistance &&
                      this.attenuationDistance !== 1 / 0 &&
                      (n.attenuationDistance = this.attenuationDistance),
                    void 0 !== this.attenuationColor &&
                      (n.attenuationColor = this.attenuationColor.getHex()),
                    void 0 !== this.size && (n.size = this.size),
                    null !== this.shadowSide &&
                      (n.shadowSide = this.shadowSide),
                    void 0 !== this.sizeAttenuation &&
                      (n.sizeAttenuation = this.sizeAttenuation),
                    this.blending !== K && (n.blending = this.blending),
                    this.side !== W && (n.side = this.side),
                    this.vertexColors && (n.vertexColors = !0),
                    this.opacity < 1 && (n.opacity = this.opacity),
                    !0 === this.transparent &&
                      (n.transparent = this.transparent),
                    (n.depthFunc = this.depthFunc),
                    (n.depthTest = this.depthTest),
                    (n.depthWrite = this.depthWrite),
                    (n.colorWrite = this.colorWrite),
                    (n.stencilWrite = this.stencilWrite),
                    (n.stencilWriteMask = this.stencilWriteMask),
                    (n.stencilFunc = this.stencilFunc),
                    (n.stencilRef = this.stencilRef),
                    (n.stencilFuncMask = this.stencilFuncMask),
                    (n.stencilFail = this.stencilFail),
                    (n.stencilZFail = this.stencilZFail),
                    (n.stencilZPass = this.stencilZPass),
                    void 0 !== this.rotation &&
                      0 !== this.rotation &&
                      (n.rotation = this.rotation),
                    !0 === this.polygonOffset && (n.polygonOffset = !0),
                    0 !== this.polygonOffsetFactor &&
                      (n.polygonOffsetFactor = this.polygonOffsetFactor),
                    0 !== this.polygonOffsetUnits &&
                      (n.polygonOffsetUnits = this.polygonOffsetUnits),
                    void 0 !== this.linewidth &&
                      1 !== this.linewidth &&
                      (n.linewidth = this.linewidth),
                    void 0 !== this.dashSize && (n.dashSize = this.dashSize),
                    void 0 !== this.gapSize && (n.gapSize = this.gapSize),
                    void 0 !== this.scale && (n.scale = this.scale),
                    !0 === this.dithering && (n.dithering = !0),
                    this.alphaTest > 0 && (n.alphaTest = this.alphaTest),
                    !0 === this.alphaToCoverage &&
                      (n.alphaToCoverage = this.alphaToCoverage),
                    !0 === this.premultipliedAlpha &&
                      (n.premultipliedAlpha = this.premultipliedAlpha),
                    !0 === this.forceSinglePass &&
                      (n.forceSinglePass = this.forceSinglePass),
                    !0 === this.wireframe && (n.wireframe = this.wireframe),
                    this.wireframeLinewidth > 1 &&
                      (n.wireframeLinewidth = this.wireframeLinewidth),
                    "round" !== this.wireframeLinecap &&
                      (n.wireframeLinecap = this.wireframeLinecap),
                    "round" !== this.wireframeLinejoin &&
                      (n.wireframeLinejoin = this.wireframeLinejoin),
                    !0 === this.flatShading &&
                      (n.flatShading = this.flatShading),
                    !1 === this.visible && (n.visible = !1),
                    !1 === this.toneMapped && (n.toneMapped = !1),
                    !1 === this.fog && (n.fog = !1),
                    Object.keys(this.userData).length > 0 &&
                      (n.userData = this.userData),
                    t)
                  ) {
                    var i = r(e.textures),
                      a = r(e.images);
                    i.length > 0 && (n.textures = i),
                      a.length > 0 && (n.images = a);
                  }
                  return n;
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  (this.name = e.name),
                    (this.blending = e.blending),
                    (this.side = e.side),
                    (this.vertexColors = e.vertexColors),
                    (this.opacity = e.opacity),
                    (this.transparent = e.transparent),
                    (this.blendSrc = e.blendSrc),
                    (this.blendDst = e.blendDst),
                    (this.blendEquation = e.blendEquation),
                    (this.blendSrcAlpha = e.blendSrcAlpha),
                    (this.blendDstAlpha = e.blendDstAlpha),
                    (this.blendEquationAlpha = e.blendEquationAlpha),
                    (this.depthFunc = e.depthFunc),
                    (this.depthTest = e.depthTest),
                    (this.depthWrite = e.depthWrite),
                    (this.stencilWriteMask = e.stencilWriteMask),
                    (this.stencilFunc = e.stencilFunc),
                    (this.stencilRef = e.stencilRef),
                    (this.stencilFuncMask = e.stencilFuncMask),
                    (this.stencilFail = e.stencilFail),
                    (this.stencilZFail = e.stencilZFail),
                    (this.stencilZPass = e.stencilZPass),
                    (this.stencilWrite = e.stencilWrite);
                  var t = e.clippingPlanes,
                    n = null;
                  if (null !== t) {
                    var r = t.length;
                    n = new Array(r);
                    for (var i = 0; i !== r; ++i) n[i] = t[i].clone();
                  }
                  return (
                    (this.clippingPlanes = n),
                    (this.clipIntersection = e.clipIntersection),
                    (this.clipShadows = e.clipShadows),
                    (this.shadowSide = e.shadowSide),
                    (this.colorWrite = e.colorWrite),
                    (this.precision = e.precision),
                    (this.polygonOffset = e.polygonOffset),
                    (this.polygonOffsetFactor = e.polygonOffsetFactor),
                    (this.polygonOffsetUnits = e.polygonOffsetUnits),
                    (this.dithering = e.dithering),
                    (this.alphaTest = e.alphaTest),
                    (this.alphaToCoverage = e.alphaToCoverage),
                    (this.premultipliedAlpha = e.premultipliedAlpha),
                    (this.forceSinglePass = e.forceSinglePass),
                    (this.visible = e.visible),
                    (this.toneMapped = e.toneMapped),
                    (this.userData = JSON.parse(JSON.stringify(e.userData))),
                    this
                  );
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.dispatchEvent({ type: "dispose" });
                },
              },
              {
                key: "needsUpdate",
                set: function (e) {
                  !0 === e && this.version++;
                },
              },
            ]),
            n
          );
        })(Kn),
        ra = {
          aliceblue: 15792383,
          antiquewhite: 16444375,
          aqua: 65535,
          aquamarine: 8388564,
          azure: 15794175,
          beige: 16119260,
          bisque: 16770244,
          black: 0,
          blanchedalmond: 16772045,
          blue: 255,
          blueviolet: 9055202,
          brown: 10824234,
          burlywood: 14596231,
          cadetblue: 6266528,
          chartreuse: 8388352,
          chocolate: 13789470,
          coral: 16744272,
          cornflowerblue: 6591981,
          cornsilk: 16775388,
          crimson: 14423100,
          cyan: 65535,
          darkblue: 139,
          darkcyan: 35723,
          darkgoldenrod: 12092939,
          darkgray: 11119017,
          darkgreen: 25600,
          darkgrey: 11119017,
          darkkhaki: 12433259,
          darkmagenta: 9109643,
          darkolivegreen: 5597999,
          darkorange: 16747520,
          darkorchid: 10040012,
          darkred: 9109504,
          darksalmon: 15308410,
          darkseagreen: 9419919,
          darkslateblue: 4734347,
          darkslategray: 3100495,
          darkslategrey: 3100495,
          darkturquoise: 52945,
          darkviolet: 9699539,
          deeppink: 16716947,
          deepskyblue: 49151,
          dimgray: 6908265,
          dimgrey: 6908265,
          dodgerblue: 2003199,
          firebrick: 11674146,
          floralwhite: 16775920,
          forestgreen: 2263842,
          fuchsia: 16711935,
          gainsboro: 14474460,
          ghostwhite: 16316671,
          gold: 16766720,
          goldenrod: 14329120,
          gray: 8421504,
          green: 32768,
          greenyellow: 11403055,
          grey: 8421504,
          honeydew: 15794160,
          hotpink: 16738740,
          indianred: 13458524,
          indigo: 4915330,
          ivory: 16777200,
          khaki: 15787660,
          lavender: 15132410,
          lavenderblush: 16773365,
          lawngreen: 8190976,
          lemonchiffon: 16775885,
          lightblue: 11393254,
          lightcoral: 15761536,
          lightcyan: 14745599,
          lightgoldenrodyellow: 16448210,
          lightgray: 13882323,
          lightgreen: 9498256,
          lightgrey: 13882323,
          lightpink: 16758465,
          lightsalmon: 16752762,
          lightseagreen: 2142890,
          lightskyblue: 8900346,
          lightslategray: 7833753,
          lightslategrey: 7833753,
          lightsteelblue: 11584734,
          lightyellow: 16777184,
          lime: 65280,
          limegreen: 3329330,
          linen: 16445670,
          magenta: 16711935,
          maroon: 8388608,
          mediumaquamarine: 6737322,
          mediumblue: 205,
          mediumorchid: 12211667,
          mediumpurple: 9662683,
          mediumseagreen: 3978097,
          mediumslateblue: 8087790,
          mediumspringgreen: 64154,
          mediumturquoise: 4772300,
          mediumvioletred: 13047173,
          midnightblue: 1644912,
          mintcream: 16121850,
          mistyrose: 16770273,
          moccasin: 16770229,
          navajowhite: 16768685,
          navy: 128,
          oldlace: 16643558,
          olive: 8421376,
          olivedrab: 7048739,
          orange: 16753920,
          orangered: 16729344,
          orchid: 14315734,
          palegoldenrod: 15657130,
          palegreen: 10025880,
          paleturquoise: 11529966,
          palevioletred: 14381203,
          papayawhip: 16773077,
          peachpuff: 16767673,
          peru: 13468991,
          pink: 16761035,
          plum: 14524637,
          powderblue: 11591910,
          purple: 8388736,
          rebeccapurple: 6697881,
          red: 16711680,
          rosybrown: 12357519,
          royalblue: 4286945,
          saddlebrown: 9127187,
          salmon: 16416882,
          sandybrown: 16032864,
          seagreen: 3050327,
          seashell: 16774638,
          sienna: 10506797,
          silver: 12632256,
          skyblue: 8900331,
          slateblue: 6970061,
          slategray: 7372944,
          slategrey: 7372944,
          snow: 16775930,
          springgreen: 65407,
          steelblue: 4620980,
          tan: 13808780,
          teal: 32896,
          thistle: 14204888,
          tomato: 16737095,
          turquoise: 4251856,
          violet: 15631086,
          wheat: 16113331,
          white: 16777215,
          whitesmoke: 16119285,
          yellow: 16776960,
          yellowgreen: 10145074,
        },
        ia = { h: 0, s: 0, l: 0 },
        aa = { h: 0, s: 0, l: 0 };
      function oa(e, t, n) {
        return (
          n < 0 && (n += 1),
          n > 1 && (n -= 1),
          n < 1 / 6
            ? e + 6 * (t - e) * n
            : n < 0.5
            ? t
            : n < 2 / 3
            ? e + 6 * (t - e) * (2 / 3 - n)
            : e
        );
      }
      var sa = (function (e) {
          function t(e, n, r) {
            return (
              p(this, t),
              (this.isColor = !0),
              (this.r = 1),
              (this.g = 1),
              (this.b = 1),
              void 0 === n && void 0 === r ? this.set(e) : this.setRGB(e, n, r)
            );
          }
          return (
            g(t, [
              {
                key: "set",
                value: function (e) {
                  return (
                    e && e.isColor
                      ? this.copy(e)
                      : "number" === typeof e
                      ? this.setHex(e)
                      : "string" === typeof e && this.setStyle(e),
                    this
                  );
                },
              },
              {
                key: "setScalar",
                value: function (e) {
                  return (this.r = e), (this.g = e), (this.b = e), this;
                },
              },
              {
                key: "setHex",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : bn;
                  return (
                    (e = Math.floor(e)),
                    (this.r = ((e >> 16) & 255) / 255),
                    (this.g = ((e >> 8) & 255) / 255),
                    (this.b = (255 & e) / 255),
                    Tr.toWorkingColorSpace(this, t),
                    this
                  );
                },
              },
              {
                key: "setRGB",
                value: function (e, t, n) {
                  var r =
                    arguments.length > 3 && void 0 !== arguments[3]
                      ? arguments[3]
                      : Tr.workingColorSpace;
                  return (
                    (this.r = e),
                    (this.g = t),
                    (this.b = n),
                    Tr.toWorkingColorSpace(this, r),
                    this
                  );
                },
              },
              {
                key: "setHSL",
                value: function (e, t, n) {
                  var r =
                    arguments.length > 3 && void 0 !== arguments[3]
                      ? arguments[3]
                      : Tr.workingColorSpace;
                  if (
                    ((e = rr(e, 1)),
                    (t = nr(t, 0, 1)),
                    (n = nr(n, 0, 1)),
                    0 === t)
                  )
                    this.r = this.g = this.b = n;
                  else {
                    var i = n <= 0.5 ? n * (1 + t) : n + t - n * t,
                      a = 2 * n - i;
                    (this.r = oa(a, i, e + 1 / 3)),
                      (this.g = oa(a, i, e)),
                      (this.b = oa(a, i, e - 1 / 3));
                  }
                  return Tr.toWorkingColorSpace(this, r), this;
                },
              },
              {
                key: "setStyle",
                value: function (e) {
                  var t,
                    n =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : bn;
                  function r(t) {
                    void 0 !== t &&
                      parseFloat(t) < 1 &&
                      console.warn(
                        "THREE.Color: Alpha component of " +
                          e +
                          " will be ignored."
                      );
                  }
                  if ((t = /^(\w+)\(([^\)]*)\)/.exec(e))) {
                    var i,
                      a = t[1],
                      o = t[2];
                    switch (a) {
                      case "rgb":
                      case "rgba":
                        if (
                          (i =
                            /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                              o
                            ))
                        )
                          return (
                            r(i[4]),
                            this.setRGB(
                              Math.min(255, parseInt(i[1], 10)) / 255,
                              Math.min(255, parseInt(i[2], 10)) / 255,
                              Math.min(255, parseInt(i[3], 10)) / 255,
                              n
                            )
                          );
                        if (
                          (i =
                            /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                              o
                            ))
                        )
                          return (
                            r(i[4]),
                            this.setRGB(
                              Math.min(100, parseInt(i[1], 10)) / 100,
                              Math.min(100, parseInt(i[2], 10)) / 100,
                              Math.min(100, parseInt(i[3], 10)) / 100,
                              n
                            )
                          );
                        break;
                      case "hsl":
                      case "hsla":
                        if (
                          (i =
                            /^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                              o
                            ))
                        )
                          return (
                            r(i[4]),
                            this.setHSL(
                              parseFloat(i[1]) / 360,
                              parseFloat(i[2]) / 100,
                              parseFloat(i[3]) / 100,
                              n
                            )
                          );
                        break;
                      default:
                        console.warn("THREE.Color: Unknown color model " + e);
                    }
                  } else if ((t = /^\#([A-Fa-f\d]+)$/.exec(e))) {
                    var s = t[1],
                      l = s.length;
                    if (3 === l)
                      return this.setRGB(
                        parseInt(s.charAt(0), 16) / 15,
                        parseInt(s.charAt(1), 16) / 15,
                        parseInt(s.charAt(2), 16) / 15,
                        n
                      );
                    if (6 === l) return this.setHex(parseInt(s, 16), n);
                    console.warn("THREE.Color: Invalid hex color " + e);
                  } else if (e && e.length > 0) return this.setColorName(e, n);
                  return this;
                },
              },
              {
                key: "setColorName",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : bn,
                    n = ra[e.toLowerCase()];
                  return (
                    void 0 !== n
                      ? this.setHex(n, t)
                      : console.warn("THREE.Color: Unknown color " + e),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor(this.r, this.g, this.b);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (this.r = e.r), (this.g = e.g), (this.b = e.b), this;
                },
              },
              {
                key: "copySRGBToLinear",
                value: function (e) {
                  return (
                    (this.r = _r(e.r)),
                    (this.g = _r(e.g)),
                    (this.b = _r(e.b)),
                    this
                  );
                },
              },
              {
                key: "copyLinearToSRGB",
                value: function (e) {
                  return (
                    (this.r = xr(e.r)),
                    (this.g = xr(e.g)),
                    (this.b = xr(e.b)),
                    this
                  );
                },
              },
              {
                key: "convertSRGBToLinear",
                value: function () {
                  return this.copySRGBToLinear(this), this;
                },
              },
              {
                key: "convertLinearToSRGB",
                value: function () {
                  return this.copyLinearToSRGB(this), this;
                },
              },
              {
                key: "getHex",
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : bn;
                  return (
                    Tr.fromWorkingColorSpace(la.copy(this), e),
                    65536 * Math.round(nr(255 * la.r, 0, 255)) +
                      256 * Math.round(nr(255 * la.g, 0, 255)) +
                      Math.round(nr(255 * la.b, 0, 255))
                  );
                },
              },
              {
                key: "getHexString",
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : bn;
                  return ("000000" + this.getHex(e).toString(16)).slice(-6);
                },
              },
              {
                key: "getHSL",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : Tr.workingColorSpace;
                  Tr.fromWorkingColorSpace(la.copy(this), t);
                  var n,
                    r,
                    i = la.r,
                    a = la.g,
                    o = la.b,
                    s = Math.max(i, a, o),
                    l = Math.min(i, a, o),
                    u = (l + s) / 2;
                  if (l === s) (n = 0), (r = 0);
                  else {
                    var c = s - l;
                    switch (
                      ((r = u <= 0.5 ? c / (s + l) : c / (2 - s - l)), s)
                    ) {
                      case i:
                        n = (a - o) / c + (a < o ? 6 : 0);
                        break;
                      case a:
                        n = (o - i) / c + 2;
                        break;
                      case o:
                        n = (i - a) / c + 4;
                    }
                    n /= 6;
                  }
                  return (e.h = n), (e.s = r), (e.l = u), e;
                },
              },
              {
                key: "getRGB",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : Tr.workingColorSpace;
                  return (
                    Tr.fromWorkingColorSpace(la.copy(this), t),
                    (e.r = la.r),
                    (e.g = la.g),
                    (e.b = la.b),
                    e
                  );
                },
              },
              {
                key: "getStyle",
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : bn;
                  Tr.fromWorkingColorSpace(la.copy(this), e);
                  var t = la.r,
                    n = la.g,
                    r = la.b;
                  return e !== bn
                    ? "color("
                        .concat(e, " ")
                        .concat(t.toFixed(3), " ")
                        .concat(n.toFixed(3), " ")
                        .concat(r.toFixed(3), ")")
                    : "rgb("
                        .concat(Math.round(255 * t), ",")
                        .concat(Math.round(255 * n), ",")
                        .concat(Math.round(255 * r), ")");
                },
              },
              {
                key: "offsetHSL",
                value: function (e, t, n) {
                  return (
                    this.getHSL(ia),
                    (ia.h += e),
                    (ia.s += t),
                    (ia.l += n),
                    this.setHSL(ia.h, ia.s, ia.l),
                    this
                  );
                },
              },
              {
                key: "add",
                value: function (e) {
                  return (
                    (this.r += e.r), (this.g += e.g), (this.b += e.b), this
                  );
                },
              },
              {
                key: "addColors",
                value: function (e, t) {
                  return (
                    (this.r = e.r + t.r),
                    (this.g = e.g + t.g),
                    (this.b = e.b + t.b),
                    this
                  );
                },
              },
              {
                key: "addScalar",
                value: function (e) {
                  return (this.r += e), (this.g += e), (this.b += e), this;
                },
              },
              {
                key: "sub",
                value: function (e) {
                  return (
                    (this.r = Math.max(0, this.r - e.r)),
                    (this.g = Math.max(0, this.g - e.g)),
                    (this.b = Math.max(0, this.b - e.b)),
                    this
                  );
                },
              },
              {
                key: "multiply",
                value: function (e) {
                  return (
                    (this.r *= e.r), (this.g *= e.g), (this.b *= e.b), this
                  );
                },
              },
              {
                key: "multiplyScalar",
                value: function (e) {
                  return (this.r *= e), (this.g *= e), (this.b *= e), this;
                },
              },
              {
                key: "lerp",
                value: function (e, t) {
                  return (
                    (this.r += (e.r - this.r) * t),
                    (this.g += (e.g - this.g) * t),
                    (this.b += (e.b - this.b) * t),
                    this
                  );
                },
              },
              {
                key: "lerpColors",
                value: function (e, t, n) {
                  return (
                    (this.r = e.r + (t.r - e.r) * n),
                    (this.g = e.g + (t.g - e.g) * n),
                    (this.b = e.b + (t.b - e.b) * n),
                    this
                  );
                },
              },
              {
                key: "lerpHSL",
                value: function (e, t) {
                  this.getHSL(ia), e.getHSL(aa);
                  var n = ir(ia.h, aa.h, t),
                    r = ir(ia.s, aa.s, t),
                    i = ir(ia.l, aa.l, t);
                  return this.setHSL(n, r, i), this;
                },
              },
              {
                key: "setFromVector3",
                value: function (e) {
                  return (this.r = e.x), (this.g = e.y), (this.b = e.z), this;
                },
              },
              {
                key: "applyMatrix3",
                value: function (e) {
                  var t = this.r,
                    n = this.g,
                    r = this.b,
                    i = e.elements;
                  return (
                    (this.r = i[0] * t + i[3] * n + i[6] * r),
                    (this.g = i[1] * t + i[4] * n + i[7] * r),
                    (this.b = i[2] * t + i[5] * n + i[8] * r),
                    this
                  );
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return e.r === this.r && e.g === this.g && e.b === this.b;
                },
              },
              {
                key: "fromArray",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0;
                  return (
                    (this.r = e[t]),
                    (this.g = e[t + 1]),
                    (this.b = e[t + 2]),
                    this
                  );
                },
              },
              {
                key: "toArray",
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : [],
                    t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0;
                  return (
                    (e[t] = this.r), (e[t + 1] = this.g), (e[t + 2] = this.b), e
                  );
                },
              },
              {
                key: "fromBufferAttribute",
                value: function (e, t) {
                  return (
                    (this.r = e.getX(t)),
                    (this.g = e.getY(t)),
                    (this.b = e.getZ(t)),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  return this.getHex();
                },
              },
              {
                key: Symbol.iterator,
                value: I().mark(function e() {
                  return I().wrap(
                    function (e) {
                      for (;;)
                        switch ((e.prev = e.next)) {
                          case 0:
                            return (e.next = 2), this.r;
                          case 2:
                            return (e.next = 4), this.g;
                          case 4:
                            return (e.next = 6), this.b;
                          case 6:
                          case "end":
                            return e.stop();
                        }
                    },
                    e,
                    this
                  );
                }),
              },
            ]),
            t
          );
        })(),
        la = new sa();
      sa.NAMES = ra;
      var ua = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return (
              p(this, n),
              ((r = t.call(this)).isMeshBasicMaterial = !0),
              (r.type = "MeshBasicMaterial"),
              (r.color = new sa(16777215)),
              (r.map = null),
              (r.lightMap = null),
              (r.lightMapIntensity = 1),
              (r.aoMap = null),
              (r.aoMapIntensity = 1),
              (r.specularMap = null),
              (r.alphaMap = null),
              (r.envMap = null),
              (r.combine = Ee),
              (r.reflectivity = 1),
              (r.refractionRatio = 0.98),
              (r.wireframe = !1),
              (r.wireframeLinewidth = 1),
              (r.wireframeLinecap = "round"),
              (r.wireframeLinejoin = "round"),
              (r.fog = !0),
              r.setValues(e),
              r
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    this.color.copy(e.color),
                    (this.map = e.map),
                    (this.lightMap = e.lightMap),
                    (this.lightMapIntensity = e.lightMapIntensity),
                    (this.aoMap = e.aoMap),
                    (this.aoMapIntensity = e.aoMapIntensity),
                    (this.specularMap = e.specularMap),
                    (this.alphaMap = e.alphaMap),
                    (this.envMap = e.envMap),
                    (this.combine = e.combine),
                    (this.reflectivity = e.reflectivity),
                    (this.refractionRatio = e.refractionRatio),
                    (this.wireframe = e.wireframe),
                    (this.wireframeLinewidth = e.wireframeLinewidth),
                    (this.wireframeLinecap = e.wireframeLinecap),
                    (this.wireframeLinejoin = e.wireframeLinejoin),
                    (this.fog = e.fog),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(na),
        ca = da();
      function da() {
        for (
          var e = new ArrayBuffer(4),
            t = new Float32Array(e),
            n = new Uint32Array(e),
            r = new Uint32Array(512),
            i = new Uint32Array(512),
            a = 0;
          a < 256;
          ++a
        ) {
          var o = a - 127;
          o < -27
            ? ((r[a] = 0), (r[256 | a] = 32768), (i[a] = 24), (i[256 | a] = 24))
            : o < -14
            ? ((r[a] = 1024 >> (-o - 14)),
              (r[256 | a] = (1024 >> (-o - 14)) | 32768),
              (i[a] = -o - 1),
              (i[256 | a] = -o - 1))
            : o <= 15
            ? ((r[a] = (o + 15) << 10),
              (r[256 | a] = ((o + 15) << 10) | 32768),
              (i[a] = 13),
              (i[256 | a] = 13))
            : o < 128
            ? ((r[a] = 31744),
              (r[256 | a] = 64512),
              (i[a] = 24),
              (i[256 | a] = 24))
            : ((r[a] = 31744),
              (r[256 | a] = 64512),
              (i[a] = 13),
              (i[256 | a] = 13));
        }
        for (
          var s = new Uint32Array(2048),
            l = new Uint32Array(64),
            u = new Uint32Array(64),
            c = 1;
          c < 1024;
          ++c
        ) {
          for (var d = c << 13, f = 0; 0 === (8388608 & d); )
            (d <<= 1), (f -= 8388608);
          (d &= -8388609), (f += 947912704), (s[c] = d | f);
        }
        for (var h = 1024; h < 2048; ++h) s[h] = 939524096 + ((h - 1024) << 13);
        for (var p = 1; p < 31; ++p) l[p] = p << 23;
        (l[31] = 1199570944), (l[32] = 2147483648);
        for (var v = 33; v < 63; ++v) l[v] = 2147483648 + ((v - 32) << 23);
        l[63] = 3347054592;
        for (var m = 1; m < 64; ++m) 32 !== m && (u[m] = 1024);
        return {
          floatView: t,
          uint32View: n,
          baseTable: r,
          shiftTable: i,
          mantissaTable: s,
          exponentTable: l,
          offsetTable: u,
        };
      }
      function fa(e) {
        Math.abs(e) > 65504 &&
          console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),
          (e = nr(e, -65504, 65504)),
          (ca.floatView[0] = e);
        var t = ca.uint32View[0],
          n = (t >> 23) & 511;
        return ca.baseTable[n] + ((8388607 & t) >> ca.shiftTable[n]);
      }
      function ha(e) {
        var t = e >> 10;
        return (
          (ca.uint32View[0] =
            ca.mantissaTable[ca.offsetTable[t] + (1023 & e)] +
            ca.exponentTable[t]),
          ca.floatView[0]
        );
      }
      var pa = { toHalfFloat: fa, fromHalfFloat: ha },
        va = new Zr(),
        ma = new dr(),
        ga = (function () {
          function e(t, n) {
            var r =
              arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
            if ((p(this, e), Array.isArray(t)))
              throw new TypeError(
                "THREE.BufferAttribute: array should be a Typed Array."
              );
            (this.isBufferAttribute = !0),
              (this.name = ""),
              (this.array = t),
              (this.itemSize = n),
              (this.count = void 0 !== t ? t.length / n : 0),
              (this.normalized = r),
              (this.usage = zn),
              (this.updateRange = { offset: 0, count: -1 }),
              (this.version = 0);
          }
          return (
            g(e, [
              { key: "onUploadCallback", value: function () {} },
              {
                key: "needsUpdate",
                set: function (e) {
                  !0 === e && this.version++;
                },
              },
              {
                key: "setUsage",
                value: function (e) {
                  return (this.usage = e), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    (this.name = e.name),
                    (this.array = new e.array.constructor(e.array)),
                    (this.itemSize = e.itemSize),
                    (this.count = e.count),
                    (this.normalized = e.normalized),
                    (this.usage = e.usage),
                    this
                  );
                },
              },
              {
                key: "copyAt",
                value: function (e, t, n) {
                  (e *= this.itemSize), (n *= t.itemSize);
                  for (var r = 0, i = this.itemSize; r < i; r++)
                    this.array[e + r] = t.array[n + r];
                  return this;
                },
              },
              {
                key: "copyArray",
                value: function (e) {
                  return this.array.set(e), this;
                },
              },
              {
                key: "applyMatrix3",
                value: function (e) {
                  if (2 === this.itemSize)
                    for (var t = 0, n = this.count; t < n; t++)
                      ma.fromBufferAttribute(this, t),
                        ma.applyMatrix3(e),
                        this.setXY(t, ma.x, ma.y);
                  else if (3 === this.itemSize)
                    for (var r = 0, i = this.count; r < i; r++)
                      va.fromBufferAttribute(this, r),
                        va.applyMatrix3(e),
                        this.setXYZ(r, va.x, va.y, va.z);
                  return this;
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  for (var t = 0, n = this.count; t < n; t++)
                    va.fromBufferAttribute(this, t),
                      va.applyMatrix4(e),
                      this.setXYZ(t, va.x, va.y, va.z);
                  return this;
                },
              },
              {
                key: "applyNormalMatrix",
                value: function (e) {
                  for (var t = 0, n = this.count; t < n; t++)
                    va.fromBufferAttribute(this, t),
                      va.applyNormalMatrix(e),
                      this.setXYZ(t, va.x, va.y, va.z);
                  return this;
                },
              },
              {
                key: "transformDirection",
                value: function (e) {
                  for (var t = 0, n = this.count; t < n; t++)
                    va.fromBufferAttribute(this, t),
                      va.transformDirection(e),
                      this.setXYZ(t, va.x, va.y, va.z);
                  return this;
                },
              },
              {
                key: "set",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0;
                  return this.array.set(e, t), this;
                },
              },
              {
                key: "getX",
                value: function (e) {
                  var t = this.array[e * this.itemSize];
                  return this.normalized && (t = lr(t, this.array)), t;
                },
              },
              {
                key: "setX",
                value: function (e, t) {
                  return (
                    this.normalized && (t = ur(t, this.array)),
                    (this.array[e * this.itemSize] = t),
                    this
                  );
                },
              },
              {
                key: "getY",
                value: function (e) {
                  var t = this.array[e * this.itemSize + 1];
                  return this.normalized && (t = lr(t, this.array)), t;
                },
              },
              {
                key: "setY",
                value: function (e, t) {
                  return (
                    this.normalized && (t = ur(t, this.array)),
                    (this.array[e * this.itemSize + 1] = t),
                    this
                  );
                },
              },
              {
                key: "getZ",
                value: function (e) {
                  var t = this.array[e * this.itemSize + 2];
                  return this.normalized && (t = lr(t, this.array)), t;
                },
              },
              {
                key: "setZ",
                value: function (e, t) {
                  return (
                    this.normalized && (t = ur(t, this.array)),
                    (this.array[e * this.itemSize + 2] = t),
                    this
                  );
                },
              },
              {
                key: "getW",
                value: function (e) {
                  var t = this.array[e * this.itemSize + 3];
                  return this.normalized && (t = lr(t, this.array)), t;
                },
              },
              {
                key: "setW",
                value: function (e, t) {
                  return (
                    this.normalized && (t = ur(t, this.array)),
                    (this.array[e * this.itemSize + 3] = t),
                    this
                  );
                },
              },
              {
                key: "setXY",
                value: function (e, t, n) {
                  return (
                    (e *= this.itemSize),
                    this.normalized &&
                      ((t = ur(t, this.array)), (n = ur(n, this.array))),
                    (this.array[e + 0] = t),
                    (this.array[e + 1] = n),
                    this
                  );
                },
              },
              {
                key: "setXYZ",
                value: function (e, t, n, r) {
                  return (
                    (e *= this.itemSize),
                    this.normalized &&
                      ((t = ur(t, this.array)),
                      (n = ur(n, this.array)),
                      (r = ur(r, this.array))),
                    (this.array[e + 0] = t),
                    (this.array[e + 1] = n),
                    (this.array[e + 2] = r),
                    this
                  );
                },
              },
              {
                key: "setXYZW",
                value: function (e, t, n, r, i) {
                  return (
                    (e *= this.itemSize),
                    this.normalized &&
                      ((t = ur(t, this.array)),
                      (n = ur(n, this.array)),
                      (r = ur(r, this.array)),
                      (i = ur(i, this.array))),
                    (this.array[e + 0] = t),
                    (this.array[e + 1] = n),
                    (this.array[e + 2] = r),
                    (this.array[e + 3] = i),
                    this
                  );
                },
              },
              {
                key: "onUpload",
                value: function (e) {
                  return (this.onUploadCallback = e), this;
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor(this.array, this.itemSize).copy(
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = {
                    itemSize: this.itemSize,
                    type: this.array.constructor.name,
                    array: Array.from(this.array),
                    normalized: this.normalized,
                  };
                  return (
                    "" !== this.name && (e.name = this.name),
                    this.usage !== zn && (e.usage = this.usage),
                    (0 === this.updateRange.offset &&
                      -1 === this.updateRange.count) ||
                      (e.updateRange = this.updateRange),
                    e
                  );
                },
              },
              {
                key: "copyColorsArray",
                value: function () {
                  console.error(
                    "THREE.BufferAttribute: copyColorsArray() was removed in r144."
                  );
                },
              },
              {
                key: "copyVector2sArray",
                value: function () {
                  console.error(
                    "THREE.BufferAttribute: copyVector2sArray() was removed in r144."
                  );
                },
              },
              {
                key: "copyVector3sArray",
                value: function () {
                  console.error(
                    "THREE.BufferAttribute: copyVector3sArray() was removed in r144."
                  );
                },
              },
              {
                key: "copyVector4sArray",
                value: function () {
                  console.error(
                    "THREE.BufferAttribute: copyVector4sArray() was removed in r144."
                  );
                },
              },
            ]),
            e
          );
        })(),
        ya = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i) {
            return p(this, n), t.call(this, new Int8Array(e), r, i);
          }
          return g(n);
        })(ga),
        ba = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i) {
            return p(this, n), t.call(this, new Uint8Array(e), r, i);
          }
          return g(n);
        })(ga),
        _a = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i) {
            return p(this, n), t.call(this, new Uint8ClampedArray(e), r, i);
          }
          return g(n);
        })(ga),
        xa = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i) {
            return p(this, n), t.call(this, new Int16Array(e), r, i);
          }
          return g(n);
        })(ga),
        Sa = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i) {
            return p(this, n), t.call(this, new Uint16Array(e), r, i);
          }
          return g(n);
        })(ga),
        wa = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i) {
            return p(this, n), t.call(this, new Int32Array(e), r, i);
          }
          return g(n);
        })(ga),
        Ma = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i) {
            return p(this, n), t.call(this, new Uint32Array(e), r, i);
          }
          return g(n);
        })(ga),
        Ea = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i) {
            var a;
            return (
              p(this, n),
              ((a = t.call(
                this,
                new Uint16Array(e),
                r,
                i
              )).isFloat16BufferAttribute = !0),
              a
            );
          }
          return (
            g(n, [
              {
                key: "getX",
                value: function (e) {
                  var t = ha(this.array[e * this.itemSize]);
                  return this.normalized && (t = lr(t, this.array)), t;
                },
              },
              {
                key: "setX",
                value: function (e, t) {
                  return (
                    this.normalized && (t = ur(t, this.array)),
                    (this.array[e * this.itemSize] = fa(t)),
                    this
                  );
                },
              },
              {
                key: "getY",
                value: function (e) {
                  var t = ha(this.array[e * this.itemSize + 1]);
                  return this.normalized && (t = lr(t, this.array)), t;
                },
              },
              {
                key: "setY",
                value: function (e, t) {
                  return (
                    this.normalized && (t = ur(t, this.array)),
                    (this.array[e * this.itemSize + 1] = fa(t)),
                    this
                  );
                },
              },
              {
                key: "getZ",
                value: function (e) {
                  var t = ha(this.array[e * this.itemSize + 2]);
                  return this.normalized && (t = lr(t, this.array)), t;
                },
              },
              {
                key: "setZ",
                value: function (e, t) {
                  return (
                    this.normalized && (t = ur(t, this.array)),
                    (this.array[e * this.itemSize + 2] = fa(t)),
                    this
                  );
                },
              },
              {
                key: "getW",
                value: function (e) {
                  var t = ha(this.array[e * this.itemSize + 3]);
                  return this.normalized && (t = lr(t, this.array)), t;
                },
              },
              {
                key: "setW",
                value: function (e, t) {
                  return (
                    this.normalized && (t = ur(t, this.array)),
                    (this.array[e * this.itemSize + 3] = fa(t)),
                    this
                  );
                },
              },
              {
                key: "setXY",
                value: function (e, t, n) {
                  return (
                    (e *= this.itemSize),
                    this.normalized &&
                      ((t = ur(t, this.array)), (n = ur(n, this.array))),
                    (this.array[e + 0] = fa(t)),
                    (this.array[e + 1] = fa(n)),
                    this
                  );
                },
              },
              {
                key: "setXYZ",
                value: function (e, t, n, r) {
                  return (
                    (e *= this.itemSize),
                    this.normalized &&
                      ((t = ur(t, this.array)),
                      (n = ur(n, this.array)),
                      (r = ur(r, this.array))),
                    (this.array[e + 0] = fa(t)),
                    (this.array[e + 1] = fa(n)),
                    (this.array[e + 2] = fa(r)),
                    this
                  );
                },
              },
              {
                key: "setXYZW",
                value: function (e, t, n, r, i) {
                  return (
                    (e *= this.itemSize),
                    this.normalized &&
                      ((t = ur(t, this.array)),
                      (n = ur(n, this.array)),
                      (r = ur(r, this.array)),
                      (i = ur(i, this.array))),
                    (this.array[e + 0] = fa(t)),
                    (this.array[e + 1] = fa(n)),
                    (this.array[e + 2] = fa(r)),
                    (this.array[e + 3] = fa(i)),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(ga),
        ka = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i) {
            return p(this, n), t.call(this, new Float32Array(e), r, i);
          }
          return g(n);
        })(ga),
        Ta = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i) {
            return p(this, n), t.call(this, new Float64Array(e), r, i);
          }
          return g(n);
        })(ga),
        Aa = 0,
        Ca = new gi(),
        Pa = new Hi(),
        Ra = new Zr(),
        La = new Gr(),
        Ia = new Gr(),
        Na = new Zr(),
        Oa = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e;
            return (
              p(this, n),
              ((e = t.call(this)).isBufferGeometry = !0),
              Object.defineProperty(E(e), "id", { value: Aa++ }),
              (e.uuid = tr()),
              (e.name = ""),
              (e.type = "BufferGeometry"),
              (e.index = null),
              (e.attributes = {}),
              (e.morphAttributes = {}),
              (e.morphTargetsRelative = !1),
              (e.groups = []),
              (e.boundingBox = null),
              (e.boundingSphere = null),
              (e.drawRange = { start: 0, count: 1 / 0 }),
              (e.userData = {}),
              e
            );
          }
          return (
            g(n, [
              {
                key: "getIndex",
                value: function () {
                  return this.index;
                },
              },
              {
                key: "setIndex",
                value: function (e) {
                  return (
                    Array.isArray(e)
                      ? (this.index = new (pr(e) ? Ma : Sa)(e, 1))
                      : (this.index = e),
                    this
                  );
                },
              },
              {
                key: "getAttribute",
                value: function (e) {
                  return this.attributes[e];
                },
              },
              {
                key: "setAttribute",
                value: function (e, t) {
                  return (this.attributes[e] = t), this;
                },
              },
              {
                key: "deleteAttribute",
                value: function (e) {
                  return delete this.attributes[e], this;
                },
              },
              {
                key: "hasAttribute",
                value: function (e) {
                  return void 0 !== this.attributes[e];
                },
              },
              {
                key: "addGroup",
                value: function (e, t) {
                  var n =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : 0;
                  this.groups.push({ start: e, count: t, materialIndex: n });
                },
              },
              {
                key: "clearGroups",
                value: function () {
                  this.groups = [];
                },
              },
              {
                key: "setDrawRange",
                value: function (e, t) {
                  (this.drawRange.start = e), (this.drawRange.count = t);
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  var t = this.attributes.position;
                  void 0 !== t && (t.applyMatrix4(e), (t.needsUpdate = !0));
                  var n = this.attributes.normal;
                  if (void 0 !== n) {
                    var r = new fr().getNormalMatrix(e);
                    n.applyNormalMatrix(r), (n.needsUpdate = !0);
                  }
                  var i = this.attributes.tangent;
                  return (
                    void 0 !== i &&
                      (i.transformDirection(e), (i.needsUpdate = !0)),
                    null !== this.boundingBox && this.computeBoundingBox(),
                    null !== this.boundingSphere &&
                      this.computeBoundingSphere(),
                    this
                  );
                },
              },
              {
                key: "applyQuaternion",
                value: function (e) {
                  return (
                    Ca.makeRotationFromQuaternion(e),
                    this.applyMatrix4(Ca),
                    this
                  );
                },
              },
              {
                key: "rotateX",
                value: function (e) {
                  return Ca.makeRotationX(e), this.applyMatrix4(Ca), this;
                },
              },
              {
                key: "rotateY",
                value: function (e) {
                  return Ca.makeRotationY(e), this.applyMatrix4(Ca), this;
                },
              },
              {
                key: "rotateZ",
                value: function (e) {
                  return Ca.makeRotationZ(e), this.applyMatrix4(Ca), this;
                },
              },
              {
                key: "translate",
                value: function (e, t, n) {
                  return (
                    Ca.makeTranslation(e, t, n), this.applyMatrix4(Ca), this
                  );
                },
              },
              {
                key: "scale",
                value: function (e, t, n) {
                  return Ca.makeScale(e, t, n), this.applyMatrix4(Ca), this;
                },
              },
              {
                key: "lookAt",
                value: function (e) {
                  return (
                    Pa.lookAt(e),
                    Pa.updateMatrix(),
                    this.applyMatrix4(Pa.matrix),
                    this
                  );
                },
              },
              {
                key: "center",
                value: function () {
                  return (
                    this.computeBoundingBox(),
                    this.boundingBox.getCenter(Ra).negate(),
                    this.translate(Ra.x, Ra.y, Ra.z),
                    this
                  );
                },
              },
              {
                key: "setFromPoints",
                value: function (e) {
                  for (var t = [], n = 0, r = e.length; n < r; n++) {
                    var i = e[n];
                    t.push(i.x, i.y, i.z || 0);
                  }
                  return this.setAttribute("position", new ka(t, 3)), this;
                },
              },
              {
                key: "computeBoundingBox",
                value: function () {
                  null === this.boundingBox && (this.boundingBox = new Gr());
                  var e = this.attributes.position,
                    t = this.morphAttributes.position;
                  if (e && e.isGLBufferAttribute)
                    return (
                      console.error(
                        'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',
                        this
                      ),
                      void this.boundingBox.set(
                        new Zr(-1 / 0, -1 / 0, -1 / 0),
                        new Zr(1 / 0, 1 / 0, 1 / 0)
                      )
                    );
                  if (void 0 !== e) {
                    if ((this.boundingBox.setFromBufferAttribute(e), t))
                      for (var n = 0, r = t.length; n < r; n++) {
                        var i = t[n];
                        La.setFromBufferAttribute(i),
                          this.morphTargetsRelative
                            ? (Na.addVectors(this.boundingBox.min, La.min),
                              this.boundingBox.expandByPoint(Na),
                              Na.addVectors(this.boundingBox.max, La.max),
                              this.boundingBox.expandByPoint(Na))
                            : (this.boundingBox.expandByPoint(La.min),
                              this.boundingBox.expandByPoint(La.max));
                      }
                  } else this.boundingBox.makeEmpty();
                  (isNaN(this.boundingBox.min.x) ||
                    isNaN(this.boundingBox.min.y) ||
                    isNaN(this.boundingBox.min.z)) &&
                    console.error(
                      'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',
                      this
                    );
                },
              },
              {
                key: "computeBoundingSphere",
                value: function () {
                  null === this.boundingSphere &&
                    (this.boundingSphere = new li());
                  var e = this.attributes.position,
                    t = this.morphAttributes.position;
                  if (e && e.isGLBufferAttribute)
                    return (
                      console.error(
                        'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',
                        this
                      ),
                      void this.boundingSphere.set(new Zr(), 1 / 0)
                    );
                  if (e) {
                    var n = this.boundingSphere.center;
                    if ((La.setFromBufferAttribute(e), t))
                      for (var r = 0, i = t.length; r < i; r++) {
                        var a = t[r];
                        Ia.setFromBufferAttribute(a),
                          this.morphTargetsRelative
                            ? (Na.addVectors(La.min, Ia.min),
                              La.expandByPoint(Na),
                              Na.addVectors(La.max, Ia.max),
                              La.expandByPoint(Na))
                            : (La.expandByPoint(Ia.min),
                              La.expandByPoint(Ia.max));
                      }
                    La.getCenter(n);
                    for (var o = 0, s = 0, l = e.count; s < l; s++)
                      Na.fromBufferAttribute(e, s),
                        (o = Math.max(o, n.distanceToSquared(Na)));
                    if (t)
                      for (var u = 0, c = t.length; u < c; u++)
                        for (
                          var d = t[u],
                            f = this.morphTargetsRelative,
                            h = 0,
                            p = d.count;
                          h < p;
                          h++
                        )
                          Na.fromBufferAttribute(d, h),
                            f && (Ra.fromBufferAttribute(e, h), Na.add(Ra)),
                            (o = Math.max(o, n.distanceToSquared(Na)));
                    (this.boundingSphere.radius = Math.sqrt(o)),
                      isNaN(this.boundingSphere.radius) &&
                        console.error(
                          'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',
                          this
                        );
                  }
                },
              },
              {
                key: "computeTangents",
                value: function () {
                  var e = this.index,
                    t = this.attributes;
                  if (
                    null !== e &&
                    void 0 !== t.position &&
                    void 0 !== t.normal &&
                    void 0 !== t.uv
                  ) {
                    var n = e.array,
                      r = t.position.array,
                      i = t.normal.array,
                      a = t.uv.array,
                      o = r.length / 3;
                    !1 === this.hasAttribute("tangent") &&
                      this.setAttribute(
                        "tangent",
                        new ga(new Float32Array(4 * o), 4)
                      );
                    for (
                      var s = this.getAttribute("tangent").array,
                        l = [],
                        u = [],
                        c = 0;
                      c < o;
                      c++
                    )
                      (l[c] = new Zr()), (u[c] = new Zr());
                    var d = new Zr(),
                      f = new Zr(),
                      h = new Zr(),
                      p = new dr(),
                      v = new dr(),
                      m = new dr(),
                      g = new Zr(),
                      y = new Zr(),
                      b = this.groups;
                    0 === b.length && (b = [{ start: 0, count: n.length }]);
                    for (var _ = 0, x = b.length; _ < x; ++_)
                      for (
                        var S = b[_], w = S.start, M = w, E = w + S.count;
                        M < E;
                        M += 3
                      )
                        D(n[M + 0], n[M + 1], n[M + 2]);
                    for (
                      var k = new Zr(),
                        T = new Zr(),
                        A = new Zr(),
                        C = new Zr(),
                        P = 0,
                        R = b.length;
                      P < R;
                      ++P
                    )
                      for (
                        var L = b[P], I = L.start, N = I, O = I + L.count;
                        N < O;
                        N += 3
                      )
                        U(n[N + 0]), U(n[N + 1]), U(n[N + 2]);
                  } else
                    console.error(
                      "THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)"
                    );
                  function D(e, t, n) {
                    d.fromArray(r, 3 * e),
                      f.fromArray(r, 3 * t),
                      h.fromArray(r, 3 * n),
                      p.fromArray(a, 2 * e),
                      v.fromArray(a, 2 * t),
                      m.fromArray(a, 2 * n),
                      f.sub(d),
                      h.sub(d),
                      v.sub(p),
                      m.sub(p);
                    var i = 1 / (v.x * m.y - m.x * v.y);
                    isFinite(i) &&
                      (g
                        .copy(f)
                        .multiplyScalar(m.y)
                        .addScaledVector(h, -v.y)
                        .multiplyScalar(i),
                      y
                        .copy(h)
                        .multiplyScalar(v.x)
                        .addScaledVector(f, -m.x)
                        .multiplyScalar(i),
                      l[e].add(g),
                      l[t].add(g),
                      l[n].add(g),
                      u[e].add(y),
                      u[t].add(y),
                      u[n].add(y));
                  }
                  function U(e) {
                    A.fromArray(i, 3 * e), C.copy(A);
                    var t = l[e];
                    k.copy(t),
                      k.sub(A.multiplyScalar(A.dot(t))).normalize(),
                      T.crossVectors(C, t);
                    var n = T.dot(u[e]) < 0 ? -1 : 1;
                    (s[4 * e] = k.x),
                      (s[4 * e + 1] = k.y),
                      (s[4 * e + 2] = k.z),
                      (s[4 * e + 3] = n);
                  }
                },
              },
              {
                key: "computeVertexNormals",
                value: function () {
                  var e = this.index,
                    t = this.getAttribute("position");
                  if (void 0 !== t) {
                    var n = this.getAttribute("normal");
                    if (void 0 === n)
                      (n = new ga(new Float32Array(3 * t.count), 3)),
                        this.setAttribute("normal", n);
                    else
                      for (var r = 0, i = n.count; r < i; r++)
                        n.setXYZ(r, 0, 0, 0);
                    var a = new Zr(),
                      o = new Zr(),
                      s = new Zr(),
                      l = new Zr(),
                      u = new Zr(),
                      c = new Zr(),
                      d = new Zr(),
                      f = new Zr();
                    if (e)
                      for (var h = 0, p = e.count; h < p; h += 3) {
                        var v = e.getX(h + 0),
                          m = e.getX(h + 1),
                          g = e.getX(h + 2);
                        a.fromBufferAttribute(t, v),
                          o.fromBufferAttribute(t, m),
                          s.fromBufferAttribute(t, g),
                          d.subVectors(s, o),
                          f.subVectors(a, o),
                          d.cross(f),
                          l.fromBufferAttribute(n, v),
                          u.fromBufferAttribute(n, m),
                          c.fromBufferAttribute(n, g),
                          l.add(d),
                          u.add(d),
                          c.add(d),
                          n.setXYZ(v, l.x, l.y, l.z),
                          n.setXYZ(m, u.x, u.y, u.z),
                          n.setXYZ(g, c.x, c.y, c.z);
                      }
                    else
                      for (var y = 0, b = t.count; y < b; y += 3)
                        a.fromBufferAttribute(t, y + 0),
                          o.fromBufferAttribute(t, y + 1),
                          s.fromBufferAttribute(t, y + 2),
                          d.subVectors(s, o),
                          f.subVectors(a, o),
                          d.cross(f),
                          n.setXYZ(y + 0, d.x, d.y, d.z),
                          n.setXYZ(y + 1, d.x, d.y, d.z),
                          n.setXYZ(y + 2, d.x, d.y, d.z);
                    this.normalizeNormals(), (n.needsUpdate = !0);
                  }
                },
              },
              {
                key: "merge",
                value: function () {
                  return (
                    console.error(
                      "THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeGeometries() instead."
                    ),
                    this
                  );
                },
              },
              {
                key: "normalizeNormals",
                value: function () {
                  for (
                    var e = this.attributes.normal, t = 0, n = e.count;
                    t < n;
                    t++
                  )
                    Na.fromBufferAttribute(e, t),
                      Na.normalize(),
                      e.setXYZ(t, Na.x, Na.y, Na.z);
                },
              },
              {
                key: "toNonIndexed",
                value: function () {
                  function e(e, t) {
                    for (
                      var n = e.array,
                        r = e.itemSize,
                        i = e.normalized,
                        a = new n.constructor(t.length * r),
                        o = 0,
                        s = 0,
                        l = 0,
                        u = t.length;
                      l < u;
                      l++
                    ) {
                      o = e.isInterleavedBufferAttribute
                        ? t[l] * e.data.stride + e.offset
                        : t[l] * r;
                      for (var c = 0; c < r; c++) a[s++] = n[o++];
                    }
                    return new ga(a, r, i);
                  }
                  if (null === this.index)
                    return (
                      console.warn(
                        "THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."
                      ),
                      this
                    );
                  var t = new n(),
                    r = this.index.array,
                    i = this.attributes;
                  for (var a in i) {
                    var o = e(i[a], r);
                    t.setAttribute(a, o);
                  }
                  var s = this.morphAttributes;
                  for (var l in s) {
                    for (
                      var u = [], c = s[l], d = 0, f = c.length;
                      d < f;
                      d++
                    ) {
                      var h = e(c[d], r);
                      u.push(h);
                    }
                    t.morphAttributes[l] = u;
                  }
                  t.morphTargetsRelative = this.morphTargetsRelative;
                  for (var p = this.groups, v = 0, m = p.length; v < m; v++) {
                    var g = p[v];
                    t.addGroup(g.start, g.count, g.materialIndex);
                  }
                  return t;
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = {
                    metadata: {
                      version: 4.5,
                      type: "BufferGeometry",
                      generator: "BufferGeometry.toJSON",
                    },
                  };
                  if (
                    ((e.uuid = this.uuid),
                    (e.type = this.type),
                    "" !== this.name && (e.name = this.name),
                    Object.keys(this.userData).length > 0 &&
                      (e.userData = this.userData),
                    void 0 !== this.parameters)
                  ) {
                    var t = this.parameters;
                    for (var n in t) void 0 !== t[n] && (e[n] = t[n]);
                    return e;
                  }
                  e.data = { attributes: {} };
                  var r = this.index;
                  null !== r &&
                    (e.data.index = {
                      type: r.array.constructor.name,
                      array: Array.prototype.slice.call(r.array),
                    });
                  var i = this.attributes;
                  for (var a in i) {
                    var o = i[a];
                    e.data.attributes[a] = o.toJSON(e.data);
                  }
                  var s = {},
                    l = !1;
                  for (var u in this.morphAttributes) {
                    for (
                      var c = this.morphAttributes[u],
                        d = [],
                        f = 0,
                        h = c.length;
                      f < h;
                      f++
                    ) {
                      var p = c[f];
                      d.push(p.toJSON(e.data));
                    }
                    d.length > 0 && ((s[u] = d), (l = !0));
                  }
                  l &&
                    ((e.data.morphAttributes = s),
                    (e.data.morphTargetsRelative = this.morphTargetsRelative));
                  var v = this.groups;
                  v.length > 0 &&
                    (e.data.groups = JSON.parse(JSON.stringify(v)));
                  var m = this.boundingSphere;
                  return (
                    null !== m &&
                      (e.data.boundingSphere = {
                        center: m.center.toArray(),
                        radius: m.radius,
                      }),
                    e
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  (this.index = null),
                    (this.attributes = {}),
                    (this.morphAttributes = {}),
                    (this.groups = []),
                    (this.boundingBox = null),
                    (this.boundingSphere = null);
                  var t = {};
                  this.name = e.name;
                  var n = e.index;
                  null !== n && this.setIndex(n.clone(t));
                  var r = e.attributes;
                  for (var i in r) {
                    var a = r[i];
                    this.setAttribute(i, a.clone(t));
                  }
                  var o = e.morphAttributes;
                  for (var s in o) {
                    for (var l = [], u = o[s], c = 0, d = u.length; c < d; c++)
                      l.push(u[c].clone(t));
                    this.morphAttributes[s] = l;
                  }
                  this.morphTargetsRelative = e.morphTargetsRelative;
                  for (var f = e.groups, h = 0, p = f.length; h < p; h++) {
                    var v = f[h];
                    this.addGroup(v.start, v.count, v.materialIndex);
                  }
                  var m = e.boundingBox;
                  null !== m && (this.boundingBox = m.clone());
                  var g = e.boundingSphere;
                  return (
                    null !== g && (this.boundingSphere = g.clone()),
                    (this.drawRange.start = e.drawRange.start),
                    (this.drawRange.count = e.drawRange.count),
                    (this.userData = e.userData),
                    this
                  );
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.dispatchEvent({ type: "dispose" });
                },
              },
            ]),
            n
          );
        })(Kn),
        Da = new gi(),
        Ua = new mi(),
        za = new li(),
        Fa = new Zr(),
        Ba = new Zr(),
        Za = new Zr(),
        Ha = new Zr(),
        Va = new Zr(),
        Ga = new Zr(),
        Wa = new dr(),
        ja = new dr(),
        Xa = new dr(),
        qa = new Zr(),
        Ya = new Zr(),
        Ka = new Zr(),
        $a = new Zr(),
        Ja = new Zr(),
        Qa = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Oa(),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new ua();
            return (
              p(this, n),
              ((e = t.call(this)).isMesh = !0),
              (e.type = "Mesh"),
              (e.geometry = r),
              (e.material = i),
              e.updateMorphTargets(),
              e
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e, t) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e, t),
                    void 0 !== e.morphTargetInfluences &&
                      (this.morphTargetInfluences =
                        e.morphTargetInfluences.slice()),
                    void 0 !== e.morphTargetDictionary &&
                      (this.morphTargetDictionary = Object.assign(
                        {},
                        e.morphTargetDictionary
                      )),
                    (this.material = e.material),
                    (this.geometry = e.geometry),
                    this
                  );
                },
              },
              {
                key: "updateMorphTargets",
                value: function () {
                  var e = this.geometry.morphAttributes,
                    t = Object.keys(e);
                  if (t.length > 0) {
                    var n = e[t[0]];
                    if (void 0 !== n) {
                      (this.morphTargetInfluences = []),
                        (this.morphTargetDictionary = {});
                      for (var r = 0, i = n.length; r < i; r++) {
                        var a = n[r].name || String(r);
                        this.morphTargetInfluences.push(0),
                          (this.morphTargetDictionary[a] = r);
                      }
                    }
                  }
                },
              },
              {
                key: "getVertexPosition",
                value: function (e, t) {
                  var n = this.geometry,
                    r = n.attributes.position,
                    i = n.morphAttributes.position,
                    a = n.morphTargetsRelative;
                  t.fromBufferAttribute(r, e);
                  var o = this.morphTargetInfluences;
                  if (i && o) {
                    Ga.set(0, 0, 0);
                    for (var s = 0, l = i.length; s < l; s++) {
                      var u = o[s],
                        c = i[s];
                      0 !== u &&
                        (Va.fromBufferAttribute(c, e),
                        a
                          ? Ga.addScaledVector(Va, u)
                          : Ga.addScaledVector(Va.sub(t), u));
                    }
                    t.add(Ga);
                  }
                  return t;
                },
              },
              {
                key: "raycast",
                value: function (e, t) {
                  var n = this.geometry,
                    r = this.material,
                    i = this.matrixWorld;
                  if (void 0 !== r) {
                    if (
                      (null === n.boundingSphere && n.computeBoundingSphere(),
                      za.copy(n.boundingSphere),
                      za.applyMatrix4(i),
                      Ua.copy(e.ray).recast(e.near),
                      !1 === za.containsPoint(Ua.origin))
                    ) {
                      if (null === Ua.intersectSphere(za, Fa)) return;
                      if (
                        Ua.origin.distanceToSquared(Fa) >
                        Math.pow(e.far - e.near, 2)
                      )
                        return;
                    }
                    Da.copy(i).invert(),
                      Ua.copy(e.ray).applyMatrix4(Da),
                      (null !== n.boundingBox &&
                        !1 === Ua.intersectsBox(n.boundingBox)) ||
                        this._computeIntersections(e, t);
                  }
                },
              },
              {
                key: "_computeIntersections",
                value: function (e, t) {
                  var n,
                    r = this.geometry,
                    i = this.material,
                    a = r.index,
                    o = r.attributes.position,
                    s = r.attributes.uv,
                    l = r.attributes.uv1,
                    u = r.attributes.normal,
                    c = r.groups,
                    d = r.drawRange;
                  if (null !== a)
                    if (Array.isArray(i))
                      for (var f = 0, h = c.length; f < h; f++)
                        for (
                          var p = c[f],
                            v = i[p.materialIndex],
                            m = Math.max(p.start, d.start),
                            g = Math.min(
                              a.count,
                              Math.min(p.start + p.count, d.start + d.count)
                            );
                          m < g;
                          m += 3
                        ) {
                          var y = a.getX(m),
                            b = a.getX(m + 1),
                            _ = a.getX(m + 2);
                          (n = eo(this, v, e, Ua, s, l, u, y, b, _)) &&
                            ((n.faceIndex = Math.floor(m / 3)),
                            (n.face.materialIndex = p.materialIndex),
                            t.push(n));
                        }
                    else
                      for (
                        var x = Math.max(0, d.start),
                          S = Math.min(a.count, d.start + d.count);
                        x < S;
                        x += 3
                      ) {
                        var w = a.getX(x),
                          M = a.getX(x + 1),
                          E = a.getX(x + 2);
                        (n = eo(this, i, e, Ua, s, l, u, w, M, E)) &&
                          ((n.faceIndex = Math.floor(x / 3)), t.push(n));
                      }
                  else if (void 0 !== o)
                    if (Array.isArray(i))
                      for (var k = 0, T = c.length; k < T; k++)
                        for (
                          var A = c[k],
                            C = i[A.materialIndex],
                            P = Math.max(A.start, d.start),
                            R = Math.min(
                              o.count,
                              Math.min(A.start + A.count, d.start + d.count)
                            );
                          P < R;
                          P += 3
                        ) {
                          (n = eo(this, C, e, Ua, s, l, u, P, P + 1, P + 2)) &&
                            ((n.faceIndex = Math.floor(P / 3)),
                            (n.face.materialIndex = A.materialIndex),
                            t.push(n));
                        }
                    else
                      for (
                        var L = Math.max(0, d.start),
                          I = Math.min(o.count, d.start + d.count);
                        L < I;
                        L += 3
                      ) {
                        (n = eo(this, i, e, Ua, s, l, u, L, L + 1, L + 2)) &&
                          ((n.faceIndex = Math.floor(L / 3)), t.push(n));
                      }
                },
              },
            ]),
            n
          );
        })(Hi);
      function eo(e, t, n, r, i, a, o, s, l, u) {
        e.getVertexPosition(s, Ba),
          e.getVertexPosition(l, Za),
          e.getVertexPosition(u, Ha);
        var c = (function (e, t, n, r, i, a, o, s) {
          if (
            null ===
            (t.side === j
              ? r.intersectTriangle(o, a, i, !0, s)
              : r.intersectTriangle(i, a, o, t.side === W, s))
          )
            return null;
          Ja.copy(s), Ja.applyMatrix4(e.matrixWorld);
          var l = n.ray.origin.distanceTo(Ja);
          return l < n.near || l > n.far
            ? null
            : { distance: l, point: Ja.clone(), object: e };
        })(e, t, n, r, Ba, Za, Ha, $a);
        if (c) {
          i &&
            (Wa.fromBufferAttribute(i, s),
            ja.fromBufferAttribute(i, l),
            Xa.fromBufferAttribute(i, u),
            (c.uv = ea.getInterpolation($a, Ba, Za, Ha, Wa, ja, Xa, new dr()))),
            a &&
              (Wa.fromBufferAttribute(a, s),
              ja.fromBufferAttribute(a, l),
              Xa.fromBufferAttribute(a, u),
              (c.uv1 = ea.getInterpolation(
                $a,
                Ba,
                Za,
                Ha,
                Wa,
                ja,
                Xa,
                new dr()
              )),
              (c.uv2 = c.uv1)),
            o &&
              (qa.fromBufferAttribute(o, s),
              Ya.fromBufferAttribute(o, l),
              Ka.fromBufferAttribute(o, u),
              (c.normal = ea.getInterpolation(
                $a,
                Ba,
                Za,
                Ha,
                qa,
                Ya,
                Ka,
                new Zr()
              )),
              c.normal.dot(r.direction) > 0 && c.normal.multiplyScalar(-1));
          var d = { a: s, b: l, c: u, normal: new Zr(), materialIndex: 0 };
          ea.getNormal(Ba, Za, Ha, d.normal), (c.face = d);
        }
        return c;
      }
      var to = (function (e) {
        b(n, e);
        var t = k(n);
        function n() {
          var e,
            r =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : 1,
            i =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 1,
            a =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 1,
            o =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : 1,
            s =
              arguments.length > 4 && void 0 !== arguments[4]
                ? arguments[4]
                : 1,
            l =
              arguments.length > 5 && void 0 !== arguments[5]
                ? arguments[5]
                : 1;
          p(this, n),
            ((e = t.call(this)).type = "BoxGeometry"),
            (e.parameters = {
              width: r,
              height: i,
              depth: a,
              widthSegments: o,
              heightSegments: s,
              depthSegments: l,
            });
          var u = E(e);
          (o = Math.floor(o)), (s = Math.floor(s)), (l = Math.floor(l));
          var c = [],
            d = [],
            f = [],
            h = [],
            v = 0,
            m = 0;
          function g(e, t, n, r, i, a, o, s, l, p, g) {
            for (
              var y = a / l,
                b = o / p,
                _ = a / 2,
                x = o / 2,
                S = s / 2,
                w = l + 1,
                M = p + 1,
                E = 0,
                k = 0,
                T = new Zr(),
                A = 0;
              A < M;
              A++
            )
              for (var C = A * b - x, P = 0; P < w; P++) {
                var R = P * y - _;
                (T[e] = R * r),
                  (T[t] = C * i),
                  (T[n] = S),
                  d.push(T.x, T.y, T.z),
                  (T[e] = 0),
                  (T[t] = 0),
                  (T[n] = s > 0 ? 1 : -1),
                  f.push(T.x, T.y, T.z),
                  h.push(P / l),
                  h.push(1 - A / p),
                  (E += 1);
              }
            for (var L = 0; L < p; L++)
              for (var I = 0; I < l; I++) {
                var N = v + I + w * L,
                  O = v + I + w * (L + 1),
                  D = v + (I + 1) + w * (L + 1),
                  U = v + (I + 1) + w * L;
                c.push(N, O, U), c.push(O, D, U), (k += 6);
              }
            u.addGroup(m, k, g), (m += k), (v += E);
          }
          return (
            g("z", "y", "x", -1, -1, a, i, r, l, s, 0),
            g("z", "y", "x", 1, -1, a, i, -r, l, s, 1),
            g("x", "z", "y", 1, 1, r, a, i, o, l, 2),
            g("x", "z", "y", 1, -1, r, a, -i, o, l, 3),
            g("x", "y", "z", 1, -1, r, i, a, o, s, 4),
            g("x", "y", "z", -1, -1, r, i, -a, o, s, 5),
            e.setIndex(c),
            e.setAttribute("position", new ka(d, 3)),
            e.setAttribute("normal", new ka(f, 3)),
            e.setAttribute("uv", new ka(h, 2)),
            e
          );
        }
        return (
          g(
            n,
            [
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    (this.parameters = Object.assign({}, e.parameters)),
                    this
                  );
                },
              },
            ],
            [
              {
                key: "fromJSON",
                value: function (e) {
                  return new n(
                    e.width,
                    e.height,
                    e.depth,
                    e.widthSegments,
                    e.heightSegments,
                    e.depthSegments
                  );
                },
              },
            ]
          ),
          n
        );
      })(Oa);
      function no(e) {
        var t = {};
        for (var n in e)
          for (var r in ((t[n] = {}), e[n])) {
            var i = e[n][r];
            i &&
            (i.isColor ||
              i.isMatrix3 ||
              i.isMatrix4 ||
              i.isVector2 ||
              i.isVector3 ||
              i.isVector4 ||
              i.isTexture ||
              i.isQuaternion)
              ? i.isRenderTargetTexture
                ? (console.warn(
                    "UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."
                  ),
                  (t[n][r] = null))
                : (t[n][r] = i.clone())
              : Array.isArray(i)
              ? (t[n][r] = i.slice())
              : (t[n][r] = i);
          }
        return t;
      }
      function ro(e) {
        for (var t = {}, n = 0; n < e.length; n++) {
          var r = no(e[n]);
          for (var i in r) t[i] = r[i];
        }
        return t;
      }
      function io(e) {
        return null === e.getRenderTarget() ? e.outputColorSpace : _n;
      }
      var ao = { clone: no, merge: ro },
        oo = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return (
              p(this, n),
              ((r = t.call(this)).isShaderMaterial = !0),
              (r.type = "ShaderMaterial"),
              (r.defines = {}),
              (r.uniforms = {}),
              (r.uniformsGroups = []),
              (r.vertexShader =
                "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"),
              (r.fragmentShader =
                "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}"),
              (r.linewidth = 1),
              (r.wireframe = !1),
              (r.wireframeLinewidth = 1),
              (r.fog = !1),
              (r.lights = !1),
              (r.clipping = !1),
              (r.forceSinglePass = !0),
              (r.extensions = {
                derivatives: !1,
                fragDepth: !1,
                drawBuffers: !1,
                shaderTextureLOD: !1,
              }),
              (r.defaultAttributeValues = {
                color: [1, 1, 1],
                uv: [0, 0],
                uv1: [0, 0],
              }),
              (r.index0AttributeName = void 0),
              (r.uniformsNeedUpdate = !1),
              (r.glslVersion = null),
              void 0 !== e && r.setValues(e),
              r
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    (this.fragmentShader = e.fragmentShader),
                    (this.vertexShader = e.vertexShader),
                    (this.uniforms = no(e.uniforms)),
                    (this.uniformsGroups = (function (e) {
                      for (var t = [], n = 0; n < e.length; n++)
                        t.push(e[n].clone());
                      return t;
                    })(e.uniformsGroups)),
                    (this.defines = Object.assign({}, e.defines)),
                    (this.wireframe = e.wireframe),
                    (this.wireframeLinewidth = e.wireframeLinewidth),
                    (this.fog = e.fog),
                    (this.lights = e.lights),
                    (this.clipping = e.clipping),
                    (this.extensions = Object.assign({}, e.extensions)),
                    (this.glslVersion = e.glslVersion),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = L(_(n.prototype), "toJSON", this).call(this, e);
                  for (var r in ((t.glslVersion = this.glslVersion),
                  (t.uniforms = {}),
                  this.uniforms)) {
                    var i = this.uniforms[r].value;
                    i && i.isTexture
                      ? (t.uniforms[r] = { type: "t", value: i.toJSON(e).uuid })
                      : i && i.isColor
                      ? (t.uniforms[r] = { type: "c", value: i.getHex() })
                      : i && i.isVector2
                      ? (t.uniforms[r] = { type: "v2", value: i.toArray() })
                      : i && i.isVector3
                      ? (t.uniforms[r] = { type: "v3", value: i.toArray() })
                      : i && i.isVector4
                      ? (t.uniforms[r] = { type: "v4", value: i.toArray() })
                      : i && i.isMatrix3
                      ? (t.uniforms[r] = { type: "m3", value: i.toArray() })
                      : i && i.isMatrix4
                      ? (t.uniforms[r] = { type: "m4", value: i.toArray() })
                      : (t.uniforms[r] = { value: i });
                  }
                  Object.keys(this.defines).length > 0 &&
                    (t.defines = this.defines),
                    (t.vertexShader = this.vertexShader),
                    (t.fragmentShader = this.fragmentShader),
                    (t.lights = this.lights),
                    (t.clipping = this.clipping);
                  var a = {};
                  for (var o in this.extensions)
                    !0 === this.extensions[o] && (a[o] = !0);
                  return Object.keys(a).length > 0 && (t.extensions = a), t;
                },
              },
            ]),
            n
          );
        })(na),
        so = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e;
            return (
              p(this, n),
              ((e = t.call(this)).isCamera = !0),
              (e.type = "Camera"),
              (e.matrixWorldInverse = new gi()),
              (e.projectionMatrix = new gi()),
              (e.projectionMatrixInverse = new gi()),
              e
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e, t) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e, t),
                    this.matrixWorldInverse.copy(e.matrixWorldInverse),
                    this.projectionMatrix.copy(e.projectionMatrix),
                    this.projectionMatrixInverse.copy(
                      e.projectionMatrixInverse
                    ),
                    this
                  );
                },
              },
              {
                key: "getWorldDirection",
                value: function (e) {
                  this.updateWorldMatrix(!0, !1);
                  var t = this.matrixWorld.elements;
                  return e.set(-t[8], -t[9], -t[10]).normalize();
                },
              },
              {
                key: "updateMatrixWorld",
                value: function (e) {
                  L(_(n.prototype), "updateMatrixWorld", this).call(this, e),
                    this.matrixWorldInverse.copy(this.matrixWorld).invert();
                },
              },
              {
                key: "updateWorldMatrix",
                value: function (e, t) {
                  L(_(n.prototype), "updateWorldMatrix", this).call(this, e, t),
                    this.matrixWorldInverse.copy(this.matrixWorld).invert();
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            n
          );
        })(Hi),
        lo = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 50,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0.1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 2e3;
            return (
              p(this, n),
              ((e = t.call(this)).isPerspectiveCamera = !0),
              (e.type = "PerspectiveCamera"),
              (e.fov = r),
              (e.zoom = 1),
              (e.near = a),
              (e.far = o),
              (e.focus = 10),
              (e.aspect = i),
              (e.view = null),
              (e.filmGauge = 35),
              (e.filmOffset = 0),
              e.updateProjectionMatrix(),
              e
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e, t) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e, t),
                    (this.fov = e.fov),
                    (this.zoom = e.zoom),
                    (this.near = e.near),
                    (this.far = e.far),
                    (this.focus = e.focus),
                    (this.aspect = e.aspect),
                    (this.view =
                      null === e.view ? null : Object.assign({}, e.view)),
                    (this.filmGauge = e.filmGauge),
                    (this.filmOffset = e.filmOffset),
                    this
                  );
                },
              },
              {
                key: "setFocalLength",
                value: function (e) {
                  var t = (0.5 * this.getFilmHeight()) / e;
                  (this.fov = 2 * er * Math.atan(t)),
                    this.updateProjectionMatrix();
                },
              },
              {
                key: "getFocalLength",
                value: function () {
                  var e = Math.tan(0.5 * Qn * this.fov);
                  return (0.5 * this.getFilmHeight()) / e;
                },
              },
              {
                key: "getEffectiveFOV",
                value: function () {
                  return (
                    2 *
                    er *
                    Math.atan(Math.tan(0.5 * Qn * this.fov) / this.zoom)
                  );
                },
              },
              {
                key: "getFilmWidth",
                value: function () {
                  return this.filmGauge * Math.min(this.aspect, 1);
                },
              },
              {
                key: "getFilmHeight",
                value: function () {
                  return this.filmGauge / Math.max(this.aspect, 1);
                },
              },
              {
                key: "setViewOffset",
                value: function (e, t, n, r, i, a) {
                  (this.aspect = e / t),
                    null === this.view &&
                      (this.view = {
                        enabled: !0,
                        fullWidth: 1,
                        fullHeight: 1,
                        offsetX: 0,
                        offsetY: 0,
                        width: 1,
                        height: 1,
                      }),
                    (this.view.enabled = !0),
                    (this.view.fullWidth = e),
                    (this.view.fullHeight = t),
                    (this.view.offsetX = n),
                    (this.view.offsetY = r),
                    (this.view.width = i),
                    (this.view.height = a),
                    this.updateProjectionMatrix();
                },
              },
              {
                key: "clearViewOffset",
                value: function () {
                  null !== this.view && (this.view.enabled = !1),
                    this.updateProjectionMatrix();
                },
              },
              {
                key: "updateProjectionMatrix",
                value: function () {
                  var e = this.near,
                    t = (e * Math.tan(0.5 * Qn * this.fov)) / this.zoom,
                    n = 2 * t,
                    r = this.aspect * n,
                    i = -0.5 * r,
                    a = this.view;
                  if (null !== this.view && this.view.enabled) {
                    var o = a.fullWidth,
                      s = a.fullHeight;
                    (i += (a.offsetX * r) / o),
                      (t -= (a.offsetY * n) / s),
                      (r *= a.width / o),
                      (n *= a.height / s);
                  }
                  var l = this.filmOffset;
                  0 !== l && (i += (e * l) / this.getFilmWidth()),
                    this.projectionMatrix.makePerspective(
                      i,
                      i + r,
                      t,
                      t - n,
                      e,
                      this.far
                    ),
                    this.projectionMatrixInverse
                      .copy(this.projectionMatrix)
                      .invert();
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = L(_(n.prototype), "toJSON", this).call(this, e);
                  return (
                    (t.object.fov = this.fov),
                    (t.object.zoom = this.zoom),
                    (t.object.near = this.near),
                    (t.object.far = this.far),
                    (t.object.focus = this.focus),
                    (t.object.aspect = this.aspect),
                    null !== this.view &&
                      (t.object.view = Object.assign({}, this.view)),
                    (t.object.filmGauge = this.filmGauge),
                    (t.object.filmOffset = this.filmOffset),
                    t
                  );
                },
              },
            ]),
            n
          );
        })(so),
        uo = -90,
        co = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i) {
            var a;
            p(this, n),
              ((a = t.call(this)).type = "CubeCamera"),
              (a.renderTarget = i);
            var o = new lo(uo, 1, e, r);
            (o.layers = a.layers),
              o.up.set(0, 1, 0),
              o.lookAt(1, 0, 0),
              a.add(o);
            var s = new lo(uo, 1, e, r);
            (s.layers = a.layers),
              s.up.set(0, 1, 0),
              s.lookAt(-1, 0, 0),
              a.add(s);
            var l = new lo(uo, 1, e, r);
            (l.layers = a.layers),
              l.up.set(0, 0, -1),
              l.lookAt(0, 1, 0),
              a.add(l);
            var u = new lo(uo, 1, e, r);
            (u.layers = a.layers),
              u.up.set(0, 0, 1),
              u.lookAt(0, -1, 0),
              a.add(u);
            var c = new lo(uo, 1, e, r);
            (c.layers = a.layers),
              c.up.set(0, 1, 0),
              c.lookAt(0, 0, 1),
              a.add(c);
            var d = new lo(uo, 1, e, r);
            return (
              (d.layers = a.layers),
              d.up.set(0, 1, 0),
              d.lookAt(0, 0, -1),
              a.add(d),
              a
            );
          }
          return (
            g(n, [
              {
                key: "update",
                value: function (e, t) {
                  null === this.parent && this.updateMatrixWorld();
                  var n = this.renderTarget,
                    r = (0, i.Z)(this.children, 6),
                    a = r[0],
                    o = r[1],
                    s = r[2],
                    l = r[3],
                    u = r[4],
                    c = r[5],
                    d = e.getRenderTarget(),
                    f = e.toneMapping,
                    h = e.xr.enabled;
                  (e.toneMapping = Ae), (e.xr.enabled = !1);
                  var p = n.texture.generateMipmaps;
                  (n.texture.generateMipmaps = !1),
                    e.setRenderTarget(n, 0),
                    e.render(t, a),
                    e.setRenderTarget(n, 1),
                    e.render(t, o),
                    e.setRenderTarget(n, 2),
                    e.render(t, s),
                    e.setRenderTarget(n, 3),
                    e.render(t, l),
                    e.setRenderTarget(n, 4),
                    e.render(t, u),
                    (n.texture.generateMipmaps = p),
                    e.setRenderTarget(n, 5),
                    e.render(t, c),
                    e.setRenderTarget(d),
                    (e.toneMapping = f),
                    (e.xr.enabled = h),
                    (n.texture.needsPMREMUpdate = !0);
                },
              },
            ]),
            n
          );
        })(Hi),
        fo = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i, a, o, s, l, u, c, d) {
            var f;
            return (
              p(this, n),
              (e = void 0 !== e ? e : []),
              (r = void 0 !== r ? r : Oe),
              ((f = t.call(this, e, r, i, a, o, s, l, u, c, d)).isCubeTexture =
                !0),
              (f.flipY = !1),
              f
            );
          }
          return (
            g(n, [
              {
                key: "images",
                get: function () {
                  return this.image;
                },
                set: function (e) {
                  this.image = e;
                },
              },
            ]),
            n
          );
        })(Lr),
        ho = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {};
            p(this, n),
              ((e = t.call(this, r, r, i)).isWebGLCubeRenderTarget = !0);
            var a = { width: r, height: r, depth: 1 },
              o = [a, a, a, a, a, a];
            return (
              void 0 !== i.encoding &&
                (br(
                  "THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."
                ),
                (i.colorSpace = i.encoding === hn ? bn : yn)),
              (e.texture = new fo(
                o,
                i.mapping,
                i.wrapS,
                i.wrapT,
                i.magFilter,
                i.minFilter,
                i.format,
                i.type,
                i.anisotropy,
                i.colorSpace
              )),
              (e.texture.isRenderTargetTexture = !0),
              (e.texture.generateMipmaps =
                void 0 !== i.generateMipmaps && i.generateMipmaps),
              (e.texture.minFilter = void 0 !== i.minFilter ? i.minFilter : qe),
              e
            );
          }
          return (
            g(n, [
              {
                key: "fromEquirectangularTexture",
                value: function (e, t) {
                  (this.texture.type = t.type),
                    (this.texture.colorSpace = t.colorSpace),
                    (this.texture.generateMipmaps = t.generateMipmaps),
                    (this.texture.minFilter = t.minFilter),
                    (this.texture.magFilter = t.magFilter);
                  var n = { tEquirect: { value: null } },
                    r =
                      "\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",
                    i =
                      "\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",
                    a = new to(5, 5, 5),
                    o = new oo({
                      name: "CubemapFromEquirect",
                      uniforms: no(n),
                      vertexShader: r,
                      fragmentShader: i,
                      side: j,
                      blending: Y,
                    });
                  o.uniforms.tEquirect.value = t;
                  var s = new Qa(a, o),
                    l = t.minFilter;
                  return (
                    t.minFilter === $e && (t.minFilter = qe),
                    new co(1, 10, this).update(e, s),
                    (t.minFilter = l),
                    s.geometry.dispose(),
                    s.material.dispose(),
                    this
                  );
                },
              },
              {
                key: "clear",
                value: function (e, t, n, r) {
                  for (var i = e.getRenderTarget(), a = 0; a < 6; a++)
                    e.setRenderTarget(this, a), e.clear(t, n, r);
                  e.setRenderTarget(i);
                },
              },
            ]),
            n
          );
        })(Nr),
        po = new Zr(),
        vo = new Zr(),
        mo = new fr(),
        go = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Zr(1, 0, 0),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0;
            p(this, e),
              (this.isPlane = !0),
              (this.normal = t),
              (this.constant = n);
          }
          return (
            g(e, [
              {
                key: "set",
                value: function (e, t) {
                  return this.normal.copy(e), (this.constant = t), this;
                },
              },
              {
                key: "setComponents",
                value: function (e, t, n, r) {
                  return this.normal.set(e, t, n), (this.constant = r), this;
                },
              },
              {
                key: "setFromNormalAndCoplanarPoint",
                value: function (e, t) {
                  return (
                    this.normal.copy(e),
                    (this.constant = -t.dot(this.normal)),
                    this
                  );
                },
              },
              {
                key: "setFromCoplanarPoints",
                value: function (e, t, n) {
                  var r = po
                    .subVectors(n, t)
                    .cross(vo.subVectors(e, t))
                    .normalize();
                  return this.setFromNormalAndCoplanarPoint(r, e), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    this.normal.copy(e.normal),
                    (this.constant = e.constant),
                    this
                  );
                },
              },
              {
                key: "normalize",
                value: function () {
                  var e = 1 / this.normal.length();
                  return (
                    this.normal.multiplyScalar(e), (this.constant *= e), this
                  );
                },
              },
              {
                key: "negate",
                value: function () {
                  return (this.constant *= -1), this.normal.negate(), this;
                },
              },
              {
                key: "distanceToPoint",
                value: function (e) {
                  return this.normal.dot(e) + this.constant;
                },
              },
              {
                key: "distanceToSphere",
                value: function (e) {
                  return this.distanceToPoint(e.center) - e.radius;
                },
              },
              {
                key: "projectPoint",
                value: function (e, t) {
                  return t
                    .copy(e)
                    .addScaledVector(this.normal, -this.distanceToPoint(e));
                },
              },
              {
                key: "intersectLine",
                value: function (e, t) {
                  var n = e.delta(po),
                    r = this.normal.dot(n);
                  if (0 === r)
                    return 0 === this.distanceToPoint(e.start)
                      ? t.copy(e.start)
                      : null;
                  var i = -(e.start.dot(this.normal) + this.constant) / r;
                  return i < 0 || i > 1
                    ? null
                    : t.copy(e.start).addScaledVector(n, i);
                },
              },
              {
                key: "intersectsLine",
                value: function (e) {
                  var t = this.distanceToPoint(e.start),
                    n = this.distanceToPoint(e.end);
                  return (t < 0 && n > 0) || (n < 0 && t > 0);
                },
              },
              {
                key: "intersectsBox",
                value: function (e) {
                  return e.intersectsPlane(this);
                },
              },
              {
                key: "intersectsSphere",
                value: function (e) {
                  return e.intersectsPlane(this);
                },
              },
              {
                key: "coplanarPoint",
                value: function (e) {
                  return e.copy(this.normal).multiplyScalar(-this.constant);
                },
              },
              {
                key: "applyMatrix4",
                value: function (e, t) {
                  var n = t || mo.getNormalMatrix(e),
                    r = this.coplanarPoint(po).applyMatrix4(e),
                    i = this.normal.applyMatrix3(n).normalize();
                  return (this.constant = -r.dot(i)), this;
                },
              },
              {
                key: "translate",
                value: function (e) {
                  return (this.constant -= e.dot(this.normal)), this;
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return (
                    e.normal.equals(this.normal) && e.constant === this.constant
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            e
          );
        })(),
        yo = new li(),
        bo = new Zr(),
        _o = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new go(),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new go(),
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : new go(),
              i =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : new go(),
              a =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : new go(),
              o =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : new go();
            p(this, e), (this.planes = [t, n, r, i, a, o]);
          }
          return (
            g(e, [
              {
                key: "set",
                value: function (e, t, n, r, i, a) {
                  var o = this.planes;
                  return (
                    o[0].copy(e),
                    o[1].copy(t),
                    o[2].copy(n),
                    o[3].copy(r),
                    o[4].copy(i),
                    o[5].copy(a),
                    this
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  for (var t = this.planes, n = 0; n < 6; n++)
                    t[n].copy(e.planes[n]);
                  return this;
                },
              },
              {
                key: "setFromProjectionMatrix",
                value: function (e) {
                  var t = this.planes,
                    n = e.elements,
                    r = n[0],
                    i = n[1],
                    a = n[2],
                    o = n[3],
                    s = n[4],
                    l = n[5],
                    u = n[6],
                    c = n[7],
                    d = n[8],
                    f = n[9],
                    h = n[10],
                    p = n[11],
                    v = n[12],
                    m = n[13],
                    g = n[14],
                    y = n[15];
                  return (
                    t[0].setComponents(o - r, c - s, p - d, y - v).normalize(),
                    t[1].setComponents(o + r, c + s, p + d, y + v).normalize(),
                    t[2].setComponents(o + i, c + l, p + f, y + m).normalize(),
                    t[3].setComponents(o - i, c - l, p - f, y - m).normalize(),
                    t[4].setComponents(o - a, c - u, p - h, y - g).normalize(),
                    t[5].setComponents(o + a, c + u, p + h, y + g).normalize(),
                    this
                  );
                },
              },
              {
                key: "intersectsObject",
                value: function (e) {
                  if (void 0 !== e.boundingSphere)
                    null === e.boundingSphere && e.computeBoundingSphere(),
                      yo.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);
                  else {
                    var t = e.geometry;
                    null === t.boundingSphere && t.computeBoundingSphere(),
                      yo.copy(t.boundingSphere).applyMatrix4(e.matrixWorld);
                  }
                  return this.intersectsSphere(yo);
                },
              },
              {
                key: "intersectsSprite",
                value: function (e) {
                  return (
                    yo.center.set(0, 0, 0),
                    (yo.radius = 0.7071067811865476),
                    yo.applyMatrix4(e.matrixWorld),
                    this.intersectsSphere(yo)
                  );
                },
              },
              {
                key: "intersectsSphere",
                value: function (e) {
                  for (
                    var t = this.planes, n = e.center, r = -e.radius, i = 0;
                    i < 6;
                    i++
                  ) {
                    if (t[i].distanceToPoint(n) < r) return !1;
                  }
                  return !0;
                },
              },
              {
                key: "intersectsBox",
                value: function (e) {
                  for (var t = this.planes, n = 0; n < 6; n++) {
                    var r = t[n];
                    if (
                      ((bo.x = r.normal.x > 0 ? e.max.x : e.min.x),
                      (bo.y = r.normal.y > 0 ? e.max.y : e.min.y),
                      (bo.z = r.normal.z > 0 ? e.max.z : e.min.z),
                      r.distanceToPoint(bo) < 0)
                    )
                      return !1;
                  }
                  return !0;
                },
              },
              {
                key: "containsPoint",
                value: function (e) {
                  for (var t = this.planes, n = 0; n < 6; n++)
                    if (t[n].distanceToPoint(e) < 0) return !1;
                  return !0;
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            e
          );
        })();
      function xo() {
        var e = null,
          t = !1,
          n = null,
          r = null;
        function i(t, a) {
          n(t, a), (r = e.requestAnimationFrame(i));
        }
        return {
          start: function () {
            !0 !== t &&
              null !== n &&
              ((r = e.requestAnimationFrame(i)), (t = !0));
          },
          stop: function () {
            e.cancelAnimationFrame(r), (t = !1);
          },
          setAnimationLoop: function (e) {
            n = e;
          },
          setContext: function (t) {
            e = t;
          },
        };
      }
      function So(e, t) {
        var n = t.isWebGL2,
          r = new WeakMap();
        return {
          get: function (e) {
            return e.isInterleavedBufferAttribute && (e = e.data), r.get(e);
          },
          remove: function (t) {
            t.isInterleavedBufferAttribute && (t = t.data);
            var n = r.get(t);
            n && (e.deleteBuffer(n.buffer), r.delete(t));
          },
          update: function (t, i) {
            if (t.isGLBufferAttribute) {
              var a = r.get(t);
              (!a || a.version < t.version) &&
                r.set(t, {
                  buffer: t.buffer,
                  type: t.type,
                  bytesPerElement: t.elementSize,
                  version: t.version,
                });
            } else {
              t.isInterleavedBufferAttribute && (t = t.data);
              var o = r.get(t);
              void 0 === o
                ? r.set(
                    t,
                    (function (t, r) {
                      var i,
                        a = t.array,
                        o = t.usage,
                        s = e.createBuffer();
                      if (
                        (e.bindBuffer(r, s),
                        e.bufferData(r, a, o),
                        t.onUploadCallback(),
                        a instanceof Float32Array)
                      )
                        i = e.FLOAT;
                      else if (a instanceof Uint16Array)
                        if (t.isFloat16BufferAttribute) {
                          if (!n)
                            throw new Error(
                              "THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."
                            );
                          i = e.HALF_FLOAT;
                        } else i = e.UNSIGNED_SHORT;
                      else if (a instanceof Int16Array) i = e.SHORT;
                      else if (a instanceof Uint32Array) i = e.UNSIGNED_INT;
                      else if (a instanceof Int32Array) i = e.INT;
                      else if (a instanceof Int8Array) i = e.BYTE;
                      else if (a instanceof Uint8Array) i = e.UNSIGNED_BYTE;
                      else {
                        if (!(a instanceof Uint8ClampedArray))
                          throw new Error(
                            "THREE.WebGLAttributes: Unsupported buffer data format: " +
                              a
                          );
                        i = e.UNSIGNED_BYTE;
                      }
                      return {
                        buffer: s,
                        type: i,
                        bytesPerElement: a.BYTES_PER_ELEMENT,
                        version: t.version,
                      };
                    })(t, i)
                  )
                : o.version < t.version &&
                  (!(function (t, r, i) {
                    var a = r.array,
                      o = r.updateRange;
                    e.bindBuffer(i, t),
                      -1 === o.count
                        ? e.bufferSubData(i, 0, a)
                        : (n
                            ? e.bufferSubData(
                                i,
                                o.offset * a.BYTES_PER_ELEMENT,
                                a,
                                o.offset,
                                o.count
                              )
                            : e.bufferSubData(
                                i,
                                o.offset * a.BYTES_PER_ELEMENT,
                                a.subarray(o.offset, o.offset + o.count)
                              ),
                          (o.count = -1)),
                      r.onUploadCallback();
                  })(o.buffer, t, i),
                  (o.version = t.version));
            }
          },
        };
      }
      var wo = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1;
            p(this, n),
              ((e = t.call(this)).type = "PlaneGeometry"),
              (e.parameters = {
                width: r,
                height: i,
                widthSegments: a,
                heightSegments: o,
              });
            for (
              var s = r / 2,
                l = i / 2,
                u = Math.floor(a),
                c = Math.floor(o),
                d = u + 1,
                f = c + 1,
                h = r / u,
                v = i / c,
                m = [],
                g = [],
                y = [],
                b = [],
                _ = 0;
              _ < f;
              _++
            )
              for (var x = _ * v - l, S = 0; S < d; S++) {
                var w = S * h - s;
                g.push(w, -x, 0),
                  y.push(0, 0, 1),
                  b.push(S / u),
                  b.push(1 - _ / c);
              }
            for (var M = 0; M < c; M++)
              for (var E = 0; E < u; E++) {
                var k = E + d * M,
                  T = E + d * (M + 1),
                  A = E + 1 + d * (M + 1),
                  C = E + 1 + d * M;
                m.push(k, T, C), m.push(T, A, C);
              }
            return (
              e.setIndex(m),
              e.setAttribute("position", new ka(g, 3)),
              e.setAttribute("normal", new ka(y, 3)),
              e.setAttribute("uv", new ka(b, 2)),
              e
            );
          }
          return (
            g(
              n,
              [
                {
                  key: "copy",
                  value: function (e) {
                    return (
                      L(_(n.prototype), "copy", this).call(this, e),
                      (this.parameters = Object.assign({}, e.parameters)),
                      this
                    );
                  },
                },
              ],
              [
                {
                  key: "fromJSON",
                  value: function (e) {
                    return new n(
                      e.width,
                      e.height,
                      e.widthSegments,
                      e.heightSegments
                    );
                  },
                },
              ]
            ),
            n
          );
        })(Oa),
        Mo = {
          alphamap_fragment:
            "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",
          alphamap_pars_fragment:
            "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
          alphatest_fragment:
            "#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",
          alphatest_pars_fragment:
            "#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",
          aomap_fragment:
            "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",
          aomap_pars_fragment:
            "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",
          begin_vertex: "vec3 transformed = vec3( position );",
          beginnormal_vertex:
            "vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",
          bsdfs:
            "float G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n} // validated",
          iridescence_fragment:
            "#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\t return vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat R21 = R12;\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",
          bumpmap_pars_fragment:
            "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vBumpMapUv );\n\t\tvec2 dSTdy = dFdy( vBumpMapUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos.xyz );\n\t\tvec3 vSigmaY = dFdy( surf_pos.xyz );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",
          clipping_planes_fragment:
            "#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",
          clipping_planes_pars_fragment:
            "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",
          clipping_planes_pars_vertex:
            "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",
          clipping_planes_vertex:
            "#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",
          color_fragment:
            "#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",
          color_pars_fragment:
            "#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",
          color_pars_vertex:
            "#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",
          color_vertex:
            "#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",
          common:
            "#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n\treturn dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",
          cube_uv_reflection_fragment:
            "#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_v0 0.339\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_v1 0.276\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_v4 0.046\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_v5 0.016\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_v6 0.0038\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",
          defaultnormal_vertex:
            "vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",
          displacementmap_pars_vertex:
            "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",
          displacementmap_vertex:
            "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",
          emissivemap_fragment:
            "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",
          emissivemap_pars_fragment:
            "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",
          encodings_fragment:
            "gl_FragColor = linearToOutputTexel( gl_FragColor );",
          encodings_pars_fragment:
            "vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",
          envmap_fragment:
            "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",
          envmap_common_pars_fragment:
            "#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",
          envmap_pars_fragment:
            "#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",
          envmap_pars_vertex:
            "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",
          envmap_physical_pars_fragment:
            "#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",
          envmap_vertex:
            "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",
          fog_vertex: "#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",
          fog_pars_vertex: "#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",
          fog_fragment:
            "#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",
          fog_pars_fragment:
            "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",
          gradientmap_pars_fragment:
            "#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",
          lightmap_fragment:
            "#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",
          lightmap_pars_fragment:
            "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",
          lights_lambert_fragment:
            "LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",
          lights_lambert_pars_fragment:
            "varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",
          lights_pars_begin:
            "uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( LEGACY_LIGHTS )\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#else\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",
          lights_toon_fragment:
            "ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",
          lights_toon_pars_fragment:
            "varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",
          lights_phong_fragment:
            "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",
          lights_phong_pars_fragment:
            "varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",
          lights_physical_fragment:
            "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef USE_SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULAR_COLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n\t\t#endif\n\t\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n\t#endif\n#endif",
          lights_physical_pars_fragment:
            "struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_CLEARCOAT\n\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n\t\tvec3 f0 = material.clearcoatF0;\n\t\tfloat f90 = material.clearcoatF90;\n\t\tfloat roughness = material.clearcoatRoughness;\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n\tvec3 f0 = material.specularColor;\n\tfloat f90 = material.specularF90;\n\tfloat roughness = material.roughness;\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t#ifdef USE_IRIDESCENCE\n\t\tF = mix( F, material.iridescenceFresnel, material.iridescence );\n\t#endif\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",
          lights_fragment_begin:
            "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",
          lights_fragment_maps:
            "#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",
          lights_fragment_end:
            "#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",
          logdepthbuf_fragment:
            "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",
          logdepthbuf_pars_fragment:
            "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",
          logdepthbuf_pars_vertex:
            "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",
          logdepthbuf_vertex:
            "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",
          map_fragment:
            "#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, vMapUv );\n#endif",
          map_pars_fragment: "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",
          map_particle_fragment:
            "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t#if defined( USE_POINTS_UV )\n\t\tvec2 uv = vUv;\n\t#else\n\t\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",
          map_particle_pars_fragment:
            "#if defined( USE_POINTS_UV )\n\tvarying vec2 vUv;\n#else\n\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t\tuniform mat3 uvTransform;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
          metalnessmap_fragment:
            "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",
          metalnessmap_pars_fragment:
            "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",
          morphcolor_vertex:
            "#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",
          morphnormal_vertex:
            "#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",
          morphtarget_pars_vertex:
            "#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",
          morphtarget_vertex:
            "#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",
          normal_fragment_begin:
            "float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal *= faceDirection;\n\t#endif\n#endif\n#ifdef USE_NORMALMAP_TANGENTSPACE\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn = getTangentFrame( - vViewPosition, normal, vNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn[0] *= faceDirection;\n\t\ttbn[1] *= faceDirection;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn2[0] *= faceDirection;\n\t\ttbn2[1] *= faceDirection;\n\t#endif\n#endif\nvec3 geometryNormal = normal;",
          normal_fragment_maps:
            "#ifdef USE_NORMALMAP_OBJECTSPACE\n\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\tnormal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",
          normal_pars_fragment:
            "#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",
          normal_pars_vertex:
            "#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",
          normal_vertex:
            "#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",
          normalmap_pars_fragment:
            "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( uv.st );\n\t\tvec2 st1 = dFdy( uv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n\t\treturn mat3( T * scale, B * scale, N );\n\t}\n#endif",
          clearcoat_normal_fragment_begin:
            "#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",
          clearcoat_normal_fragment_maps:
            "#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",
          clearcoat_pars_fragment:
            "#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif",
          iridescence_pars_fragment:
            "#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",
          output_fragment:
            "#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",
          packing:
            "vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec2 packDepthToRG( in highp float v ) {\n\treturn packDepthToRGBA( v ).yx;\n}\nfloat unpackRGToDepth( const in highp vec2 v ) {\n\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * depth - far );\n}",
          premultiplied_alpha_fragment:
            "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",
          project_vertex:
            "vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",
          dithering_fragment:
            "#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",
          dithering_pars_fragment:
            "#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",
          roughnessmap_fragment:
            "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",
          roughnessmap_pars_fragment:
            "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",
          shadowmap_pars_fragment:
            "#if NUM_SPOT_LIGHT_COORDS > 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",
          shadowmap_pars_vertex:
            "#if NUM_SPOT_LIGHT_COORDS > 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",
          shadowmap_vertex:
            "#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\tvec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n#endif",
          shadowmask_pars_fragment:
            "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",
          skinbase_vertex:
            "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",
          skinning_pars_vertex:
            "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",
          skinning_vertex:
            "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",
          skinnormal_vertex:
            "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",
          specularmap_fragment:
            "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",
          specularmap_pars_fragment:
            "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",
          tonemapping_fragment:
            "#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",
          tonemapping_pars_fragment:
            "#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",
          transmission_fragment:
            "#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\n#endif",
          transmission_pars_fragment:
            "#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tfloat w0( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n\t}\n\tfloat w1( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n\t}\n\tfloat w2( float a ){\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n\t}\n\tfloat w3( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\n\t}\n\tfloat g0( float a ) {\n\t\treturn w0( a ) + w1( a );\n\t}\n\tfloat g1( float a ) {\n\t\treturn w2( a ) + w3( a );\n\t}\n\tfloat h0( float a ) {\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n\t}\n\tfloat h1( float a ) {\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n\t}\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n\t\tuv = uv * texelSize.zw + 0.5;\n\t\tvec2 iuv = floor( uv );\n\t\tvec2 fuv = fract( uv );\n\t\tfloat g0x = g0( fuv.x );\n\t\tfloat g1x = g1( fuv.x );\n\t\tfloat h0x = h0( fuv.x );\n\t\tfloat h1x = h1( fuv.x );\n\t\tfloat h0y = h0( fuv.y );\n\t\tfloat h1y = h1( fuv.y );\n\t\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n\t}\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n\t\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n\t\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n\t\tvec2 fLodSizeInv = 1.0 / fLodSize;\n\t\tvec2 cLodSizeInv = 1.0 / cLodSize;\n\t\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n\t\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n\t\treturn mix( fSample, cSample, fract( lod ) );\n\t}\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",
          uv_pars_fragment:
            "#ifdef USE_UV\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",
          uv_pars_vertex:
            "#ifdef USE_UV\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform mat3 mapTransform;\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform mat3 alphaMapTransform;\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tuniform mat3 lightMapTransform;\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tuniform mat3 aoMapTransform;\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tuniform mat3 bumpMapTransform;\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tuniform mat3 normalMapTransform;\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tuniform mat3 displacementMapTransform;\n\tvarying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tuniform mat3 emissiveMapTransform;\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tuniform mat3 metalnessMapTransform;\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tuniform mat3 roughnessMapTransform;\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tuniform mat3 clearcoatMapTransform;\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform mat3 clearcoatNormalMapTransform;\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform mat3 clearcoatRoughnessMapTransform;\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tuniform mat3 sheenColorMapTransform;\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tuniform mat3 sheenRoughnessMapTransform;\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tuniform mat3 iridescenceMapTransform;\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform mat3 iridescenceThicknessMapTransform;\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tuniform mat3 specularMapTransform;\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tuniform mat3 specularColorMapTransform;\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tuniform mat3 specularIntensityMapTransform;\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",
          uv_vertex:
            "#ifdef USE_UV\n\tvUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",
          worldpos_vertex:
            "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",
          background_vert:
            "varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",
          background_frag:
            "uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
          backgroundCube_vert:
            "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",
          backgroundCube_frag:
            "#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
          cube_vert:
            "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",
          cube_frag:
            "uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
          depth_vert:
            "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",
          depth_frag:
            "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",
          distanceRGBA_vert:
            "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",
          distanceRGBA_frag:
            "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",
          equirect_vert:
            "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",
          equirect_frag:
            "uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
          linedashed_vert:
            "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",
          linedashed_frag:
            "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
          meshbasic_vert:
            "#include <common>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",
          meshbasic_frag:
            "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
          meshlambert_vert:
            "#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
          meshlambert_frag:
            "#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
          meshmatcap_vert:
            "#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",
          meshmatcap_frag:
            "#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
          meshnormal_vert:
            "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",
          meshnormal_frag:
            "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",
          meshphong_vert:
            "#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
          meshphong_frag:
            "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
          meshphysical_vert:
            "#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",
          meshphysical_frag:
            "#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef USE_SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULAR_COLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
          meshtoon_vert:
            "#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
          meshtoon_frag:
            "#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
          points_vert:
            "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\nvoid main() {\n\t#ifdef USE_POINTS_UV\n\t\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\t#endif\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",
          points_frag:
            "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
          shadow_vert:
            "#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
          shadow_frag:
            "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
          sprite_vert:
            "uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",
          sprite_frag:
            "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
        },
        Eo = {
          common: {
            diffuse: { value: new sa(16777215) },
            opacity: { value: 1 },
            map: { value: null },
            mapTransform: { value: new fr() },
            alphaMap: { value: null },
            alphaMapTransform: { value: new fr() },
            alphaTest: { value: 0 },
          },
          specularmap: {
            specularMap: { value: null },
            specularMapTransform: { value: new fr() },
          },
          envmap: {
            envMap: { value: null },
            flipEnvMap: { value: -1 },
            reflectivity: { value: 1 },
            ior: { value: 1.5 },
            refractionRatio: { value: 0.98 },
          },
          aomap: {
            aoMap: { value: null },
            aoMapIntensity: { value: 1 },
            aoMapTransform: { value: new fr() },
          },
          lightmap: {
            lightMap: { value: null },
            lightMapIntensity: { value: 1 },
            lightMapTransform: { value: new fr() },
          },
          bumpmap: {
            bumpMap: { value: null },
            bumpMapTransform: { value: new fr() },
            bumpScale: { value: 1 },
          },
          normalmap: {
            normalMap: { value: null },
            normalMapTransform: { value: new fr() },
            normalScale: { value: new dr(1, 1) },
          },
          displacementmap: {
            displacementMap: { value: null },
            displacementMapTransform: { value: new fr() },
            displacementScale: { value: 1 },
            displacementBias: { value: 0 },
          },
          emissivemap: {
            emissiveMap: { value: null },
            emissiveMapTransform: { value: new fr() },
          },
          metalnessmap: {
            metalnessMap: { value: null },
            metalnessMapTransform: { value: new fr() },
          },
          roughnessmap: {
            roughnessMap: { value: null },
            roughnessMapTransform: { value: new fr() },
          },
          gradientmap: { gradientMap: { value: null } },
          fog: {
            fogDensity: { value: 25e-5 },
            fogNear: { value: 1 },
            fogFar: { value: 2e3 },
            fogColor: { value: new sa(16777215) },
          },
          lights: {
            ambientLightColor: { value: [] },
            lightProbe: { value: [] },
            directionalLights: {
              value: [],
              properties: { direction: {}, color: {} },
            },
            directionalLightShadows: {
              value: [],
              properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {},
              },
            },
            directionalShadowMap: { value: [] },
            directionalShadowMatrix: { value: [] },
            spotLights: {
              value: [],
              properties: {
                color: {},
                position: {},
                direction: {},
                distance: {},
                coneCos: {},
                penumbraCos: {},
                decay: {},
              },
            },
            spotLightShadows: {
              value: [],
              properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {},
              },
            },
            spotLightMap: { value: [] },
            spotShadowMap: { value: [] },
            spotLightMatrix: { value: [] },
            pointLights: {
              value: [],
              properties: { color: {}, position: {}, decay: {}, distance: {} },
            },
            pointLightShadows: {
              value: [],
              properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {},
                shadowCameraNear: {},
                shadowCameraFar: {},
              },
            },
            pointShadowMap: { value: [] },
            pointShadowMatrix: { value: [] },
            hemisphereLights: {
              value: [],
              properties: { direction: {}, skyColor: {}, groundColor: {} },
            },
            rectAreaLights: {
              value: [],
              properties: { color: {}, position: {}, width: {}, height: {} },
            },
            ltc_1: { value: null },
            ltc_2: { value: null },
          },
          points: {
            diffuse: { value: new sa(16777215) },
            opacity: { value: 1 },
            size: { value: 1 },
            scale: { value: 1 },
            map: { value: null },
            alphaMap: { value: null },
            alphaTest: { value: 0 },
            uvTransform: { value: new fr() },
          },
          sprite: {
            diffuse: { value: new sa(16777215) },
            opacity: { value: 1 },
            center: { value: new dr(0.5, 0.5) },
            rotation: { value: 0 },
            map: { value: null },
            mapTransform: { value: new fr() },
            alphaMap: { value: null },
            alphaTest: { value: 0 },
          },
        },
        ko = {
          basic: {
            uniforms: ro([
              Eo.common,
              Eo.specularmap,
              Eo.envmap,
              Eo.aomap,
              Eo.lightmap,
              Eo.fog,
            ]),
            vertexShader: Mo.meshbasic_vert,
            fragmentShader: Mo.meshbasic_frag,
          },
          lambert: {
            uniforms: ro([
              Eo.common,
              Eo.specularmap,
              Eo.envmap,
              Eo.aomap,
              Eo.lightmap,
              Eo.emissivemap,
              Eo.bumpmap,
              Eo.normalmap,
              Eo.displacementmap,
              Eo.fog,
              Eo.lights,
              { emissive: { value: new sa(0) } },
            ]),
            vertexShader: Mo.meshlambert_vert,
            fragmentShader: Mo.meshlambert_frag,
          },
          phong: {
            uniforms: ro([
              Eo.common,
              Eo.specularmap,
              Eo.envmap,
              Eo.aomap,
              Eo.lightmap,
              Eo.emissivemap,
              Eo.bumpmap,
              Eo.normalmap,
              Eo.displacementmap,
              Eo.fog,
              Eo.lights,
              {
                emissive: { value: new sa(0) },
                specular: { value: new sa(1118481) },
                shininess: { value: 30 },
              },
            ]),
            vertexShader: Mo.meshphong_vert,
            fragmentShader: Mo.meshphong_frag,
          },
          standard: {
            uniforms: ro([
              Eo.common,
              Eo.envmap,
              Eo.aomap,
              Eo.lightmap,
              Eo.emissivemap,
              Eo.bumpmap,
              Eo.normalmap,
              Eo.displacementmap,
              Eo.roughnessmap,
              Eo.metalnessmap,
              Eo.fog,
              Eo.lights,
              {
                emissive: { value: new sa(0) },
                roughness: { value: 1 },
                metalness: { value: 0 },
                envMapIntensity: { value: 1 },
              },
            ]),
            vertexShader: Mo.meshphysical_vert,
            fragmentShader: Mo.meshphysical_frag,
          },
          toon: {
            uniforms: ro([
              Eo.common,
              Eo.aomap,
              Eo.lightmap,
              Eo.emissivemap,
              Eo.bumpmap,
              Eo.normalmap,
              Eo.displacementmap,
              Eo.gradientmap,
              Eo.fog,
              Eo.lights,
              { emissive: { value: new sa(0) } },
            ]),
            vertexShader: Mo.meshtoon_vert,
            fragmentShader: Mo.meshtoon_frag,
          },
          matcap: {
            uniforms: ro([
              Eo.common,
              Eo.bumpmap,
              Eo.normalmap,
              Eo.displacementmap,
              Eo.fog,
              { matcap: { value: null } },
            ]),
            vertexShader: Mo.meshmatcap_vert,
            fragmentShader: Mo.meshmatcap_frag,
          },
          points: {
            uniforms: ro([Eo.points, Eo.fog]),
            vertexShader: Mo.points_vert,
            fragmentShader: Mo.points_frag,
          },
          dashed: {
            uniforms: ro([
              Eo.common,
              Eo.fog,
              {
                scale: { value: 1 },
                dashSize: { value: 1 },
                totalSize: { value: 2 },
              },
            ]),
            vertexShader: Mo.linedashed_vert,
            fragmentShader: Mo.linedashed_frag,
          },
          depth: {
            uniforms: ro([Eo.common, Eo.displacementmap]),
            vertexShader: Mo.depth_vert,
            fragmentShader: Mo.depth_frag,
          },
          normal: {
            uniforms: ro([
              Eo.common,
              Eo.bumpmap,
              Eo.normalmap,
              Eo.displacementmap,
              { opacity: { value: 1 } },
            ]),
            vertexShader: Mo.meshnormal_vert,
            fragmentShader: Mo.meshnormal_frag,
          },
          sprite: {
            uniforms: ro([Eo.sprite, Eo.fog]),
            vertexShader: Mo.sprite_vert,
            fragmentShader: Mo.sprite_frag,
          },
          background: {
            uniforms: {
              uvTransform: { value: new fr() },
              t2D: { value: null },
              backgroundIntensity: { value: 1 },
            },
            vertexShader: Mo.background_vert,
            fragmentShader: Mo.background_frag,
          },
          backgroundCube: {
            uniforms: {
              envMap: { value: null },
              flipEnvMap: { value: -1 },
              backgroundBlurriness: { value: 0 },
              backgroundIntensity: { value: 1 },
            },
            vertexShader: Mo.backgroundCube_vert,
            fragmentShader: Mo.backgroundCube_frag,
          },
          cube: {
            uniforms: {
              tCube: { value: null },
              tFlip: { value: -1 },
              opacity: { value: 1 },
            },
            vertexShader: Mo.cube_vert,
            fragmentShader: Mo.cube_frag,
          },
          equirect: {
            uniforms: { tEquirect: { value: null } },
            vertexShader: Mo.equirect_vert,
            fragmentShader: Mo.equirect_frag,
          },
          distanceRGBA: {
            uniforms: ro([
              Eo.common,
              Eo.displacementmap,
              {
                referencePosition: { value: new Zr() },
                nearDistance: { value: 1 },
                farDistance: { value: 1e3 },
              },
            ]),
            vertexShader: Mo.distanceRGBA_vert,
            fragmentShader: Mo.distanceRGBA_frag,
          },
          shadow: {
            uniforms: ro([
              Eo.lights,
              Eo.fog,
              { color: { value: new sa(0) }, opacity: { value: 1 } },
            ]),
            vertexShader: Mo.shadow_vert,
            fragmentShader: Mo.shadow_frag,
          },
        };
      ko.physical = {
        uniforms: ro([
          ko.standard.uniforms,
          {
            clearcoat: { value: 0 },
            clearcoatMap: { value: null },
            clearcoatMapTransform: { value: new fr() },
            clearcoatNormalMap: { value: null },
            clearcoatNormalMapTransform: { value: new fr() },
            clearcoatNormalScale: { value: new dr(1, 1) },
            clearcoatRoughness: { value: 0 },
            clearcoatRoughnessMap: { value: null },
            clearcoatRoughnessMapTransform: { value: new fr() },
            iridescence: { value: 0 },
            iridescenceMap: { value: null },
            iridescenceMapTransform: { value: new fr() },
            iridescenceIOR: { value: 1.3 },
            iridescenceThicknessMinimum: { value: 100 },
            iridescenceThicknessMaximum: { value: 400 },
            iridescenceThicknessMap: { value: null },
            iridescenceThicknessMapTransform: { value: new fr() },
            sheen: { value: 0 },
            sheenColor: { value: new sa(0) },
            sheenColorMap: { value: null },
            sheenColorMapTransform: { value: new fr() },
            sheenRoughness: { value: 1 },
            sheenRoughnessMap: { value: null },
            sheenRoughnessMapTransform: { value: new fr() },
            transmission: { value: 0 },
            transmissionMap: { value: null },
            transmissionMapTransform: { value: new fr() },
            transmissionSamplerSize: { value: new dr() },
            transmissionSamplerMap: { value: null },
            thickness: { value: 0 },
            thicknessMap: { value: null },
            thicknessMapTransform: { value: new fr() },
            attenuationDistance: { value: 0 },
            attenuationColor: { value: new sa(0) },
            specularColor: { value: new sa(1, 1, 1) },
            specularColorMap: { value: null },
            specularColorMapTransform: { value: new fr() },
            specularIntensity: { value: 1 },
            specularIntensityMap: { value: null },
            specularIntensityMapTransform: { value: new fr() },
          },
        ]),
        vertexShader: Mo.meshphysical_vert,
        fragmentShader: Mo.meshphysical_frag,
      };
      var To = { r: 0, b: 0, g: 0 };
      function Ao(e, t, n, r, i, a, o) {
        var s,
          l,
          u = new sa(0),
          c = !0 === a ? 0 : 1,
          d = null,
          f = 0,
          h = null;
        function p(t, n) {
          t.getRGB(To, io(e)), r.buffers.color.setClear(To.r, To.g, To.b, n, o);
        }
        return {
          getClearColor: function () {
            return u;
          },
          setClearColor: function (e) {
            var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 1;
            u.set(e), p(u, (c = t));
          },
          getClearAlpha: function () {
            return c;
          },
          setClearAlpha: function (e) {
            p(u, (c = e));
          },
          render: function (a, v) {
            var m = !1,
              g = !0 === v.isScene ? v.background : null;
            switch (
              (g &&
                g.isTexture &&
                (g = (v.backgroundBlurriness > 0 ? n : t).get(g)),
              null === g ? p(u, c) : g && g.isColor && (p(g, 1), (m = !0)),
              e.xr.getEnvironmentBlendMode())
            ) {
              case "opaque":
                m = !0;
                break;
              case "additive":
                r.buffers.color.setClear(0, 0, 0, 1, o), (m = !0);
                break;
              case "alpha-blend":
                r.buffers.color.setClear(0, 0, 0, 0, o), (m = !0);
            }
            (e.autoClear || m) &&
              e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil),
              g && (g.isCubeTexture || g.mapping === Fe)
                ? (void 0 === l &&
                    ((l = new Qa(
                      new to(1, 1, 1),
                      new oo({
                        name: "BackgroundCubeMaterial",
                        uniforms: no(ko.backgroundCube.uniforms),
                        vertexShader: ko.backgroundCube.vertexShader,
                        fragmentShader: ko.backgroundCube.fragmentShader,
                        side: j,
                        depthTest: !1,
                        depthWrite: !1,
                        fog: !1,
                      })
                    )).geometry.deleteAttribute("normal"),
                    l.geometry.deleteAttribute("uv"),
                    (l.onBeforeRender = function (e, t, n) {
                      this.matrixWorld.copyPosition(n.matrixWorld);
                    }),
                    Object.defineProperty(l.material, "envMap", {
                      get: function () {
                        return this.uniforms.envMap.value;
                      },
                    }),
                    i.update(l)),
                  (l.material.uniforms.envMap.value = g),
                  (l.material.uniforms.flipEnvMap.value =
                    g.isCubeTexture && !1 === g.isRenderTargetTexture ? -1 : 1),
                  (l.material.uniforms.backgroundBlurriness.value =
                    v.backgroundBlurriness),
                  (l.material.uniforms.backgroundIntensity.value =
                    v.backgroundIntensity),
                  (l.material.toneMapped = g.colorSpace !== bn),
                  (d === g && f === g.version && h === e.toneMapping) ||
                    ((l.material.needsUpdate = !0),
                    (d = g),
                    (f = g.version),
                    (h = e.toneMapping)),
                  l.layers.enableAll(),
                  a.unshift(l, l.geometry, l.material, 0, 0, null))
                : g &&
                  g.isTexture &&
                  (void 0 === s &&
                    ((s = new Qa(
                      new wo(2, 2),
                      new oo({
                        name: "BackgroundMaterial",
                        uniforms: no(ko.background.uniforms),
                        vertexShader: ko.background.vertexShader,
                        fragmentShader: ko.background.fragmentShader,
                        side: W,
                        depthTest: !1,
                        depthWrite: !1,
                        fog: !1,
                      })
                    )).geometry.deleteAttribute("normal"),
                    Object.defineProperty(s.material, "map", {
                      get: function () {
                        return this.uniforms.t2D.value;
                      },
                    }),
                    i.update(s)),
                  (s.material.uniforms.t2D.value = g),
                  (s.material.uniforms.backgroundIntensity.value =
                    v.backgroundIntensity),
                  (s.material.toneMapped = g.colorSpace !== bn),
                  !0 === g.matrixAutoUpdate && g.updateMatrix(),
                  s.material.uniforms.uvTransform.value.copy(g.matrix),
                  (d === g && f === g.version && h === e.toneMapping) ||
                    ((s.material.needsUpdate = !0),
                    (d = g),
                    (f = g.version),
                    (h = e.toneMapping)),
                  s.layers.enableAll(),
                  a.unshift(s, s.geometry, s.material, 0, 0, null));
          },
        };
      }
      function Co(e, t, n, r) {
        var i = e.getParameter(e.MAX_VERTEX_ATTRIBS),
          a = r.isWebGL2 ? null : t.get("OES_vertex_array_object"),
          o = r.isWebGL2 || null !== a,
          s = {},
          l = h(null),
          u = l,
          c = !1;
        function d(t) {
          return r.isWebGL2 ? e.bindVertexArray(t) : a.bindVertexArrayOES(t);
        }
        function f(t) {
          return r.isWebGL2
            ? e.deleteVertexArray(t)
            : a.deleteVertexArrayOES(t);
        }
        function h(e) {
          for (var t = [], n = [], r = [], a = 0; a < i; a++)
            (t[a] = 0), (n[a] = 0), (r[a] = 0);
          return {
            geometry: null,
            program: null,
            wireframe: !1,
            newAttributes: t,
            enabledAttributes: n,
            attributeDivisors: r,
            object: e,
            attributes: {},
            index: null,
          };
        }
        function p() {
          for (var e = u.newAttributes, t = 0, n = e.length; t < n; t++)
            e[t] = 0;
        }
        function v(e) {
          m(e, 0);
        }
        function m(n, i) {
          var a = u.newAttributes,
            o = u.enabledAttributes,
            s = u.attributeDivisors;
          ((a[n] = 1),
          0 === o[n] && (e.enableVertexAttribArray(n), (o[n] = 1)),
          s[n] !== i) &&
            ((r.isWebGL2 ? e : t.get("ANGLE_instanced_arrays"))[
              r.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"
            ](n, i),
            (s[n] = i));
        }
        function g() {
          for (
            var t = u.newAttributes,
              n = u.enabledAttributes,
              r = 0,
              i = n.length;
            r < i;
            r++
          )
            n[r] !== t[r] && (e.disableVertexAttribArray(r), (n[r] = 0));
        }
        function y(t, n, i, a, o, s) {
          !0 !== r.isWebGL2 || (i !== e.INT && i !== e.UNSIGNED_INT)
            ? e.vertexAttribPointer(t, n, i, a, o, s)
            : e.vertexAttribIPointer(t, n, i, o, s);
        }
        function b() {
          _(), (c = !0), u !== l && d((u = l).object);
        }
        function _() {
          (l.geometry = null), (l.program = null), (l.wireframe = !1);
        }
        return {
          setup: function (i, l, f, b, _) {
            var x = !1;
            if (o) {
              var S = (function (t, n, i) {
                var o = !0 === i.wireframe,
                  l = s[t.id];
                void 0 === l && ((l = {}), (s[t.id] = l));
                var u = l[n.id];
                void 0 === u && ((u = {}), (l[n.id] = u));
                var c = u[o];
                void 0 === c &&
                  ((c = h(
                    r.isWebGL2
                      ? e.createVertexArray()
                      : a.createVertexArrayOES()
                  )),
                  (u[o] = c));
                return c;
              })(b, f, l);
              u !== S && d((u = S).object),
                (x = (function (e, t, n, r) {
                  var i = u.attributes,
                    a = t.attributes,
                    o = 0,
                    s = n.getAttributes();
                  for (var l in s) {
                    if (s[l].location >= 0) {
                      var c = i[l],
                        d = a[l];
                      if (
                        (void 0 === d &&
                          ("instanceMatrix" === l &&
                            e.instanceMatrix &&
                            (d = e.instanceMatrix),
                          "instanceColor" === l &&
                            e.instanceColor &&
                            (d = e.instanceColor)),
                        void 0 === c)
                      )
                        return !0;
                      if (c.attribute !== d) return !0;
                      if (d && c.data !== d.data) return !0;
                      o++;
                    }
                  }
                  return u.attributesNum !== o || u.index !== r;
                })(i, b, f, _)),
                x &&
                  (function (e, t, n, r) {
                    var i = {},
                      a = t.attributes,
                      o = 0,
                      s = n.getAttributes();
                    for (var l in s) {
                      if (s[l].location >= 0) {
                        var c = a[l];
                        void 0 === c &&
                          ("instanceMatrix" === l &&
                            e.instanceMatrix &&
                            (c = e.instanceMatrix),
                          "instanceColor" === l &&
                            e.instanceColor &&
                            (c = e.instanceColor));
                        var d = {};
                        (d.attribute = c),
                          c && c.data && (d.data = c.data),
                          (i[l] = d),
                          o++;
                      }
                    }
                    (u.attributes = i), (u.attributesNum = o), (u.index = r);
                  })(i, b, f, _);
            } else {
              var w = !0 === l.wireframe;
              (u.geometry === b.id &&
                u.program === f.id &&
                u.wireframe === w) ||
                ((u.geometry = b.id),
                (u.program = f.id),
                (u.wireframe = w),
                (x = !0));
            }
            null !== _ && n.update(_, e.ELEMENT_ARRAY_BUFFER),
              (x || c) &&
                ((c = !1),
                (function (i, a, o, s) {
                  if (
                    !1 === r.isWebGL2 &&
                    (i.isInstancedMesh || s.isInstancedBufferGeometry) &&
                    null === t.get("ANGLE_instanced_arrays")
                  )
                    return;
                  p();
                  var l = s.attributes,
                    u = o.getAttributes(),
                    c = a.defaultAttributeValues;
                  for (var d in u) {
                    var f = u[d];
                    if (f.location >= 0) {
                      var h = l[d];
                      if (
                        (void 0 === h &&
                          ("instanceMatrix" === d &&
                            i.instanceMatrix &&
                            (h = i.instanceMatrix),
                          "instanceColor" === d &&
                            i.instanceColor &&
                            (h = i.instanceColor)),
                        void 0 !== h)
                      ) {
                        var b = h.normalized,
                          _ = h.itemSize,
                          x = n.get(h);
                        if (void 0 === x) continue;
                        var S = x.buffer,
                          w = x.type,
                          M = x.bytesPerElement;
                        if (h.isInterleavedBufferAttribute) {
                          var E = h.data,
                            k = E.stride,
                            T = h.offset;
                          if (E.isInstancedInterleavedBuffer) {
                            for (var A = 0; A < f.locationSize; A++)
                              m(f.location + A, E.meshPerAttribute);
                            !0 !== i.isInstancedMesh &&
                              void 0 === s._maxInstanceCount &&
                              (s._maxInstanceCount =
                                E.meshPerAttribute * E.count);
                          } else
                            for (var C = 0; C < f.locationSize; C++)
                              v(f.location + C);
                          e.bindBuffer(e.ARRAY_BUFFER, S);
                          for (var P = 0; P < f.locationSize; P++)
                            y(
                              f.location + P,
                              _ / f.locationSize,
                              w,
                              b,
                              k * M,
                              (T + (_ / f.locationSize) * P) * M
                            );
                        } else {
                          if (h.isInstancedBufferAttribute) {
                            for (var R = 0; R < f.locationSize; R++)
                              m(f.location + R, h.meshPerAttribute);
                            !0 !== i.isInstancedMesh &&
                              void 0 === s._maxInstanceCount &&
                              (s._maxInstanceCount =
                                h.meshPerAttribute * h.count);
                          } else
                            for (var L = 0; L < f.locationSize; L++)
                              v(f.location + L);
                          e.bindBuffer(e.ARRAY_BUFFER, S);
                          for (var I = 0; I < f.locationSize; I++)
                            y(
                              f.location + I,
                              _ / f.locationSize,
                              w,
                              b,
                              _ * M,
                              (_ / f.locationSize) * I * M
                            );
                        }
                      } else if (void 0 !== c) {
                        var N = c[d];
                        if (void 0 !== N)
                          switch (N.length) {
                            case 2:
                              e.vertexAttrib2fv(f.location, N);
                              break;
                            case 3:
                              e.vertexAttrib3fv(f.location, N);
                              break;
                            case 4:
                              e.vertexAttrib4fv(f.location, N);
                              break;
                            default:
                              e.vertexAttrib1fv(f.location, N);
                          }
                      }
                    }
                  }
                  g();
                })(i, l, f, b),
                null !== _ &&
                  e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, n.get(_).buffer));
          },
          reset: b,
          resetDefaultState: _,
          dispose: function () {
            for (var e in (b(), s)) {
              var t = s[e];
              for (var n in t) {
                var r = t[n];
                for (var i in r) f(r[i].object), delete r[i];
                delete t[n];
              }
              delete s[e];
            }
          },
          releaseStatesOfGeometry: function (e) {
            if (void 0 !== s[e.id]) {
              var t = s[e.id];
              for (var n in t) {
                var r = t[n];
                for (var i in r) f(r[i].object), delete r[i];
                delete t[n];
              }
              delete s[e.id];
            }
          },
          releaseStatesOfProgram: function (e) {
            for (var t in s) {
              var n = s[t];
              if (void 0 !== n[e.id]) {
                var r = n[e.id];
                for (var i in r) f(r[i].object), delete r[i];
                delete n[e.id];
              }
            }
          },
          initAttributes: p,
          enableAttribute: v,
          disableUnusedAttributes: g,
        };
      }
      function Po(e, t, n, r) {
        var i,
          a = r.isWebGL2;
        (this.setMode = function (e) {
          i = e;
        }),
          (this.render = function (t, r) {
            e.drawArrays(i, t, r), n.update(r, i, 1);
          }),
          (this.renderInstances = function (r, o, s) {
            if (0 !== s) {
              var l, u;
              if (a) (l = e), (u = "drawArraysInstanced");
              else if (
                ((u = "drawArraysInstancedANGLE"),
                null === (l = t.get("ANGLE_instanced_arrays")))
              )
                return void console.error(
                  "THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."
                );
              l[u](i, r, o, s), n.update(o, i, s);
            }
          });
      }
      function Ro(e, t, n) {
        var r;
        function i(t) {
          if ("highp" === t) {
            if (
              e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.HIGH_FLOAT)
                .precision > 0 &&
              e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.HIGH_FLOAT)
                .precision > 0
            )
              return "highp";
            t = "mediump";
          }
          return "mediump" === t &&
            e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.MEDIUM_FLOAT)
              .precision > 0 &&
            e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.MEDIUM_FLOAT)
              .precision > 0
            ? "mediump"
            : "lowp";
        }
        var a =
            "undefined" !== typeof WebGL2RenderingContext &&
            "WebGL2RenderingContext" === e.constructor.name,
          o = void 0 !== n.precision ? n.precision : "highp",
          s = i(o);
        s !== o &&
          (console.warn(
            "THREE.WebGLRenderer:",
            o,
            "not supported, using",
            s,
            "instead."
          ),
          (o = s));
        var l = a || t.has("WEBGL_draw_buffers"),
          u = !0 === n.logarithmicDepthBuffer,
          c = e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),
          d = e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),
          f = e.getParameter(e.MAX_TEXTURE_SIZE),
          h = e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),
          p = e.getParameter(e.MAX_VERTEX_ATTRIBS),
          v = e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),
          m = e.getParameter(e.MAX_VARYING_VECTORS),
          g = e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),
          y = d > 0,
          b = a || t.has("OES_texture_float");
        return {
          isWebGL2: a,
          drawBuffers: l,
          getMaxAnisotropy: function () {
            if (void 0 !== r) return r;
            if (!0 === t.has("EXT_texture_filter_anisotropic")) {
              var n = t.get("EXT_texture_filter_anisotropic");
              r = e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
            } else r = 0;
            return r;
          },
          getMaxPrecision: i,
          precision: o,
          logarithmicDepthBuffer: u,
          maxTextures: c,
          maxVertexTextures: d,
          maxTextureSize: f,
          maxCubemapSize: h,
          maxAttributes: p,
          maxVertexUniforms: v,
          maxVaryings: m,
          maxFragmentUniforms: g,
          vertexTextures: y,
          floatFragmentTextures: b,
          floatVertexTextures: y && b,
          maxSamples: a ? e.getParameter(e.MAX_SAMPLES) : 0,
        };
      }
      function Lo(e) {
        var t = this,
          n = null,
          r = 0,
          i = !1,
          a = !1,
          o = new go(),
          s = new fr(),
          l = { value: null, needsUpdate: !1 };
        function u(e, n, r, i) {
          var a = null !== e ? e.length : 0,
            u = null;
          if (0 !== a) {
            if (((u = l.value), !0 !== i || null === u)) {
              var c = r + 4 * a,
                d = n.matrixWorldInverse;
              s.getNormalMatrix(d),
                (null === u || u.length < c) && (u = new Float32Array(c));
              for (var f = 0, h = r; f !== a; ++f, h += 4)
                o.copy(e[f]).applyMatrix4(d, s),
                  o.normal.toArray(u, h),
                  (u[h + 3] = o.constant);
            }
            (l.value = u), (l.needsUpdate = !0);
          }
          return (t.numPlanes = a), (t.numIntersection = 0), u;
        }
        (this.uniform = l),
          (this.numPlanes = 0),
          (this.numIntersection = 0),
          (this.init = function (e, t) {
            var n = 0 !== e.length || t || 0 !== r || i;
            return (i = t), (r = e.length), n;
          }),
          (this.beginShadows = function () {
            (a = !0), u(null);
          }),
          (this.endShadows = function () {
            a = !1;
          }),
          (this.setGlobalState = function (e, t) {
            n = u(e, t, 0);
          }),
          (this.setState = function (o, s, c) {
            var d = o.clippingPlanes,
              f = o.clipIntersection,
              h = o.clipShadows,
              p = e.get(o);
            if (!i || null === d || 0 === d.length || (a && !h))
              a
                ? u(null)
                : (function () {
                    l.value !== n && ((l.value = n), (l.needsUpdate = r > 0));
                    (t.numPlanes = r), (t.numIntersection = 0);
                  })();
            else {
              var v = a ? 0 : r,
                m = 4 * v,
                g = p.clippingState || null;
              (l.value = g), (g = u(d, s, m, c));
              for (var y = 0; y !== m; ++y) g[y] = n[y];
              (p.clippingState = g),
                (this.numIntersection = f ? this.numPlanes : 0),
                (this.numPlanes += v);
            }
          });
      }
      function Io(e) {
        var t = new WeakMap();
        function n(e, t) {
          return t === Ue ? (e.mapping = Oe) : t === ze && (e.mapping = De), e;
        }
        function r(e) {
          var n = e.target;
          n.removeEventListener("dispose", r);
          var i = t.get(n);
          void 0 !== i && (t.delete(n), i.dispose());
        }
        return {
          get: function (i) {
            if (i && i.isTexture && !1 === i.isRenderTargetTexture) {
              var a = i.mapping;
              if (a === Ue || a === ze) {
                if (t.has(i)) return n(t.get(i).texture, i.mapping);
                var o = i.image;
                if (o && o.height > 0) {
                  var s = new ho(o.height / 2);
                  return (
                    s.fromEquirectangularTexture(e, i),
                    t.set(i, s),
                    i.addEventListener("dispose", r),
                    n(s.texture, i.mapping)
                  );
                }
                return null;
              }
            }
            return i;
          },
          dispose: function () {
            t = new WeakMap();
          },
        };
      }
      var No = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : -1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : -1,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 0.1,
              l =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : 2e3;
            return (
              p(this, n),
              ((e = t.call(this)).isOrthographicCamera = !0),
              (e.type = "OrthographicCamera"),
              (e.zoom = 1),
              (e.view = null),
              (e.left = r),
              (e.right = i),
              (e.top = a),
              (e.bottom = o),
              (e.near = s),
              (e.far = l),
              e.updateProjectionMatrix(),
              e
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e, t) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e, t),
                    (this.left = e.left),
                    (this.right = e.right),
                    (this.top = e.top),
                    (this.bottom = e.bottom),
                    (this.near = e.near),
                    (this.far = e.far),
                    (this.zoom = e.zoom),
                    (this.view =
                      null === e.view ? null : Object.assign({}, e.view)),
                    this
                  );
                },
              },
              {
                key: "setViewOffset",
                value: function (e, t, n, r, i, a) {
                  null === this.view &&
                    (this.view = {
                      enabled: !0,
                      fullWidth: 1,
                      fullHeight: 1,
                      offsetX: 0,
                      offsetY: 0,
                      width: 1,
                      height: 1,
                    }),
                    (this.view.enabled = !0),
                    (this.view.fullWidth = e),
                    (this.view.fullHeight = t),
                    (this.view.offsetX = n),
                    (this.view.offsetY = r),
                    (this.view.width = i),
                    (this.view.height = a),
                    this.updateProjectionMatrix();
                },
              },
              {
                key: "clearViewOffset",
                value: function () {
                  null !== this.view && (this.view.enabled = !1),
                    this.updateProjectionMatrix();
                },
              },
              {
                key: "updateProjectionMatrix",
                value: function () {
                  var e = (this.right - this.left) / (2 * this.zoom),
                    t = (this.top - this.bottom) / (2 * this.zoom),
                    n = (this.right + this.left) / 2,
                    r = (this.top + this.bottom) / 2,
                    i = n - e,
                    a = n + e,
                    o = r + t,
                    s = r - t;
                  if (null !== this.view && this.view.enabled) {
                    var l =
                        (this.right - this.left) /
                        this.view.fullWidth /
                        this.zoom,
                      u =
                        (this.top - this.bottom) /
                        this.view.fullHeight /
                        this.zoom;
                    (a = (i += l * this.view.offsetX) + l * this.view.width),
                      (s = (o -= u * this.view.offsetY) - u * this.view.height);
                  }
                  this.projectionMatrix.makeOrthographic(
                    i,
                    a,
                    o,
                    s,
                    this.near,
                    this.far
                  ),
                    this.projectionMatrixInverse
                      .copy(this.projectionMatrix)
                      .invert();
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = L(_(n.prototype), "toJSON", this).call(this, e);
                  return (
                    (t.object.zoom = this.zoom),
                    (t.object.left = this.left),
                    (t.object.right = this.right),
                    (t.object.top = this.top),
                    (t.object.bottom = this.bottom),
                    (t.object.near = this.near),
                    (t.object.far = this.far),
                    null !== this.view &&
                      (t.object.view = Object.assign({}, this.view)),
                    t
                  );
                },
              },
            ]),
            n
          );
        })(so),
        Oo = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582],
        Do = 20,
        Uo = new No(),
        zo = new sa(),
        Fo = null,
        Bo = (1 + Math.sqrt(5)) / 2,
        Zo = 1 / Bo,
        Ho = [
          new Zr(1, 1, 1),
          new Zr(-1, 1, 1),
          new Zr(1, 1, -1),
          new Zr(-1, 1, -1),
          new Zr(0, Bo, Zo),
          new Zr(0, Bo, -Zo),
          new Zr(Zo, 0, Bo),
          new Zr(-Zo, 0, Bo),
          new Zr(Bo, Zo, 0),
          new Zr(-Bo, Zo, 0),
        ],
        Vo = (function () {
          function e(t) {
            p(this, e),
              (this._renderer = t),
              (this._pingPongRenderTarget = null),
              (this._lodMax = 0),
              (this._cubeSize = 0),
              (this._lodPlanes = []),
              (this._sizeLods = []),
              (this._sigmas = []),
              (this._blurMaterial = null),
              (this._cubemapMaterial = null),
              (this._equirectMaterial = null),
              this._compileMaterial(this._blurMaterial);
          }
          return (
            g(e, [
              {
                key: "fromScene",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0,
                    n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : 0.1,
                    r =
                      arguments.length > 3 && void 0 !== arguments[3]
                        ? arguments[3]
                        : 100;
                  (Fo = this._renderer.getRenderTarget()), this._setSize(256);
                  var i = this._allocateTargets();
                  return (
                    (i.depthBuffer = !0),
                    this._sceneToCubeUV(e, n, r, i),
                    t > 0 && this._blur(i, 0, 0, t),
                    this._applyPMREM(i),
                    this._cleanup(i),
                    i
                  );
                },
              },
              {
                key: "fromEquirectangular",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : null;
                  return this._fromTexture(e, t);
                },
              },
              {
                key: "fromCubemap",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : null;
                  return this._fromTexture(e, t);
                },
              },
              {
                key: "compileCubemapShader",
                value: function () {
                  null === this._cubemapMaterial &&
                    ((this._cubemapMaterial = Xo()),
                    this._compileMaterial(this._cubemapMaterial));
                },
              },
              {
                key: "compileEquirectangularShader",
                value: function () {
                  null === this._equirectMaterial &&
                    ((this._equirectMaterial = jo()),
                    this._compileMaterial(this._equirectMaterial));
                },
              },
              {
                key: "dispose",
                value: function () {
                  this._dispose(),
                    null !== this._cubemapMaterial &&
                      this._cubemapMaterial.dispose(),
                    null !== this._equirectMaterial &&
                      this._equirectMaterial.dispose();
                },
              },
              {
                key: "_setSize",
                value: function (e) {
                  (this._lodMax = Math.floor(Math.log2(e))),
                    (this._cubeSize = Math.pow(2, this._lodMax));
                },
              },
              {
                key: "_dispose",
                value: function () {
                  null !== this._blurMaterial && this._blurMaterial.dispose(),
                    null !== this._pingPongRenderTarget &&
                      this._pingPongRenderTarget.dispose();
                  for (var e = 0; e < this._lodPlanes.length; e++)
                    this._lodPlanes[e].dispose();
                },
              },
              {
                key: "_cleanup",
                value: function (e) {
                  this._renderer.setRenderTarget(Fo),
                    (e.scissorTest = !1),
                    Wo(e, 0, 0, e.width, e.height);
                },
              },
              {
                key: "_fromTexture",
                value: function (e, t) {
                  e.mapping === Oe || e.mapping === De
                    ? this._setSize(
                        0 === e.image.length
                          ? 16
                          : e.image[0].width || e.image[0].image.width
                      )
                    : this._setSize(e.image.width / 4),
                    (Fo = this._renderer.getRenderTarget());
                  var n = t || this._allocateTargets();
                  return (
                    this._textureToCubeUV(e, n),
                    this._applyPMREM(n),
                    this._cleanup(n),
                    n
                  );
                },
              },
              {
                key: "_allocateTargets",
                value: function () {
                  var e = 3 * Math.max(this._cubeSize, 112),
                    t = 4 * this._cubeSize,
                    n = {
                      magFilter: qe,
                      minFilter: qe,
                      generateMipmaps: !1,
                      type: ot,
                      format: dt,
                      colorSpace: _n,
                      depthBuffer: !1,
                    },
                    r = Go(e, t, n);
                  if (
                    null === this._pingPongRenderTarget ||
                    this._pingPongRenderTarget.width !== e ||
                    this._pingPongRenderTarget.height !== t
                  ) {
                    null !== this._pingPongRenderTarget && this._dispose(),
                      (this._pingPongRenderTarget = Go(e, t, n));
                    var i = this._lodMax,
                      a = (function (e) {
                        for (
                          var t = [],
                            n = [],
                            r = [],
                            i = e,
                            a = e - 4 + 1 + Oo.length,
                            o = 0;
                          o < a;
                          o++
                        ) {
                          var s = Math.pow(2, i);
                          n.push(s);
                          var l = 1 / s;
                          o > e - 4
                            ? (l = Oo[o - e + 4 - 1])
                            : 0 === o && (l = 0),
                            r.push(l);
                          for (
                            var u = 1 / (s - 2),
                              c = -u,
                              d = 1 + u,
                              f = [c, c, d, c, d, d, c, c, d, d, c, d],
                              h = 6,
                              p = 6,
                              v = 3,
                              m = 2,
                              g = 1,
                              y = new Float32Array(v * p * h),
                              b = new Float32Array(m * p * h),
                              _ = new Float32Array(g * p * h),
                              x = 0;
                            x < h;
                            x++
                          ) {
                            var S = ((x % 3) * 2) / 3 - 1,
                              w = x > 2 ? 0 : -1,
                              M = [
                                S,
                                w,
                                0,
                                S + 2 / 3,
                                w,
                                0,
                                S + 2 / 3,
                                w + 1,
                                0,
                                S,
                                w,
                                0,
                                S + 2 / 3,
                                w + 1,
                                0,
                                S,
                                w + 1,
                                0,
                              ];
                            y.set(M, v * p * x), b.set(f, m * p * x);
                            var E = [x, x, x, x, x, x];
                            _.set(E, g * p * x);
                          }
                          var k = new Oa();
                          k.setAttribute("position", new ga(y, v)),
                            k.setAttribute("uv", new ga(b, m)),
                            k.setAttribute("faceIndex", new ga(_, g)),
                            t.push(k),
                            i > 4 && i--;
                        }
                        return { lodPlanes: t, sizeLods: n, sigmas: r };
                      })(i);
                    (this._sizeLods = a.sizeLods),
                      (this._lodPlanes = a.lodPlanes),
                      (this._sigmas = a.sigmas),
                      (this._blurMaterial = (function (e, t, n) {
                        var r = new Float32Array(Do),
                          i = new Zr(0, 1, 0),
                          a = new oo({
                            name: "SphericalGaussianBlur",
                            defines: {
                              n: Do,
                              CUBEUV_TEXEL_WIDTH: 1 / t,
                              CUBEUV_TEXEL_HEIGHT: 1 / n,
                              CUBEUV_MAX_MIP: "".concat(e, ".0"),
                            },
                            uniforms: {
                              envMap: { value: null },
                              samples: { value: 1 },
                              weights: { value: r },
                              latitudinal: { value: !1 },
                              dTheta: { value: 0 },
                              mipInt: { value: 0 },
                              poleAxis: { value: i },
                            },
                            vertexShader:
                              "\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",
                            fragmentShader:
                              "\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",
                            blending: Y,
                            depthTest: !1,
                            depthWrite: !1,
                          });
                        return a;
                      })(i, e, t));
                  }
                  return r;
                },
              },
              {
                key: "_compileMaterial",
                value: function (e) {
                  var t = new Qa(this._lodPlanes[0], e);
                  this._renderer.compile(t, Uo);
                },
              },
              {
                key: "_sceneToCubeUV",
                value: function (e, t, n, r) {
                  var i = new lo(90, 1, t, n),
                    a = [1, -1, 1, 1, 1, 1],
                    o = [1, 1, 1, -1, -1, -1],
                    s = this._renderer,
                    l = s.autoClear,
                    u = s.toneMapping;
                  s.getClearColor(zo), (s.toneMapping = Ae), (s.autoClear = !1);
                  var c = new ua({
                      name: "PMREM.Background",
                      side: j,
                      depthWrite: !1,
                      depthTest: !1,
                    }),
                    d = new Qa(new to(), c),
                    f = !1,
                    h = e.background;
                  h
                    ? h.isColor &&
                      (c.color.copy(h), (e.background = null), (f = !0))
                    : (c.color.copy(zo), (f = !0));
                  for (var p = 0; p < 6; p++) {
                    var v = p % 3;
                    0 === v
                      ? (i.up.set(0, a[p], 0), i.lookAt(o[p], 0, 0))
                      : 1 === v
                      ? (i.up.set(0, 0, a[p]), i.lookAt(0, o[p], 0))
                      : (i.up.set(0, a[p], 0), i.lookAt(0, 0, o[p]));
                    var m = this._cubeSize;
                    Wo(r, v * m, p > 2 ? m : 0, m, m),
                      s.setRenderTarget(r),
                      f && s.render(d, i),
                      s.render(e, i);
                  }
                  d.geometry.dispose(),
                    d.material.dispose(),
                    (s.toneMapping = u),
                    (s.autoClear = l),
                    (e.background = h);
                },
              },
              {
                key: "_textureToCubeUV",
                value: function (e, t) {
                  var n = this._renderer,
                    r = e.mapping === Oe || e.mapping === De;
                  r
                    ? (null === this._cubemapMaterial &&
                        (this._cubemapMaterial = Xo()),
                      (this._cubemapMaterial.uniforms.flipEnvMap.value =
                        !1 === e.isRenderTargetTexture ? -1 : 1))
                    : null === this._equirectMaterial &&
                      (this._equirectMaterial = jo());
                  var i = r ? this._cubemapMaterial : this._equirectMaterial,
                    a = new Qa(this._lodPlanes[0], i);
                  i.uniforms.envMap.value = e;
                  var o = this._cubeSize;
                  Wo(t, 0, 0, 3 * o, 2 * o),
                    n.setRenderTarget(t),
                    n.render(a, Uo);
                },
              },
              {
                key: "_applyPMREM",
                value: function (e) {
                  var t = this._renderer,
                    n = t.autoClear;
                  t.autoClear = !1;
                  for (var r = 1; r < this._lodPlanes.length; r++) {
                    var i = Math.sqrt(
                        this._sigmas[r] * this._sigmas[r] -
                          this._sigmas[r - 1] * this._sigmas[r - 1]
                      ),
                      a = Ho[(r - 1) % Ho.length];
                    this._blur(e, r - 1, r, i, a);
                  }
                  t.autoClear = n;
                },
              },
              {
                key: "_blur",
                value: function (e, t, n, r, i) {
                  var a = this._pingPongRenderTarget;
                  this._halfBlur(e, a, t, n, r, "latitudinal", i),
                    this._halfBlur(a, e, n, n, r, "longitudinal", i);
                },
              },
              {
                key: "_halfBlur",
                value: function (e, t, n, r, i, a, o) {
                  var s = this._renderer,
                    l = this._blurMaterial;
                  "latitudinal" !== a &&
                    "longitudinal" !== a &&
                    console.error(
                      "blur direction must be either latitudinal or longitudinal!"
                    );
                  var u = new Qa(this._lodPlanes[r], l),
                    c = l.uniforms,
                    d = this._sizeLods[n] - 1,
                    f = isFinite(i) ? Math.PI / (2 * d) : (2 * Math.PI) / 39,
                    h = i / f,
                    p = isFinite(i) ? 1 + Math.floor(3 * h) : Do;
                  p > Do &&
                    console.warn(
                      "sigmaRadians, "
                        .concat(
                          i,
                          ", is too large and will clip, as it requested "
                        )
                        .concat(p, " samples when the maximum is set to ")
                        .concat(Do)
                    );
                  for (var v = [], m = 0, g = 0; g < Do; ++g) {
                    var y = g / h,
                      b = Math.exp((-y * y) / 2);
                    v.push(b), 0 === g ? (m += b) : g < p && (m += 2 * b);
                  }
                  for (var _ = 0; _ < v.length; _++) v[_] = v[_] / m;
                  (c.envMap.value = e.texture),
                    (c.samples.value = p),
                    (c.weights.value = v),
                    (c.latitudinal.value = "latitudinal" === a),
                    o && (c.poleAxis.value = o);
                  var x = this._lodMax;
                  (c.dTheta.value = f), (c.mipInt.value = x - n);
                  var S = this._sizeLods[r];
                  Wo(
                    t,
                    3 * S * (r > x - 4 ? r - x + 4 : 0),
                    4 * (this._cubeSize - S),
                    3 * S,
                    2 * S
                  ),
                    s.setRenderTarget(t),
                    s.render(u, Uo);
                },
              },
            ]),
            e
          );
        })();
      function Go(e, t, n) {
        var r = new Nr(e, t, n);
        return (
          (r.texture.mapping = Fe),
          (r.texture.name = "PMREM.cubeUv"),
          (r.scissorTest = !0),
          r
        );
      }
      function Wo(e, t, n, r, i) {
        e.viewport.set(t, n, r, i), e.scissor.set(t, n, r, i);
      }
      function jo() {
        return new oo({
          name: "EquirectangularToCubeUV",
          uniforms: { envMap: { value: null } },
          vertexShader:
            "\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",
          fragmentShader:
            "\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",
          blending: Y,
          depthTest: !1,
          depthWrite: !1,
        });
      }
      function Xo() {
        return new oo({
          name: "CubemapToCubeUV",
          uniforms: { envMap: { value: null }, flipEnvMap: { value: -1 } },
          vertexShader:
            "\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",
          fragmentShader:
            "\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",
          blending: Y,
          depthTest: !1,
          depthWrite: !1,
        });
      }
      function qo(e) {
        var t = new WeakMap(),
          n = null;
        function r(e) {
          var n = e.target;
          n.removeEventListener("dispose", r);
          var i = t.get(n);
          void 0 !== i && (t.delete(n), i.dispose());
        }
        return {
          get: function (i) {
            if (i && i.isTexture) {
              var a = i.mapping,
                o = a === Ue || a === ze,
                s = a === Oe || a === De;
              if (o || s) {
                if (i.isRenderTargetTexture && !0 === i.needsPMREMUpdate) {
                  i.needsPMREMUpdate = !1;
                  var l = t.get(i);
                  return (
                    null === n && (n = new Vo(e)),
                    (l = o ? n.fromEquirectangular(i, l) : n.fromCubemap(i, l)),
                    t.set(i, l),
                    l.texture
                  );
                }
                if (t.has(i)) return t.get(i).texture;
                var u = i.image;
                if (
                  (o && u && u.height > 0) ||
                  (s &&
                    u &&
                    (function (e) {
                      for (var t = 0, n = 6, r = 0; r < n; r++)
                        void 0 !== e[r] && t++;
                      return t === n;
                    })(u))
                ) {
                  null === n && (n = new Vo(e));
                  var c = o ? n.fromEquirectangular(i) : n.fromCubemap(i);
                  return (
                    t.set(i, c), i.addEventListener("dispose", r), c.texture
                  );
                }
                return null;
              }
            }
            return i;
          },
          dispose: function () {
            (t = new WeakMap()), null !== n && (n.dispose(), (n = null));
          },
        };
      }
      function Yo(e) {
        var t = {};
        function n(n) {
          if (void 0 !== t[n]) return t[n];
          var r;
          switch (n) {
            case "WEBGL_depth_texture":
              r =
                e.getExtension("WEBGL_depth_texture") ||
                e.getExtension("MOZ_WEBGL_depth_texture") ||
                e.getExtension("WEBKIT_WEBGL_depth_texture");
              break;
            case "EXT_texture_filter_anisotropic":
              r =
                e.getExtension("EXT_texture_filter_anisotropic") ||
                e.getExtension("MOZ_EXT_texture_filter_anisotropic") ||
                e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
              break;
            case "WEBGL_compressed_texture_s3tc":
              r =
                e.getExtension("WEBGL_compressed_texture_s3tc") ||
                e.getExtension("MOZ_WEBGL_compressed_texture_s3tc") ||
                e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
              break;
            case "WEBGL_compressed_texture_pvrtc":
              r =
                e.getExtension("WEBGL_compressed_texture_pvrtc") ||
                e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
              break;
            default:
              r = e.getExtension(n);
          }
          return (t[n] = r), r;
        }
        return {
          has: function (e) {
            return null !== n(e);
          },
          init: function (e) {
            e.isWebGL2
              ? n("EXT_color_buffer_float")
              : (n("WEBGL_depth_texture"),
                n("OES_texture_float"),
                n("OES_texture_half_float"),
                n("OES_texture_half_float_linear"),
                n("OES_standard_derivatives"),
                n("OES_element_index_uint"),
                n("OES_vertex_array_object"),
                n("ANGLE_instanced_arrays")),
              n("OES_texture_float_linear"),
              n("EXT_color_buffer_half_float"),
              n("WEBGL_multisampled_render_to_texture");
          },
          get: function (e) {
            var t = n(e);
            return (
              null === t &&
                console.warn(
                  "THREE.WebGLRenderer: " + e + " extension not supported."
                ),
              t
            );
          },
        };
      }
      function Ko(e, t, n, r) {
        var i = {},
          a = new WeakMap();
        function o(e) {
          var s = e.target;
          for (var l in (null !== s.index && t.remove(s.index), s.attributes))
            t.remove(s.attributes[l]);
          s.removeEventListener("dispose", o), delete i[s.id];
          var u = a.get(s);
          u && (t.remove(u), a.delete(s)),
            r.releaseStatesOfGeometry(s),
            !0 === s.isInstancedBufferGeometry && delete s._maxInstanceCount,
            n.memory.geometries--;
        }
        function s(e) {
          var n = [],
            r = e.index,
            i = e.attributes.position,
            o = 0;
          if (null !== r) {
            var s = r.array;
            o = r.version;
            for (var l = 0, u = s.length; l < u; l += 3) {
              var c = s[l + 0],
                d = s[l + 1],
                f = s[l + 2];
              n.push(c, d, d, f, f, c);
            }
          } else {
            var h = i.array;
            o = i.version;
            for (var p = 0, v = h.length / 3 - 1; p < v; p += 3) {
              var m = p + 0,
                g = p + 1,
                y = p + 2;
              n.push(m, g, g, y, y, m);
            }
          }
          var b = new (pr(n) ? Ma : Sa)(n, 1);
          b.version = o;
          var _ = a.get(e);
          _ && t.remove(_), a.set(e, b);
        }
        return {
          get: function (e, t) {
            return (
              !0 === i[t.id] ||
                (t.addEventListener("dispose", o),
                (i[t.id] = !0),
                n.memory.geometries++),
              t
            );
          },
          update: function (n) {
            var r = n.attributes;
            for (var i in r) t.update(r[i], e.ARRAY_BUFFER);
            var a = n.morphAttributes;
            for (var o in a)
              for (var s = a[o], l = 0, u = s.length; l < u; l++)
                t.update(s[l], e.ARRAY_BUFFER);
          },
          getWireframeAttribute: function (e) {
            var t = a.get(e);
            if (t) {
              var n = e.index;
              null !== n && t.version < n.version && s(e);
            } else s(e);
            return a.get(e);
          },
        };
      }
      function $o(e, t, n, r) {
        var i,
          a,
          o,
          s = r.isWebGL2;
        (this.setMode = function (e) {
          i = e;
        }),
          (this.setIndex = function (e) {
            (a = e.type), (o = e.bytesPerElement);
          }),
          (this.render = function (t, r) {
            e.drawElements(i, r, a, t * o), n.update(r, i, 1);
          }),
          (this.renderInstances = function (r, l, u) {
            if (0 !== u) {
              var c, d;
              if (s) (c = e), (d = "drawElementsInstanced");
              else if (
                ((d = "drawElementsInstancedANGLE"),
                null === (c = t.get("ANGLE_instanced_arrays")))
              )
                return void console.error(
                  "THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."
                );
              c[d](i, l, a, r * o, u), n.update(l, i, u);
            }
          });
      }
      function Jo(e) {
        var t = { frame: 0, calls: 0, triangles: 0, points: 0, lines: 0 };
        return {
          memory: { geometries: 0, textures: 0 },
          render: t,
          programs: null,
          autoReset: !0,
          reset: function () {
            t.frame++,
              (t.calls = 0),
              (t.triangles = 0),
              (t.points = 0),
              (t.lines = 0);
          },
          update: function (n, r, i) {
            switch ((t.calls++, r)) {
              case e.TRIANGLES:
                t.triangles += i * (n / 3);
                break;
              case e.LINES:
                t.lines += i * (n / 2);
                break;
              case e.LINE_STRIP:
                t.lines += i * (n - 1);
                break;
              case e.LINE_LOOP:
                t.lines += i * n;
                break;
              case e.POINTS:
                t.points += i * n;
                break;
              default:
                console.error("THREE.WebGLInfo: Unknown draw mode:", r);
            }
          },
        };
      }
      function Qo(e, t) {
        return e[0] - t[0];
      }
      function es(e, t) {
        return Math.abs(t[1]) - Math.abs(e[1]);
      }
      function ts(e, t, n) {
        for (
          var r = {},
            i = new Float32Array(8),
            a = new WeakMap(),
            o = new Ir(),
            s = [],
            l = 0;
          l < 8;
          l++
        )
          s[l] = [l, 0];
        return {
          update: function (l, u, c) {
            var d = l.morphTargetInfluences;
            if (!0 === t.isWebGL2) {
              var f =
                  u.morphAttributes.position ||
                  u.morphAttributes.normal ||
                  u.morphAttributes.color,
                h = void 0 !== f ? f.length : 0,
                p = a.get(u);
              if (void 0 === p || p.count !== h) {
                void 0 !== p && p.texture.dispose();
                var v = void 0 !== u.morphAttributes.position,
                  m = void 0 !== u.morphAttributes.normal,
                  g = void 0 !== u.morphAttributes.color,
                  y = u.morphAttributes.position || [],
                  b = u.morphAttributes.normal || [],
                  _ = u.morphAttributes.color || [],
                  x = 0;
                !0 === v && (x = 1), !0 === m && (x = 2), !0 === g && (x = 3);
                var S = u.attributes.position.count * x,
                  w = 1;
                S > t.maxTextureSize &&
                  ((w = Math.ceil(S / t.maxTextureSize)),
                  (S = t.maxTextureSize));
                var M = new Float32Array(S * w * 4 * h),
                  E = new Or(M, S, w, h);
                (E.type = at), (E.needsUpdate = !0);
                for (var k = 4 * x, T = 0; T < h; T++)
                  for (
                    var A = y[T], C = b[T], P = _[T], R = S * w * 4 * T, L = 0;
                    L < A.count;
                    L++
                  ) {
                    var I = L * k;
                    !0 === v &&
                      (o.fromBufferAttribute(A, L),
                      (M[R + I + 0] = o.x),
                      (M[R + I + 1] = o.y),
                      (M[R + I + 2] = o.z),
                      (M[R + I + 3] = 0)),
                      !0 === m &&
                        (o.fromBufferAttribute(C, L),
                        (M[R + I + 4] = o.x),
                        (M[R + I + 5] = o.y),
                        (M[R + I + 6] = o.z),
                        (M[R + I + 7] = 0)),
                      !0 === g &&
                        (o.fromBufferAttribute(P, L),
                        (M[R + I + 8] = o.x),
                        (M[R + I + 9] = o.y),
                        (M[R + I + 10] = o.z),
                        (M[R + I + 11] = 4 === P.itemSize ? o.w : 1));
                  }
                (p = { count: h, texture: E, size: new dr(S, w) }),
                  a.set(u, p),
                  u.addEventListener("dispose", function e() {
                    E.dispose(),
                      a.delete(u),
                      u.removeEventListener("dispose", e);
                  });
              }
              for (var N = 0, O = 0; O < d.length; O++) N += d[O];
              var D = u.morphTargetsRelative ? 1 : 1 - N;
              c.getUniforms().setValue(e, "morphTargetBaseInfluence", D),
                c.getUniforms().setValue(e, "morphTargetInfluences", d),
                c
                  .getUniforms()
                  .setValue(e, "morphTargetsTexture", p.texture, n),
                c.getUniforms().setValue(e, "morphTargetsTextureSize", p.size);
            } else {
              var U = void 0 === d ? 0 : d.length,
                z = r[u.id];
              if (void 0 === z || z.length !== U) {
                z = [];
                for (var F = 0; F < U; F++) z[F] = [F, 0];
                r[u.id] = z;
              }
              for (var B = 0; B < U; B++) {
                var Z = z[B];
                (Z[0] = B), (Z[1] = d[B]);
              }
              z.sort(es);
              for (var H = 0; H < 8; H++)
                H < U && z[H][1]
                  ? ((s[H][0] = z[H][0]), (s[H][1] = z[H][1]))
                  : ((s[H][0] = Number.MAX_SAFE_INTEGER), (s[H][1] = 0));
              s.sort(Qo);
              for (
                var V = u.morphAttributes.position,
                  G = u.morphAttributes.normal,
                  W = 0,
                  j = 0;
                j < 8;
                j++
              ) {
                var X = s[j],
                  q = X[0],
                  Y = X[1];
                q !== Number.MAX_SAFE_INTEGER && Y
                  ? (V &&
                      u.getAttribute("morphTarget" + j) !== V[q] &&
                      u.setAttribute("morphTarget" + j, V[q]),
                    G &&
                      u.getAttribute("morphNormal" + j) !== G[q] &&
                      u.setAttribute("morphNormal" + j, G[q]),
                    (i[j] = Y),
                    (W += Y))
                  : (V &&
                      !0 === u.hasAttribute("morphTarget" + j) &&
                      u.deleteAttribute("morphTarget" + j),
                    G &&
                      !0 === u.hasAttribute("morphNormal" + j) &&
                      u.deleteAttribute("morphNormal" + j),
                    (i[j] = 0));
              }
              var K = u.morphTargetsRelative ? 1 : 1 - W;
              c.getUniforms().setValue(e, "morphTargetBaseInfluence", K),
                c.getUniforms().setValue(e, "morphTargetInfluences", i);
            }
          },
        };
      }
      function ns(e, t, n, r) {
        var i = new WeakMap();
        function a(e) {
          var t = e.target;
          t.removeEventListener("dispose", a),
            n.remove(t.instanceMatrix),
            null !== t.instanceColor && n.remove(t.instanceColor);
        }
        return {
          update: function (o) {
            var s = r.render.frame,
              l = o.geometry,
              u = t.get(o, l);
            return (
              i.get(u) !== s && (t.update(u), i.set(u, s)),
              o.isInstancedMesh &&
                (!1 === o.hasEventListener("dispose", a) &&
                  o.addEventListener("dispose", a),
                n.update(o.instanceMatrix, e.ARRAY_BUFFER),
                null !== o.instanceColor &&
                  n.update(o.instanceColor, e.ARRAY_BUFFER)),
              u
            );
          },
          dispose: function () {
            i = new WeakMap();
          },
        };
      }
      var rs = new Lr(),
        is = new Or(),
        as = new Ur(),
        os = new fo(),
        ss = [],
        ls = [],
        us = new Float32Array(16),
        cs = new Float32Array(9),
        ds = new Float32Array(4);
      function fs(e, t, n) {
        var r = e[0];
        if (r <= 0 || r > 0) return e;
        var i = t * n,
          a = ss[i];
        if (
          (void 0 === a && ((a = new Float32Array(i)), (ss[i] = a)), 0 !== t)
        ) {
          r.toArray(a, 0);
          for (var o = 1, s = 0; o !== t; ++o) (s += n), e[o].toArray(a, s);
        }
        return a;
      }
      function hs(e, t) {
        if (e.length !== t.length) return !1;
        for (var n = 0, r = e.length; n < r; n++) if (e[n] !== t[n]) return !1;
        return !0;
      }
      function ps(e, t) {
        for (var n = 0, r = t.length; n < r; n++) e[n] = t[n];
      }
      function vs(e, t) {
        var n = ls[t];
        void 0 === n && ((n = new Int32Array(t)), (ls[t] = n));
        for (var r = 0; r !== t; ++r) n[r] = e.allocateTextureUnit();
        return n;
      }
      function ms(e, t) {
        var n = this.cache;
        n[0] !== t && (e.uniform1f(this.addr, t), (n[0] = t));
      }
      function gs(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
          (n[0] === t.x && n[1] === t.y) ||
            (e.uniform2f(this.addr, t.x, t.y), (n[0] = t.x), (n[1] = t.y));
        else {
          if (hs(n, t)) return;
          e.uniform2fv(this.addr, t), ps(n, t);
        }
      }
      function ys(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
          (n[0] === t.x && n[1] === t.y && n[2] === t.z) ||
            (e.uniform3f(this.addr, t.x, t.y, t.z),
            (n[0] = t.x),
            (n[1] = t.y),
            (n[2] = t.z));
        else if (void 0 !== t.r)
          (n[0] === t.r && n[1] === t.g && n[2] === t.b) ||
            (e.uniform3f(this.addr, t.r, t.g, t.b),
            (n[0] = t.r),
            (n[1] = t.g),
            (n[2] = t.b));
        else {
          if (hs(n, t)) return;
          e.uniform3fv(this.addr, t), ps(n, t);
        }
      }
      function bs(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
          (n[0] === t.x && n[1] === t.y && n[2] === t.z && n[3] === t.w) ||
            (e.uniform4f(this.addr, t.x, t.y, t.z, t.w),
            (n[0] = t.x),
            (n[1] = t.y),
            (n[2] = t.z),
            (n[3] = t.w));
        else {
          if (hs(n, t)) return;
          e.uniform4fv(this.addr, t), ps(n, t);
        }
      }
      function _s(e, t) {
        var n = this.cache,
          r = t.elements;
        if (void 0 === r) {
          if (hs(n, t)) return;
          e.uniformMatrix2fv(this.addr, !1, t), ps(n, t);
        } else {
          if (hs(n, r)) return;
          ds.set(r), e.uniformMatrix2fv(this.addr, !1, ds), ps(n, r);
        }
      }
      function xs(e, t) {
        var n = this.cache,
          r = t.elements;
        if (void 0 === r) {
          if (hs(n, t)) return;
          e.uniformMatrix3fv(this.addr, !1, t), ps(n, t);
        } else {
          if (hs(n, r)) return;
          cs.set(r), e.uniformMatrix3fv(this.addr, !1, cs), ps(n, r);
        }
      }
      function Ss(e, t) {
        var n = this.cache,
          r = t.elements;
        if (void 0 === r) {
          if (hs(n, t)) return;
          e.uniformMatrix4fv(this.addr, !1, t), ps(n, t);
        } else {
          if (hs(n, r)) return;
          us.set(r), e.uniformMatrix4fv(this.addr, !1, us), ps(n, r);
        }
      }
      function ws(e, t) {
        var n = this.cache;
        n[0] !== t && (e.uniform1i(this.addr, t), (n[0] = t));
      }
      function Ms(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
          (n[0] === t.x && n[1] === t.y) ||
            (e.uniform2i(this.addr, t.x, t.y), (n[0] = t.x), (n[1] = t.y));
        else {
          if (hs(n, t)) return;
          e.uniform2iv(this.addr, t), ps(n, t);
        }
      }
      function Es(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
          (n[0] === t.x && n[1] === t.y && n[2] === t.z) ||
            (e.uniform3i(this.addr, t.x, t.y, t.z),
            (n[0] = t.x),
            (n[1] = t.y),
            (n[2] = t.z));
        else {
          if (hs(n, t)) return;
          e.uniform3iv(this.addr, t), ps(n, t);
        }
      }
      function ks(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
          (n[0] === t.x && n[1] === t.y && n[2] === t.z && n[3] === t.w) ||
            (e.uniform4i(this.addr, t.x, t.y, t.z, t.w),
            (n[0] = t.x),
            (n[1] = t.y),
            (n[2] = t.z),
            (n[3] = t.w));
        else {
          if (hs(n, t)) return;
          e.uniform4iv(this.addr, t), ps(n, t);
        }
      }
      function Ts(e, t) {
        var n = this.cache;
        n[0] !== t && (e.uniform1ui(this.addr, t), (n[0] = t));
      }
      function As(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
          (n[0] === t.x && n[1] === t.y) ||
            (e.uniform2ui(this.addr, t.x, t.y), (n[0] = t.x), (n[1] = t.y));
        else {
          if (hs(n, t)) return;
          e.uniform2uiv(this.addr, t), ps(n, t);
        }
      }
      function Cs(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
          (n[0] === t.x && n[1] === t.y && n[2] === t.z) ||
            (e.uniform3ui(this.addr, t.x, t.y, t.z),
            (n[0] = t.x),
            (n[1] = t.y),
            (n[2] = t.z));
        else {
          if (hs(n, t)) return;
          e.uniform3uiv(this.addr, t), ps(n, t);
        }
      }
      function Ps(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
          (n[0] === t.x && n[1] === t.y && n[2] === t.z && n[3] === t.w) ||
            (e.uniform4ui(this.addr, t.x, t.y, t.z, t.w),
            (n[0] = t.x),
            (n[1] = t.y),
            (n[2] = t.z),
            (n[3] = t.w));
        else {
          if (hs(n, t)) return;
          e.uniform4uiv(this.addr, t), ps(n, t);
        }
      }
      function Rs(e, t, n) {
        var r = this.cache,
          i = n.allocateTextureUnit();
        r[0] !== i && (e.uniform1i(this.addr, i), (r[0] = i)),
          n.setTexture2D(t || rs, i);
      }
      function Ls(e, t, n) {
        var r = this.cache,
          i = n.allocateTextureUnit();
        r[0] !== i && (e.uniform1i(this.addr, i), (r[0] = i)),
          n.setTexture3D(t || as, i);
      }
      function Is(e, t, n) {
        var r = this.cache,
          i = n.allocateTextureUnit();
        r[0] !== i && (e.uniform1i(this.addr, i), (r[0] = i)),
          n.setTextureCube(t || os, i);
      }
      function Ns(e, t, n) {
        var r = this.cache,
          i = n.allocateTextureUnit();
        r[0] !== i && (e.uniform1i(this.addr, i), (r[0] = i)),
          n.setTexture2DArray(t || is, i);
      }
      function Os(e, t) {
        e.uniform1fv(this.addr, t);
      }
      function Ds(e, t) {
        var n = fs(t, this.size, 2);
        e.uniform2fv(this.addr, n);
      }
      function Us(e, t) {
        var n = fs(t, this.size, 3);
        e.uniform3fv(this.addr, n);
      }
      function zs(e, t) {
        var n = fs(t, this.size, 4);
        e.uniform4fv(this.addr, n);
      }
      function Fs(e, t) {
        var n = fs(t, this.size, 4);
        e.uniformMatrix2fv(this.addr, !1, n);
      }
      function Bs(e, t) {
        var n = fs(t, this.size, 9);
        e.uniformMatrix3fv(this.addr, !1, n);
      }
      function Zs(e, t) {
        var n = fs(t, this.size, 16);
        e.uniformMatrix4fv(this.addr, !1, n);
      }
      function Hs(e, t) {
        e.uniform1iv(this.addr, t);
      }
      function Vs(e, t) {
        e.uniform2iv(this.addr, t);
      }
      function Gs(e, t) {
        e.uniform3iv(this.addr, t);
      }
      function Ws(e, t) {
        e.uniform4iv(this.addr, t);
      }
      function js(e, t) {
        e.uniform1uiv(this.addr, t);
      }
      function Xs(e, t) {
        e.uniform2uiv(this.addr, t);
      }
      function qs(e, t) {
        e.uniform3uiv(this.addr, t);
      }
      function Ys(e, t) {
        e.uniform4uiv(this.addr, t);
      }
      function Ks(e, t, n) {
        var r = this.cache,
          i = t.length,
          a = vs(n, i);
        hs(r, a) || (e.uniform1iv(this.addr, a), ps(r, a));
        for (var o = 0; o !== i; ++o) n.setTexture2D(t[o] || rs, a[o]);
      }
      function $s(e, t, n) {
        var r = this.cache,
          i = t.length,
          a = vs(n, i);
        hs(r, a) || (e.uniform1iv(this.addr, a), ps(r, a));
        for (var o = 0; o !== i; ++o) n.setTexture3D(t[o] || as, a[o]);
      }
      function Js(e, t, n) {
        var r = this.cache,
          i = t.length,
          a = vs(n, i);
        hs(r, a) || (e.uniform1iv(this.addr, a), ps(r, a));
        for (var o = 0; o !== i; ++o) n.setTextureCube(t[o] || os, a[o]);
      }
      function Qs(e, t, n) {
        var r = this.cache,
          i = t.length,
          a = vs(n, i);
        hs(r, a) || (e.uniform1iv(this.addr, a), ps(r, a));
        for (var o = 0; o !== i; ++o) n.setTexture2DArray(t[o] || is, a[o]);
      }
      var el = g(function e(t, n, r) {
          p(this, e),
            (this.id = t),
            (this.addr = r),
            (this.cache = []),
            (this.setValue = (function (e) {
              switch (e) {
                case 5126:
                  return ms;
                case 35664:
                  return gs;
                case 35665:
                  return ys;
                case 35666:
                  return bs;
                case 35674:
                  return _s;
                case 35675:
                  return xs;
                case 35676:
                  return Ss;
                case 5124:
                case 35670:
                  return ws;
                case 35667:
                case 35671:
                  return Ms;
                case 35668:
                case 35672:
                  return Es;
                case 35669:
                case 35673:
                  return ks;
                case 5125:
                  return Ts;
                case 36294:
                  return As;
                case 36295:
                  return Cs;
                case 36296:
                  return Ps;
                case 35678:
                case 36198:
                case 36298:
                case 36306:
                case 35682:
                  return Rs;
                case 35679:
                case 36299:
                case 36307:
                  return Ls;
                case 35680:
                case 36300:
                case 36308:
                case 36293:
                  return Is;
                case 36289:
                case 36303:
                case 36311:
                case 36292:
                  return Ns;
              }
            })(n.type));
        }),
        tl = g(function e(t, n, r) {
          p(this, e),
            (this.id = t),
            (this.addr = r),
            (this.cache = []),
            (this.size = n.size),
            (this.setValue = (function (e) {
              switch (e) {
                case 5126:
                  return Os;
                case 35664:
                  return Ds;
                case 35665:
                  return Us;
                case 35666:
                  return zs;
                case 35674:
                  return Fs;
                case 35675:
                  return Bs;
                case 35676:
                  return Zs;
                case 5124:
                case 35670:
                  return Hs;
                case 35667:
                case 35671:
                  return Vs;
                case 35668:
                case 35672:
                  return Gs;
                case 35669:
                case 35673:
                  return Ws;
                case 5125:
                  return js;
                case 36294:
                  return Xs;
                case 36295:
                  return qs;
                case 36296:
                  return Ys;
                case 35678:
                case 36198:
                case 36298:
                case 36306:
                case 35682:
                  return Ks;
                case 35679:
                case 36299:
                case 36307:
                  return $s;
                case 35680:
                case 36300:
                case 36308:
                case 36293:
                  return Js;
                case 36289:
                case 36303:
                case 36311:
                case 36292:
                  return Qs;
              }
            })(n.type));
        }),
        nl = (function () {
          function e(t) {
            p(this, e), (this.id = t), (this.seq = []), (this.map = {});
          }
          return (
            g(e, [
              {
                key: "setValue",
                value: function (e, t, n) {
                  for (var r = this.seq, i = 0, a = r.length; i !== a; ++i) {
                    var o = r[i];
                    o.setValue(e, t[o.id], n);
                  }
                },
              },
            ]),
            e
          );
        })(),
        rl = /(\w+)(\])?(\[|\.)?/g;
      function il(e, t) {
        e.seq.push(t), (e.map[t.id] = t);
      }
      function al(e, t, n) {
        var r = e.name,
          i = r.length;
        for (rl.lastIndex = 0; ; ) {
          var a = rl.exec(r),
            o = rl.lastIndex,
            s = a[1],
            l = "]" === a[2],
            u = a[3];
          if ((l && (s |= 0), void 0 === u || ("[" === u && o + 2 === i))) {
            il(n, void 0 === u ? new el(s, e, t) : new tl(s, e, t));
            break;
          }
          var c = n.map[s];
          void 0 === c && il(n, (c = new nl(s))), (n = c);
        }
      }
      var ol = (function () {
        function e(t, n) {
          p(this, e), (this.seq = []), (this.map = {});
          for (
            var r = t.getProgramParameter(n, t.ACTIVE_UNIFORMS), i = 0;
            i < r;
            ++i
          ) {
            var a = t.getActiveUniform(n, i);
            al(a, t.getUniformLocation(n, a.name), this);
          }
        }
        return (
          g(
            e,
            [
              {
                key: "setValue",
                value: function (e, t, n, r) {
                  var i = this.map[t];
                  void 0 !== i && i.setValue(e, n, r);
                },
              },
              {
                key: "setOptional",
                value: function (e, t, n) {
                  var r = t[n];
                  void 0 !== r && this.setValue(e, n, r);
                },
              },
            ],
            [
              {
                key: "upload",
                value: function (e, t, n, r) {
                  for (var i = 0, a = t.length; i !== a; ++i) {
                    var o = t[i],
                      s = n[o.id];
                    !1 !== s.needsUpdate && o.setValue(e, s.value, r);
                  }
                },
              },
              {
                key: "seqWithValue",
                value: function (e, t) {
                  for (var n = [], r = 0, i = e.length; r !== i; ++r) {
                    var a = e[r];
                    a.id in t && n.push(a);
                  }
                  return n;
                },
              },
            ]
          ),
          e
        );
      })();
      function sl(e, t, n) {
        var r = e.createShader(t);
        return e.shaderSource(r, n), e.compileShader(r), r;
      }
      var ll = 0;
      function ul(e, t, n) {
        var r = e.getShaderParameter(t, e.COMPILE_STATUS),
          i = e.getShaderInfoLog(t).trim();
        if (r && "" === i) return "";
        var a = /ERROR: 0:(\d+)/.exec(i);
        if (a) {
          var o = parseInt(a[1]);
          return (
            n.toUpperCase() +
            "\n\n" +
            i +
            "\n\n" +
            (function (e, t) {
              for (
                var n = e.split("\n"),
                  r = [],
                  i = Math.max(t - 6, 0),
                  a = Math.min(t + 6, n.length),
                  o = i;
                o < a;
                o++
              ) {
                var s = o + 1;
                r.push(
                  ""
                    .concat(s === t ? ">" : " ", " ")
                    .concat(s, ": ")
                    .concat(n[o])
                );
              }
              return r.join("\n");
            })(e.getShaderSource(t), o)
          );
        }
        return i;
      }
      function cl(e, t) {
        var n = (function (e) {
          switch (e) {
            case _n:
              return ["Linear", "( value )"];
            case bn:
              return ["sRGB", "( value )"];
            default:
              return (
                console.warn("THREE.WebGLProgram: Unsupported color space:", e),
                ["Linear", "( value )"]
              );
          }
        })(t);
        return (
          "vec4 " + e + "( vec4 value ) { return LinearTo" + n[0] + n[1] + "; }"
        );
      }
      function dl(e, t) {
        var n;
        switch (t) {
          case Ce:
            n = "Linear";
            break;
          case Pe:
            n = "Reinhard";
            break;
          case Re:
            n = "OptimizedCineon";
            break;
          case Le:
            n = "ACESFilmic";
            break;
          case Ie:
            n = "Custom";
            break;
          default:
            console.warn("THREE.WebGLProgram: Unsupported toneMapping:", t),
              (n = "Linear");
        }
        return (
          "vec3 " +
          e +
          "( vec3 color ) { return " +
          n +
          "ToneMapping( color ); }"
        );
      }
      function fl(e) {
        return "" !== e;
      }
      function hl(e, t) {
        var n =
          t.numSpotLightShadows +
          t.numSpotLightMaps -
          t.numSpotLightShadowsWithMaps;
        return e
          .replace(/NUM_DIR_LIGHTS/g, t.numDirLights)
          .replace(/NUM_SPOT_LIGHTS/g, t.numSpotLights)
          .replace(/NUM_SPOT_LIGHT_MAPS/g, t.numSpotLightMaps)
          .replace(/NUM_SPOT_LIGHT_COORDS/g, n)
          .replace(/NUM_RECT_AREA_LIGHTS/g, t.numRectAreaLights)
          .replace(/NUM_POINT_LIGHTS/g, t.numPointLights)
          .replace(/NUM_HEMI_LIGHTS/g, t.numHemiLights)
          .replace(/NUM_DIR_LIGHT_SHADOWS/g, t.numDirLightShadows)
          .replace(
            /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,
            t.numSpotLightShadowsWithMaps
          )
          .replace(/NUM_SPOT_LIGHT_SHADOWS/g, t.numSpotLightShadows)
          .replace(/NUM_POINT_LIGHT_SHADOWS/g, t.numPointLightShadows);
      }
      function pl(e, t) {
        return e
          .replace(/NUM_CLIPPING_PLANES/g, t.numClippingPlanes)
          .replace(
            /UNION_CLIPPING_PLANES/g,
            t.numClippingPlanes - t.numClipIntersection
          );
      }
      var vl = /^[ \t]*#include +<([\w\d./]+)>/gm;
      function ml(e) {
        return e.replace(vl, gl);
      }
      function gl(e, t) {
        var n = Mo[t];
        if (void 0 === n)
          throw new Error("Can not resolve #include <" + t + ">");
        return ml(n);
      }
      var yl =
        /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;
      function bl(e) {
        return e.replace(yl, _l);
      }
      function _l(e, t, n, r) {
        for (var i = "", a = parseInt(t); a < parseInt(n); a++)
          i += r
            .replace(/\[\s*i\s*\]/g, "[ " + a + " ]")
            .replace(/UNROLLED_LOOP_INDEX/g, a);
        return i;
      }
      function xl(e) {
        var t =
          "precision " +
          e.precision +
          " float;\nprecision " +
          e.precision +
          " int;";
        return (
          "highp" === e.precision
            ? (t += "\n#define HIGH_PRECISION")
            : "mediump" === e.precision
            ? (t += "\n#define MEDIUM_PRECISION")
            : "lowp" === e.precision && (t += "\n#define LOW_PRECISION"),
          t
        );
      }
      function Sl(e, t, n, r) {
        var i,
          a,
          o = e.getContext(),
          s = n.defines,
          l = n.vertexShader,
          u = n.fragmentShader,
          c = (function (e) {
            var t = "SHADOWMAP_TYPE_BASIC";
            return (
              e.shadowMapType === H
                ? (t = "SHADOWMAP_TYPE_PCF")
                : e.shadowMapType === V
                ? (t = "SHADOWMAP_TYPE_PCF_SOFT")
                : e.shadowMapType === G && (t = "SHADOWMAP_TYPE_VSM"),
              t
            );
          })(n),
          d = (function (e) {
            var t = "ENVMAP_TYPE_CUBE";
            if (e.envMap)
              switch (e.envMapMode) {
                case Oe:
                case De:
                  t = "ENVMAP_TYPE_CUBE";
                  break;
                case Fe:
                  t = "ENVMAP_TYPE_CUBE_UV";
              }
            return t;
          })(n),
          f = (function (e) {
            var t = "ENVMAP_MODE_REFLECTION";
            e.envMap && e.envMapMode === De && (t = "ENVMAP_MODE_REFRACTION");
            return t;
          })(n),
          h = (function (e) {
            var t = "ENVMAP_BLENDING_NONE";
            if (e.envMap)
              switch (e.combine) {
                case Ee:
                  t = "ENVMAP_BLENDING_MULTIPLY";
                  break;
                case ke:
                  t = "ENVMAP_BLENDING_MIX";
                  break;
                case Te:
                  t = "ENVMAP_BLENDING_ADD";
              }
            return t;
          })(n),
          p = (function (e) {
            var t = e.envMapCubeUVHeight;
            if (null === t) return null;
            var n = Math.log2(t) - 2,
              r = 1 / t;
            return {
              texelWidth: 1 / (3 * Math.max(Math.pow(2, n), 112)),
              texelHeight: r,
              maxMip: n,
            };
          })(n),
          v = n.isWebGL2
            ? ""
            : (function (e) {
                return [
                  e.extensionDerivatives ||
                  e.envMapCubeUVHeight ||
                  e.bumpMap ||
                  e.normalMapTangentSpace ||
                  e.clearcoatNormalMap ||
                  e.flatShading ||
                  "physical" === e.shaderID
                    ? "#extension GL_OES_standard_derivatives : enable"
                    : "",
                  (e.extensionFragDepth || e.logarithmicDepthBuffer) &&
                  e.rendererExtensionFragDepth
                    ? "#extension GL_EXT_frag_depth : enable"
                    : "",
                  e.extensionDrawBuffers && e.rendererExtensionDrawBuffers
                    ? "#extension GL_EXT_draw_buffers : require"
                    : "",
                  (e.extensionShaderTextureLOD || e.envMap || e.transmission) &&
                  e.rendererExtensionShaderTextureLod
                    ? "#extension GL_EXT_shader_texture_lod : enable"
                    : "",
                ]
                  .filter(fl)
                  .join("\n");
              })(n),
          m = (function (e) {
            var t = [];
            for (var n in e) {
              var r = e[n];
              !1 !== r && t.push("#define " + n + " " + r);
            }
            return t.join("\n");
          })(s),
          g = o.createProgram(),
          y = n.glslVersion ? "#version " + n.glslVersion + "\n" : "";
        n.isRawShaderMaterial
          ? ((i = [m].filter(fl).join("\n")).length > 0 && (i += "\n"),
            (a = [v, m].filter(fl).join("\n")).length > 0 && (a += "\n"))
          : ((i = [
              xl(n),
              "#define SHADER_NAME " + n.shaderName,
              m,
              n.instancing ? "#define USE_INSTANCING" : "",
              n.instancingColor ? "#define USE_INSTANCING_COLOR" : "",
              n.useFog && n.fog ? "#define USE_FOG" : "",
              n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "",
              n.map ? "#define USE_MAP" : "",
              n.envMap ? "#define USE_ENVMAP" : "",
              n.envMap ? "#define " + f : "",
              n.lightMap ? "#define USE_LIGHTMAP" : "",
              n.aoMap ? "#define USE_AOMAP" : "",
              n.bumpMap ? "#define USE_BUMPMAP" : "",
              n.normalMap ? "#define USE_NORMALMAP" : "",
              n.normalMapObjectSpace ? "#define USE_NORMALMAP_OBJECTSPACE" : "",
              n.normalMapTangentSpace
                ? "#define USE_NORMALMAP_TANGENTSPACE"
                : "",
              n.displacementMap ? "#define USE_DISPLACEMENTMAP" : "",
              n.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
              n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
              n.clearcoatRoughnessMap
                ? "#define USE_CLEARCOAT_ROUGHNESSMAP"
                : "",
              n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
              n.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "",
              n.iridescenceThicknessMap
                ? "#define USE_IRIDESCENCE_THICKNESSMAP"
                : "",
              n.specularMap ? "#define USE_SPECULARMAP" : "",
              n.specularColorMap ? "#define USE_SPECULAR_COLORMAP" : "",
              n.specularIntensityMap ? "#define USE_SPECULAR_INTENSITYMAP" : "",
              n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
              n.metalnessMap ? "#define USE_METALNESSMAP" : "",
              n.alphaMap ? "#define USE_ALPHAMAP" : "",
              n.transmission ? "#define USE_TRANSMISSION" : "",
              n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
              n.thicknessMap ? "#define USE_THICKNESSMAP" : "",
              n.sheenColorMap ? "#define USE_SHEEN_COLORMAP" : "",
              n.sheenRoughnessMap ? "#define USE_SHEEN_ROUGHNESSMAP" : "",
              n.mapUv ? "#define MAP_UV " + n.mapUv : "",
              n.alphaMapUv ? "#define ALPHAMAP_UV " + n.alphaMapUv : "",
              n.lightMapUv ? "#define LIGHTMAP_UV " + n.lightMapUv : "",
              n.aoMapUv ? "#define AOMAP_UV " + n.aoMapUv : "",
              n.emissiveMapUv
                ? "#define EMISSIVEMAP_UV " + n.emissiveMapUv
                : "",
              n.bumpMapUv ? "#define BUMPMAP_UV " + n.bumpMapUv : "",
              n.normalMapUv ? "#define NORMALMAP_UV " + n.normalMapUv : "",
              n.displacementMapUv
                ? "#define DISPLACEMENTMAP_UV " + n.displacementMapUv
                : "",
              n.metalnessMapUv
                ? "#define METALNESSMAP_UV " + n.metalnessMapUv
                : "",
              n.roughnessMapUv
                ? "#define ROUGHNESSMAP_UV " + n.roughnessMapUv
                : "",
              n.clearcoatMapUv
                ? "#define CLEARCOATMAP_UV " + n.clearcoatMapUv
                : "",
              n.clearcoatNormalMapUv
                ? "#define CLEARCOAT_NORMALMAP_UV " + n.clearcoatNormalMapUv
                : "",
              n.clearcoatRoughnessMapUv
                ? "#define CLEARCOAT_ROUGHNESSMAP_UV " +
                  n.clearcoatRoughnessMapUv
                : "",
              n.iridescenceMapUv
                ? "#define IRIDESCENCEMAP_UV " + n.iridescenceMapUv
                : "",
              n.iridescenceThicknessMapUv
                ? "#define IRIDESCENCE_THICKNESSMAP_UV " +
                  n.iridescenceThicknessMapUv
                : "",
              n.sheenColorMapUv
                ? "#define SHEEN_COLORMAP_UV " + n.sheenColorMapUv
                : "",
              n.sheenRoughnessMapUv
                ? "#define SHEEN_ROUGHNESSMAP_UV " + n.sheenRoughnessMapUv
                : "",
              n.specularMapUv
                ? "#define SPECULARMAP_UV " + n.specularMapUv
                : "",
              n.specularColorMapUv
                ? "#define SPECULAR_COLORMAP_UV " + n.specularColorMapUv
                : "",
              n.specularIntensityMapUv
                ? "#define SPECULAR_INTENSITYMAP_UV " + n.specularIntensityMapUv
                : "",
              n.transmissionMapUv
                ? "#define TRANSMISSIONMAP_UV " + n.transmissionMapUv
                : "",
              n.thicknessMapUv
                ? "#define THICKNESSMAP_UV " + n.thicknessMapUv
                : "",
              n.vertexTangents ? "#define USE_TANGENT" : "",
              n.vertexColors ? "#define USE_COLOR" : "",
              n.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
              n.vertexUv1s ? "#define USE_UV1" : "",
              n.vertexUv2s ? "#define USE_UV2" : "",
              n.vertexUv3s ? "#define USE_UV3" : "",
              n.pointsUvs ? "#define USE_POINTS_UV" : "",
              n.flatShading ? "#define FLAT_SHADED" : "",
              n.skinning ? "#define USE_SKINNING" : "",
              n.morphTargets ? "#define USE_MORPHTARGETS" : "",
              n.morphNormals && !1 === n.flatShading
                ? "#define USE_MORPHNORMALS"
                : "",
              n.morphColors && n.isWebGL2 ? "#define USE_MORPHCOLORS" : "",
              n.morphTargetsCount > 0 && n.isWebGL2
                ? "#define MORPHTARGETS_TEXTURE"
                : "",
              n.morphTargetsCount > 0 && n.isWebGL2
                ? "#define MORPHTARGETS_TEXTURE_STRIDE " + n.morphTextureStride
                : "",
              n.morphTargetsCount > 0 && n.isWebGL2
                ? "#define MORPHTARGETS_COUNT " + n.morphTargetsCount
                : "",
              n.doubleSided ? "#define DOUBLE_SIDED" : "",
              n.flipSided ? "#define FLIP_SIDED" : "",
              n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
              n.shadowMapEnabled ? "#define " + c : "",
              n.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "",
              n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
              n.logarithmicDepthBuffer && n.rendererExtensionFragDepth
                ? "#define USE_LOGDEPTHBUF_EXT"
                : "",
              "uniform mat4 modelMatrix;",
              "uniform mat4 modelViewMatrix;",
              "uniform mat4 projectionMatrix;",
              "uniform mat4 viewMatrix;",
              "uniform mat3 normalMatrix;",
              "uniform vec3 cameraPosition;",
              "uniform bool isOrthographic;",
              "#ifdef USE_INSTANCING",
              "\tattribute mat4 instanceMatrix;",
              "#endif",
              "#ifdef USE_INSTANCING_COLOR",
              "\tattribute vec3 instanceColor;",
              "#endif",
              "attribute vec3 position;",
              "attribute vec3 normal;",
              "attribute vec2 uv;",
              "#ifdef USE_UV1",
              "\tattribute vec2 uv1;",
              "#endif",
              "#ifdef USE_UV2",
              "\tattribute vec2 uv2;",
              "#endif",
              "#ifdef USE_UV3",
              "\tattribute vec2 uv3;",
              "#endif",
              "#ifdef USE_TANGENT",
              "\tattribute vec4 tangent;",
              "#endif",
              "#if defined( USE_COLOR_ALPHA )",
              "\tattribute vec4 color;",
              "#elif defined( USE_COLOR )",
              "\tattribute vec3 color;",
              "#endif",
              "#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )",
              "\tattribute vec3 morphTarget0;",
              "\tattribute vec3 morphTarget1;",
              "\tattribute vec3 morphTarget2;",
              "\tattribute vec3 morphTarget3;",
              "\t#ifdef USE_MORPHNORMALS",
              "\t\tattribute vec3 morphNormal0;",
              "\t\tattribute vec3 morphNormal1;",
              "\t\tattribute vec3 morphNormal2;",
              "\t\tattribute vec3 morphNormal3;",
              "\t#else",
              "\t\tattribute vec3 morphTarget4;",
              "\t\tattribute vec3 morphTarget5;",
              "\t\tattribute vec3 morphTarget6;",
              "\t\tattribute vec3 morphTarget7;",
              "\t#endif",
              "#endif",
              "#ifdef USE_SKINNING",
              "\tattribute vec4 skinIndex;",
              "\tattribute vec4 skinWeight;",
              "#endif",
              "\n",
            ]
              .filter(fl)
              .join("\n")),
            (a = [
              v,
              xl(n),
              "#define SHADER_NAME " + n.shaderName,
              m,
              n.useFog && n.fog ? "#define USE_FOG" : "",
              n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "",
              n.map ? "#define USE_MAP" : "",
              n.matcap ? "#define USE_MATCAP" : "",
              n.envMap ? "#define USE_ENVMAP" : "",
              n.envMap ? "#define " + d : "",
              n.envMap ? "#define " + f : "",
              n.envMap ? "#define " + h : "",
              p ? "#define CUBEUV_TEXEL_WIDTH " + p.texelWidth : "",
              p ? "#define CUBEUV_TEXEL_HEIGHT " + p.texelHeight : "",
              p ? "#define CUBEUV_MAX_MIP " + p.maxMip + ".0" : "",
              n.lightMap ? "#define USE_LIGHTMAP" : "",
              n.aoMap ? "#define USE_AOMAP" : "",
              n.bumpMap ? "#define USE_BUMPMAP" : "",
              n.normalMap ? "#define USE_NORMALMAP" : "",
              n.normalMapObjectSpace ? "#define USE_NORMALMAP_OBJECTSPACE" : "",
              n.normalMapTangentSpace
                ? "#define USE_NORMALMAP_TANGENTSPACE"
                : "",
              n.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
              n.clearcoat ? "#define USE_CLEARCOAT" : "",
              n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
              n.clearcoatRoughnessMap
                ? "#define USE_CLEARCOAT_ROUGHNESSMAP"
                : "",
              n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
              n.iridescence ? "#define USE_IRIDESCENCE" : "",
              n.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "",
              n.iridescenceThicknessMap
                ? "#define USE_IRIDESCENCE_THICKNESSMAP"
                : "",
              n.specularMap ? "#define USE_SPECULARMAP" : "",
              n.specularColorMap ? "#define USE_SPECULAR_COLORMAP" : "",
              n.specularIntensityMap ? "#define USE_SPECULAR_INTENSITYMAP" : "",
              n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
              n.metalnessMap ? "#define USE_METALNESSMAP" : "",
              n.alphaMap ? "#define USE_ALPHAMAP" : "",
              n.alphaTest ? "#define USE_ALPHATEST" : "",
              n.sheen ? "#define USE_SHEEN" : "",
              n.sheenColorMap ? "#define USE_SHEEN_COLORMAP" : "",
              n.sheenRoughnessMap ? "#define USE_SHEEN_ROUGHNESSMAP" : "",
              n.transmission ? "#define USE_TRANSMISSION" : "",
              n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
              n.thicknessMap ? "#define USE_THICKNESSMAP" : "",
              n.vertexTangents ? "#define USE_TANGENT" : "",
              n.vertexColors || n.instancingColor ? "#define USE_COLOR" : "",
              n.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
              n.vertexUv1s ? "#define USE_UV1" : "",
              n.vertexUv2s ? "#define USE_UV2" : "",
              n.vertexUv3s ? "#define USE_UV3" : "",
              n.pointsUvs ? "#define USE_POINTS_UV" : "",
              n.gradientMap ? "#define USE_GRADIENTMAP" : "",
              n.flatShading ? "#define FLAT_SHADED" : "",
              n.doubleSided ? "#define DOUBLE_SIDED" : "",
              n.flipSided ? "#define FLIP_SIDED" : "",
              n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
              n.shadowMapEnabled ? "#define " + c : "",
              n.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "",
              n.useLegacyLights ? "#define LEGACY_LIGHTS" : "",
              n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
              n.logarithmicDepthBuffer && n.rendererExtensionFragDepth
                ? "#define USE_LOGDEPTHBUF_EXT"
                : "",
              "uniform mat4 viewMatrix;",
              "uniform vec3 cameraPosition;",
              "uniform bool isOrthographic;",
              n.toneMapping !== Ae ? "#define TONE_MAPPING" : "",
              n.toneMapping !== Ae ? Mo.tonemapping_pars_fragment : "",
              n.toneMapping !== Ae ? dl("toneMapping", n.toneMapping) : "",
              n.dithering ? "#define DITHERING" : "",
              n.opaque ? "#define OPAQUE" : "",
              Mo.encodings_pars_fragment,
              cl("linearToOutputTexel", n.outputColorSpace),
              n.useDepthPacking
                ? "#define DEPTH_PACKING " + n.depthPacking
                : "",
              "\n",
            ]
              .filter(fl)
              .join("\n"))),
          (l = pl((l = hl((l = ml(l)), n)), n)),
          (u = pl((u = hl((u = ml(u)), n)), n)),
          (l = bl(l)),
          (u = bl(u)),
          n.isWebGL2 &&
            !0 !== n.isRawShaderMaterial &&
            ((y = "#version 300 es\n"),
            (i =
              [
                "precision mediump sampler2DArray;",
                "#define attribute in",
                "#define varying out",
                "#define texture2D texture",
              ].join("\n") +
              "\n" +
              i),
            (a =
              [
                "#define varying in",
                n.glslVersion === qn
                  ? ""
                  : "layout(location = 0) out highp vec4 pc_fragColor;",
                n.glslVersion === qn ? "" : "#define gl_FragColor pc_fragColor",
                "#define gl_FragDepthEXT gl_FragDepth",
                "#define texture2D texture",
                "#define textureCube texture",
                "#define texture2DProj textureProj",
                "#define texture2DLodEXT textureLod",
                "#define texture2DProjLodEXT textureProjLod",
                "#define textureCubeLodEXT textureLod",
                "#define texture2DGradEXT textureGrad",
                "#define texture2DProjGradEXT textureProjGrad",
                "#define textureCubeGradEXT textureGrad",
              ].join("\n") +
              "\n" +
              a));
        var b,
          _,
          x = y + i + l,
          S = y + a + u,
          w = sl(o, o.VERTEX_SHADER, x),
          M = sl(o, o.FRAGMENT_SHADER, S);
        if (
          (o.attachShader(g, w),
          o.attachShader(g, M),
          void 0 !== n.index0AttributeName
            ? o.bindAttribLocation(g, 0, n.index0AttributeName)
            : !0 === n.morphTargets && o.bindAttribLocation(g, 0, "position"),
          o.linkProgram(g),
          e.debug.checkShaderErrors)
        ) {
          var E = o.getProgramInfoLog(g).trim(),
            k = o.getShaderInfoLog(w).trim(),
            T = o.getShaderInfoLog(M).trim(),
            A = !0,
            C = !0;
          if (!1 === o.getProgramParameter(g, o.LINK_STATUS))
            if (((A = !1), "function" === typeof e.debug.onShaderError))
              e.debug.onShaderError(o, g, w, M);
            else {
              var P = ul(o, w, "vertex"),
                R = ul(o, M, "fragment");
              console.error(
                "THREE.WebGLProgram: Shader Error " +
                  o.getError() +
                  " - VALIDATE_STATUS " +
                  o.getProgramParameter(g, o.VALIDATE_STATUS) +
                  "\n\nProgram Info Log: " +
                  E +
                  "\n" +
                  P +
                  "\n" +
                  R
              );
            }
          else
            "" !== E
              ? console.warn("THREE.WebGLProgram: Program Info Log:", E)
              : ("" !== k && "" !== T) || (C = !1);
          C &&
            (this.diagnostics = {
              runnable: A,
              programLog: E,
              vertexShader: { log: k, prefix: i },
              fragmentShader: { log: T, prefix: a },
            });
        }
        return (
          o.deleteShader(w),
          o.deleteShader(M),
          (this.getUniforms = function () {
            return void 0 === b && (b = new ol(o, g)), b;
          }),
          (this.getAttributes = function () {
            return (
              void 0 === _ &&
                (_ = (function (e, t) {
                  for (
                    var n = {},
                      r = e.getProgramParameter(t, e.ACTIVE_ATTRIBUTES),
                      i = 0;
                    i < r;
                    i++
                  ) {
                    var a = e.getActiveAttrib(t, i),
                      o = a.name,
                      s = 1;
                    a.type === e.FLOAT_MAT2 && (s = 2),
                      a.type === e.FLOAT_MAT3 && (s = 3),
                      a.type === e.FLOAT_MAT4 && (s = 4),
                      (n[o] = {
                        type: a.type,
                        location: e.getAttribLocation(t, o),
                        locationSize: s,
                      });
                  }
                  return n;
                })(o, g)),
              _
            );
          }),
          (this.destroy = function () {
            r.releaseStatesOfProgram(this),
              o.deleteProgram(g),
              (this.program = void 0);
          }),
          (this.name = n.shaderName),
          (this.id = ll++),
          (this.cacheKey = t),
          (this.usedTimes = 1),
          (this.program = g),
          (this.vertexShader = w),
          (this.fragmentShader = M),
          this
        );
      }
      var wl = 0,
        Ml = (function () {
          function e() {
            p(this, e),
              (this.shaderCache = new Map()),
              (this.materialCache = new Map());
          }
          return (
            g(e, [
              {
                key: "update",
                value: function (e) {
                  var t = e.vertexShader,
                    n = e.fragmentShader,
                    r = this._getShaderStage(t),
                    i = this._getShaderStage(n),
                    a = this._getShaderCacheForMaterial(e);
                  return (
                    !1 === a.has(r) && (a.add(r), r.usedTimes++),
                    !1 === a.has(i) && (a.add(i), i.usedTimes++),
                    this
                  );
                },
              },
              {
                key: "remove",
                value: function (e) {
                  var t,
                    n = T(this.materialCache.get(e));
                  try {
                    for (n.s(); !(t = n.n()).done; ) {
                      var r = t.value;
                      r.usedTimes--,
                        0 === r.usedTimes && this.shaderCache.delete(r.code);
                    }
                  } catch (i) {
                    n.e(i);
                  } finally {
                    n.f();
                  }
                  return this.materialCache.delete(e), this;
                },
              },
              {
                key: "getVertexShaderID",
                value: function (e) {
                  return this._getShaderStage(e.vertexShader).id;
                },
              },
              {
                key: "getFragmentShaderID",
                value: function (e) {
                  return this._getShaderStage(e.fragmentShader).id;
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.shaderCache.clear(), this.materialCache.clear();
                },
              },
              {
                key: "_getShaderCacheForMaterial",
                value: function (e) {
                  var t = this.materialCache,
                    n = t.get(e);
                  return void 0 === n && ((n = new Set()), t.set(e, n)), n;
                },
              },
              {
                key: "_getShaderStage",
                value: function (e) {
                  var t = this.shaderCache,
                    n = t.get(e);
                  return void 0 === n && ((n = new El(e)), t.set(e, n)), n;
                },
              },
            ]),
            e
          );
        })(),
        El = g(function e(t) {
          p(this, e), (this.id = wl++), (this.code = t), (this.usedTimes = 0);
        });
      function kl(e, t, n, r, i, a, o) {
        var s = new Ai(),
          l = new Ml(),
          u = [],
          c = i.isWebGL2,
          d = i.logarithmicDepthBuffer,
          f = i.vertexTextures,
          h = i.precision,
          p = {
            MeshDepthMaterial: "depth",
            MeshDistanceMaterial: "distanceRGBA",
            MeshNormalMaterial: "normal",
            MeshBasicMaterial: "basic",
            MeshLambertMaterial: "lambert",
            MeshPhongMaterial: "phong",
            MeshToonMaterial: "toon",
            MeshStandardMaterial: "physical",
            MeshPhysicalMaterial: "physical",
            MeshMatcapMaterial: "matcap",
            LineBasicMaterial: "basic",
            LineDashedMaterial: "dashed",
            PointsMaterial: "points",
            ShadowMaterial: "shadow",
            SpriteMaterial: "sprite",
          };
        function v(e) {
          return 1 === e ? "uv1" : 2 === e ? "uv2" : 3 === e ? "uv3" : "uv";
        }
        return {
          getParameters: function (a, s, u, m, g) {
            var y = m.fog,
              b = g.geometry,
              _ = a.isMeshStandardMaterial ? m.environment : null,
              x = (a.isMeshStandardMaterial ? n : t).get(a.envMap || _),
              S = x && x.mapping === Fe ? x.image.height : null,
              w = p[a.type];
            null !== a.precision &&
              (h = i.getMaxPrecision(a.precision)) !== a.precision &&
              console.warn(
                "THREE.WebGLProgram.getParameters:",
                a.precision,
                "not supported, using",
                h,
                "instead."
              );
            var M,
              E,
              k,
              T,
              A =
                b.morphAttributes.position ||
                b.morphAttributes.normal ||
                b.morphAttributes.color,
              C = void 0 !== A ? A.length : 0,
              P = 0;
            if (
              (void 0 !== b.morphAttributes.position && (P = 1),
              void 0 !== b.morphAttributes.normal && (P = 2),
              void 0 !== b.morphAttributes.color && (P = 3),
              w)
            ) {
              var R = ko[w];
              (M = R.vertexShader), (E = R.fragmentShader);
            } else
              (M = a.vertexShader),
                (E = a.fragmentShader),
                l.update(a),
                (k = l.getVertexShaderID(a)),
                (T = l.getFragmentShaderID(a));
            var L = e.getRenderTarget(),
              I = !0 === g.isInstancedMesh,
              N = !!a.map,
              O = !!a.matcap,
              D = !!x,
              U = !!a.aoMap,
              z = !!a.lightMap,
              F = !!a.bumpMap,
              B = !!a.normalMap,
              Z = !!a.displacementMap,
              H = !!a.emissiveMap,
              V = !!a.metalnessMap,
              G = !!a.roughnessMap,
              W = a.clearcoat > 0,
              q = a.iridescence > 0,
              Y = a.sheen > 0,
              $ = a.transmission > 0,
              J = W && !!a.clearcoatMap,
              Q = W && !!a.clearcoatNormalMap,
              ee = W && !!a.clearcoatRoughnessMap,
              te = q && !!a.iridescenceMap,
              ne = q && !!a.iridescenceThicknessMap,
              re = Y && !!a.sheenColorMap,
              ie = Y && !!a.sheenRoughnessMap,
              ae = !!a.specularMap,
              oe = !!a.specularColorMap,
              se = !!a.specularIntensityMap,
              le = $ && !!a.transmissionMap,
              ue = $ && !!a.thicknessMap,
              ce = !!a.gradientMap,
              de = !!a.alphaMap,
              fe = a.alphaTest > 0,
              he = !!a.extensions,
              pe = !!b.attributes.uv1,
              ve = !!b.attributes.uv2,
              me = !!b.attributes.uv3;
            return {
              isWebGL2: c,
              shaderID: w,
              shaderName: a.type,
              vertexShader: M,
              fragmentShader: E,
              defines: a.defines,
              customVertexShaderID: k,
              customFragmentShaderID: T,
              isRawShaderMaterial: !0 === a.isRawShaderMaterial,
              glslVersion: a.glslVersion,
              precision: h,
              instancing: I,
              instancingColor: I && null !== g.instanceColor,
              supportsVertexTextures: f,
              outputColorSpace:
                null === L
                  ? e.outputColorSpace
                  : !0 === L.isXRRenderTarget
                  ? L.texture.colorSpace
                  : _n,
              map: N,
              matcap: O,
              envMap: D,
              envMapMode: D && x.mapping,
              envMapCubeUVHeight: S,
              aoMap: U,
              lightMap: z,
              bumpMap: F,
              normalMap: B,
              displacementMap: f && Z,
              emissiveMap: H,
              normalMapObjectSpace: B && a.normalMapType === gn,
              normalMapTangentSpace: B && a.normalMapType === mn,
              metalnessMap: V,
              roughnessMap: G,
              clearcoat: W,
              clearcoatMap: J,
              clearcoatNormalMap: Q,
              clearcoatRoughnessMap: ee,
              iridescence: q,
              iridescenceMap: te,
              iridescenceThicknessMap: ne,
              sheen: Y,
              sheenColorMap: re,
              sheenRoughnessMap: ie,
              specularMap: ae,
              specularColorMap: oe,
              specularIntensityMap: se,
              transmission: $,
              transmissionMap: le,
              thicknessMap: ue,
              gradientMap: ce,
              opaque: !1 === a.transparent && a.blending === K,
              alphaMap: de,
              alphaTest: fe,
              combine: a.combine,
              mapUv: N && v(a.map.channel),
              aoMapUv: U && v(a.aoMap.channel),
              lightMapUv: z && v(a.lightMap.channel),
              bumpMapUv: F && v(a.bumpMap.channel),
              normalMapUv: B && v(a.normalMap.channel),
              displacementMapUv: Z && v(a.displacementMap.channel),
              emissiveMapUv: H && v(a.emissiveMap.channel),
              metalnessMapUv: V && v(a.metalnessMap.channel),
              roughnessMapUv: G && v(a.roughnessMap.channel),
              clearcoatMapUv: J && v(a.clearcoatMap.channel),
              clearcoatNormalMapUv: Q && v(a.clearcoatNormalMap.channel),
              clearcoatRoughnessMapUv: ee && v(a.clearcoatRoughnessMap.channel),
              iridescenceMapUv: te && v(a.iridescenceMap.channel),
              iridescenceThicknessMapUv:
                ne && v(a.iridescenceThicknessMap.channel),
              sheenColorMapUv: re && v(a.sheenColorMap.channel),
              sheenRoughnessMapUv: ie && v(a.sheenRoughnessMap.channel),
              specularMapUv: ae && v(a.specularMap.channel),
              specularColorMapUv: oe && v(a.specularColorMap.channel),
              specularIntensityMapUv: se && v(a.specularIntensityMap.channel),
              transmissionMapUv: le && v(a.transmissionMap.channel),
              thicknessMapUv: ue && v(a.thicknessMap.channel),
              alphaMapUv: de && v(a.alphaMap.channel),
              vertexTangents: B && !!b.attributes.tangent,
              vertexColors: a.vertexColors,
              vertexAlphas:
                !0 === a.vertexColors &&
                !!b.attributes.color &&
                4 === b.attributes.color.itemSize,
              vertexUv1s: pe,
              vertexUv2s: ve,
              vertexUv3s: me,
              pointsUvs: !0 === g.isPoints && !!b.attributes.uv && (N || de),
              fog: !!y,
              useFog: !0 === a.fog,
              fogExp2: y && y.isFogExp2,
              flatShading: !0 === a.flatShading,
              sizeAttenuation: !0 === a.sizeAttenuation,
              logarithmicDepthBuffer: d,
              skinning: !0 === g.isSkinnedMesh,
              morphTargets: void 0 !== b.morphAttributes.position,
              morphNormals: void 0 !== b.morphAttributes.normal,
              morphColors: void 0 !== b.morphAttributes.color,
              morphTargetsCount: C,
              morphTextureStride: P,
              numDirLights: s.directional.length,
              numPointLights: s.point.length,
              numSpotLights: s.spot.length,
              numSpotLightMaps: s.spotLightMap.length,
              numRectAreaLights: s.rectArea.length,
              numHemiLights: s.hemi.length,
              numDirLightShadows: s.directionalShadowMap.length,
              numPointLightShadows: s.pointShadowMap.length,
              numSpotLightShadows: s.spotShadowMap.length,
              numSpotLightShadowsWithMaps: s.numSpotLightShadowsWithMaps,
              numClippingPlanes: o.numPlanes,
              numClipIntersection: o.numIntersection,
              dithering: a.dithering,
              shadowMapEnabled: e.shadowMap.enabled && u.length > 0,
              shadowMapType: e.shadowMap.type,
              toneMapping: a.toneMapped ? e.toneMapping : Ae,
              useLegacyLights: e.useLegacyLights,
              premultipliedAlpha: a.premultipliedAlpha,
              doubleSided: a.side === X,
              flipSided: a.side === j,
              useDepthPacking: a.depthPacking >= 0,
              depthPacking: a.depthPacking || 0,
              index0AttributeName: a.index0AttributeName,
              extensionDerivatives: he && !0 === a.extensions.derivatives,
              extensionFragDepth: he && !0 === a.extensions.fragDepth,
              extensionDrawBuffers: he && !0 === a.extensions.drawBuffers,
              extensionShaderTextureLOD:
                he && !0 === a.extensions.shaderTextureLOD,
              rendererExtensionFragDepth: c || r.has("EXT_frag_depth"),
              rendererExtensionDrawBuffers: c || r.has("WEBGL_draw_buffers"),
              rendererExtensionShaderTextureLod:
                c || r.has("EXT_shader_texture_lod"),
              customProgramCacheKey: a.customProgramCacheKey(),
            };
          },
          getProgramCacheKey: function (t) {
            var n = [];
            if (
              (t.shaderID
                ? n.push(t.shaderID)
                : (n.push(t.customVertexShaderID),
                  n.push(t.customFragmentShaderID)),
              void 0 !== t.defines)
            )
              for (var r in t.defines) n.push(r), n.push(t.defines[r]);
            return (
              !1 === t.isRawShaderMaterial &&
                (!(function (e, t) {
                  e.push(t.precision),
                    e.push(t.outputColorSpace),
                    e.push(t.envMapMode),
                    e.push(t.envMapCubeUVHeight),
                    e.push(t.mapUv),
                    e.push(t.alphaMapUv),
                    e.push(t.lightMapUv),
                    e.push(t.aoMapUv),
                    e.push(t.bumpMapUv),
                    e.push(t.normalMapUv),
                    e.push(t.displacementMapUv),
                    e.push(t.emissiveMapUv),
                    e.push(t.metalnessMapUv),
                    e.push(t.roughnessMapUv),
                    e.push(t.clearcoatMapUv),
                    e.push(t.clearcoatNormalMapUv),
                    e.push(t.clearcoatRoughnessMapUv),
                    e.push(t.iridescenceMapUv),
                    e.push(t.iridescenceThicknessMapUv),
                    e.push(t.sheenColorMapUv),
                    e.push(t.sheenRoughnessMapUv),
                    e.push(t.specularMapUv),
                    e.push(t.specularColorMapUv),
                    e.push(t.specularIntensityMapUv),
                    e.push(t.transmissionMapUv),
                    e.push(t.thicknessMapUv),
                    e.push(t.combine),
                    e.push(t.fogExp2),
                    e.push(t.sizeAttenuation),
                    e.push(t.morphTargetsCount),
                    e.push(t.morphAttributeCount),
                    e.push(t.numDirLights),
                    e.push(t.numPointLights),
                    e.push(t.numSpotLights),
                    e.push(t.numSpotLightMaps),
                    e.push(t.numHemiLights),
                    e.push(t.numRectAreaLights),
                    e.push(t.numDirLightShadows),
                    e.push(t.numPointLightShadows),
                    e.push(t.numSpotLightShadows),
                    e.push(t.numSpotLightShadowsWithMaps),
                    e.push(t.shadowMapType),
                    e.push(t.toneMapping),
                    e.push(t.numClippingPlanes),
                    e.push(t.numClipIntersection),
                    e.push(t.depthPacking);
                })(n, t),
                (function (e, t) {
                  s.disableAll(), t.isWebGL2 && s.enable(0);
                  t.supportsVertexTextures && s.enable(1);
                  t.instancing && s.enable(2);
                  t.instancingColor && s.enable(3);
                  t.matcap && s.enable(4);
                  t.envMap && s.enable(5);
                  t.normalMapObjectSpace && s.enable(6);
                  t.normalMapTangentSpace && s.enable(7);
                  t.clearcoat && s.enable(8);
                  t.iridescence && s.enable(9);
                  t.alphaTest && s.enable(10);
                  t.vertexColors && s.enable(11);
                  t.vertexAlphas && s.enable(12);
                  t.vertexUv1s && s.enable(13);
                  t.vertexUv2s && s.enable(14);
                  t.vertexUv3s && s.enable(15);
                  t.vertexTangents && s.enable(16);
                  e.push(s.mask), s.disableAll(), t.fog && s.enable(0);
                  t.useFog && s.enable(1);
                  t.flatShading && s.enable(2);
                  t.logarithmicDepthBuffer && s.enable(3);
                  t.skinning && s.enable(4);
                  t.morphTargets && s.enable(5);
                  t.morphNormals && s.enable(6);
                  t.morphColors && s.enable(7);
                  t.premultipliedAlpha && s.enable(8);
                  t.shadowMapEnabled && s.enable(9);
                  t.useLegacyLights && s.enable(10);
                  t.doubleSided && s.enable(11);
                  t.flipSided && s.enable(12);
                  t.useDepthPacking && s.enable(13);
                  t.dithering && s.enable(14);
                  t.transmission && s.enable(15);
                  t.sheen && s.enable(16);
                  t.opaque && s.enable(17);
                  t.pointsUvs && s.enable(18);
                  e.push(s.mask);
                })(n, t),
                n.push(e.outputColorSpace)),
              n.push(t.customProgramCacheKey),
              n.join()
            );
          },
          getUniforms: function (e) {
            var t,
              n = p[e.type];
            if (n) {
              var r = ko[n];
              t = ao.clone(r.uniforms);
            } else t = e.uniforms;
            return t;
          },
          acquireProgram: function (t, n) {
            for (var r, i = 0, o = u.length; i < o; i++) {
              var s = u[i];
              if (s.cacheKey === n) {
                ++(r = s).usedTimes;
                break;
              }
            }
            return void 0 === r && ((r = new Sl(e, n, t, a)), u.push(r)), r;
          },
          releaseProgram: function (e) {
            if (0 === --e.usedTimes) {
              var t = u.indexOf(e);
              (u[t] = u[u.length - 1]), u.pop(), e.destroy();
            }
          },
          releaseShaderCache: function (e) {
            l.remove(e);
          },
          programs: u,
          dispose: function () {
            l.dispose();
          },
        };
      }
      function Tl() {
        var e = new WeakMap();
        return {
          get: function (t) {
            var n = e.get(t);
            return void 0 === n && ((n = {}), e.set(t, n)), n;
          },
          remove: function (t) {
            e.delete(t);
          },
          update: function (t, n, r) {
            e.get(t)[n] = r;
          },
          dispose: function () {
            e = new WeakMap();
          },
        };
      }
      function Al(e, t) {
        return e.groupOrder !== t.groupOrder
          ? e.groupOrder - t.groupOrder
          : e.renderOrder !== t.renderOrder
          ? e.renderOrder - t.renderOrder
          : e.material.id !== t.material.id
          ? e.material.id - t.material.id
          : e.z !== t.z
          ? e.z - t.z
          : e.id - t.id;
      }
      function Cl(e, t) {
        return e.groupOrder !== t.groupOrder
          ? e.groupOrder - t.groupOrder
          : e.renderOrder !== t.renderOrder
          ? e.renderOrder - t.renderOrder
          : e.z !== t.z
          ? t.z - e.z
          : e.id - t.id;
      }
      function Pl() {
        var e = [],
          t = 0,
          n = [],
          r = [],
          i = [];
        function a(n, r, i, a, o, s) {
          var l = e[t];
          return (
            void 0 === l
              ? ((l = {
                  id: n.id,
                  object: n,
                  geometry: r,
                  material: i,
                  groupOrder: a,
                  renderOrder: n.renderOrder,
                  z: o,
                  group: s,
                }),
                (e[t] = l))
              : ((l.id = n.id),
                (l.object = n),
                (l.geometry = r),
                (l.material = i),
                (l.groupOrder = a),
                (l.renderOrder = n.renderOrder),
                (l.z = o),
                (l.group = s)),
            t++,
            l
          );
        }
        return {
          opaque: n,
          transmissive: r,
          transparent: i,
          init: function () {
            (t = 0), (n.length = 0), (r.length = 0), (i.length = 0);
          },
          push: function (e, t, o, s, l, u) {
            var c = a(e, t, o, s, l, u);
            o.transmission > 0
              ? r.push(c)
              : !0 === o.transparent
              ? i.push(c)
              : n.push(c);
          },
          unshift: function (e, t, o, s, l, u) {
            var c = a(e, t, o, s, l, u);
            o.transmission > 0
              ? r.unshift(c)
              : !0 === o.transparent
              ? i.unshift(c)
              : n.unshift(c);
          },
          finish: function () {
            for (var n = t, r = e.length; n < r; n++) {
              var i = e[n];
              if (null === i.id) break;
              (i.id = null),
                (i.object = null),
                (i.geometry = null),
                (i.material = null),
                (i.group = null);
            }
          },
          sort: function (e, t) {
            n.length > 1 && n.sort(e || Al),
              r.length > 1 && r.sort(t || Cl),
              i.length > 1 && i.sort(t || Cl);
          },
        };
      }
      function Rl() {
        var e = new WeakMap();
        return {
          get: function (t, n) {
            var r,
              i = e.get(t);
            return (
              void 0 === i
                ? ((r = new Pl()), e.set(t, [r]))
                : n >= i.length
                ? ((r = new Pl()), i.push(r))
                : (r = i[n]),
              r
            );
          },
          dispose: function () {
            e = new WeakMap();
          },
        };
      }
      function Ll() {
        var e = {};
        return {
          get: function (t) {
            if (void 0 !== e[t.id]) return e[t.id];
            var n;
            switch (t.type) {
              case "DirectionalLight":
                n = { direction: new Zr(), color: new sa() };
                break;
              case "SpotLight":
                n = {
                  position: new Zr(),
                  direction: new Zr(),
                  color: new sa(),
                  distance: 0,
                  coneCos: 0,
                  penumbraCos: 0,
                  decay: 0,
                };
                break;
              case "PointLight":
                n = {
                  position: new Zr(),
                  color: new sa(),
                  distance: 0,
                  decay: 0,
                };
                break;
              case "HemisphereLight":
                n = {
                  direction: new Zr(),
                  skyColor: new sa(),
                  groundColor: new sa(),
                };
                break;
              case "RectAreaLight":
                n = {
                  color: new sa(),
                  position: new Zr(),
                  halfWidth: new Zr(),
                  halfHeight: new Zr(),
                };
            }
            return (e[t.id] = n), n;
          },
        };
      }
      var Il = 0;
      function Nl(e, t) {
        return (
          (t.castShadow ? 2 : 0) -
          (e.castShadow ? 2 : 0) +
          (t.map ? 1 : 0) -
          (e.map ? 1 : 0)
        );
      }
      function Ol(e, t) {
        for (
          var n = new Ll(),
            r = (function () {
              var e = {};
              return {
                get: function (t) {
                  if (void 0 !== e[t.id]) return e[t.id];
                  var n;
                  switch (t.type) {
                    case "DirectionalLight":
                    case "SpotLight":
                      n = {
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new dr(),
                      };
                      break;
                    case "PointLight":
                      n = {
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new dr(),
                        shadowCameraNear: 1,
                        shadowCameraFar: 1e3,
                      };
                  }
                  return (e[t.id] = n), n;
                },
              };
            })(),
            i = {
              version: 0,
              hash: {
                directionalLength: -1,
                pointLength: -1,
                spotLength: -1,
                rectAreaLength: -1,
                hemiLength: -1,
                numDirectionalShadows: -1,
                numPointShadows: -1,
                numSpotShadows: -1,
                numSpotMaps: -1,
              },
              ambient: [0, 0, 0],
              probe: [],
              directional: [],
              directionalShadow: [],
              directionalShadowMap: [],
              directionalShadowMatrix: [],
              spot: [],
              spotLightMap: [],
              spotShadow: [],
              spotShadowMap: [],
              spotLightMatrix: [],
              rectArea: [],
              rectAreaLTC1: null,
              rectAreaLTC2: null,
              point: [],
              pointShadow: [],
              pointShadowMap: [],
              pointShadowMatrix: [],
              hemi: [],
              numSpotLightShadowsWithMaps: 0,
            },
            a = 0;
          a < 9;
          a++
        )
          i.probe.push(new Zr());
        var o = new Zr(),
          s = new gi(),
          l = new gi();
        return {
          setup: function (a, o) {
            for (var s = 0, l = 0, u = 0, c = 0; c < 9; c++)
              i.probe[c].set(0, 0, 0);
            var d = 0,
              f = 0,
              h = 0,
              p = 0,
              v = 0,
              m = 0,
              g = 0,
              y = 0,
              b = 0,
              _ = 0;
            a.sort(Nl);
            for (
              var x = !0 === o ? Math.PI : 1, S = 0, w = a.length;
              S < w;
              S++
            ) {
              var M = a[S],
                E = M.color,
                k = M.intensity,
                T = M.distance,
                A = M.shadow && M.shadow.map ? M.shadow.map.texture : null;
              if (M.isAmbientLight)
                (s += E.r * k * x), (l += E.g * k * x), (u += E.b * k * x);
              else if (M.isLightProbe)
                for (var C = 0; C < 9; C++)
                  i.probe[C].addScaledVector(M.sh.coefficients[C], k);
              else if (M.isDirectionalLight) {
                var P = n.get(M);
                if (
                  (P.color.copy(M.color).multiplyScalar(M.intensity * x),
                  M.castShadow)
                ) {
                  var R = M.shadow,
                    L = r.get(M);
                  (L.shadowBias = R.bias),
                    (L.shadowNormalBias = R.normalBias),
                    (L.shadowRadius = R.radius),
                    (L.shadowMapSize = R.mapSize),
                    (i.directionalShadow[d] = L),
                    (i.directionalShadowMap[d] = A),
                    (i.directionalShadowMatrix[d] = M.shadow.matrix),
                    m++;
                }
                (i.directional[d] = P), d++;
              } else if (M.isSpotLight) {
                var I = n.get(M);
                I.position.setFromMatrixPosition(M.matrixWorld),
                  I.color.copy(E).multiplyScalar(k * x),
                  (I.distance = T),
                  (I.coneCos = Math.cos(M.angle)),
                  (I.penumbraCos = Math.cos(M.angle * (1 - M.penumbra))),
                  (I.decay = M.decay),
                  (i.spot[h] = I);
                var N = M.shadow;
                if (
                  (M.map &&
                    ((i.spotLightMap[b] = M.map),
                    b++,
                    N.updateMatrices(M),
                    M.castShadow && _++),
                  (i.spotLightMatrix[h] = N.matrix),
                  M.castShadow)
                ) {
                  var O = r.get(M);
                  (O.shadowBias = N.bias),
                    (O.shadowNormalBias = N.normalBias),
                    (O.shadowRadius = N.radius),
                    (O.shadowMapSize = N.mapSize),
                    (i.spotShadow[h] = O),
                    (i.spotShadowMap[h] = A),
                    y++;
                }
                h++;
              } else if (M.isRectAreaLight) {
                var D = n.get(M);
                D.color.copy(E).multiplyScalar(k),
                  D.halfWidth.set(0.5 * M.width, 0, 0),
                  D.halfHeight.set(0, 0.5 * M.height, 0),
                  (i.rectArea[p] = D),
                  p++;
              } else if (M.isPointLight) {
                var U = n.get(M);
                if (
                  (U.color.copy(M.color).multiplyScalar(M.intensity * x),
                  (U.distance = M.distance),
                  (U.decay = M.decay),
                  M.castShadow)
                ) {
                  var z = M.shadow,
                    F = r.get(M);
                  (F.shadowBias = z.bias),
                    (F.shadowNormalBias = z.normalBias),
                    (F.shadowRadius = z.radius),
                    (F.shadowMapSize = z.mapSize),
                    (F.shadowCameraNear = z.camera.near),
                    (F.shadowCameraFar = z.camera.far),
                    (i.pointShadow[f] = F),
                    (i.pointShadowMap[f] = A),
                    (i.pointShadowMatrix[f] = M.shadow.matrix),
                    g++;
                }
                (i.point[f] = U), f++;
              } else if (M.isHemisphereLight) {
                var B = n.get(M);
                B.skyColor.copy(M.color).multiplyScalar(k * x),
                  B.groundColor.copy(M.groundColor).multiplyScalar(k * x),
                  (i.hemi[v] = B),
                  v++;
              }
            }
            p > 0 &&
              (t.isWebGL2 || !0 === e.has("OES_texture_float_linear")
                ? ((i.rectAreaLTC1 = Eo.LTC_FLOAT_1),
                  (i.rectAreaLTC2 = Eo.LTC_FLOAT_2))
                : !0 === e.has("OES_texture_half_float_linear")
                ? ((i.rectAreaLTC1 = Eo.LTC_HALF_1),
                  (i.rectAreaLTC2 = Eo.LTC_HALF_2))
                : console.error(
                    "THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions."
                  )),
              (i.ambient[0] = s),
              (i.ambient[1] = l),
              (i.ambient[2] = u);
            var Z = i.hash;
            (Z.directionalLength === d &&
              Z.pointLength === f &&
              Z.spotLength === h &&
              Z.rectAreaLength === p &&
              Z.hemiLength === v &&
              Z.numDirectionalShadows === m &&
              Z.numPointShadows === g &&
              Z.numSpotShadows === y &&
              Z.numSpotMaps === b) ||
              ((i.directional.length = d),
              (i.spot.length = h),
              (i.rectArea.length = p),
              (i.point.length = f),
              (i.hemi.length = v),
              (i.directionalShadow.length = m),
              (i.directionalShadowMap.length = m),
              (i.pointShadow.length = g),
              (i.pointShadowMap.length = g),
              (i.spotShadow.length = y),
              (i.spotShadowMap.length = y),
              (i.directionalShadowMatrix.length = m),
              (i.pointShadowMatrix.length = g),
              (i.spotLightMatrix.length = y + b - _),
              (i.spotLightMap.length = b),
              (i.numSpotLightShadowsWithMaps = _),
              (Z.directionalLength = d),
              (Z.pointLength = f),
              (Z.spotLength = h),
              (Z.rectAreaLength = p),
              (Z.hemiLength = v),
              (Z.numDirectionalShadows = m),
              (Z.numPointShadows = g),
              (Z.numSpotShadows = y),
              (Z.numSpotMaps = b),
              (i.version = Il++));
          },
          setupView: function (e, t) {
            for (
              var n = 0,
                r = 0,
                a = 0,
                u = 0,
                c = 0,
                d = t.matrixWorldInverse,
                f = 0,
                h = e.length;
              f < h;
              f++
            ) {
              var p = e[f];
              if (p.isDirectionalLight) {
                var v = i.directional[n];
                v.direction.setFromMatrixPosition(p.matrixWorld),
                  o.setFromMatrixPosition(p.target.matrixWorld),
                  v.direction.sub(o),
                  v.direction.transformDirection(d),
                  n++;
              } else if (p.isSpotLight) {
                var m = i.spot[a];
                m.position.setFromMatrixPosition(p.matrixWorld),
                  m.position.applyMatrix4(d),
                  m.direction.setFromMatrixPosition(p.matrixWorld),
                  o.setFromMatrixPosition(p.target.matrixWorld),
                  m.direction.sub(o),
                  m.direction.transformDirection(d),
                  a++;
              } else if (p.isRectAreaLight) {
                var g = i.rectArea[u];
                g.position.setFromMatrixPosition(p.matrixWorld),
                  g.position.applyMatrix4(d),
                  l.identity(),
                  s.copy(p.matrixWorld),
                  s.premultiply(d),
                  l.extractRotation(s),
                  g.halfWidth.set(0.5 * p.width, 0, 0),
                  g.halfHeight.set(0, 0.5 * p.height, 0),
                  g.halfWidth.applyMatrix4(l),
                  g.halfHeight.applyMatrix4(l),
                  u++;
              } else if (p.isPointLight) {
                var y = i.point[r];
                y.position.setFromMatrixPosition(p.matrixWorld),
                  y.position.applyMatrix4(d),
                  r++;
              } else if (p.isHemisphereLight) {
                var b = i.hemi[c];
                b.direction.setFromMatrixPosition(p.matrixWorld),
                  b.direction.transformDirection(d),
                  c++;
              }
            }
          },
          state: i,
        };
      }
      function Dl(e, t) {
        var n = new Ol(e, t),
          r = [],
          i = [];
        return {
          init: function () {
            (r.length = 0), (i.length = 0);
          },
          state: { lightsArray: r, shadowsArray: i, lights: n },
          setupLights: function (e) {
            n.setup(r, e);
          },
          setupLightsView: function (e) {
            n.setupView(r, e);
          },
          pushLight: function (e) {
            r.push(e);
          },
          pushShadow: function (e) {
            i.push(e);
          },
        };
      }
      function Ul(e, t) {
        var n = new WeakMap();
        return {
          get: function (r) {
            var i,
              a =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              o = n.get(r);
            return (
              void 0 === o
                ? ((i = new Dl(e, t)), n.set(r, [i]))
                : a >= o.length
                ? ((i = new Dl(e, t)), o.push(i))
                : (i = o[a]),
              i
            );
          },
          dispose: function () {
            n = new WeakMap();
          },
        };
      }
      var zl = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return (
              p(this, n),
              ((r = t.call(this)).isMeshDepthMaterial = !0),
              (r.type = "MeshDepthMaterial"),
              (r.depthPacking = pn),
              (r.map = null),
              (r.alphaMap = null),
              (r.displacementMap = null),
              (r.displacementScale = 1),
              (r.displacementBias = 0),
              (r.wireframe = !1),
              (r.wireframeLinewidth = 1),
              r.setValues(e),
              r
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    (this.depthPacking = e.depthPacking),
                    (this.map = e.map),
                    (this.alphaMap = e.alphaMap),
                    (this.displacementMap = e.displacementMap),
                    (this.displacementScale = e.displacementScale),
                    (this.displacementBias = e.displacementBias),
                    (this.wireframe = e.wireframe),
                    (this.wireframeLinewidth = e.wireframeLinewidth),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(na),
        Fl = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return (
              p(this, n),
              ((r = t.call(this)).isMeshDistanceMaterial = !0),
              (r.type = "MeshDistanceMaterial"),
              (r.map = null),
              (r.alphaMap = null),
              (r.displacementMap = null),
              (r.displacementScale = 1),
              (r.displacementBias = 0),
              r.setValues(e),
              r
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    (this.map = e.map),
                    (this.alphaMap = e.alphaMap),
                    (this.displacementMap = e.displacementMap),
                    (this.displacementScale = e.displacementScale),
                    (this.displacementBias = e.displacementBias),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(na);
      function Bl(e, t, n) {
        var r,
          i = new _o(),
          a = new dr(),
          o = new dr(),
          s = new Ir(),
          u = new zl({ depthPacking: vn }),
          c = new Fl(),
          d = {},
          f = n.maxTextureSize,
          h =
            ((r = {}),
            (0, l.Z)(r, W, j),
            (0, l.Z)(r, j, W),
            (0, l.Z)(r, X, X),
            r),
          p = new oo({
            defines: { VSM_SAMPLES: 8 },
            uniforms: {
              shadow_pass: { value: null },
              resolution: { value: new dr() },
              radius: { value: 4 },
            },
            vertexShader:
              "void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",
            fragmentShader:
              "uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}",
          }),
          v = p.clone();
        v.defines.HORIZONTAL_PASS = 1;
        var m = new Oa();
        m.setAttribute(
          "position",
          new ga(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3)
        );
        var g = new Qa(m, p),
          y = this;
        (this.enabled = !1),
          (this.autoUpdate = !0),
          (this.needsUpdate = !1),
          (this.type = H);
        var b = this.type;
        function _(n, r) {
          var i = t.update(g);
          p.defines.VSM_SAMPLES !== n.blurSamples &&
            ((p.defines.VSM_SAMPLES = n.blurSamples),
            (v.defines.VSM_SAMPLES = n.blurSamples),
            (p.needsUpdate = !0),
            (v.needsUpdate = !0)),
            null === n.mapPass && (n.mapPass = new Nr(a.x, a.y)),
            (p.uniforms.shadow_pass.value = n.map.texture),
            (p.uniforms.resolution.value = n.mapSize),
            (p.uniforms.radius.value = n.radius),
            e.setRenderTarget(n.mapPass),
            e.clear(),
            e.renderBufferDirect(r, null, i, p, g, null),
            (v.uniforms.shadow_pass.value = n.mapPass.texture),
            (v.uniforms.resolution.value = n.mapSize),
            (v.uniforms.radius.value = n.radius),
            e.setRenderTarget(n.map),
            e.clear(),
            e.renderBufferDirect(r, null, i, v, g, null);
        }
        function x(t, n, r, i) {
          var a = null,
            o =
              !0 === r.isPointLight
                ? t.customDistanceMaterial
                : t.customDepthMaterial;
          if (void 0 !== o) a = o;
          else if (
            ((a = !0 === r.isPointLight ? c : u),
            (e.localClippingEnabled &&
              !0 === n.clipShadows &&
              Array.isArray(n.clippingPlanes) &&
              0 !== n.clippingPlanes.length) ||
              (n.displacementMap && 0 !== n.displacementScale) ||
              (n.alphaMap && n.alphaTest > 0) ||
              (n.map && n.alphaTest > 0))
          ) {
            var s = a.uuid,
              l = n.uuid,
              f = d[s];
            void 0 === f && ((f = {}), (d[s] = f));
            var p = f[l];
            void 0 === p && ((p = a.clone()), (f[l] = p)), (a = p);
          }
          ((a.visible = n.visible),
          (a.wireframe = n.wireframe),
          (a.side =
            i === G
              ? null !== n.shadowSide
                ? n.shadowSide
                : n.side
              : null !== n.shadowSide
              ? n.shadowSide
              : h[n.side]),
          (a.alphaMap = n.alphaMap),
          (a.alphaTest = n.alphaTest),
          (a.map = n.map),
          (a.clipShadows = n.clipShadows),
          (a.clippingPlanes = n.clippingPlanes),
          (a.clipIntersection = n.clipIntersection),
          (a.displacementMap = n.displacementMap),
          (a.displacementScale = n.displacementScale),
          (a.displacementBias = n.displacementBias),
          (a.wireframeLinewidth = n.wireframeLinewidth),
          (a.linewidth = n.linewidth),
          !0 === r.isPointLight && !0 === a.isMeshDistanceMaterial) &&
            (e.properties.get(a).light = r);
          return a;
        }
        function S(n, r, a, o, s) {
          if (!1 !== n.visible) {
            if (
              n.layers.test(r.layers) &&
              (n.isMesh || n.isLine || n.isPoints) &&
              (n.castShadow || (n.receiveShadow && s === G)) &&
              (!n.frustumCulled || i.intersectsObject(n))
            ) {
              n.modelViewMatrix.multiplyMatrices(
                a.matrixWorldInverse,
                n.matrixWorld
              );
              var l = t.update(n),
                u = n.material;
              if (Array.isArray(u))
                for (var c = l.groups, d = 0, f = c.length; d < f; d++) {
                  var h = c[d],
                    p = u[h.materialIndex];
                  if (p && p.visible) {
                    var v = x(n, p, o, s);
                    e.renderBufferDirect(a, null, l, v, n, h);
                  }
                }
              else if (u.visible) {
                var m = x(n, u, o, s);
                e.renderBufferDirect(a, null, l, m, n, null);
              }
            }
            for (var g = n.children, y = 0, b = g.length; y < b; y++)
              S(g[y], r, a, o, s);
          }
        }
        this.render = function (t, n, r) {
          if (
            !1 !== y.enabled &&
            (!1 !== y.autoUpdate || !1 !== y.needsUpdate) &&
            0 !== t.length
          ) {
            var l = e.getRenderTarget(),
              u = e.getActiveCubeFace(),
              c = e.getActiveMipmapLevel(),
              d = e.state;
            d.setBlending(Y),
              d.buffers.color.setClear(1, 1, 1, 1),
              d.buffers.depth.setTest(!0),
              d.setScissorTest(!1);
            for (
              var h = b !== G && this.type === G,
                p = b === G && this.type !== G,
                v = 0,
                m = t.length;
              v < m;
              v++
            ) {
              var g = t[v],
                x = g.shadow;
              if (void 0 !== x) {
                if (!1 !== x.autoUpdate || !1 !== x.needsUpdate) {
                  a.copy(x.mapSize);
                  var w = x.getFrameExtents();
                  if (
                    (a.multiply(w),
                    o.copy(x.mapSize),
                    (a.x > f || a.y > f) &&
                      (a.x > f &&
                        ((o.x = Math.floor(f / w.x)),
                        (a.x = o.x * w.x),
                        (x.mapSize.x = o.x)),
                      a.y > f &&
                        ((o.y = Math.floor(f / w.y)),
                        (a.y = o.y * w.y),
                        (x.mapSize.y = o.y))),
                    null === x.map || !0 === h || !0 === p)
                  ) {
                    var M =
                      this.type !== G ? { minFilter: Ve, magFilter: Ve } : {};
                    null !== x.map && x.map.dispose(),
                      (x.map = new Nr(a.x, a.y, M)),
                      (x.map.texture.name = g.name + ".shadowMap"),
                      x.camera.updateProjectionMatrix();
                  }
                  e.setRenderTarget(x.map), e.clear();
                  for (var E = x.getViewportCount(), k = 0; k < E; k++) {
                    var T = x.getViewport(k);
                    s.set(o.x * T.x, o.y * T.y, o.x * T.z, o.y * T.w),
                      d.viewport(s),
                      x.updateMatrices(g, k),
                      (i = x.getFrustum()),
                      S(n, r, x.camera, g, this.type);
                  }
                  !0 !== x.isPointLightShadow && this.type === G && _(x, r),
                    (x.needsUpdate = !1);
                }
              } else console.warn("THREE.WebGLShadowMap:", g, "has no shadow.");
            }
            (b = this.type), (y.needsUpdate = !1), e.setRenderTarget(l, u, c);
          }
        };
      }
      function Zl(e, t, n) {
        var r,
          i,
          a = n.isWebGL2;
        var o = new (function () {
            var t = !1,
              n = new Ir(),
              r = null,
              i = new Ir(0, 0, 0, 0);
            return {
              setMask: function (n) {
                r === n || t || (e.colorMask(n, n, n, n), (r = n));
              },
              setLocked: function (e) {
                t = e;
              },
              setClear: function (t, r, a, o, s) {
                !0 === s && ((t *= o), (r *= o), (a *= o)),
                  n.set(t, r, a, o),
                  !1 === i.equals(n) && (e.clearColor(t, r, a, o), i.copy(n));
              },
              reset: function () {
                (t = !1), (r = null), i.set(-1, 0, 0, 0);
              },
            };
          })(),
          s = new (function () {
            var t = !1,
              n = null,
              r = null,
              i = null;
            return {
              setTest: function (t) {
                t ? q(e.DEPTH_TEST) : Ee(e.DEPTH_TEST);
              },
              setMask: function (r) {
                n === r || t || (e.depthMask(r), (n = r));
              },
              setFunc: function (t) {
                if (r !== t) {
                  switch (t) {
                    case ge:
                      e.depthFunc(e.NEVER);
                      break;
                    case ye:
                      e.depthFunc(e.ALWAYS);
                      break;
                    case be:
                      e.depthFunc(e.LESS);
                      break;
                    case _e:
                      e.depthFunc(e.LEQUAL);
                      break;
                    case xe:
                      e.depthFunc(e.EQUAL);
                      break;
                    case Se:
                      e.depthFunc(e.GEQUAL);
                      break;
                    case we:
                      e.depthFunc(e.GREATER);
                      break;
                    case Me:
                      e.depthFunc(e.NOTEQUAL);
                      break;
                    default:
                      e.depthFunc(e.LEQUAL);
                  }
                  r = t;
                }
              },
              setLocked: function (e) {
                t = e;
              },
              setClear: function (t) {
                i !== t && (e.clearDepth(t), (i = t));
              },
              reset: function () {
                (t = !1), (n = null), (r = null), (i = null);
              },
            };
          })(),
          u = new (function () {
            var t = !1,
              n = null,
              r = null,
              i = null,
              a = null,
              o = null,
              s = null,
              l = null,
              u = null;
            return {
              setTest: function (n) {
                t || (n ? q(e.STENCIL_TEST) : Ee(e.STENCIL_TEST));
              },
              setMask: function (r) {
                n === r || t || (e.stencilMask(r), (n = r));
              },
              setFunc: function (t, n, o) {
                (r === t && i === n && a === o) ||
                  (e.stencilFunc(t, n, o), (r = t), (i = n), (a = o));
              },
              setOp: function (t, n, r) {
                (o === t && s === n && l === r) ||
                  (e.stencilOp(t, n, r), (o = t), (s = n), (l = r));
              },
              setLocked: function (e) {
                t = e;
              },
              setClear: function (t) {
                u !== t && (e.clearStencil(t), (u = t));
              },
              reset: function () {
                (t = !1),
                  (n = null),
                  (r = null),
                  (i = null),
                  (a = null),
                  (o = null),
                  (s = null),
                  (l = null),
                  (u = null);
              },
            };
          })(),
          c = new WeakMap(),
          d = new WeakMap(),
          f = {},
          h = {},
          p = new WeakMap(),
          v = [],
          m = null,
          g = !1,
          y = null,
          b = null,
          _ = null,
          x = null,
          S = null,
          w = null,
          M = null,
          E = !1,
          k = null,
          T = null,
          A = null,
          C = null,
          P = null,
          R = e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS),
          L = !1,
          I = 0,
          N = e.getParameter(e.VERSION);
        -1 !== N.indexOf("WebGL")
          ? ((I = parseFloat(/^WebGL (\d)/.exec(N)[1])), (L = I >= 1))
          : -1 !== N.indexOf("OpenGL ES") &&
            ((I = parseFloat(/^OpenGL ES (\d)/.exec(N)[1])), (L = I >= 2));
        var O = null,
          D = {},
          B = e.getParameter(e.SCISSOR_BOX),
          Z = e.getParameter(e.VIEWPORT),
          H = new Ir().fromArray(B),
          V = new Ir().fromArray(Z);
        function G(t, n, r, i) {
          var o = new Uint8Array(4),
            s = e.createTexture();
          e.bindTexture(t, s),
            e.texParameteri(t, e.TEXTURE_MIN_FILTER, e.NEAREST),
            e.texParameteri(t, e.TEXTURE_MAG_FILTER, e.NEAREST);
          for (var l = 0; l < r; l++)
            !a || (t !== e.TEXTURE_3D && t !== e.TEXTURE_2D_ARRAY)
              ? e.texImage2D(
                  n + l,
                  0,
                  e.RGBA,
                  1,
                  1,
                  0,
                  e.RGBA,
                  e.UNSIGNED_BYTE,
                  o
                )
              : e.texImage3D(
                  n,
                  0,
                  e.RGBA,
                  1,
                  1,
                  i,
                  0,
                  e.RGBA,
                  e.UNSIGNED_BYTE,
                  o
                );
          return s;
        }
        var W = {};
        function q(t) {
          !0 !== f[t] && (e.enable(t), (f[t] = !0));
        }
        function Ee(t) {
          !1 !== f[t] && (e.disable(t), (f[t] = !1));
        }
        (W[e.TEXTURE_2D] = G(e.TEXTURE_2D, e.TEXTURE_2D, 1)),
          (W[e.TEXTURE_CUBE_MAP] = G(
            e.TEXTURE_CUBE_MAP,
            e.TEXTURE_CUBE_MAP_POSITIVE_X,
            6
          )),
          a &&
            ((W[e.TEXTURE_2D_ARRAY] = G(
              e.TEXTURE_2D_ARRAY,
              e.TEXTURE_2D_ARRAY,
              1,
              1
            )),
            (W[e.TEXTURE_3D] = G(e.TEXTURE_3D, e.TEXTURE_3D, 1, 1))),
          o.setClear(0, 0, 0, 1),
          s.setClear(1),
          u.setClear(0),
          q(e.DEPTH_TEST),
          s.setFunc(_e),
          Pe(!1),
          Re(z),
          q(e.CULL_FACE),
          Ce(Y);
        var ke =
          ((r = {}),
          (0, l.Z)(r, te, e.FUNC_ADD),
          (0, l.Z)(r, ne, e.FUNC_SUBTRACT),
          (0, l.Z)(r, re, e.FUNC_REVERSE_SUBTRACT),
          r);
        if (a) (ke[ie] = e.MIN), (ke[ae] = e.MAX);
        else {
          var Te = t.get("EXT_blend_minmax");
          null !== Te && ((ke[ie] = Te.MIN_EXT), (ke[ae] = Te.MAX_EXT));
        }
        var Ae =
          ((i = {}),
          (0, l.Z)(i, oe, e.ZERO),
          (0, l.Z)(i, se, e.ONE),
          (0, l.Z)(i, le, e.SRC_COLOR),
          (0, l.Z)(i, ce, e.SRC_ALPHA),
          (0, l.Z)(i, me, e.SRC_ALPHA_SATURATE),
          (0, l.Z)(i, pe, e.DST_COLOR),
          (0, l.Z)(i, fe, e.DST_ALPHA),
          (0, l.Z)(i, ue, e.ONE_MINUS_SRC_COLOR),
          (0, l.Z)(i, de, e.ONE_MINUS_SRC_ALPHA),
          (0, l.Z)(i, ve, e.ONE_MINUS_DST_COLOR),
          (0, l.Z)(i, he, e.ONE_MINUS_DST_ALPHA),
          i);
        function Ce(t, n, r, i, a, o, s, l) {
          if (t !== Y) {
            if ((!1 === g && (q(e.BLEND), (g = !0)), t === ee))
              (a = a || n),
                (o = o || r),
                (s = s || i),
                (n === b && a === S) ||
                  (e.blendEquationSeparate(ke[n], ke[a]), (b = n), (S = a)),
                (r === _ && i === x && o === w && s === M) ||
                  (e.blendFuncSeparate(Ae[r], Ae[i], Ae[o], Ae[s]),
                  (_ = r),
                  (x = i),
                  (w = o),
                  (M = s)),
                (y = t),
                (E = !1);
            else if (t !== y || l !== E) {
              if (
                ((b === te && S === te) ||
                  (e.blendEquation(e.FUNC_ADD), (b = te), (S = te)),
                l)
              )
                switch (t) {
                  case K:
                    e.blendFuncSeparate(
                      e.ONE,
                      e.ONE_MINUS_SRC_ALPHA,
                      e.ONE,
                      e.ONE_MINUS_SRC_ALPHA
                    );
                    break;
                  case $:
                    e.blendFunc(e.ONE, e.ONE);
                    break;
                  case J:
                    e.blendFuncSeparate(
                      e.ZERO,
                      e.ONE_MINUS_SRC_COLOR,
                      e.ZERO,
                      e.ONE
                    );
                    break;
                  case Q:
                    e.blendFuncSeparate(
                      e.ZERO,
                      e.SRC_COLOR,
                      e.ZERO,
                      e.SRC_ALPHA
                    );
                    break;
                  default:
                    console.error("THREE.WebGLState: Invalid blending: ", t);
                }
              else
                switch (t) {
                  case K:
                    e.blendFuncSeparate(
                      e.SRC_ALPHA,
                      e.ONE_MINUS_SRC_ALPHA,
                      e.ONE,
                      e.ONE_MINUS_SRC_ALPHA
                    );
                    break;
                  case $:
                    e.blendFunc(e.SRC_ALPHA, e.ONE);
                    break;
                  case J:
                    e.blendFuncSeparate(
                      e.ZERO,
                      e.ONE_MINUS_SRC_COLOR,
                      e.ZERO,
                      e.ONE
                    );
                    break;
                  case Q:
                    e.blendFunc(e.ZERO, e.SRC_COLOR);
                    break;
                  default:
                    console.error("THREE.WebGLState: Invalid blending: ", t);
                }
              (_ = null), (x = null), (w = null), (M = null), (y = t), (E = l);
            }
          } else !0 === g && (Ee(e.BLEND), (g = !1));
        }
        function Pe(t) {
          k !== t && (t ? e.frontFace(e.CW) : e.frontFace(e.CCW), (k = t));
        }
        function Re(t) {
          t !== U
            ? (q(e.CULL_FACE),
              t !== T &&
                (t === z
                  ? e.cullFace(e.BACK)
                  : t === F
                  ? e.cullFace(e.FRONT)
                  : e.cullFace(e.FRONT_AND_BACK)))
            : Ee(e.CULL_FACE),
            (T = t);
        }
        function Le(t, n, r) {
          t
            ? (q(e.POLYGON_OFFSET_FILL),
              (C === n && P === r) || (e.polygonOffset(n, r), (C = n), (P = r)))
            : Ee(e.POLYGON_OFFSET_FILL);
        }
        return {
          buffers: { color: o, depth: s, stencil: u },
          enable: q,
          disable: Ee,
          bindFramebuffer: function (t, n) {
            return (
              h[t] !== n &&
              (e.bindFramebuffer(t, n),
              (h[t] = n),
              a &&
                (t === e.DRAW_FRAMEBUFFER && (h[e.FRAMEBUFFER] = n),
                t === e.FRAMEBUFFER && (h[e.DRAW_FRAMEBUFFER] = n)),
              !0)
            );
          },
          drawBuffers: function (r, i) {
            var a = v,
              o = !1;
            if (r)
              if (
                (void 0 === (a = p.get(i)) && ((a = []), p.set(i, a)),
                r.isWebGLMultipleRenderTargets)
              ) {
                var s = r.texture;
                if (a.length !== s.length || a[0] !== e.COLOR_ATTACHMENT0) {
                  for (var l = 0, u = s.length; l < u; l++)
                    a[l] = e.COLOR_ATTACHMENT0 + l;
                  (a.length = s.length), (o = !0);
                }
              } else
                a[0] !== e.COLOR_ATTACHMENT0 &&
                  ((a[0] = e.COLOR_ATTACHMENT0), (o = !0));
            else a[0] !== e.BACK && ((a[0] = e.BACK), (o = !0));
            o &&
              (n.isWebGL2
                ? e.drawBuffers(a)
                : t.get("WEBGL_draw_buffers").drawBuffersWEBGL(a));
          },
          useProgram: function (t) {
            return m !== t && (e.useProgram(t), (m = t), !0);
          },
          setBlending: Ce,
          setMaterial: function (t, n) {
            t.side === X ? Ee(e.CULL_FACE) : q(e.CULL_FACE);
            var r = t.side === j;
            n && (r = !r),
              Pe(r),
              t.blending === K && !1 === t.transparent
                ? Ce(Y)
                : Ce(
                    t.blending,
                    t.blendEquation,
                    t.blendSrc,
                    t.blendDst,
                    t.blendEquationAlpha,
                    t.blendSrcAlpha,
                    t.blendDstAlpha,
                    t.premultipliedAlpha
                  ),
              s.setFunc(t.depthFunc),
              s.setTest(t.depthTest),
              s.setMask(t.depthWrite),
              o.setMask(t.colorWrite);
            var i = t.stencilWrite;
            u.setTest(i),
              i &&
                (u.setMask(t.stencilWriteMask),
                u.setFunc(t.stencilFunc, t.stencilRef, t.stencilFuncMask),
                u.setOp(t.stencilFail, t.stencilZFail, t.stencilZPass)),
              Le(t.polygonOffset, t.polygonOffsetFactor, t.polygonOffsetUnits),
              !0 === t.alphaToCoverage
                ? q(e.SAMPLE_ALPHA_TO_COVERAGE)
                : Ee(e.SAMPLE_ALPHA_TO_COVERAGE);
          },
          setFlipSided: Pe,
          setCullFace: Re,
          setLineWidth: function (t) {
            t !== A && (L && e.lineWidth(t), (A = t));
          },
          setPolygonOffset: Le,
          setScissorTest: function (t) {
            t ? q(e.SCISSOR_TEST) : Ee(e.SCISSOR_TEST);
          },
          activeTexture: function (t) {
            void 0 === t && (t = e.TEXTURE0 + R - 1),
              O !== t && (e.activeTexture(t), (O = t));
          },
          bindTexture: function (t, n, r) {
            void 0 === r && (r = null === O ? e.TEXTURE0 + R - 1 : O);
            var i = D[r];
            void 0 === i &&
              ((i = { type: void 0, texture: void 0 }), (D[r] = i)),
              (i.type === t && i.texture === n) ||
                (O !== r && (e.activeTexture(r), (O = r)),
                e.bindTexture(t, n || W[t]),
                (i.type = t),
                (i.texture = n));
          },
          unbindTexture: function () {
            var t = D[O];
            void 0 !== t &&
              void 0 !== t.type &&
              (e.bindTexture(t.type, null),
              (t.type = void 0),
              (t.texture = void 0));
          },
          compressedTexImage2D: function () {
            try {
              e.compressedTexImage2D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          compressedTexImage3D: function () {
            try {
              e.compressedTexImage3D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          texImage2D: function () {
            try {
              e.texImage2D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          texImage3D: function () {
            try {
              e.texImage3D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          updateUBOMapping: function (t, n) {
            var r = d.get(n);
            void 0 === r && ((r = new WeakMap()), d.set(n, r));
            var i = r.get(t);
            void 0 === i &&
              ((i = e.getUniformBlockIndex(n, t.name)), r.set(t, i));
          },
          uniformBlockBinding: function (t, n) {
            var r = d.get(n).get(t);
            c.get(n) !== r &&
              (e.uniformBlockBinding(n, r, t.__bindingPointIndex), c.set(n, r));
          },
          texStorage2D: function () {
            try {
              e.texStorage2D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          texStorage3D: function () {
            try {
              e.texStorage3D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          texSubImage2D: function () {
            try {
              e.texSubImage2D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          texSubImage3D: function () {
            try {
              e.texSubImage3D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          compressedTexSubImage2D: function () {
            try {
              e.compressedTexSubImage2D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          compressedTexSubImage3D: function () {
            try {
              e.compressedTexSubImage3D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          scissor: function (t) {
            !1 === H.equals(t) && (e.scissor(t.x, t.y, t.z, t.w), H.copy(t));
          },
          viewport: function (t) {
            !1 === V.equals(t) && (e.viewport(t.x, t.y, t.z, t.w), V.copy(t));
          },
          reset: function () {
            e.disable(e.BLEND),
              e.disable(e.CULL_FACE),
              e.disable(e.DEPTH_TEST),
              e.disable(e.POLYGON_OFFSET_FILL),
              e.disable(e.SCISSOR_TEST),
              e.disable(e.STENCIL_TEST),
              e.disable(e.SAMPLE_ALPHA_TO_COVERAGE),
              e.blendEquation(e.FUNC_ADD),
              e.blendFunc(e.ONE, e.ZERO),
              e.blendFuncSeparate(e.ONE, e.ZERO, e.ONE, e.ZERO),
              e.colorMask(!0, !0, !0, !0),
              e.clearColor(0, 0, 0, 0),
              e.depthMask(!0),
              e.depthFunc(e.LESS),
              e.clearDepth(1),
              e.stencilMask(4294967295),
              e.stencilFunc(e.ALWAYS, 0, 4294967295),
              e.stencilOp(e.KEEP, e.KEEP, e.KEEP),
              e.clearStencil(0),
              e.cullFace(e.BACK),
              e.frontFace(e.CCW),
              e.polygonOffset(0, 0),
              e.activeTexture(e.TEXTURE0),
              e.bindFramebuffer(e.FRAMEBUFFER, null),
              !0 === a &&
                (e.bindFramebuffer(e.DRAW_FRAMEBUFFER, null),
                e.bindFramebuffer(e.READ_FRAMEBUFFER, null)),
              e.useProgram(null),
              e.lineWidth(1),
              e.scissor(0, 0, e.canvas.width, e.canvas.height),
              e.viewport(0, 0, e.canvas.width, e.canvas.height),
              (f = {}),
              (O = null),
              (D = {}),
              (h = {}),
              (p = new WeakMap()),
              (v = []),
              (m = null),
              (g = !1),
              (y = null),
              (b = null),
              (_ = null),
              (x = null),
              (S = null),
              (w = null),
              (M = null),
              (E = !1),
              (k = null),
              (T = null),
              (A = null),
              (C = null),
              (P = null),
              H.set(0, 0, e.canvas.width, e.canvas.height),
              V.set(0, 0, e.canvas.width, e.canvas.height),
              o.reset(),
              s.reset(),
              u.reset();
          },
        };
      }
      function Hl(e, t, n, r, i, a, o) {
        var s,
          u,
          c,
          d = i.isWebGL2,
          f = i.maxTextures,
          h = i.maxCubemapSize,
          p = i.maxTextureSize,
          v = i.maxSamples,
          m = t.has("WEBGL_multisampled_render_to_texture")
            ? t.get("WEBGL_multisampled_render_to_texture")
            : null,
          g =
            "undefined" !== typeof navigator &&
            /OculusBrowser/g.test(navigator.userAgent),
          y = new WeakMap(),
          b = new WeakMap(),
          _ = !1;
        try {
          _ =
            "undefined" !== typeof OffscreenCanvas &&
            null !== new OffscreenCanvas(1, 1).getContext("2d");
        } catch (W) {}
        function x(e, t) {
          return _ ? new OffscreenCanvas(e, t) : gr("canvas");
        }
        function S(e, t, n, r) {
          var i = 1;
          if (
            ((e.width > r || e.height > r) &&
              (i = r / Math.max(e.width, e.height)),
            i < 1 || !0 === t)
          ) {
            if (
              ("undefined" !== typeof HTMLImageElement &&
                e instanceof HTMLImageElement) ||
              ("undefined" !== typeof HTMLCanvasElement &&
                e instanceof HTMLCanvasElement) ||
              ("undefined" !== typeof ImageBitmap && e instanceof ImageBitmap)
            ) {
              var a = t ? sr : Math.floor,
                o = a(i * e.width),
                s = a(i * e.height);
              void 0 === c && (c = x(o, s));
              var l = n ? x(o, s) : c;
              return (
                (l.width = o),
                (l.height = s),
                l.getContext("2d").drawImage(e, 0, 0, o, s),
                console.warn(
                  "THREE.WebGLRenderer: Texture has been resized from (" +
                    e.width +
                    "x" +
                    e.height +
                    ") to (" +
                    o +
                    "x" +
                    s +
                    ")."
                ),
                l
              );
            }
            return (
              "data" in e &&
                console.warn(
                  "THREE.WebGLRenderer: Image in DataTexture is too big (" +
                    e.width +
                    "x" +
                    e.height +
                    ")."
                ),
              e
            );
          }
          return e;
        }
        function w(e) {
          return ar(e.width) && ar(e.height);
        }
        function M(e, t) {
          return (
            e.generateMipmaps && t && e.minFilter !== Ve && e.minFilter !== qe
          );
        }
        function E(t) {
          e.generateMipmap(t);
        }
        function k(n, r, i, a) {
          var o =
            arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
          if (!1 === d) return r;
          if (null !== n) {
            if (void 0 !== e[n]) return e[n];
            console.warn(
              "THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" +
                n +
                "'"
            );
          }
          var s = r;
          return (
            r === e.RED &&
              (i === e.FLOAT && (s = e.R32F),
              i === e.HALF_FLOAT && (s = e.R16F),
              i === e.UNSIGNED_BYTE && (s = e.R8)),
            r === e.RG &&
              (i === e.FLOAT && (s = e.RG32F),
              i === e.HALF_FLOAT && (s = e.RG16F),
              i === e.UNSIGNED_BYTE && (s = e.RG8)),
            r === e.RGBA &&
              (i === e.FLOAT && (s = e.RGBA32F),
              i === e.HALF_FLOAT && (s = e.RGBA16F),
              i === e.UNSIGNED_BYTE &&
                (s = a === bn && !1 === o ? e.SRGB8_ALPHA8 : e.RGBA8),
              i === e.UNSIGNED_SHORT_4_4_4_4 && (s = e.RGBA4),
              i === e.UNSIGNED_SHORT_5_5_5_1 && (s = e.RGB5_A1)),
            (s !== e.R16F &&
              s !== e.R32F &&
              s !== e.RG16F &&
              s !== e.RG32F &&
              s !== e.RGBA16F &&
              s !== e.RGBA32F) ||
              t.get("EXT_color_buffer_float"),
            s
          );
        }
        function T(e, t, n) {
          return !0 === M(e, n) ||
            (e.isFramebufferTexture && e.minFilter !== Ve && e.minFilter !== qe)
            ? Math.log2(Math.max(t.width, t.height)) + 1
            : void 0 !== e.mipmaps && e.mipmaps.length > 0
            ? e.mipmaps.length
            : e.isCompressedTexture && Array.isArray(e.image)
            ? t.mipmaps.length
            : 1;
        }
        function A(t) {
          return t === Ve || t === Ge || t === je ? e.NEAREST : e.LINEAR;
        }
        function C(e) {
          var t = e.target;
          t.removeEventListener("dispose", C),
            (function (e) {
              var t = r.get(e);
              if (void 0 === t.__webglInit) return;
              var n = e.source,
                i = b.get(n);
              if (i) {
                var a = i[t.__cacheKey];
                a.usedTimes--,
                  0 === a.usedTimes && R(e),
                  0 === Object.keys(i).length && b.delete(n);
              }
              r.remove(e);
            })(t),
            t.isVideoTexture && y.delete(t);
        }
        function P(t) {
          var n = t.target;
          n.removeEventListener("dispose", P),
            (function (t) {
              var n = t.texture,
                i = r.get(t),
                a = r.get(n);
              void 0 !== a.__webglTexture &&
                (e.deleteTexture(a.__webglTexture), o.memory.textures--);
              t.depthTexture && t.depthTexture.dispose();
              if (t.isWebGLCubeRenderTarget)
                for (var s = 0; s < 6; s++)
                  e.deleteFramebuffer(i.__webglFramebuffer[s]),
                    i.__webglDepthbuffer &&
                      e.deleteRenderbuffer(i.__webglDepthbuffer[s]);
              else {
                if (
                  (e.deleteFramebuffer(i.__webglFramebuffer),
                  i.__webglDepthbuffer &&
                    e.deleteRenderbuffer(i.__webglDepthbuffer),
                  i.__webglMultisampledFramebuffer &&
                    e.deleteFramebuffer(i.__webglMultisampledFramebuffer),
                  i.__webglColorRenderbuffer)
                )
                  for (var l = 0; l < i.__webglColorRenderbuffer.length; l++)
                    i.__webglColorRenderbuffer[l] &&
                      e.deleteRenderbuffer(i.__webglColorRenderbuffer[l]);
                i.__webglDepthRenderbuffer &&
                  e.deleteRenderbuffer(i.__webglDepthRenderbuffer);
              }
              if (t.isWebGLMultipleRenderTargets)
                for (var u = 0, c = n.length; u < c; u++) {
                  var d = r.get(n[u]);
                  d.__webglTexture &&
                    (e.deleteTexture(d.__webglTexture), o.memory.textures--),
                    r.remove(n[u]);
                }
              r.remove(n), r.remove(t);
            })(n);
        }
        function R(t) {
          var n = r.get(t);
          e.deleteTexture(n.__webglTexture);
          var i = t.source;
          delete b.get(i)[n.__cacheKey], o.memory.textures--;
        }
        var L = 0;
        function I(t, i) {
          var a = r.get(t);
          if (
            (t.isVideoTexture &&
              (function (e) {
                var t = o.render.frame;
                y.get(e) !== t && (y.set(e, t), e.update());
              })(t),
            !1 === t.isRenderTargetTexture &&
              t.version > 0 &&
              a.__version !== t.version)
          ) {
            var s = t.image;
            if (null === s)
              console.warn(
                "THREE.WebGLRenderer: Texture marked for update but no image data found."
              );
            else {
              if (!1 !== s.complete) return void z(a, t, i);
              console.warn(
                "THREE.WebGLRenderer: Texture marked for update but image is incomplete"
              );
            }
          }
          n.bindTexture(e.TEXTURE_2D, a.__webglTexture, e.TEXTURE0 + i);
        }
        var N =
            ((s = {}),
            (0, l.Z)(s, Be, e.REPEAT),
            (0, l.Z)(s, Ze, e.CLAMP_TO_EDGE),
            (0, l.Z)(s, He, e.MIRRORED_REPEAT),
            s),
          O =
            ((u = {}),
            (0, l.Z)(u, Ve, e.NEAREST),
            (0, l.Z)(u, Ge, e.NEAREST_MIPMAP_NEAREST),
            (0, l.Z)(u, je, e.NEAREST_MIPMAP_LINEAR),
            (0, l.Z)(u, qe, e.LINEAR),
            (0, l.Z)(u, Ye, e.LINEAR_MIPMAP_NEAREST),
            (0, l.Z)(u, $e, e.LINEAR_MIPMAP_LINEAR),
            u);
        function D(n, a, o) {
          if (
            (o
              ? (e.texParameteri(n, e.TEXTURE_WRAP_S, N[a.wrapS]),
                e.texParameteri(n, e.TEXTURE_WRAP_T, N[a.wrapT]),
                (n !== e.TEXTURE_3D && n !== e.TEXTURE_2D_ARRAY) ||
                  e.texParameteri(n, e.TEXTURE_WRAP_R, N[a.wrapR]),
                e.texParameteri(n, e.TEXTURE_MAG_FILTER, O[a.magFilter]),
                e.texParameteri(n, e.TEXTURE_MIN_FILTER, O[a.minFilter]))
              : (e.texParameteri(n, e.TEXTURE_WRAP_S, e.CLAMP_TO_EDGE),
                e.texParameteri(n, e.TEXTURE_WRAP_T, e.CLAMP_TO_EDGE),
                (n !== e.TEXTURE_3D && n !== e.TEXTURE_2D_ARRAY) ||
                  e.texParameteri(n, e.TEXTURE_WRAP_R, e.CLAMP_TO_EDGE),
                (a.wrapS === Ze && a.wrapT === Ze) ||
                  console.warn(
                    "THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."
                  ),
                e.texParameteri(n, e.TEXTURE_MAG_FILTER, A(a.magFilter)),
                e.texParameteri(n, e.TEXTURE_MIN_FILTER, A(a.minFilter)),
                a.minFilter !== Ve &&
                  a.minFilter !== qe &&
                  console.warn(
                    "THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."
                  )),
            !0 === t.has("EXT_texture_filter_anisotropic"))
          ) {
            var s = t.get("EXT_texture_filter_anisotropic");
            if (a.magFilter === Ve) return;
            if (a.minFilter !== je && a.minFilter !== $e) return;
            if (a.type === at && !1 === t.has("OES_texture_float_linear"))
              return;
            if (
              !1 === d &&
              a.type === ot &&
              !1 === t.has("OES_texture_half_float_linear")
            )
              return;
            (a.anisotropy > 1 || r.get(a).__currentAnisotropy) &&
              (e.texParameterf(
                n,
                s.TEXTURE_MAX_ANISOTROPY_EXT,
                Math.min(a.anisotropy, i.getMaxAnisotropy())
              ),
              (r.get(a).__currentAnisotropy = a.anisotropy));
          }
        }
        function U(t, n) {
          var r = !1;
          void 0 === t.__webglInit &&
            ((t.__webglInit = !0), n.addEventListener("dispose", C));
          var i = n.source,
            a = b.get(i);
          void 0 === a && ((a = {}), b.set(i, a));
          var s = (function (e) {
            var t = [];
            return (
              t.push(e.wrapS),
              t.push(e.wrapT),
              t.push(e.wrapR || 0),
              t.push(e.magFilter),
              t.push(e.minFilter),
              t.push(e.anisotropy),
              t.push(e.internalFormat),
              t.push(e.format),
              t.push(e.type),
              t.push(e.generateMipmaps),
              t.push(e.premultiplyAlpha),
              t.push(e.flipY),
              t.push(e.unpackAlignment),
              t.push(e.colorSpace),
              t.join()
            );
          })(n);
          if (s !== t.__cacheKey) {
            void 0 === a[s] &&
              ((a[s] = { texture: e.createTexture(), usedTimes: 0 }),
              o.memory.textures++,
              (r = !0)),
              a[s].usedTimes++;
            var l = a[t.__cacheKey];
            void 0 !== l &&
              (a[t.__cacheKey].usedTimes--, 0 === l.usedTimes && R(n)),
              (t.__cacheKey = s),
              (t.__webglTexture = a[s].texture);
          }
          return r;
        }
        function z(t, i, o) {
          var s = e.TEXTURE_2D;
          (i.isDataArrayTexture || i.isCompressedArrayTexture) &&
            (s = e.TEXTURE_2D_ARRAY),
            i.isData3DTexture && (s = e.TEXTURE_3D);
          var l = U(t, i),
            u = i.source;
          n.bindTexture(s, t.__webglTexture, e.TEXTURE0 + o);
          var c = r.get(u);
          if (u.version !== c.__version || !0 === l) {
            n.activeTexture(e.TEXTURE0 + o),
              e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, i.flipY),
              e.pixelStorei(
                e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
                i.premultiplyAlpha
              ),
              e.pixelStorei(e.UNPACK_ALIGNMENT, i.unpackAlignment),
              e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL, e.NONE);
            var f,
              h =
                (function (e) {
                  return (
                    !d &&
                    (e.wrapS !== Ze ||
                      e.wrapT !== Ze ||
                      (e.minFilter !== Ve && e.minFilter !== qe))
                  );
                })(i) && !1 === w(i.image),
              v = S(i.image, h, !1, p),
              m = w((v = G(i, v))) || d,
              g = a.convert(i.format, i.colorSpace),
              y = a.convert(i.type),
              b = k(i.internalFormat, g, y, i.colorSpace);
            D(s, i, m);
            var _ = i.mipmaps,
              x = d && !0 !== i.isVideoTexture,
              A = void 0 === c.__version || !0 === l,
              C = T(i, v, m);
            if (i.isDepthTexture)
              (b = e.DEPTH_COMPONENT),
                d
                  ? (b =
                      i.type === at
                        ? e.DEPTH_COMPONENT32F
                        : i.type === it
                        ? e.DEPTH_COMPONENT24
                        : i.type === ut
                        ? e.DEPTH24_STENCIL8
                        : e.DEPTH_COMPONENT16)
                  : i.type === at &&
                    console.error(
                      "WebGLRenderer: Floating point depth texture requires WebGL2."
                    ),
                i.format === pt &&
                  b === e.DEPTH_COMPONENT &&
                  i.type !== nt &&
                  i.type !== it &&
                  (console.warn(
                    "THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."
                  ),
                  (i.type = it),
                  (y = a.convert(i.type))),
                i.format === vt &&
                  b === e.DEPTH_COMPONENT &&
                  ((b = e.DEPTH_STENCIL),
                  i.type !== ut &&
                    (console.warn(
                      "THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."
                    ),
                    (i.type = ut),
                    (y = a.convert(i.type)))),
                A &&
                  (x
                    ? n.texStorage2D(e.TEXTURE_2D, 1, b, v.width, v.height)
                    : n.texImage2D(
                        e.TEXTURE_2D,
                        0,
                        b,
                        v.width,
                        v.height,
                        0,
                        g,
                        y,
                        null
                      ));
            else if (i.isDataTexture)
              if (_.length > 0 && m) {
                x &&
                  A &&
                  n.texStorage2D(e.TEXTURE_2D, C, b, _[0].width, _[0].height);
                for (var P = 0, R = _.length; P < R; P++)
                  (f = _[P]),
                    x
                      ? n.texSubImage2D(
                          e.TEXTURE_2D,
                          P,
                          0,
                          0,
                          f.width,
                          f.height,
                          g,
                          y,
                          f.data
                        )
                      : n.texImage2D(
                          e.TEXTURE_2D,
                          P,
                          b,
                          f.width,
                          f.height,
                          0,
                          g,
                          y,
                          f.data
                        );
                i.generateMipmaps = !1;
              } else
                x
                  ? (A && n.texStorage2D(e.TEXTURE_2D, C, b, v.width, v.height),
                    n.texSubImage2D(
                      e.TEXTURE_2D,
                      0,
                      0,
                      0,
                      v.width,
                      v.height,
                      g,
                      y,
                      v.data
                    ))
                  : n.texImage2D(
                      e.TEXTURE_2D,
                      0,
                      b,
                      v.width,
                      v.height,
                      0,
                      g,
                      y,
                      v.data
                    );
            else if (i.isCompressedTexture)
              if (i.isCompressedArrayTexture) {
                x &&
                  A &&
                  n.texStorage3D(
                    e.TEXTURE_2D_ARRAY,
                    C,
                    b,
                    _[0].width,
                    _[0].height,
                    v.depth
                  );
                for (var L = 0, I = _.length; L < I; L++)
                  (f = _[L]),
                    i.format !== dt
                      ? null !== g
                        ? x
                          ? n.compressedTexSubImage3D(
                              e.TEXTURE_2D_ARRAY,
                              L,
                              0,
                              0,
                              0,
                              f.width,
                              f.height,
                              v.depth,
                              g,
                              f.data,
                              0,
                              0
                            )
                          : n.compressedTexImage3D(
                              e.TEXTURE_2D_ARRAY,
                              L,
                              b,
                              f.width,
                              f.height,
                              v.depth,
                              0,
                              f.data,
                              0,
                              0
                            )
                        : console.warn(
                            "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"
                          )
                      : x
                      ? n.texSubImage3D(
                          e.TEXTURE_2D_ARRAY,
                          L,
                          0,
                          0,
                          0,
                          f.width,
                          f.height,
                          v.depth,
                          g,
                          y,
                          f.data
                        )
                      : n.texImage3D(
                          e.TEXTURE_2D_ARRAY,
                          L,
                          b,
                          f.width,
                          f.height,
                          v.depth,
                          0,
                          g,
                          y,
                          f.data
                        );
              } else {
                x &&
                  A &&
                  n.texStorage2D(e.TEXTURE_2D, C, b, _[0].width, _[0].height);
                for (var N = 0, O = _.length; N < O; N++)
                  (f = _[N]),
                    i.format !== dt
                      ? null !== g
                        ? x
                          ? n.compressedTexSubImage2D(
                              e.TEXTURE_2D,
                              N,
                              0,
                              0,
                              f.width,
                              f.height,
                              g,
                              f.data
                            )
                          : n.compressedTexImage2D(
                              e.TEXTURE_2D,
                              N,
                              b,
                              f.width,
                              f.height,
                              0,
                              f.data
                            )
                        : console.warn(
                            "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"
                          )
                      : x
                      ? n.texSubImage2D(
                          e.TEXTURE_2D,
                          N,
                          0,
                          0,
                          f.width,
                          f.height,
                          g,
                          y,
                          f.data
                        )
                      : n.texImage2D(
                          e.TEXTURE_2D,
                          N,
                          b,
                          f.width,
                          f.height,
                          0,
                          g,
                          y,
                          f.data
                        );
              }
            else if (i.isDataArrayTexture)
              x
                ? (A &&
                    n.texStorage3D(
                      e.TEXTURE_2D_ARRAY,
                      C,
                      b,
                      v.width,
                      v.height,
                      v.depth
                    ),
                  n.texSubImage3D(
                    e.TEXTURE_2D_ARRAY,
                    0,
                    0,
                    0,
                    0,
                    v.width,
                    v.height,
                    v.depth,
                    g,
                    y,
                    v.data
                  ))
                : n.texImage3D(
                    e.TEXTURE_2D_ARRAY,
                    0,
                    b,
                    v.width,
                    v.height,
                    v.depth,
                    0,
                    g,
                    y,
                    v.data
                  );
            else if (i.isData3DTexture)
              x
                ? (A &&
                    n.texStorage3D(
                      e.TEXTURE_3D,
                      C,
                      b,
                      v.width,
                      v.height,
                      v.depth
                    ),
                  n.texSubImage3D(
                    e.TEXTURE_3D,
                    0,
                    0,
                    0,
                    0,
                    v.width,
                    v.height,
                    v.depth,
                    g,
                    y,
                    v.data
                  ))
                : n.texImage3D(
                    e.TEXTURE_3D,
                    0,
                    b,
                    v.width,
                    v.height,
                    v.depth,
                    0,
                    g,
                    y,
                    v.data
                  );
            else if (i.isFramebufferTexture) {
              if (A)
                if (x) n.texStorage2D(e.TEXTURE_2D, C, b, v.width, v.height);
                else
                  for (var z = v.width, F = v.height, B = 0; B < C; B++)
                    n.texImage2D(e.TEXTURE_2D, B, b, z, F, 0, g, y, null),
                      (z >>= 1),
                      (F >>= 1);
            } else if (_.length > 0 && m) {
              x &&
                A &&
                n.texStorage2D(e.TEXTURE_2D, C, b, _[0].width, _[0].height);
              for (var Z = 0, H = _.length; Z < H; Z++)
                (f = _[Z]),
                  x
                    ? n.texSubImage2D(e.TEXTURE_2D, Z, 0, 0, g, y, f)
                    : n.texImage2D(e.TEXTURE_2D, Z, b, g, y, f);
              i.generateMipmaps = !1;
            } else
              x
                ? (A && n.texStorage2D(e.TEXTURE_2D, C, b, v.width, v.height),
                  n.texSubImage2D(e.TEXTURE_2D, 0, 0, 0, g, y, v))
                : n.texImage2D(e.TEXTURE_2D, 0, b, g, y, v);
            M(i, m) && E(s),
              (c.__version = u.version),
              i.onUpdate && i.onUpdate(i);
          }
          t.__version = i.version;
        }
        function F(t, i, o, s, l) {
          var u = a.convert(o.format, o.colorSpace),
            c = a.convert(o.type),
            d = k(o.internalFormat, u, c, o.colorSpace);
          r.get(i).__hasExternalTextures ||
            (l === e.TEXTURE_3D || l === e.TEXTURE_2D_ARRAY
              ? n.texImage3D(l, 0, d, i.width, i.height, i.depth, 0, u, c, null)
              : n.texImage2D(l, 0, d, i.width, i.height, 0, u, c, null)),
            n.bindFramebuffer(e.FRAMEBUFFER, t),
            V(i)
              ? m.framebufferTexture2DMultisampleEXT(
                  e.FRAMEBUFFER,
                  s,
                  l,
                  r.get(o).__webglTexture,
                  0,
                  H(i)
                )
              : (l === e.TEXTURE_2D ||
                  (l >= e.TEXTURE_CUBE_MAP_POSITIVE_X &&
                    l <= e.TEXTURE_CUBE_MAP_NEGATIVE_Z)) &&
                e.framebufferTexture2D(
                  e.FRAMEBUFFER,
                  s,
                  l,
                  r.get(o).__webglTexture,
                  0
                ),
            n.bindFramebuffer(e.FRAMEBUFFER, null);
        }
        function B(t, n, r) {
          if (
            (e.bindRenderbuffer(e.RENDERBUFFER, t),
            n.depthBuffer && !n.stencilBuffer)
          ) {
            var i = e.DEPTH_COMPONENT16;
            if (r || V(n)) {
              var o = n.depthTexture;
              o &&
                o.isDepthTexture &&
                (o.type === at
                  ? (i = e.DEPTH_COMPONENT32F)
                  : o.type === it && (i = e.DEPTH_COMPONENT24));
              var s = H(n);
              V(n)
                ? m.renderbufferStorageMultisampleEXT(
                    e.RENDERBUFFER,
                    s,
                    i,
                    n.width,
                    n.height
                  )
                : e.renderbufferStorageMultisample(
                    e.RENDERBUFFER,
                    s,
                    i,
                    n.width,
                    n.height
                  );
            } else e.renderbufferStorage(e.RENDERBUFFER, i, n.width, n.height);
            e.framebufferRenderbuffer(
              e.FRAMEBUFFER,
              e.DEPTH_ATTACHMENT,
              e.RENDERBUFFER,
              t
            );
          } else if (n.depthBuffer && n.stencilBuffer) {
            var l = H(n);
            r && !1 === V(n)
              ? e.renderbufferStorageMultisample(
                  e.RENDERBUFFER,
                  l,
                  e.DEPTH24_STENCIL8,
                  n.width,
                  n.height
                )
              : V(n)
              ? m.renderbufferStorageMultisampleEXT(
                  e.RENDERBUFFER,
                  l,
                  e.DEPTH24_STENCIL8,
                  n.width,
                  n.height
                )
              : e.renderbufferStorage(
                  e.RENDERBUFFER,
                  e.DEPTH_STENCIL,
                  n.width,
                  n.height
                ),
              e.framebufferRenderbuffer(
                e.FRAMEBUFFER,
                e.DEPTH_STENCIL_ATTACHMENT,
                e.RENDERBUFFER,
                t
              );
          } else
            for (
              var u =
                  !0 === n.isWebGLMultipleRenderTargets
                    ? n.texture
                    : [n.texture],
                c = 0;
              c < u.length;
              c++
            ) {
              var d = u[c],
                f = a.convert(d.format, d.colorSpace),
                h = a.convert(d.type),
                p = k(d.internalFormat, f, h, d.colorSpace),
                v = H(n);
              r && !1 === V(n)
                ? e.renderbufferStorageMultisample(
                    e.RENDERBUFFER,
                    v,
                    p,
                    n.width,
                    n.height
                  )
                : V(n)
                ? m.renderbufferStorageMultisampleEXT(
                    e.RENDERBUFFER,
                    v,
                    p,
                    n.width,
                    n.height
                  )
                : e.renderbufferStorage(e.RENDERBUFFER, p, n.width, n.height);
            }
          e.bindRenderbuffer(e.RENDERBUFFER, null);
        }
        function Z(t) {
          var i = r.get(t),
            a = !0 === t.isWebGLCubeRenderTarget;
          if (t.depthTexture && !i.__autoAllocateDepthBuffer) {
            if (a)
              throw new Error(
                "target.depthTexture not supported in Cube render targets"
              );
            !(function (t, i) {
              if (i && i.isWebGLCubeRenderTarget)
                throw new Error(
                  "Depth Texture with cube render targets is not supported"
                );
              if (
                (n.bindFramebuffer(e.FRAMEBUFFER, t),
                !i.depthTexture || !i.depthTexture.isDepthTexture)
              )
                throw new Error(
                  "renderTarget.depthTexture must be an instance of THREE.DepthTexture"
                );
              (r.get(i.depthTexture).__webglTexture &&
                i.depthTexture.image.width === i.width &&
                i.depthTexture.image.height === i.height) ||
                ((i.depthTexture.image.width = i.width),
                (i.depthTexture.image.height = i.height),
                (i.depthTexture.needsUpdate = !0)),
                I(i.depthTexture, 0);
              var a = r.get(i.depthTexture).__webglTexture,
                o = H(i);
              if (i.depthTexture.format === pt)
                V(i)
                  ? m.framebufferTexture2DMultisampleEXT(
                      e.FRAMEBUFFER,
                      e.DEPTH_ATTACHMENT,
                      e.TEXTURE_2D,
                      a,
                      0,
                      o
                    )
                  : e.framebufferTexture2D(
                      e.FRAMEBUFFER,
                      e.DEPTH_ATTACHMENT,
                      e.TEXTURE_2D,
                      a,
                      0
                    );
              else {
                if (i.depthTexture.format !== vt)
                  throw new Error("Unknown depthTexture format");
                V(i)
                  ? m.framebufferTexture2DMultisampleEXT(
                      e.FRAMEBUFFER,
                      e.DEPTH_STENCIL_ATTACHMENT,
                      e.TEXTURE_2D,
                      a,
                      0,
                      o
                    )
                  : e.framebufferTexture2D(
                      e.FRAMEBUFFER,
                      e.DEPTH_STENCIL_ATTACHMENT,
                      e.TEXTURE_2D,
                      a,
                      0
                    );
              }
            })(i.__webglFramebuffer, t);
          } else if (a) {
            i.__webglDepthbuffer = [];
            for (var o = 0; o < 6; o++)
              n.bindFramebuffer(e.FRAMEBUFFER, i.__webglFramebuffer[o]),
                (i.__webglDepthbuffer[o] = e.createRenderbuffer()),
                B(i.__webglDepthbuffer[o], t, !1);
          } else
            n.bindFramebuffer(e.FRAMEBUFFER, i.__webglFramebuffer),
              (i.__webglDepthbuffer = e.createRenderbuffer()),
              B(i.__webglDepthbuffer, t, !1);
          n.bindFramebuffer(e.FRAMEBUFFER, null);
        }
        function H(e) {
          return Math.min(v, e.samples);
        }
        function V(e) {
          var n = r.get(e);
          return (
            d &&
            e.samples > 0 &&
            !0 === t.has("WEBGL_multisampled_render_to_texture") &&
            !1 !== n.__useRenderToTexture
          );
        }
        function G(e, n) {
          var r = e.colorSpace,
            i = e.format,
            a = e.type;
          return (
            !0 === e.isCompressedTexture ||
              e.format === Yn ||
              (r !== _n &&
                r !== yn &&
                (r === bn
                  ? !1 === d
                    ? !0 === t.has("EXT_sRGB") && i === dt
                      ? ((e.format = Yn),
                        (e.minFilter = qe),
                        (e.generateMipmaps = !1))
                      : (n = Ar.sRGBToLinear(n))
                    : (i === dt && a === Qe) ||
                      console.warn(
                        "THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."
                      )
                  : console.error(
                      "THREE.WebGLTextures: Unsupported texture color space:",
                      r
                    ))),
            n
          );
        }
        (this.allocateTextureUnit = function () {
          var e = L;
          return (
            e >= f &&
              console.warn(
                "THREE.WebGLTextures: Trying to use " +
                  e +
                  " texture units while this GPU supports only " +
                  f
              ),
            (L += 1),
            e
          );
        }),
          (this.resetTextureUnits = function () {
            L = 0;
          }),
          (this.setTexture2D = I),
          (this.setTexture2DArray = function (t, i) {
            var a = r.get(t);
            t.version > 0 && a.__version !== t.version
              ? z(a, t, i)
              : n.bindTexture(
                  e.TEXTURE_2D_ARRAY,
                  a.__webglTexture,
                  e.TEXTURE0 + i
                );
          }),
          (this.setTexture3D = function (t, i) {
            var a = r.get(t);
            t.version > 0 && a.__version !== t.version
              ? z(a, t, i)
              : n.bindTexture(e.TEXTURE_3D, a.__webglTexture, e.TEXTURE0 + i);
          }),
          (this.setTextureCube = function (t, i) {
            var o = r.get(t);
            t.version > 0 && o.__version !== t.version
              ? (function (t, i, o) {
                  if (6 !== i.image.length) return;
                  var s = U(t, i),
                    l = i.source;
                  n.bindTexture(
                    e.TEXTURE_CUBE_MAP,
                    t.__webglTexture,
                    e.TEXTURE0 + o
                  );
                  var u = r.get(l);
                  if (l.version !== u.__version || !0 === s) {
                    n.activeTexture(e.TEXTURE0 + o),
                      e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, i.flipY),
                      e.pixelStorei(
                        e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
                        i.premultiplyAlpha
                      ),
                      e.pixelStorei(e.UNPACK_ALIGNMENT, i.unpackAlignment),
                      e.pixelStorei(
                        e.UNPACK_COLORSPACE_CONVERSION_WEBGL,
                        e.NONE
                      );
                    for (
                      var c =
                          i.isCompressedTexture ||
                          i.image[0].isCompressedTexture,
                        f = i.image[0] && i.image[0].isDataTexture,
                        p = [],
                        v = 0;
                      v < 6;
                      v++
                    )
                      (p[v] =
                        c || f
                          ? f
                            ? i.image[v].image
                            : i.image[v]
                          : S(i.image[v], !1, !0, h)),
                        (p[v] = G(i, p[v]));
                    var m,
                      g = p[0],
                      y = w(g) || d,
                      b = a.convert(i.format, i.colorSpace),
                      _ = a.convert(i.type),
                      x = k(i.internalFormat, b, _, i.colorSpace),
                      A = d && !0 !== i.isVideoTexture,
                      C = void 0 === u.__version || !0 === s,
                      P = T(i, g, y);
                    if ((D(e.TEXTURE_CUBE_MAP, i, y), c)) {
                      A &&
                        C &&
                        n.texStorage2D(
                          e.TEXTURE_CUBE_MAP,
                          P,
                          x,
                          g.width,
                          g.height
                        );
                      for (var R = 0; R < 6; R++) {
                        m = p[R].mipmaps;
                        for (var L = 0; L < m.length; L++) {
                          var I = m[L];
                          i.format !== dt
                            ? null !== b
                              ? A
                                ? n.compressedTexSubImage2D(
                                    e.TEXTURE_CUBE_MAP_POSITIVE_X + R,
                                    L,
                                    0,
                                    0,
                                    I.width,
                                    I.height,
                                    b,
                                    I.data
                                  )
                                : n.compressedTexImage2D(
                                    e.TEXTURE_CUBE_MAP_POSITIVE_X + R,
                                    L,
                                    x,
                                    I.width,
                                    I.height,
                                    0,
                                    I.data
                                  )
                              : console.warn(
                                  "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"
                                )
                            : A
                            ? n.texSubImage2D(
                                e.TEXTURE_CUBE_MAP_POSITIVE_X + R,
                                L,
                                0,
                                0,
                                I.width,
                                I.height,
                                b,
                                _,
                                I.data
                              )
                            : n.texImage2D(
                                e.TEXTURE_CUBE_MAP_POSITIVE_X + R,
                                L,
                                x,
                                I.width,
                                I.height,
                                0,
                                b,
                                _,
                                I.data
                              );
                        }
                      }
                    } else {
                      (m = i.mipmaps),
                        A &&
                          C &&
                          (m.length > 0 && P++,
                          n.texStorage2D(
                            e.TEXTURE_CUBE_MAP,
                            P,
                            x,
                            p[0].width,
                            p[0].height
                          ));
                      for (var N = 0; N < 6; N++)
                        if (f) {
                          A
                            ? n.texSubImage2D(
                                e.TEXTURE_CUBE_MAP_POSITIVE_X + N,
                                0,
                                0,
                                0,
                                p[N].width,
                                p[N].height,
                                b,
                                _,
                                p[N].data
                              )
                            : n.texImage2D(
                                e.TEXTURE_CUBE_MAP_POSITIVE_X + N,
                                0,
                                x,
                                p[N].width,
                                p[N].height,
                                0,
                                b,
                                _,
                                p[N].data
                              );
                          for (var O = 0; O < m.length; O++) {
                            var z = m[O].image[N].image;
                            A
                              ? n.texSubImage2D(
                                  e.TEXTURE_CUBE_MAP_POSITIVE_X + N,
                                  O + 1,
                                  0,
                                  0,
                                  z.width,
                                  z.height,
                                  b,
                                  _,
                                  z.data
                                )
                              : n.texImage2D(
                                  e.TEXTURE_CUBE_MAP_POSITIVE_X + N,
                                  O + 1,
                                  x,
                                  z.width,
                                  z.height,
                                  0,
                                  b,
                                  _,
                                  z.data
                                );
                          }
                        } else {
                          A
                            ? n.texSubImage2D(
                                e.TEXTURE_CUBE_MAP_POSITIVE_X + N,
                                0,
                                0,
                                0,
                                b,
                                _,
                                p[N]
                              )
                            : n.texImage2D(
                                e.TEXTURE_CUBE_MAP_POSITIVE_X + N,
                                0,
                                x,
                                b,
                                _,
                                p[N]
                              );
                          for (var F = 0; F < m.length; F++) {
                            var B = m[F];
                            A
                              ? n.texSubImage2D(
                                  e.TEXTURE_CUBE_MAP_POSITIVE_X + N,
                                  F + 1,
                                  0,
                                  0,
                                  b,
                                  _,
                                  B.image[N]
                                )
                              : n.texImage2D(
                                  e.TEXTURE_CUBE_MAP_POSITIVE_X + N,
                                  F + 1,
                                  x,
                                  b,
                                  _,
                                  B.image[N]
                                );
                          }
                        }
                    }
                    M(i, y) && E(e.TEXTURE_CUBE_MAP),
                      (u.__version = l.version),
                      i.onUpdate && i.onUpdate(i);
                  }
                  t.__version = i.version;
                })(o, t, i)
              : n.bindTexture(
                  e.TEXTURE_CUBE_MAP,
                  o.__webglTexture,
                  e.TEXTURE0 + i
                );
          }),
          (this.rebindTextures = function (t, n, i) {
            var a = r.get(t);
            void 0 !== n &&
              F(
                a.__webglFramebuffer,
                t,
                t.texture,
                e.COLOR_ATTACHMENT0,
                e.TEXTURE_2D
              ),
              void 0 !== i && Z(t);
          }),
          (this.setupRenderTarget = function (t) {
            var s = t.texture,
              l = r.get(t),
              u = r.get(s);
            t.addEventListener("dispose", P),
              !0 !== t.isWebGLMultipleRenderTargets &&
                (void 0 === u.__webglTexture &&
                  (u.__webglTexture = e.createTexture()),
                (u.__version = s.version),
                o.memory.textures++);
            var c = !0 === t.isWebGLCubeRenderTarget,
              f = !0 === t.isWebGLMultipleRenderTargets,
              h = w(t) || d;
            if (c) {
              l.__webglFramebuffer = [];
              for (var p = 0; p < 6; p++)
                l.__webglFramebuffer[p] = e.createFramebuffer();
            } else {
              if (((l.__webglFramebuffer = e.createFramebuffer()), f))
                if (i.drawBuffers)
                  for (var v = t.texture, m = 0, g = v.length; m < g; m++) {
                    var y = r.get(v[m]);
                    void 0 === y.__webglTexture &&
                      ((y.__webglTexture = e.createTexture()),
                      o.memory.textures++);
                  }
                else
                  console.warn(
                    "THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension."
                  );
              if (d && t.samples > 0 && !1 === V(t)) {
                var b = f ? s : [s];
                (l.__webglMultisampledFramebuffer = e.createFramebuffer()),
                  (l.__webglColorRenderbuffer = []),
                  n.bindFramebuffer(
                    e.FRAMEBUFFER,
                    l.__webglMultisampledFramebuffer
                  );
                for (var _ = 0; _ < b.length; _++) {
                  var x = b[_];
                  (l.__webglColorRenderbuffer[_] = e.createRenderbuffer()),
                    e.bindRenderbuffer(
                      e.RENDERBUFFER,
                      l.__webglColorRenderbuffer[_]
                    );
                  var S = a.convert(x.format, x.colorSpace),
                    T = a.convert(x.type),
                    A = k(
                      x.internalFormat,
                      S,
                      T,
                      x.colorSpace,
                      !0 === t.isXRRenderTarget
                    ),
                    C = H(t);
                  e.renderbufferStorageMultisample(
                    e.RENDERBUFFER,
                    C,
                    A,
                    t.width,
                    t.height
                  ),
                    e.framebufferRenderbuffer(
                      e.FRAMEBUFFER,
                      e.COLOR_ATTACHMENT0 + _,
                      e.RENDERBUFFER,
                      l.__webglColorRenderbuffer[_]
                    );
                }
                e.bindRenderbuffer(e.RENDERBUFFER, null),
                  t.depthBuffer &&
                    ((l.__webglDepthRenderbuffer = e.createRenderbuffer()),
                    B(l.__webglDepthRenderbuffer, t, !0)),
                  n.bindFramebuffer(e.FRAMEBUFFER, null);
              }
            }
            if (c) {
              n.bindTexture(e.TEXTURE_CUBE_MAP, u.__webglTexture),
                D(e.TEXTURE_CUBE_MAP, s, h);
              for (var R = 0; R < 6; R++)
                F(
                  l.__webglFramebuffer[R],
                  t,
                  s,
                  e.COLOR_ATTACHMENT0,
                  e.TEXTURE_CUBE_MAP_POSITIVE_X + R
                );
              M(s, h) && E(e.TEXTURE_CUBE_MAP), n.unbindTexture();
            } else if (f) {
              for (var L = t.texture, I = 0, N = L.length; I < N; I++) {
                var O = L[I],
                  U = r.get(O);
                n.bindTexture(e.TEXTURE_2D, U.__webglTexture),
                  D(e.TEXTURE_2D, O, h),
                  F(
                    l.__webglFramebuffer,
                    t,
                    O,
                    e.COLOR_ATTACHMENT0 + I,
                    e.TEXTURE_2D
                  ),
                  M(O, h) && E(e.TEXTURE_2D);
              }
              n.unbindTexture();
            } else {
              var z = e.TEXTURE_2D;
              (t.isWebGL3DRenderTarget || t.isWebGLArrayRenderTarget) &&
                (d
                  ? (z = t.isWebGL3DRenderTarget
                      ? e.TEXTURE_3D
                      : e.TEXTURE_2D_ARRAY)
                  : console.error(
                      "THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2."
                    )),
                n.bindTexture(z, u.__webglTexture),
                D(z, s, h),
                F(l.__webglFramebuffer, t, s, e.COLOR_ATTACHMENT0, z),
                M(s, h) && E(z),
                n.unbindTexture();
            }
            t.depthBuffer && Z(t);
          }),
          (this.updateRenderTargetMipmap = function (t) {
            for (
              var i = w(t) || d,
                a =
                  !0 === t.isWebGLMultipleRenderTargets
                    ? t.texture
                    : [t.texture],
                o = 0,
                s = a.length;
              o < s;
              o++
            ) {
              var l = a[o];
              if (M(l, i)) {
                var u = t.isWebGLCubeRenderTarget
                    ? e.TEXTURE_CUBE_MAP
                    : e.TEXTURE_2D,
                  c = r.get(l).__webglTexture;
                n.bindTexture(u, c), E(u), n.unbindTexture();
              }
            }
          }),
          (this.updateMultisampleRenderTarget = function (t) {
            if (d && t.samples > 0 && !1 === V(t)) {
              var i = t.isWebGLMultipleRenderTargets ? t.texture : [t.texture],
                a = t.width,
                o = t.height,
                s = e.COLOR_BUFFER_BIT,
                l = [],
                u = t.stencilBuffer
                  ? e.DEPTH_STENCIL_ATTACHMENT
                  : e.DEPTH_ATTACHMENT,
                c = r.get(t),
                f = !0 === t.isWebGLMultipleRenderTargets;
              if (f)
                for (var h = 0; h < i.length; h++)
                  n.bindFramebuffer(
                    e.FRAMEBUFFER,
                    c.__webglMultisampledFramebuffer
                  ),
                    e.framebufferRenderbuffer(
                      e.FRAMEBUFFER,
                      e.COLOR_ATTACHMENT0 + h,
                      e.RENDERBUFFER,
                      null
                    ),
                    n.bindFramebuffer(e.FRAMEBUFFER, c.__webglFramebuffer),
                    e.framebufferTexture2D(
                      e.DRAW_FRAMEBUFFER,
                      e.COLOR_ATTACHMENT0 + h,
                      e.TEXTURE_2D,
                      null,
                      0
                    );
              n.bindFramebuffer(
                e.READ_FRAMEBUFFER,
                c.__webglMultisampledFramebuffer
              ),
                n.bindFramebuffer(e.DRAW_FRAMEBUFFER, c.__webglFramebuffer);
              for (var p = 0; p < i.length; p++) {
                l.push(e.COLOR_ATTACHMENT0 + p), t.depthBuffer && l.push(u);
                var v =
                  void 0 !== c.__ignoreDepthValues && c.__ignoreDepthValues;
                if (
                  (!1 === v &&
                    (t.depthBuffer && (s |= e.DEPTH_BUFFER_BIT),
                    t.stencilBuffer && (s |= e.STENCIL_BUFFER_BIT)),
                  f &&
                    e.framebufferRenderbuffer(
                      e.READ_FRAMEBUFFER,
                      e.COLOR_ATTACHMENT0,
                      e.RENDERBUFFER,
                      c.__webglColorRenderbuffer[p]
                    ),
                  !0 === v &&
                    (e.invalidateFramebuffer(e.READ_FRAMEBUFFER, [u]),
                    e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER, [u])),
                  f)
                ) {
                  var m = r.get(i[p]).__webglTexture;
                  e.framebufferTexture2D(
                    e.DRAW_FRAMEBUFFER,
                    e.COLOR_ATTACHMENT0,
                    e.TEXTURE_2D,
                    m,
                    0
                  );
                }
                e.blitFramebuffer(0, 0, a, o, 0, 0, a, o, s, e.NEAREST),
                  g && e.invalidateFramebuffer(e.READ_FRAMEBUFFER, l);
              }
              if (
                (n.bindFramebuffer(e.READ_FRAMEBUFFER, null),
                n.bindFramebuffer(e.DRAW_FRAMEBUFFER, null),
                f)
              )
                for (var y = 0; y < i.length; y++) {
                  n.bindFramebuffer(
                    e.FRAMEBUFFER,
                    c.__webglMultisampledFramebuffer
                  ),
                    e.framebufferRenderbuffer(
                      e.FRAMEBUFFER,
                      e.COLOR_ATTACHMENT0 + y,
                      e.RENDERBUFFER,
                      c.__webglColorRenderbuffer[y]
                    );
                  var b = r.get(i[y]).__webglTexture;
                  n.bindFramebuffer(e.FRAMEBUFFER, c.__webglFramebuffer),
                    e.framebufferTexture2D(
                      e.DRAW_FRAMEBUFFER,
                      e.COLOR_ATTACHMENT0 + y,
                      e.TEXTURE_2D,
                      b,
                      0
                    );
                }
              n.bindFramebuffer(
                e.DRAW_FRAMEBUFFER,
                c.__webglMultisampledFramebuffer
              );
            }
          }),
          (this.setupDepthRenderbuffer = Z),
          (this.setupFrameBufferTexture = F),
          (this.useMultisampledRTT = V);
      }
      function Vl(e, t, n) {
        var r = n.isWebGL2;
        return {
          convert: function (n) {
            var i,
              a =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : yn;
            if (n === Qe) return e.UNSIGNED_BYTE;
            if (n === st) return e.UNSIGNED_SHORT_4_4_4_4;
            if (n === lt) return e.UNSIGNED_SHORT_5_5_5_1;
            if (n === et) return e.BYTE;
            if (n === tt) return e.SHORT;
            if (n === nt) return e.UNSIGNED_SHORT;
            if (n === rt) return e.INT;
            if (n === it) return e.UNSIGNED_INT;
            if (n === at) return e.FLOAT;
            if (n === ot)
              return r
                ? e.HALF_FLOAT
                : null !== (i = t.get("OES_texture_half_float"))
                ? i.HALF_FLOAT_OES
                : null;
            if (n === ct) return e.ALPHA;
            if (n === dt) return e.RGBA;
            if (n === ft) return e.LUMINANCE;
            if (n === ht) return e.LUMINANCE_ALPHA;
            if (n === pt) return e.DEPTH_COMPONENT;
            if (n === vt) return e.DEPTH_STENCIL;
            if (n === Yn)
              return null !== (i = t.get("EXT_sRGB")) ? i.SRGB_ALPHA_EXT : null;
            if (n === mt) return e.RED;
            if (n === gt) return e.RED_INTEGER;
            if (n === yt) return e.RG;
            if (n === bt) return e.RG_INTEGER;
            if (n === _t) return e.RGBA_INTEGER;
            if (n === xt || n === St || n === wt || n === Mt)
              if (a === bn) {
                if (null === (i = t.get("WEBGL_compressed_texture_s3tc_srgb")))
                  return null;
                if (n === xt) return i.COMPRESSED_SRGB_S3TC_DXT1_EXT;
                if (n === St) return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;
                if (n === wt) return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;
                if (n === Mt) return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;
              } else {
                if (null === (i = t.get("WEBGL_compressed_texture_s3tc")))
                  return null;
                if (n === xt) return i.COMPRESSED_RGB_S3TC_DXT1_EXT;
                if (n === St) return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                if (n === wt) return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                if (n === Mt) return i.COMPRESSED_RGBA_S3TC_DXT5_EXT;
              }
            if (n === Et || n === kt || n === Tt || n === At) {
              if (null === (i = t.get("WEBGL_compressed_texture_pvrtc")))
                return null;
              if (n === Et) return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
              if (n === kt) return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
              if (n === Tt) return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
              if (n === At) return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
            }
            if (n === Ct)
              return null !== (i = t.get("WEBGL_compressed_texture_etc1"))
                ? i.COMPRESSED_RGB_ETC1_WEBGL
                : null;
            if (n === Pt || n === Rt) {
              if (null === (i = t.get("WEBGL_compressed_texture_etc")))
                return null;
              if (n === Pt)
                return a === bn
                  ? i.COMPRESSED_SRGB8_ETC2
                  : i.COMPRESSED_RGB8_ETC2;
              if (n === Rt)
                return a === bn
                  ? i.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
                  : i.COMPRESSED_RGBA8_ETC2_EAC;
            }
            if (
              n === Lt ||
              n === It ||
              n === Nt ||
              n === Ot ||
              n === Dt ||
              n === Ut ||
              n === zt ||
              n === Ft ||
              n === Bt ||
              n === Zt ||
              n === Ht ||
              n === Vt ||
              n === Gt ||
              n === Wt
            ) {
              if (null === (i = t.get("WEBGL_compressed_texture_astc")))
                return null;
              if (n === Lt)
                return a === bn
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR
                  : i.COMPRESSED_RGBA_ASTC_4x4_KHR;
              if (n === It)
                return a === bn
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR
                  : i.COMPRESSED_RGBA_ASTC_5x4_KHR;
              if (n === Nt)
                return a === bn
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR
                  : i.COMPRESSED_RGBA_ASTC_5x5_KHR;
              if (n === Ot)
                return a === bn
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR
                  : i.COMPRESSED_RGBA_ASTC_6x5_KHR;
              if (n === Dt)
                return a === bn
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR
                  : i.COMPRESSED_RGBA_ASTC_6x6_KHR;
              if (n === Ut)
                return a === bn
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR
                  : i.COMPRESSED_RGBA_ASTC_8x5_KHR;
              if (n === zt)
                return a === bn
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR
                  : i.COMPRESSED_RGBA_ASTC_8x6_KHR;
              if (n === Ft)
                return a === bn
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR
                  : i.COMPRESSED_RGBA_ASTC_8x8_KHR;
              if (n === Bt)
                return a === bn
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR
                  : i.COMPRESSED_RGBA_ASTC_10x5_KHR;
              if (n === Zt)
                return a === bn
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR
                  : i.COMPRESSED_RGBA_ASTC_10x6_KHR;
              if (n === Ht)
                return a === bn
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR
                  : i.COMPRESSED_RGBA_ASTC_10x8_KHR;
              if (n === Vt)
                return a === bn
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR
                  : i.COMPRESSED_RGBA_ASTC_10x10_KHR;
              if (n === Gt)
                return a === bn
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR
                  : i.COMPRESSED_RGBA_ASTC_12x10_KHR;
              if (n === Wt)
                return a === bn
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR
                  : i.COMPRESSED_RGBA_ASTC_12x12_KHR;
            }
            if (n === jt) {
              if (null === (i = t.get("EXT_texture_compression_bptc")))
                return null;
              if (n === jt)
                return a === bn
                  ? i.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT
                  : i.COMPRESSED_RGBA_BPTC_UNORM_EXT;
            }
            if (n === Xt || n === qt || n === Yt || n === Kt) {
              if (null === (i = t.get("EXT_texture_compression_rgtc")))
                return null;
              if (n === jt) return i.COMPRESSED_RED_RGTC1_EXT;
              if (n === qt) return i.COMPRESSED_SIGNED_RED_RGTC1_EXT;
              if (n === Yt) return i.COMPRESSED_RED_GREEN_RGTC2_EXT;
              if (n === Kt) return i.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;
            }
            return n === ut
              ? r
                ? e.UNSIGNED_INT_24_8
                : null !== (i = t.get("WEBGL_depth_texture"))
                ? i.UNSIGNED_INT_24_8_WEBGL
                : null
              : void 0 !== e[n]
              ? e[n]
              : null;
          },
        };
      }
      var Gl = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : [];
            return (
              p(this, n),
              ((e = t.call(this)).isArrayCamera = !0),
              (e.cameras = r),
              e
            );
          }
          return g(n);
        })(lo),
        Wl = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e;
            return (
              p(this, n),
              ((e = t.call(this)).isGroup = !0),
              (e.type = "Group"),
              e
            );
          }
          return g(n);
        })(Hi),
        jl = { type: "move" },
        Xl = (function () {
          function e() {
            p(this, e),
              (this._targetRay = null),
              (this._grip = null),
              (this._hand = null);
          }
          return (
            g(e, [
              {
                key: "getHandSpace",
                value: function () {
                  return (
                    null === this._hand &&
                      ((this._hand = new Wl()),
                      (this._hand.matrixAutoUpdate = !1),
                      (this._hand.visible = !1),
                      (this._hand.joints = {}),
                      (this._hand.inputState = { pinching: !1 })),
                    this._hand
                  );
                },
              },
              {
                key: "getTargetRaySpace",
                value: function () {
                  return (
                    null === this._targetRay &&
                      ((this._targetRay = new Wl()),
                      (this._targetRay.matrixAutoUpdate = !1),
                      (this._targetRay.visible = !1),
                      (this._targetRay.hasLinearVelocity = !1),
                      (this._targetRay.linearVelocity = new Zr()),
                      (this._targetRay.hasAngularVelocity = !1),
                      (this._targetRay.angularVelocity = new Zr())),
                    this._targetRay
                  );
                },
              },
              {
                key: "getGripSpace",
                value: function () {
                  return (
                    null === this._grip &&
                      ((this._grip = new Wl()),
                      (this._grip.matrixAutoUpdate = !1),
                      (this._grip.visible = !1),
                      (this._grip.hasLinearVelocity = !1),
                      (this._grip.linearVelocity = new Zr()),
                      (this._grip.hasAngularVelocity = !1),
                      (this._grip.angularVelocity = new Zr())),
                    this._grip
                  );
                },
              },
              {
                key: "dispatchEvent",
                value: function (e) {
                  return (
                    null !== this._targetRay &&
                      this._targetRay.dispatchEvent(e),
                    null !== this._grip && this._grip.dispatchEvent(e),
                    null !== this._hand && this._hand.dispatchEvent(e),
                    this
                  );
                },
              },
              {
                key: "connect",
                value: function (e) {
                  if (e && e.hand) {
                    var t = this._hand;
                    if (t) {
                      var n,
                        r = T(e.hand.values());
                      try {
                        for (r.s(); !(n = r.n()).done; ) {
                          var i = n.value;
                          this._getHandJoint(t, i);
                        }
                      } catch (a) {
                        r.e(a);
                      } finally {
                        r.f();
                      }
                    }
                  }
                  return (
                    this.dispatchEvent({ type: "connected", data: e }), this
                  );
                },
              },
              {
                key: "disconnect",
                value: function (e) {
                  return (
                    this.dispatchEvent({ type: "disconnected", data: e }),
                    null !== this._targetRay && (this._targetRay.visible = !1),
                    null !== this._grip && (this._grip.visible = !1),
                    null !== this._hand && (this._hand.visible = !1),
                    this
                  );
                },
              },
              {
                key: "update",
                value: function (e, t, n) {
                  var r = null,
                    i = null,
                    a = null,
                    o = this._targetRay,
                    s = this._grip,
                    l = this._hand;
                  if (e && "visible-blurred" !== t.session.visibilityState) {
                    if (l && e.hand) {
                      a = !0;
                      var u,
                        c = T(e.hand.values());
                      try {
                        for (c.s(); !(u = c.n()).done; ) {
                          var d = u.value,
                            f = t.getJointPose(d, n),
                            h = this._getHandJoint(l, d);
                          null !== f &&
                            (h.matrix.fromArray(f.transform.matrix),
                            h.matrix.decompose(h.position, h.rotation, h.scale),
                            (h.matrixWorldNeedsUpdate = !0),
                            (h.jointRadius = f.radius)),
                            (h.visible = null !== f);
                        }
                      } catch (g) {
                        c.e(g);
                      } finally {
                        c.f();
                      }
                      var p = l.joints["index-finger-tip"],
                        v = l.joints["thumb-tip"],
                        m = p.position.distanceTo(v.position);
                      l.inputState.pinching && m > 0.025
                        ? ((l.inputState.pinching = !1),
                          this.dispatchEvent({
                            type: "pinchend",
                            handedness: e.handedness,
                            target: this,
                          }))
                        : !l.inputState.pinching &&
                          m <= 0.015 &&
                          ((l.inputState.pinching = !0),
                          this.dispatchEvent({
                            type: "pinchstart",
                            handedness: e.handedness,
                            target: this,
                          }));
                    } else
                      null !== s &&
                        e.gripSpace &&
                        null !== (i = t.getPose(e.gripSpace, n)) &&
                        (s.matrix.fromArray(i.transform.matrix),
                        s.matrix.decompose(s.position, s.rotation, s.scale),
                        (s.matrixWorldNeedsUpdate = !0),
                        i.linearVelocity
                          ? ((s.hasLinearVelocity = !0),
                            s.linearVelocity.copy(i.linearVelocity))
                          : (s.hasLinearVelocity = !1),
                        i.angularVelocity
                          ? ((s.hasAngularVelocity = !0),
                            s.angularVelocity.copy(i.angularVelocity))
                          : (s.hasAngularVelocity = !1));
                    null !== o &&
                      (null === (r = t.getPose(e.targetRaySpace, n)) &&
                        null !== i &&
                        (r = i),
                      null !== r &&
                        (o.matrix.fromArray(r.transform.matrix),
                        o.matrix.decompose(o.position, o.rotation, o.scale),
                        (o.matrixWorldNeedsUpdate = !0),
                        r.linearVelocity
                          ? ((o.hasLinearVelocity = !0),
                            o.linearVelocity.copy(r.linearVelocity))
                          : (o.hasLinearVelocity = !1),
                        r.angularVelocity
                          ? ((o.hasAngularVelocity = !0),
                            o.angularVelocity.copy(r.angularVelocity))
                          : (o.hasAngularVelocity = !1),
                        this.dispatchEvent(jl)));
                  }
                  return (
                    null !== o && (o.visible = null !== r),
                    null !== s && (s.visible = null !== i),
                    null !== l && (l.visible = null !== a),
                    this
                  );
                },
              },
              {
                key: "_getHandJoint",
                value: function (e, t) {
                  if (void 0 === e.joints[t.jointName]) {
                    var n = new Wl();
                    (n.matrixAutoUpdate = !1),
                      (n.visible = !1),
                      (e.joints[t.jointName] = n),
                      e.add(n);
                  }
                  return e.joints[t.jointName];
                },
              },
            ]),
            e
          );
        })(),
        ql = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i, a, o, s, l, u, c, d) {
            var f;
            if ((p(this, n), (d = void 0 !== d ? d : pt) !== pt && d !== vt))
              throw new Error(
                "DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat"
              );
            return (
              void 0 === i && d === pt && (i = it),
              void 0 === i && d === vt && (i = ut),
              ((f = t.call(this, null, a, o, s, l, u, d, i, c)).isDepthTexture =
                !0),
              (f.image = { width: e, height: r }),
              (f.magFilter = void 0 !== l ? l : Ve),
              (f.minFilter = void 0 !== u ? u : Ve),
              (f.flipY = !1),
              (f.generateMipmaps = !1),
              f
            );
          }
          return g(n);
        })(Lr),
        Yl = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r) {
            var i;
            p(this, n);
            var a = E((i = t.call(this))),
              o = null,
              s = 1,
              l = null,
              u = "local-floor",
              c = 1,
              d = null,
              f = null,
              h = null,
              v = null,
              m = null,
              g = null,
              y = r.getContextAttributes(),
              b = null,
              _ = null,
              x = [],
              S = [],
              w = new Set(),
              M = new Map(),
              k = new lo();
            k.layers.enable(1), (k.viewport = new Ir());
            var A = new lo();
            A.layers.enable(2), (A.viewport = new Ir());
            var C = [k, A],
              P = new Gl();
            P.layers.enable(1), P.layers.enable(2);
            var L = null,
              N = null;
            function O(e) {
              var t = S.indexOf(e.inputSource);
              if (-1 !== t) {
                var n = x[t];
                void 0 !== n &&
                  (n.update(e.inputSource, e.frame, d || l),
                  n.dispatchEvent({ type: e.type, data: e.inputSource }));
              }
            }
            function D() {
              o.removeEventListener("select", O),
                o.removeEventListener("selectstart", O),
                o.removeEventListener("selectend", O),
                o.removeEventListener("squeeze", O),
                o.removeEventListener("squeezestart", O),
                o.removeEventListener("squeezeend", O),
                o.removeEventListener("end", D),
                o.removeEventListener("inputsourceschange", U);
              for (var t = 0; t < x.length; t++) {
                var n = S[t];
                null !== n && ((S[t] = null), x[t].disconnect(n));
              }
              (L = null),
                (N = null),
                e.setRenderTarget(b),
                (m = null),
                (v = null),
                (h = null),
                (o = null),
                (_ = null),
                H.stop(),
                (a.isPresenting = !1),
                a.dispatchEvent({ type: "sessionend" });
            }
            function U(e) {
              for (var t = 0; t < e.removed.length; t++) {
                var n = e.removed[t],
                  r = S.indexOf(n);
                r >= 0 && ((S[r] = null), x[r].disconnect(n));
              }
              for (var i = 0; i < e.added.length; i++) {
                var a = e.added[i],
                  o = S.indexOf(a);
                if (-1 === o) {
                  for (var s = 0; s < x.length; s++) {
                    if (s >= S.length) {
                      S.push(a), (o = s);
                      break;
                    }
                    if (null === S[s]) {
                      (S[s] = a), (o = s);
                      break;
                    }
                  }
                  if (-1 === o) break;
                }
                var l = x[o];
                l && l.connect(a);
              }
            }
            (i.cameraAutoUpdate = !0),
              (i.enabled = !1),
              (i.isPresenting = !1),
              (i.getController = function (e) {
                var t = x[e];
                return (
                  void 0 === t && ((t = new Xl()), (x[e] = t)),
                  t.getTargetRaySpace()
                );
              }),
              (i.getControllerGrip = function (e) {
                var t = x[e];
                return (
                  void 0 === t && ((t = new Xl()), (x[e] = t)), t.getGripSpace()
                );
              }),
              (i.getHand = function (e) {
                var t = x[e];
                return (
                  void 0 === t && ((t = new Xl()), (x[e] = t)), t.getHandSpace()
                );
              }),
              (i.setFramebufferScaleFactor = function (e) {
                (s = e),
                  !0 === a.isPresenting &&
                    console.warn(
                      "THREE.WebXRManager: Cannot change framebuffer scale while presenting."
                    );
              }),
              (i.setReferenceSpaceType = function (e) {
                (u = e),
                  !0 === a.isPresenting &&
                    console.warn(
                      "THREE.WebXRManager: Cannot change reference space type while presenting."
                    );
              }),
              (i.getReferenceSpace = function () {
                return d || l;
              }),
              (i.setReferenceSpace = function (e) {
                d = e;
              }),
              (i.getBaseLayer = function () {
                return null !== v ? v : m;
              }),
              (i.getBinding = function () {
                return h;
              }),
              (i.getFrame = function () {
                return g;
              }),
              (i.getSession = function () {
                return o;
              }),
              (i.setSession = (function () {
                var t = R(
                  I().mark(function t(n) {
                    var i, f, p, g, x;
                    return I().wrap(
                      function (t) {
                        for (;;)
                          switch ((t.prev = t.next)) {
                            case 0:
                              if (null === (o = n)) {
                                t.next = 25;
                                break;
                              }
                              if (
                                ((b = e.getRenderTarget()),
                                o.addEventListener("select", O),
                                o.addEventListener("selectstart", O),
                                o.addEventListener("selectend", O),
                                o.addEventListener("squeeze", O),
                                o.addEventListener("squeezestart", O),
                                o.addEventListener("squeezeend", O),
                                o.addEventListener("end", D),
                                o.addEventListener("inputsourceschange", U),
                                !0 === y.xrCompatible)
                              ) {
                                t.next = 14;
                                break;
                              }
                              return (t.next = 14), r.makeXRCompatible();
                            case 14:
                              return (
                                void 0 === o.renderState.layers ||
                                !1 === e.capabilities.isWebGL2
                                  ? ((i = {
                                      antialias:
                                        void 0 !== o.renderState.layers ||
                                        y.antialias,
                                      alpha: !0,
                                      depth: y.depth,
                                      stencil: y.stencil,
                                      framebufferScaleFactor: s,
                                    }),
                                    (m = new XRWebGLLayer(o, r, i)),
                                    o.updateRenderState({ baseLayer: m }),
                                    (_ = new Nr(
                                      m.framebufferWidth,
                                      m.framebufferHeight,
                                      {
                                        format: dt,
                                        type: Qe,
                                        colorSpace: e.outputColorSpace,
                                        stencilBuffer: y.stencil,
                                      }
                                    )))
                                  : ((f = null),
                                    (p = null),
                                    (g = null),
                                    y.depth &&
                                      ((g = y.stencil
                                        ? r.DEPTH24_STENCIL8
                                        : r.DEPTH_COMPONENT24),
                                      (f = y.stencil ? vt : pt),
                                      (p = y.stencil ? ut : it)),
                                    (x = {
                                      colorFormat: r.RGBA8,
                                      depthFormat: g,
                                      scaleFactor: s,
                                    }),
                                    (h = new XRWebGLBinding(o, r)),
                                    (v = h.createProjectionLayer(x)),
                                    o.updateRenderState({ layers: [v] }),
                                    (_ = new Nr(
                                      v.textureWidth,
                                      v.textureHeight,
                                      {
                                        format: dt,
                                        type: Qe,
                                        depthTexture: new ql(
                                          v.textureWidth,
                                          v.textureHeight,
                                          p,
                                          void 0,
                                          void 0,
                                          void 0,
                                          void 0,
                                          void 0,
                                          void 0,
                                          f
                                        ),
                                        stencilBuffer: y.stencil,
                                        colorSpace: e.outputColorSpace,
                                        samples: y.antialias ? 4 : 0,
                                      }
                                    )),
                                    (e.properties.get(_).__ignoreDepthValues =
                                      v.ignoreDepthValues)),
                                (_.isXRRenderTarget = !0),
                                this.setFoveation(c),
                                (d = null),
                                (t.next = 20),
                                o.requestReferenceSpace(u)
                              );
                            case 20:
                              (l = t.sent),
                                H.setContext(o),
                                H.start(),
                                (a.isPresenting = !0),
                                a.dispatchEvent({ type: "sessionstart" });
                            case 25:
                            case "end":
                              return t.stop();
                          }
                      },
                      t,
                      this
                    );
                  })
                );
                return function (e) {
                  return t.apply(this, arguments);
                };
              })()),
              (i.getEnvironmentBlendMode = function () {
                if (null !== o) return o.environmentBlendMode;
              });
            var z = new Zr(),
              F = new Zr();
            function B(e, t) {
              null === t
                ? e.matrixWorld.copy(e.matrix)
                : e.matrixWorld.multiplyMatrices(t.matrixWorld, e.matrix),
                e.matrixWorldInverse.copy(e.matrixWorld).invert();
            }
            (i.updateCamera = function (e) {
              if (null !== o) {
                (P.near = A.near = k.near = e.near),
                  (P.far = A.far = k.far = e.far),
                  (L === P.near && N === P.far) ||
                    (o.updateRenderState({
                      depthNear: P.near,
                      depthFar: P.far,
                    }),
                    (L = P.near),
                    (N = P.far));
                var t = e.parent,
                  n = P.cameras;
                B(P, t);
                for (var r = 0; r < n.length; r++) B(n[r], t);
                2 === n.length
                  ? (function (e, t, n) {
                      z.setFromMatrixPosition(t.matrixWorld),
                        F.setFromMatrixPosition(n.matrixWorld);
                      var r = z.distanceTo(F),
                        i = t.projectionMatrix.elements,
                        a = n.projectionMatrix.elements,
                        o = i[14] / (i[10] - 1),
                        s = i[14] / (i[10] + 1),
                        l = (i[9] + 1) / i[5],
                        u = (i[9] - 1) / i[5],
                        c = (i[8] - 1) / i[0],
                        d = (a[8] + 1) / a[0],
                        f = o * c,
                        h = o * d,
                        p = r / (-c + d),
                        v = p * -c;
                      t.matrixWorld.decompose(
                        e.position,
                        e.quaternion,
                        e.scale
                      ),
                        e.translateX(v),
                        e.translateZ(p),
                        e.matrixWorld.compose(
                          e.position,
                          e.quaternion,
                          e.scale
                        ),
                        e.matrixWorldInverse.copy(e.matrixWorld).invert();
                      var m = o + p,
                        g = s + p,
                        y = f - v,
                        b = h + (r - v),
                        _ = ((l * s) / g) * m,
                        x = ((u * s) / g) * m;
                      e.projectionMatrix.makePerspective(y, b, _, x, m, g),
                        e.projectionMatrixInverse
                          .copy(e.projectionMatrix)
                          .invert();
                    })(P, k, A)
                  : P.projectionMatrix.copy(k.projectionMatrix),
                  (function (e, t, n) {
                    null === n
                      ? e.matrix.copy(t.matrixWorld)
                      : (e.matrix.copy(n.matrixWorld),
                        e.matrix.invert(),
                        e.matrix.multiply(t.matrixWorld));
                    e.matrix.decompose(e.position, e.quaternion, e.scale),
                      e.updateMatrixWorld(!0);
                    for (var r = e.children, i = 0, a = r.length; i < a; i++)
                      r[i].updateMatrixWorld(!0);
                    e.projectionMatrix.copy(t.projectionMatrix),
                      e.projectionMatrixInverse.copy(t.projectionMatrixInverse),
                      e.isPerspectiveCamera &&
                        ((e.fov =
                          2 *
                          er *
                          Math.atan(1 / e.projectionMatrix.elements[5])),
                        (e.zoom = 1));
                  })(e, P, t);
              }
            }),
              (i.getCamera = function () {
                return P;
              }),
              (i.getFoveation = function () {
                if (null !== v || null !== m) return c;
              }),
              (i.setFoveation = function (e) {
                (c = e),
                  null !== v && (v.fixedFoveation = e),
                  null !== m &&
                    void 0 !== m.fixedFoveation &&
                    (m.fixedFoveation = e);
              }),
              (i.getPlanes = function () {
                return w;
              });
            var Z = null;
            var H = new xo();
            return (
              H.setAnimationLoop(function (t, n) {
                if (((f = n.getViewerPose(d || l)), (g = n), null !== f)) {
                  var r = f.views;
                  null !== m &&
                    (e.setRenderTargetFramebuffer(_, m.framebuffer),
                    e.setRenderTarget(_));
                  var i = !1;
                  r.length !== P.cameras.length &&
                    ((P.cameras.length = 0), (i = !0));
                  for (var o = 0; o < r.length; o++) {
                    var s = r[o],
                      u = null;
                    if (null !== m) u = m.getViewport(s);
                    else {
                      var c = h.getViewSubImage(v, s);
                      (u = c.viewport),
                        0 === o &&
                          (e.setRenderTargetTextures(
                            _,
                            c.colorTexture,
                            v.ignoreDepthValues ? void 0 : c.depthStencilTexture
                          ),
                          e.setRenderTarget(_));
                    }
                    var p = C[o];
                    void 0 === p &&
                      ((p = new lo()).layers.enable(o),
                      (p.viewport = new Ir()),
                      (C[o] = p)),
                      p.matrix.fromArray(s.transform.matrix),
                      p.matrix.decompose(p.position, p.quaternion, p.scale),
                      p.projectionMatrix.fromArray(s.projectionMatrix),
                      p.projectionMatrixInverse
                        .copy(p.projectionMatrix)
                        .invert(),
                      p.viewport.set(u.x, u.y, u.width, u.height),
                      0 === o &&
                        (P.matrix.copy(p.matrix),
                        P.matrix.decompose(P.position, P.quaternion, P.scale)),
                      !0 === i && P.cameras.push(p);
                  }
                }
                for (var y = 0; y < x.length; y++) {
                  var b = S[y],
                    E = x[y];
                  null !== b && void 0 !== E && E.update(b, n, d || l);
                }
                if ((Z && Z(t, n), n.detectedPlanes)) {
                  a.dispatchEvent({
                    type: "planesdetected",
                    data: n.detectedPlanes,
                  });
                  var k,
                    A = null,
                    R = T(w);
                  try {
                    for (R.s(); !(k = R.n()).done; ) {
                      var L = k.value;
                      n.detectedPlanes.has(L) ||
                        (null === A && (A = []), A.push(L));
                    }
                  } catch (B) {
                    R.e(B);
                  } finally {
                    R.f();
                  }
                  if (null !== A) {
                    var I,
                      N = T(A);
                    try {
                      for (N.s(); !(I = N.n()).done; ) {
                        var O = I.value;
                        w.delete(O),
                          M.delete(O),
                          a.dispatchEvent({ type: "planeremoved", data: O });
                      }
                    } catch (B) {
                      N.e(B);
                    } finally {
                      N.f();
                    }
                  }
                  var D,
                    U = T(n.detectedPlanes);
                  try {
                    for (U.s(); !(D = U.n()).done; ) {
                      var z = D.value;
                      if (w.has(z)) {
                        var F = M.get(z);
                        z.lastChangedTime > F &&
                          (M.set(z, z.lastChangedTime),
                          a.dispatchEvent({ type: "planechanged", data: z }));
                      } else
                        w.add(z),
                          M.set(z, n.lastChangedTime),
                          a.dispatchEvent({ type: "planeadded", data: z });
                    }
                  } catch (B) {
                    U.e(B);
                  } finally {
                    U.f();
                  }
                }
                g = null;
              }),
              (i.setAnimationLoop = function (e) {
                Z = e;
              }),
              (i.dispose = function () {}),
              i
            );
          }
          return g(n);
        })(Kn);
      function Kl(e, t) {
        function n(e, t) {
          !0 === e.matrixAutoUpdate && e.updateMatrix(), t.value.copy(e.matrix);
        }
        function r(r, i) {
          (r.opacity.value = i.opacity),
            i.color && r.diffuse.value.copy(i.color),
            i.emissive &&
              r.emissive.value
                .copy(i.emissive)
                .multiplyScalar(i.emissiveIntensity),
            i.map && ((r.map.value = i.map), n(i.map, r.mapTransform)),
            i.alphaMap &&
              ((r.alphaMap.value = i.alphaMap),
              n(i.alphaMap, r.alphaMapTransform)),
            i.bumpMap &&
              ((r.bumpMap.value = i.bumpMap),
              n(i.bumpMap, r.bumpMapTransform),
              (r.bumpScale.value = i.bumpScale),
              i.side === j && (r.bumpScale.value *= -1)),
            i.normalMap &&
              ((r.normalMap.value = i.normalMap),
              n(i.normalMap, r.normalMapTransform),
              r.normalScale.value.copy(i.normalScale),
              i.side === j && r.normalScale.value.negate()),
            i.displacementMap &&
              ((r.displacementMap.value = i.displacementMap),
              n(i.displacementMap, r.displacementMapTransform),
              (r.displacementScale.value = i.displacementScale),
              (r.displacementBias.value = i.displacementBias)),
            i.emissiveMap &&
              ((r.emissiveMap.value = i.emissiveMap),
              n(i.emissiveMap, r.emissiveMapTransform)),
            i.specularMap &&
              ((r.specularMap.value = i.specularMap),
              n(i.specularMap, r.specularMapTransform)),
            i.alphaTest > 0 && (r.alphaTest.value = i.alphaTest);
          var a = t.get(i).envMap;
          if (
            (a &&
              ((r.envMap.value = a),
              (r.flipEnvMap.value =
                a.isCubeTexture && !1 === a.isRenderTargetTexture ? -1 : 1),
              (r.reflectivity.value = i.reflectivity),
              (r.ior.value = i.ior),
              (r.refractionRatio.value = i.refractionRatio)),
            i.lightMap)
          ) {
            r.lightMap.value = i.lightMap;
            var o = !0 === e.useLegacyLights ? Math.PI : 1;
            (r.lightMapIntensity.value = i.lightMapIntensity * o),
              n(i.lightMap, r.lightMapTransform);
          }
          i.aoMap &&
            ((r.aoMap.value = i.aoMap),
            (r.aoMapIntensity.value = i.aoMapIntensity),
            n(i.aoMap, r.aoMapTransform));
        }
        return {
          refreshFogUniforms: function (t, n) {
            n.color.getRGB(t.fogColor.value, io(e)),
              n.isFog
                ? ((t.fogNear.value = n.near), (t.fogFar.value = n.far))
                : n.isFogExp2 && (t.fogDensity.value = n.density);
          },
          refreshMaterialUniforms: function (e, i, a, o, s) {
            i.isMeshBasicMaterial || i.isMeshLambertMaterial
              ? r(e, i)
              : i.isMeshToonMaterial
              ? (r(e, i),
                (function (e, t) {
                  t.gradientMap && (e.gradientMap.value = t.gradientMap);
                })(e, i))
              : i.isMeshPhongMaterial
              ? (r(e, i),
                (function (e, t) {
                  e.specular.value.copy(t.specular),
                    (e.shininess.value = Math.max(t.shininess, 1e-4));
                })(e, i))
              : i.isMeshStandardMaterial
              ? (r(e, i),
                (function (e, r) {
                  (e.metalness.value = r.metalness),
                    r.metalnessMap &&
                      ((e.metalnessMap.value = r.metalnessMap),
                      n(r.metalnessMap, e.metalnessMapTransform));
                  (e.roughness.value = r.roughness),
                    r.roughnessMap &&
                      ((e.roughnessMap.value = r.roughnessMap),
                      n(r.roughnessMap, e.roughnessMapTransform));
                  var i = t.get(r).envMap;
                  i && (e.envMapIntensity.value = r.envMapIntensity);
                })(e, i),
                i.isMeshPhysicalMaterial &&
                  (function (e, t, r) {
                    (e.ior.value = t.ior),
                      t.sheen > 0 &&
                        (e.sheenColor.value
                          .copy(t.sheenColor)
                          .multiplyScalar(t.sheen),
                        (e.sheenRoughness.value = t.sheenRoughness),
                        t.sheenColorMap &&
                          ((e.sheenColorMap.value = t.sheenColorMap),
                          n(t.sheenColorMap, e.sheenColorMapTransform)),
                        t.sheenRoughnessMap &&
                          ((e.sheenRoughnessMap.value = t.sheenRoughnessMap),
                          n(
                            t.sheenRoughnessMap,
                            e.sheenRoughnessMapTransform
                          )));
                    t.clearcoat > 0 &&
                      ((e.clearcoat.value = t.clearcoat),
                      (e.clearcoatRoughness.value = t.clearcoatRoughness),
                      t.clearcoatMap &&
                        ((e.clearcoatMap.value = t.clearcoatMap),
                        n(t.clearcoatMap, e.clearcoatMapTransform)),
                      t.clearcoatRoughnessMap &&
                        ((e.clearcoatRoughnessMap.value =
                          t.clearcoatRoughnessMap),
                        n(
                          t.clearcoatRoughnessMap,
                          e.clearcoatRoughnessMapTransform
                        )),
                      t.clearcoatNormalMap &&
                        ((e.clearcoatNormalMap.value = t.clearcoatNormalMap),
                        n(t.clearcoatNormalMap, e.clearcoatNormalMapTransform),
                        e.clearcoatNormalScale.value.copy(
                          t.clearcoatNormalScale
                        ),
                        t.side === j && e.clearcoatNormalScale.value.negate()));
                    t.iridescence > 0 &&
                      ((e.iridescence.value = t.iridescence),
                      (e.iridescenceIOR.value = t.iridescenceIOR),
                      (e.iridescenceThicknessMinimum.value =
                        t.iridescenceThicknessRange[0]),
                      (e.iridescenceThicknessMaximum.value =
                        t.iridescenceThicknessRange[1]),
                      t.iridescenceMap &&
                        ((e.iridescenceMap.value = t.iridescenceMap),
                        n(t.iridescenceMap, e.iridescenceMapTransform)),
                      t.iridescenceThicknessMap &&
                        ((e.iridescenceThicknessMap.value =
                          t.iridescenceThicknessMap),
                        n(
                          t.iridescenceThicknessMap,
                          e.iridescenceThicknessMapTransform
                        )));
                    t.transmission > 0 &&
                      ((e.transmission.value = t.transmission),
                      (e.transmissionSamplerMap.value = r.texture),
                      e.transmissionSamplerSize.value.set(r.width, r.height),
                      t.transmissionMap &&
                        ((e.transmissionMap.value = t.transmissionMap),
                        n(t.transmissionMap, e.transmissionMapTransform)),
                      (e.thickness.value = t.thickness),
                      t.thicknessMap &&
                        ((e.thicknessMap.value = t.thicknessMap),
                        n(t.thicknessMap, e.thicknessMapTransform)),
                      (e.attenuationDistance.value = t.attenuationDistance),
                      e.attenuationColor.value.copy(t.attenuationColor));
                    (e.specularIntensity.value = t.specularIntensity),
                      e.specularColor.value.copy(t.specularColor),
                      t.specularColorMap &&
                        ((e.specularColorMap.value = t.specularColorMap),
                        n(t.specularColorMap, e.specularColorMapTransform));
                    t.specularIntensityMap &&
                      ((e.specularIntensityMap.value = t.specularIntensityMap),
                      n(
                        t.specularIntensityMap,
                        e.specularIntensityMapTransform
                      ));
                  })(e, i, s))
              : i.isMeshMatcapMaterial
              ? (r(e, i),
                (function (e, t) {
                  t.matcap && (e.matcap.value = t.matcap);
                })(e, i))
              : i.isMeshDepthMaterial
              ? r(e, i)
              : i.isMeshDistanceMaterial
              ? (r(e, i),
                (function (e, n) {
                  var r = t.get(n).light;
                  e.referencePosition.value.setFromMatrixPosition(
                    r.matrixWorld
                  ),
                    (e.nearDistance.value = r.shadow.camera.near),
                    (e.farDistance.value = r.shadow.camera.far);
                })(e, i))
              : i.isMeshNormalMaterial
              ? r(e, i)
              : i.isLineBasicMaterial
              ? ((function (e, t) {
                  e.diffuse.value.copy(t.color),
                    (e.opacity.value = t.opacity),
                    t.map && ((e.map.value = t.map), n(t.map, e.mapTransform));
                })(e, i),
                i.isLineDashedMaterial &&
                  (function (e, t) {
                    (e.dashSize.value = t.dashSize),
                      (e.totalSize.value = t.dashSize + t.gapSize),
                      (e.scale.value = t.scale);
                  })(e, i))
              : i.isPointsMaterial
              ? (function (e, t, r, i) {
                  e.diffuse.value.copy(t.color),
                    (e.opacity.value = t.opacity),
                    (e.size.value = t.size * r),
                    (e.scale.value = 0.5 * i),
                    t.map && ((e.map.value = t.map), n(t.map, e.uvTransform));
                  t.alphaMap && (e.alphaMap.value = t.alphaMap);
                  t.alphaTest > 0 && (e.alphaTest.value = t.alphaTest);
                })(e, i, a, o)
              : i.isSpriteMaterial
              ? (function (e, t) {
                  e.diffuse.value.copy(t.color),
                    (e.opacity.value = t.opacity),
                    (e.rotation.value = t.rotation),
                    t.map && ((e.map.value = t.map), n(t.map, e.mapTransform));
                  t.alphaMap && (e.alphaMap.value = t.alphaMap);
                  t.alphaTest > 0 && (e.alphaTest.value = t.alphaTest);
                })(e, i)
              : i.isShadowMaterial
              ? (e.color.value.copy(i.color), (e.opacity.value = i.opacity))
              : i.isShaderMaterial && (i.uniformsNeedUpdate = !1);
          },
        };
      }
      function $l(e, t, n, r) {
        var i = {},
          a = {},
          o = [],
          s = n.isWebGL2 ? e.getParameter(e.MAX_UNIFORM_BUFFER_BINDINGS) : 0;
        function l(e, t, n) {
          var r = e.value;
          if (void 0 === n[t]) {
            if ("number" === typeof r) n[t] = r;
            else {
              for (
                var i = Array.isArray(r) ? r : [r], a = [], o = 0;
                o < i.length;
                o++
              )
                a.push(i[o].clone());
              n[t] = a;
            }
            return !0;
          }
          if ("number" === typeof r) {
            if (n[t] !== r) return (n[t] = r), !0;
          } else
            for (
              var s = Array.isArray(n[t]) ? n[t] : [n[t]],
                l = Array.isArray(r) ? r : [r],
                u = 0;
              u < s.length;
              u++
            ) {
              var c = s[u];
              if (!1 === c.equals(l[u])) return c.copy(l[u]), !0;
            }
          return !1;
        }
        function u(e) {
          var t = { boundary: 0, storage: 0 };
          return (
            "number" === typeof e
              ? ((t.boundary = 4), (t.storage = 4))
              : e.isVector2
              ? ((t.boundary = 8), (t.storage = 8))
              : e.isVector3 || e.isColor
              ? ((t.boundary = 16), (t.storage = 12))
              : e.isVector4
              ? ((t.boundary = 16), (t.storage = 16))
              : e.isMatrix3
              ? ((t.boundary = 48), (t.storage = 48))
              : e.isMatrix4
              ? ((t.boundary = 64), (t.storage = 64))
              : e.isTexture
              ? console.warn(
                  "THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."
                )
              : console.warn(
                  "THREE.WebGLRenderer: Unsupported uniform value type.",
                  e
                ),
            t
          );
        }
        function c(t) {
          var n = t.target;
          n.removeEventListener("dispose", c);
          var r = o.indexOf(n.__bindingPointIndex);
          o.splice(r, 1),
            e.deleteBuffer(i[n.id]),
            delete i[n.id],
            delete a[n.id];
        }
        return {
          bind: function (e, t) {
            var n = t.program;
            r.uniformBlockBinding(e, n);
          },
          update: function (n, d) {
            var f = i[n.id];
            void 0 === f &&
              (!(function (e) {
                for (
                  var t = e.uniforms, n = 0, r = 16, i = 0, a = 0, o = t.length;
                  a < o;
                  a++
                ) {
                  for (
                    var s = t[a],
                      l = { boundary: 0, storage: 0 },
                      c = Array.isArray(s.value) ? s.value : [s.value],
                      d = 0,
                      f = c.length;
                    d < f;
                    d++
                  ) {
                    var h = u(c[d]);
                    (l.boundary += h.boundary), (l.storage += h.storage);
                  }
                  if (
                    ((s.__data = new Float32Array(
                      l.storage / Float32Array.BYTES_PER_ELEMENT
                    )),
                    (s.__offset = n),
                    a > 0)
                  )
                    0 !== (i = n % r) &&
                      r - i - l.boundary < 0 &&
                      ((n += r - i), (s.__offset = n));
                  n += l.storage;
                }
                (i = n % r) > 0 && (n += r - i);
                (e.__size = n), (e.__cache = {});
              })(n),
              (f = (function (t) {
                var n = (function () {
                  for (var e = 0; e < s; e++)
                    if (-1 === o.indexOf(e)) return o.push(e), e;
                  return (
                    console.error(
                      "THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."
                    ),
                    0
                  );
                })();
                t.__bindingPointIndex = n;
                var r = e.createBuffer(),
                  i = t.__size,
                  a = t.usage;
                return (
                  e.bindBuffer(e.UNIFORM_BUFFER, r),
                  e.bufferData(e.UNIFORM_BUFFER, i, a),
                  e.bindBuffer(e.UNIFORM_BUFFER, null),
                  e.bindBufferBase(e.UNIFORM_BUFFER, n, r),
                  r
                );
              })(n)),
              (i[n.id] = f),
              n.addEventListener("dispose", c));
            var h = d.program;
            r.updateUBOMapping(n, h);
            var p = t.render.frame;
            a[n.id] !== p &&
              (!(function (t) {
                var n = i[t.id],
                  r = t.uniforms,
                  a = t.__cache;
                e.bindBuffer(e.UNIFORM_BUFFER, n);
                for (var o = 0, s = r.length; o < s; o++) {
                  var c = r[o];
                  if (!0 === l(c, o, a)) {
                    for (
                      var d = c.__offset,
                        f = Array.isArray(c.value) ? c.value : [c.value],
                        h = 0,
                        p = 0;
                      p < f.length;
                      p++
                    ) {
                      var v = f[p],
                        m = u(v);
                      "number" === typeof v
                        ? ((c.__data[0] = v),
                          e.bufferSubData(e.UNIFORM_BUFFER, d + h, c.__data))
                        : v.isMatrix3
                        ? ((c.__data[0] = v.elements[0]),
                          (c.__data[1] = v.elements[1]),
                          (c.__data[2] = v.elements[2]),
                          (c.__data[3] = v.elements[0]),
                          (c.__data[4] = v.elements[3]),
                          (c.__data[5] = v.elements[4]),
                          (c.__data[6] = v.elements[5]),
                          (c.__data[7] = v.elements[0]),
                          (c.__data[8] = v.elements[6]),
                          (c.__data[9] = v.elements[7]),
                          (c.__data[10] = v.elements[8]),
                          (c.__data[11] = v.elements[0]))
                        : (v.toArray(c.__data, h),
                          (h += m.storage / Float32Array.BYTES_PER_ELEMENT));
                    }
                    e.bufferSubData(e.UNIFORM_BUFFER, d, c.__data);
                  }
                }
                e.bindBuffer(e.UNIFORM_BUFFER, null);
              })(n),
              (a[n.id] = p));
          },
          dispose: function () {
            for (var t in i) e.deleteBuffer(i[t]);
            (o = []), (i = {}), (a = {});
          },
        };
      }
      var Jl = (function () {
          function e() {
            var t =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {};
            p(this, e);
            var n,
              r = t.canvas,
              i =
                void 0 === r
                  ? (function () {
                      var e = gr("canvas");
                      return (e.style.display = "block"), e;
                    })()
                  : r,
              a = t.context,
              o = void 0 === a ? null : a,
              s = t.depth,
              l = void 0 === s || s,
              u = t.stencil,
              c = void 0 === u || u,
              d = t.alpha,
              f = void 0 !== d && d,
              h = t.antialias,
              v = void 0 !== h && h,
              m = t.premultipliedAlpha,
              g = void 0 === m || m,
              y = t.preserveDrawingBuffer,
              b = void 0 !== y && y,
              _ = t.powerPreference,
              x = void 0 === _ ? "default" : _,
              S = t.failIfMajorPerformanceCaveat,
              w = void 0 !== S && S;
            (this.isWebGLRenderer = !0),
              (n = null !== o ? o.getContextAttributes().alpha : f);
            var M = null,
              E = null,
              k = [],
              T = [];
            (this.domElement = i),
              (this.debug = { checkShaderErrors: !0, onShaderError: null }),
              (this.autoClear = !0),
              (this.autoClearColor = !0),
              (this.autoClearDepth = !0),
              (this.autoClearStencil = !0),
              (this.sortObjects = !0),
              (this.clippingPlanes = []),
              (this.localClippingEnabled = !1),
              (this.outputColorSpace = bn),
              (this.useLegacyLights = !0),
              (this.toneMapping = Ae),
              (this.toneMappingExposure = 1);
            var A = this,
              C = !1,
              P = 0,
              R = 0,
              L = null,
              I = -1,
              O = null,
              D = new Ir(),
              U = new Ir(),
              z = null,
              F = i.width,
              B = i.height,
              Z = 1,
              H = null,
              V = null,
              G = new Ir(0, 0, F, B),
              q = new Ir(0, 0, F, B),
              Y = !1,
              K = new _o(),
              $ = !1,
              J = !1,
              Q = null,
              ee = new gi(),
              te = new Zr(),
              ne = {
                background: null,
                fog: null,
                environment: null,
                overrideMaterial: null,
                isScene: !0,
              };
            function re() {
              return null === L ? Z : 1;
            }
            var ie,
              ae,
              oe,
              se,
              le,
              ue,
              ce,
              de,
              fe,
              he,
              pe,
              ve,
              me,
              ge,
              ye,
              be,
              _e,
              xe,
              Se,
              we,
              Me,
              Ee,
              ke,
              Te,
              Ce = o;
            function Pe(e, t) {
              for (var n = 0; n < e.length; n++) {
                var r = e[n],
                  a = i.getContext(r, t);
                if (null !== a) return a;
              }
              return null;
            }
            try {
              var Re = {
                alpha: !0,
                depth: l,
                stencil: c,
                antialias: v,
                premultipliedAlpha: g,
                preserveDrawingBuffer: b,
                powerPreference: x,
                failIfMajorPerformanceCaveat: w,
              };
              if (
                ("setAttribute" in i &&
                  i.setAttribute("data-engine", "three.js r".concat(N)),
                i.addEventListener("webglcontextlost", Oe, !1),
                i.addEventListener("webglcontextrestored", De, !1),
                i.addEventListener("webglcontextcreationerror", Ue, !1),
                null === Ce)
              ) {
                var Le = ["webgl2", "webgl", "experimental-webgl"];
                if (
                  (!0 === A.isWebGL1Renderer && Le.shift(),
                  null === (Ce = Pe(Le, Re)))
                )
                  throw Pe(Le)
                    ? new Error(
                        "Error creating WebGL context with your selected attributes."
                      )
                    : new Error("Error creating WebGL context.");
              }
              void 0 === Ce.getShaderPrecisionFormat &&
                (Ce.getShaderPrecisionFormat = function () {
                  return { rangeMin: 1, rangeMax: 1, precision: 1 };
                });
            } catch (Ye) {
              throw (console.error("THREE.WebGLRenderer: " + Ye.message), Ye);
            }
            function Ie() {
              (ie = new Yo(Ce)),
                (ae = new Ro(Ce, ie, t)),
                ie.init(ae),
                (Ee = new Vl(Ce, ie, ae)),
                (oe = new Zl(Ce, ie, ae)),
                (se = new Jo(Ce)),
                (le = new Tl()),
                (ue = new Hl(Ce, ie, oe, le, ae, Ee, se)),
                (ce = new Io(A)),
                (de = new qo(A)),
                (fe = new So(Ce, ae)),
                (ke = new Co(Ce, ie, fe, ae)),
                (he = new Ko(Ce, fe, se, ke)),
                (pe = new ns(Ce, he, fe, se)),
                (Se = new ts(Ce, ae, ue)),
                (be = new Lo(le)),
                (ve = new kl(A, ce, de, ie, ae, ke, be)),
                (me = new Kl(A, le)),
                (ge = new Rl()),
                (ye = new Ul(ie, ae)),
                (xe = new Ao(A, ce, de, oe, pe, n, g)),
                (_e = new Bl(A, pe, ae)),
                (Te = new $l(Ce, se, ae, oe)),
                (we = new Po(Ce, ie, se, ae)),
                (Me = new $o(Ce, ie, se, ae)),
                (se.programs = ve.programs),
                (A.capabilities = ae),
                (A.extensions = ie),
                (A.properties = le),
                (A.renderLists = ge),
                (A.shadowMap = _e),
                (A.state = oe),
                (A.info = se);
            }
            Ie();
            var Ne = new Yl(A, Ce);
            function Oe(e) {
              e.preventDefault(),
                console.log("THREE.WebGLRenderer: Context Lost."),
                (C = !0);
            }
            function De() {
              console.log("THREE.WebGLRenderer: Context Restored."), (C = !1);
              var e = se.autoReset,
                t = _e.enabled,
                n = _e.autoUpdate,
                r = _e.needsUpdate,
                i = _e.type;
              Ie(),
                (se.autoReset = e),
                (_e.enabled = t),
                (_e.autoUpdate = n),
                (_e.needsUpdate = r),
                (_e.type = i);
            }
            function Ue(e) {
              console.error(
                "THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",
                e.statusMessage
              );
            }
            function ze(e) {
              var t = e.target;
              t.removeEventListener("dispose", ze),
                (function (e) {
                  (function (e) {
                    var t = le.get(e).programs;
                    void 0 !== t &&
                      (t.forEach(function (e) {
                        ve.releaseProgram(e);
                      }),
                      e.isShaderMaterial && ve.releaseShaderCache(e));
                  })(e),
                    le.remove(e);
                })(t);
            }
            (this.xr = Ne),
              (this.getContext = function () {
                return Ce;
              }),
              (this.getContextAttributes = function () {
                return Ce.getContextAttributes();
              }),
              (this.forceContextLoss = function () {
                var e = ie.get("WEBGL_lose_context");
                e && e.loseContext();
              }),
              (this.forceContextRestore = function () {
                var e = ie.get("WEBGL_lose_context");
                e && e.restoreContext();
              }),
              (this.getPixelRatio = function () {
                return Z;
              }),
              (this.setPixelRatio = function (e) {
                void 0 !== e && ((Z = e), this.setSize(F, B, !1));
              }),
              (this.getSize = function (e) {
                return e.set(F, B);
              }),
              (this.setSize = function (e, t) {
                var n =
                  !(arguments.length > 2 && void 0 !== arguments[2]) ||
                  arguments[2];
                Ne.isPresenting
                  ? console.warn(
                      "THREE.WebGLRenderer: Can't change size while VR device is presenting."
                    )
                  : ((F = e),
                    (B = t),
                    (i.width = Math.floor(e * Z)),
                    (i.height = Math.floor(t * Z)),
                    !0 === n &&
                      ((i.style.width = e + "px"), (i.style.height = t + "px")),
                    this.setViewport(0, 0, e, t));
              }),
              (this.getDrawingBufferSize = function (e) {
                return e.set(F * Z, B * Z).floor();
              }),
              (this.setDrawingBufferSize = function (e, t, n) {
                (F = e),
                  (B = t),
                  (Z = n),
                  (i.width = Math.floor(e * n)),
                  (i.height = Math.floor(t * n)),
                  this.setViewport(0, 0, e, t);
              }),
              (this.getCurrentViewport = function (e) {
                return e.copy(D);
              }),
              (this.getViewport = function (e) {
                return e.copy(G);
              }),
              (this.setViewport = function (e, t, n, r) {
                e.isVector4 ? G.set(e.x, e.y, e.z, e.w) : G.set(e, t, n, r),
                  oe.viewport(D.copy(G).multiplyScalar(Z).floor());
              }),
              (this.getScissor = function (e) {
                return e.copy(q);
              }),
              (this.setScissor = function (e, t, n, r) {
                e.isVector4 ? q.set(e.x, e.y, e.z, e.w) : q.set(e, t, n, r),
                  oe.scissor(U.copy(q).multiplyScalar(Z).floor());
              }),
              (this.getScissorTest = function () {
                return Y;
              }),
              (this.setScissorTest = function (e) {
                oe.setScissorTest((Y = e));
              }),
              (this.setOpaqueSort = function (e) {
                H = e;
              }),
              (this.setTransparentSort = function (e) {
                V = e;
              }),
              (this.getClearColor = function (e) {
                return e.copy(xe.getClearColor());
              }),
              (this.setClearColor = function () {
                xe.setClearColor.apply(xe, arguments);
              }),
              (this.getClearAlpha = function () {
                return xe.getClearAlpha();
              }),
              (this.setClearAlpha = function () {
                xe.setClearAlpha.apply(xe, arguments);
              }),
              (this.clear = function () {
                var e =
                    !(arguments.length > 1 && void 0 !== arguments[1]) ||
                    arguments[1],
                  t =
                    !(arguments.length > 2 && void 0 !== arguments[2]) ||
                    arguments[2],
                  n = 0;
                (!(arguments.length > 0 && void 0 !== arguments[0]) ||
                  arguments[0]) &&
                  (n |= Ce.COLOR_BUFFER_BIT),
                  e && (n |= Ce.DEPTH_BUFFER_BIT),
                  t && (n |= Ce.STENCIL_BUFFER_BIT),
                  Ce.clear(n);
              }),
              (this.clearColor = function () {
                this.clear(!0, !1, !1);
              }),
              (this.clearDepth = function () {
                this.clear(!1, !0, !1);
              }),
              (this.clearStencil = function () {
                this.clear(!1, !1, !0);
              }),
              (this.dispose = function () {
                i.removeEventListener("webglcontextlost", Oe, !1),
                  i.removeEventListener("webglcontextrestored", De, !1),
                  i.removeEventListener("webglcontextcreationerror", Ue, !1),
                  ge.dispose(),
                  ye.dispose(),
                  le.dispose(),
                  ce.dispose(),
                  de.dispose(),
                  pe.dispose(),
                  ke.dispose(),
                  Te.dispose(),
                  ve.dispose(),
                  Ne.dispose(),
                  Ne.removeEventListener("sessionstart", Be),
                  Ne.removeEventListener("sessionend", Ze),
                  Q && (Q.dispose(), (Q = null)),
                  He.stop();
              }),
              (this.renderBufferDirect = function (e, t, n, r, i, a) {
                null === t && (t = ne);
                var o = i.isMesh && i.matrixWorld.determinant() < 0,
                  s = (function (e, t, n, r, i) {
                    !0 !== t.isScene && (t = ne);
                    ue.resetTextureUnits();
                    var a = t.fog,
                      o = r.isMeshStandardMaterial ? t.environment : null,
                      s =
                        null === L
                          ? A.outputColorSpace
                          : !0 === L.isXRRenderTarget
                          ? L.texture.colorSpace
                          : _n,
                      l = (r.isMeshStandardMaterial ? de : ce).get(
                        r.envMap || o
                      ),
                      u =
                        !0 === r.vertexColors &&
                        !!n.attributes.color &&
                        4 === n.attributes.color.itemSize,
                      c = !!r.normalMap && !!n.attributes.tangent,
                      d = !!n.morphAttributes.position,
                      f = !!n.morphAttributes.normal,
                      h = !!n.morphAttributes.color,
                      p = r.toneMapped ? A.toneMapping : Ae,
                      v =
                        n.morphAttributes.position ||
                        n.morphAttributes.normal ||
                        n.morphAttributes.color,
                      m = void 0 !== v ? v.length : 0,
                      g = le.get(r),
                      y = E.state.lights;
                    if (!0 === $ && (!0 === J || e !== O)) {
                      var b = e === O && r.id === I;
                      be.setState(r, e, b);
                    }
                    var _ = !1;
                    r.version === g.__version
                      ? (g.needsLights &&
                          g.lightsStateVersion !== y.state.version) ||
                        g.outputColorSpace !== s ||
                        (i.isInstancedMesh && !1 === g.instancing)
                        ? (_ = !0)
                        : i.isInstancedMesh || !0 !== g.instancing
                        ? i.isSkinnedMesh && !1 === g.skinning
                          ? (_ = !0)
                          : i.isSkinnedMesh || !0 !== g.skinning
                          ? g.envMap !== l || (!0 === r.fog && g.fog !== a)
                            ? (_ = !0)
                            : void 0 === g.numClippingPlanes ||
                              (g.numClippingPlanes === be.numPlanes &&
                                g.numIntersection === be.numIntersection)
                            ? (g.vertexAlphas !== u ||
                                g.vertexTangents !== c ||
                                g.morphTargets !== d ||
                                g.morphNormals !== f ||
                                g.morphColors !== h ||
                                g.toneMapping !== p ||
                                (!0 === ae.isWebGL2 &&
                                  g.morphTargetsCount !== m)) &&
                              (_ = !0)
                            : (_ = !0)
                          : (_ = !0)
                        : (_ = !0)
                      : ((_ = !0), (g.__version = r.version));
                    var x = g.currentProgram;
                    !0 === _ && (x = Xe(r, t, i));
                    var S = !1,
                      w = !1,
                      M = !1,
                      k = x.getUniforms(),
                      T = g.uniforms;
                    oe.useProgram(x.program) && ((S = !0), (w = !0), (M = !0));
                    r.id !== I && ((I = r.id), (w = !0));
                    if (S || O !== e) {
                      if (
                        (k.setValue(Ce, "projectionMatrix", e.projectionMatrix),
                        ae.logarithmicDepthBuffer &&
                          k.setValue(
                            Ce,
                            "logDepthBufFC",
                            2 / (Math.log(e.far + 1) / Math.LN2)
                          ),
                        O !== e && ((O = e), (w = !0), (M = !0)),
                        r.isShaderMaterial ||
                          r.isMeshPhongMaterial ||
                          r.isMeshToonMaterial ||
                          r.isMeshStandardMaterial ||
                          r.envMap)
                      ) {
                        var C = k.map.cameraPosition;
                        void 0 !== C &&
                          C.setValue(
                            Ce,
                            te.setFromMatrixPosition(e.matrixWorld)
                          );
                      }
                      (r.isMeshPhongMaterial ||
                        r.isMeshToonMaterial ||
                        r.isMeshLambertMaterial ||
                        r.isMeshBasicMaterial ||
                        r.isMeshStandardMaterial ||
                        r.isShaderMaterial) &&
                        k.setValue(
                          Ce,
                          "isOrthographic",
                          !0 === e.isOrthographicCamera
                        ),
                        (r.isMeshPhongMaterial ||
                          r.isMeshToonMaterial ||
                          r.isMeshLambertMaterial ||
                          r.isMeshBasicMaterial ||
                          r.isMeshStandardMaterial ||
                          r.isShaderMaterial ||
                          r.isShadowMaterial ||
                          i.isSkinnedMesh) &&
                          k.setValue(Ce, "viewMatrix", e.matrixWorldInverse);
                    }
                    if (i.isSkinnedMesh) {
                      k.setOptional(Ce, i, "bindMatrix"),
                        k.setOptional(Ce, i, "bindMatrixInverse");
                      var P = i.skeleton;
                      P &&
                        (ae.floatVertexTextures
                          ? (null === P.boneTexture && P.computeBoneTexture(),
                            k.setValue(Ce, "boneTexture", P.boneTexture, ue),
                            k.setValue(
                              Ce,
                              "boneTextureSize",
                              P.boneTextureSize
                            ))
                          : console.warn(
                              "THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."
                            ));
                    }
                    var R = n.morphAttributes;
                    (void 0 !== R.position ||
                      void 0 !== R.normal ||
                      (void 0 !== R.color && !0 === ae.isWebGL2)) &&
                      Se.update(i, n, x);
                    (w || g.receiveShadow !== i.receiveShadow) &&
                      ((g.receiveShadow = i.receiveShadow),
                      k.setValue(Ce, "receiveShadow", i.receiveShadow));
                    r.isMeshGouraudMaterial &&
                      null !== r.envMap &&
                      ((T.envMap.value = l),
                      (T.flipEnvMap.value =
                        l.isCubeTexture && !1 === l.isRenderTargetTexture
                          ? -1
                          : 1));
                    w &&
                      (k.setValue(
                        Ce,
                        "toneMappingExposure",
                        A.toneMappingExposure
                      ),
                      g.needsLights &&
                        ((D = M),
                        ((N = T).ambientLightColor.needsUpdate = D),
                        (N.lightProbe.needsUpdate = D),
                        (N.directionalLights.needsUpdate = D),
                        (N.directionalLightShadows.needsUpdate = D),
                        (N.pointLights.needsUpdate = D),
                        (N.pointLightShadows.needsUpdate = D),
                        (N.spotLights.needsUpdate = D),
                        (N.spotLightShadows.needsUpdate = D),
                        (N.rectAreaLights.needsUpdate = D),
                        (N.hemisphereLights.needsUpdate = D)),
                      a && !0 === r.fog && me.refreshFogUniforms(T, a),
                      me.refreshMaterialUniforms(T, r, Z, B, Q),
                      ol.upload(Ce, g.uniformsList, T, ue));
                    var N, D;
                    r.isShaderMaterial &&
                      !0 === r.uniformsNeedUpdate &&
                      (ol.upload(Ce, g.uniformsList, T, ue),
                      (r.uniformsNeedUpdate = !1));
                    r.isSpriteMaterial && k.setValue(Ce, "center", i.center);
                    if (
                      (k.setValue(Ce, "modelViewMatrix", i.modelViewMatrix),
                      k.setValue(Ce, "normalMatrix", i.normalMatrix),
                      k.setValue(Ce, "modelMatrix", i.matrixWorld),
                      r.isShaderMaterial || r.isRawShaderMaterial)
                    )
                      for (
                        var U = r.uniformsGroups, z = 0, F = U.length;
                        z < F;
                        z++
                      )
                        if (ae.isWebGL2) {
                          var H = U[z];
                          Te.update(H, x), Te.bind(H, x);
                        } else
                          console.warn(
                            "THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2."
                          );
                    return x;
                  })(e, t, n, r, i);
                oe.setMaterial(r, o);
                var l = n.index,
                  u = 1;
                !0 === r.wireframe &&
                  ((l = he.getWireframeAttribute(n)), (u = 2));
                var c = n.drawRange,
                  d = n.attributes.position,
                  f = c.start * u,
                  h = (c.start + c.count) * u;
                null !== a &&
                  ((f = Math.max(f, a.start * u)),
                  (h = Math.min(h, (a.start + a.count) * u))),
                  null !== l
                    ? ((f = Math.max(f, 0)), (h = Math.min(h, l.count)))
                    : void 0 !== d &&
                      null !== d &&
                      ((f = Math.max(f, 0)), (h = Math.min(h, d.count)));
                var p = h - f;
                if (!(p < 0 || p === 1 / 0)) {
                  var v;
                  ke.setup(i, r, s, n, l);
                  var m = we;
                  if (
                    (null !== l && ((v = fe.get(l)), (m = Me).setIndex(v)),
                    i.isMesh)
                  )
                    !0 === r.wireframe
                      ? (oe.setLineWidth(r.wireframeLinewidth * re()),
                        m.setMode(Ce.LINES))
                      : m.setMode(Ce.TRIANGLES);
                  else if (i.isLine) {
                    var g = r.linewidth;
                    void 0 === g && (g = 1),
                      oe.setLineWidth(g * re()),
                      i.isLineSegments
                        ? m.setMode(Ce.LINES)
                        : i.isLineLoop
                        ? m.setMode(Ce.LINE_LOOP)
                        : m.setMode(Ce.LINE_STRIP);
                  } else
                    i.isPoints
                      ? m.setMode(Ce.POINTS)
                      : i.isSprite && m.setMode(Ce.TRIANGLES);
                  if (i.isInstancedMesh) m.renderInstances(f, p, i.count);
                  else if (n.isInstancedBufferGeometry) {
                    var y =
                        void 0 !== n._maxInstanceCount
                          ? n._maxInstanceCount
                          : 1 / 0,
                      b = Math.min(n.instanceCount, y);
                    m.renderInstances(f, p, b);
                  } else m.render(f, p);
                }
              }),
              (this.compile = function (e, t) {
                function n(e, t, n) {
                  !0 === e.transparent &&
                  e.side === X &&
                  !1 === e.forceSinglePass
                    ? ((e.side = j),
                      (e.needsUpdate = !0),
                      Xe(e, t, n),
                      (e.side = W),
                      (e.needsUpdate = !0),
                      Xe(e, t, n),
                      (e.side = X))
                    : Xe(e, t, n);
                }
                (E = ye.get(e)).init(),
                  T.push(E),
                  e.traverseVisible(function (e) {
                    e.isLight &&
                      e.layers.test(t.layers) &&
                      (E.pushLight(e), e.castShadow && E.pushShadow(e));
                  }),
                  E.setupLights(A.useLegacyLights),
                  e.traverse(function (t) {
                    var r = t.material;
                    if (r)
                      if (Array.isArray(r))
                        for (var i = 0; i < r.length; i++) {
                          n(r[i], e, t);
                        }
                      else n(r, e, t);
                  }),
                  T.pop(),
                  (E = null);
              });
            var Fe = null;
            function Be() {
              He.stop();
            }
            function Ze() {
              He.start();
            }
            var He = new xo();
            function Ve(e, t, n, r) {
              if (!1 !== e.visible) {
                if (e.layers.test(t.layers))
                  if (e.isGroup) n = e.renderOrder;
                  else if (e.isLOD) !0 === e.autoUpdate && e.update(t);
                  else if (e.isLight)
                    E.pushLight(e), e.castShadow && E.pushShadow(e);
                  else if (e.isSprite) {
                    if (!e.frustumCulled || K.intersectsSprite(e)) {
                      r &&
                        te
                          .setFromMatrixPosition(e.matrixWorld)
                          .applyMatrix4(ee);
                      var i = pe.update(e),
                        a = e.material;
                      a.visible && M.push(e, i, a, n, te.z, null);
                    }
                  } else if (
                    (e.isMesh || e.isLine || e.isPoints) &&
                    (!e.frustumCulled || K.intersectsObject(e))
                  ) {
                    e.isSkinnedMesh &&
                      e.skeleton.frame !== se.render.frame &&
                      (e.skeleton.update(),
                      (e.skeleton.frame = se.render.frame));
                    var o = pe.update(e),
                      s = e.material;
                    if (
                      (r &&
                        (null === o.boundingSphere && o.computeBoundingSphere(),
                        te
                          .copy(o.boundingSphere.center)
                          .applyMatrix4(e.matrixWorld)
                          .applyMatrix4(ee)),
                      Array.isArray(s))
                    )
                      for (var l = o.groups, u = 0, c = l.length; u < c; u++) {
                        var d = l[u],
                          f = s[d.materialIndex];
                        f && f.visible && M.push(e, o, f, n, te.z, d);
                      }
                    else s.visible && M.push(e, o, s, n, te.z, null);
                  }
                for (var h = e.children, p = 0, v = h.length; p < v; p++)
                  Ve(h[p], t, n, r);
              }
            }
            function Ge(e, t, n, r) {
              var i = e.opaque,
                a = e.transmissive,
                o = e.transparent;
              E.setupLightsView(n),
                !0 === $ && be.setGlobalState(A.clippingPlanes, n),
                a.length > 0 &&
                  (function (e, t, n, r) {
                    if (null === Q) {
                      var i = ae.isWebGL2;
                      Q = new Nr(1024, 1024, {
                        generateMipmaps: !0,
                        type: ie.has("EXT_color_buffer_half_float") ? ot : Qe,
                        minFilter: $e,
                        samples: i && !0 === v ? 4 : 0,
                      });
                    }
                    var a = A.getRenderTarget();
                    A.setRenderTarget(Q), A.clear();
                    var o = A.toneMapping;
                    (A.toneMapping = Ae),
                      We(e, n, r),
                      ue.updateMultisampleRenderTarget(Q),
                      ue.updateRenderTargetMipmap(Q);
                    for (var s = !1, l = 0, u = t.length; l < u; l++) {
                      var c = t[l],
                        d = c.object,
                        f = c.geometry,
                        h = c.material,
                        p = c.group;
                      if (h.side === X && d.layers.test(r.layers)) {
                        var m = h.side;
                        (h.side = j),
                          (h.needsUpdate = !0),
                          je(d, n, r, f, h, p),
                          (h.side = m),
                          (h.needsUpdate = !0),
                          (s = !0);
                      }
                    }
                    !0 === s &&
                      (ue.updateMultisampleRenderTarget(Q),
                      ue.updateRenderTargetMipmap(Q));
                    A.setRenderTarget(a), (A.toneMapping = o);
                  })(i, a, t, n),
                r && oe.viewport(D.copy(r)),
                i.length > 0 && We(i, t, n),
                a.length > 0 && We(a, t, n),
                o.length > 0 && We(o, t, n),
                oe.buffers.depth.setTest(!0),
                oe.buffers.depth.setMask(!0),
                oe.buffers.color.setMask(!0),
                oe.setPolygonOffset(!1);
            }
            function We(e, t, n) {
              for (
                var r = !0 === t.isScene ? t.overrideMaterial : null,
                  i = 0,
                  a = e.length;
                i < a;
                i++
              ) {
                var o = e[i],
                  s = o.object,
                  l = o.geometry,
                  u = null === r ? o.material : r,
                  c = o.group;
                s.layers.test(n.layers) && je(s, t, n, l, u, c);
              }
            }
            function je(e, t, n, r, i, a) {
              e.onBeforeRender(A, t, n, r, i, a),
                e.modelViewMatrix.multiplyMatrices(
                  n.matrixWorldInverse,
                  e.matrixWorld
                ),
                e.normalMatrix.getNormalMatrix(e.modelViewMatrix),
                i.onBeforeRender(A, t, n, r, e, a),
                !0 === i.transparent && i.side === X && !1 === i.forceSinglePass
                  ? ((i.side = j),
                    (i.needsUpdate = !0),
                    A.renderBufferDirect(n, t, r, i, e, a),
                    (i.side = W),
                    (i.needsUpdate = !0),
                    A.renderBufferDirect(n, t, r, i, e, a),
                    (i.side = X))
                  : A.renderBufferDirect(n, t, r, i, e, a),
                e.onAfterRender(A, t, n, r, i, a);
            }
            function Xe(e, t, n) {
              !0 !== t.isScene && (t = ne);
              var r = le.get(e),
                i = E.state.lights,
                a = E.state.shadowsArray,
                o = i.state.version,
                s = ve.getParameters(e, i.state, a, t, n),
                l = ve.getProgramCacheKey(s),
                u = r.programs;
              (r.environment = e.isMeshStandardMaterial ? t.environment : null),
                (r.fog = t.fog),
                (r.envMap = (e.isMeshStandardMaterial ? de : ce).get(
                  e.envMap || r.environment
                )),
                void 0 === u &&
                  (e.addEventListener("dispose", ze),
                  (u = new Map()),
                  (r.programs = u));
              var c = u.get(l);
              if (void 0 !== c) {
                if (r.currentProgram === c && r.lightsStateVersion === o)
                  return qe(e, s), c;
              } else
                (s.uniforms = ve.getUniforms(e)),
                  e.onBuild(n, s, A),
                  e.onBeforeCompile(s, A),
                  (c = ve.acquireProgram(s, l)),
                  u.set(l, c),
                  (r.uniforms = s.uniforms);
              var d = r.uniforms;
              ((e.isShaderMaterial || e.isRawShaderMaterial) &&
                !0 !== e.clipping) ||
                (d.clippingPlanes = be.uniform),
                qe(e, s),
                (r.needsLights = (function (e) {
                  return (
                    e.isMeshLambertMaterial ||
                    e.isMeshToonMaterial ||
                    e.isMeshPhongMaterial ||
                    e.isMeshStandardMaterial ||
                    e.isShadowMaterial ||
                    (e.isShaderMaterial && !0 === e.lights)
                  );
                })(e)),
                (r.lightsStateVersion = o),
                r.needsLights &&
                  ((d.ambientLightColor.value = i.state.ambient),
                  (d.lightProbe.value = i.state.probe),
                  (d.directionalLights.value = i.state.directional),
                  (d.directionalLightShadows.value = i.state.directionalShadow),
                  (d.spotLights.value = i.state.spot),
                  (d.spotLightShadows.value = i.state.spotShadow),
                  (d.rectAreaLights.value = i.state.rectArea),
                  (d.ltc_1.value = i.state.rectAreaLTC1),
                  (d.ltc_2.value = i.state.rectAreaLTC2),
                  (d.pointLights.value = i.state.point),
                  (d.pointLightShadows.value = i.state.pointShadow),
                  (d.hemisphereLights.value = i.state.hemi),
                  (d.directionalShadowMap.value = i.state.directionalShadowMap),
                  (d.directionalShadowMatrix.value =
                    i.state.directionalShadowMatrix),
                  (d.spotShadowMap.value = i.state.spotShadowMap),
                  (d.spotLightMatrix.value = i.state.spotLightMatrix),
                  (d.spotLightMap.value = i.state.spotLightMap),
                  (d.pointShadowMap.value = i.state.pointShadowMap),
                  (d.pointShadowMatrix.value = i.state.pointShadowMatrix));
              var f = c.getUniforms(),
                h = ol.seqWithValue(f.seq, d);
              return (r.currentProgram = c), (r.uniformsList = h), c;
            }
            function qe(e, t) {
              var n = le.get(e);
              (n.outputColorSpace = t.outputColorSpace),
                (n.instancing = t.instancing),
                (n.skinning = t.skinning),
                (n.morphTargets = t.morphTargets),
                (n.morphNormals = t.morphNormals),
                (n.morphColors = t.morphColors),
                (n.morphTargetsCount = t.morphTargetsCount),
                (n.numClippingPlanes = t.numClippingPlanes),
                (n.numIntersection = t.numClipIntersection),
                (n.vertexAlphas = t.vertexAlphas),
                (n.vertexTangents = t.vertexTangents),
                (n.toneMapping = t.toneMapping);
            }
            He.setAnimationLoop(function (e) {
              Fe && Fe(e);
            }),
              "undefined" !== typeof self && He.setContext(self),
              (this.setAnimationLoop = function (e) {
                (Fe = e),
                  Ne.setAnimationLoop(e),
                  null === e ? He.stop() : He.start();
              }),
              Ne.addEventListener("sessionstart", Be),
              Ne.addEventListener("sessionend", Ze),
              (this.render = function (e, t) {
                if (void 0 === t || !0 === t.isCamera) {
                  if (!0 !== C) {
                    !0 === e.matrixWorldAutoUpdate && e.updateMatrixWorld(),
                      null === t.parent &&
                        !0 === t.matrixWorldAutoUpdate &&
                        t.updateMatrixWorld(),
                      !0 === Ne.enabled &&
                        !0 === Ne.isPresenting &&
                        (!0 === Ne.cameraAutoUpdate && Ne.updateCamera(t),
                        (t = Ne.getCamera())),
                      !0 === e.isScene && e.onBeforeRender(A, e, t, L),
                      (E = ye.get(e, T.length)).init(),
                      T.push(E),
                      ee.multiplyMatrices(
                        t.projectionMatrix,
                        t.matrixWorldInverse
                      ),
                      K.setFromProjectionMatrix(ee),
                      (J = this.localClippingEnabled),
                      ($ = be.init(this.clippingPlanes, J)),
                      (M = ge.get(e, k.length)).init(),
                      k.push(M),
                      Ve(e, t, 0, A.sortObjects),
                      M.finish(),
                      !0 === A.sortObjects && M.sort(H, V),
                      !0 === $ && be.beginShadows();
                    var n = E.state.shadowsArray;
                    if (
                      (_e.render(n, e, t),
                      !0 === $ && be.endShadows(),
                      !0 === this.info.autoReset && this.info.reset(),
                      xe.render(M, e),
                      E.setupLights(A.useLegacyLights),
                      t.isArrayCamera)
                    )
                      for (var r = t.cameras, i = 0, a = r.length; i < a; i++) {
                        var o = r[i];
                        Ge(M, e, o, o.viewport);
                      }
                    else Ge(M, e, t);
                    null !== L &&
                      (ue.updateMultisampleRenderTarget(L),
                      ue.updateRenderTargetMipmap(L)),
                      !0 === e.isScene && e.onAfterRender(A, e, t),
                      ke.resetDefaultState(),
                      (I = -1),
                      (O = null),
                      T.pop(),
                      (E = T.length > 0 ? T[T.length - 1] : null),
                      k.pop(),
                      (M = k.length > 0 ? k[k.length - 1] : null);
                  }
                } else
                  console.error(
                    "THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera."
                  );
              }),
              (this.getActiveCubeFace = function () {
                return P;
              }),
              (this.getActiveMipmapLevel = function () {
                return R;
              }),
              (this.getRenderTarget = function () {
                return L;
              }),
              (this.setRenderTargetTextures = function (e, t, n) {
                (le.get(e.texture).__webglTexture = t),
                  (le.get(e.depthTexture).__webglTexture = n);
                var r = le.get(e);
                (r.__hasExternalTextures = !0),
                  r.__hasExternalTextures &&
                    ((r.__autoAllocateDepthBuffer = void 0 === n),
                    r.__autoAllocateDepthBuffer ||
                      (!0 === ie.has("WEBGL_multisampled_render_to_texture") &&
                        (console.warn(
                          "THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"
                        ),
                        (r.__useRenderToTexture = !1))));
              }),
              (this.setRenderTargetFramebuffer = function (e, t) {
                var n = le.get(e);
                (n.__webglFramebuffer = t),
                  (n.__useDefaultFramebuffer = void 0 === t);
              }),
              (this.setRenderTarget = function (e) {
                var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0,
                  n =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : 0;
                (L = e), (P = t), (R = n);
                var r = !0,
                  i = null,
                  a = !1,
                  o = !1;
                if (e) {
                  var s = le.get(e);
                  void 0 !== s.__useDefaultFramebuffer
                    ? (oe.bindFramebuffer(Ce.FRAMEBUFFER, null), (r = !1))
                    : void 0 === s.__webglFramebuffer
                    ? ue.setupRenderTarget(e)
                    : s.__hasExternalTextures &&
                      ue.rebindTextures(
                        e,
                        le.get(e.texture).__webglTexture,
                        le.get(e.depthTexture).__webglTexture
                      );
                  var l = e.texture;
                  (l.isData3DTexture ||
                    l.isDataArrayTexture ||
                    l.isCompressedArrayTexture) &&
                    (o = !0);
                  var u = le.get(e).__webglFramebuffer;
                  e.isWebGLCubeRenderTarget
                    ? ((i = u[t]), (a = !0))
                    : (i =
                        ae.isWebGL2 &&
                        e.samples > 0 &&
                        !1 === ue.useMultisampledRTT(e)
                          ? le.get(e).__webglMultisampledFramebuffer
                          : u),
                    D.copy(e.viewport),
                    U.copy(e.scissor),
                    (z = e.scissorTest);
                } else
                  D.copy(G).multiplyScalar(Z).floor(),
                    U.copy(q).multiplyScalar(Z).floor(),
                    (z = Y);
                if (
                  (oe.bindFramebuffer(Ce.FRAMEBUFFER, i) &&
                    ae.drawBuffers &&
                    r &&
                    oe.drawBuffers(e, i),
                  oe.viewport(D),
                  oe.scissor(U),
                  oe.setScissorTest(z),
                  a)
                ) {
                  var c = le.get(e.texture);
                  Ce.framebufferTexture2D(
                    Ce.FRAMEBUFFER,
                    Ce.COLOR_ATTACHMENT0,
                    Ce.TEXTURE_CUBE_MAP_POSITIVE_X + t,
                    c.__webglTexture,
                    n
                  );
                } else if (o) {
                  var d = le.get(e.texture),
                    f = t || 0;
                  Ce.framebufferTextureLayer(
                    Ce.FRAMEBUFFER,
                    Ce.COLOR_ATTACHMENT0,
                    d.__webglTexture,
                    n || 0,
                    f
                  );
                }
                I = -1;
              }),
              (this.readRenderTargetPixels = function (e, t, n, r, i, a, o) {
                if (e && e.isWebGLRenderTarget) {
                  var s = le.get(e).__webglFramebuffer;
                  if (
                    (e.isWebGLCubeRenderTarget && void 0 !== o && (s = s[o]), s)
                  ) {
                    oe.bindFramebuffer(Ce.FRAMEBUFFER, s);
                    try {
                      var l = e.texture,
                        u = l.format,
                        c = l.type;
                      if (
                        u !== dt &&
                        Ee.convert(u) !==
                          Ce.getParameter(Ce.IMPLEMENTATION_COLOR_READ_FORMAT)
                      )
                        return void console.error(
                          "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format."
                        );
                      var d =
                        c === ot &&
                        (ie.has("EXT_color_buffer_half_float") ||
                          (ae.isWebGL2 && ie.has("EXT_color_buffer_float")));
                      if (
                        c !== Qe &&
                        Ee.convert(c) !==
                          Ce.getParameter(Ce.IMPLEMENTATION_COLOR_READ_TYPE) &&
                        (c !== at ||
                          !(
                            ae.isWebGL2 ||
                            ie.has("OES_texture_float") ||
                            ie.has("WEBGL_color_buffer_float")
                          )) &&
                        !d
                      )
                        return void console.error(
                          "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type."
                        );
                      t >= 0 &&
                        t <= e.width - r &&
                        n >= 0 &&
                        n <= e.height - i &&
                        Ce.readPixels(
                          t,
                          n,
                          r,
                          i,
                          Ee.convert(u),
                          Ee.convert(c),
                          a
                        );
                    } finally {
                      var f = null !== L ? le.get(L).__webglFramebuffer : null;
                      oe.bindFramebuffer(Ce.FRAMEBUFFER, f);
                    }
                  }
                } else
                  console.error(
                    "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget."
                  );
              }),
              (this.copyFramebufferToTexture = function (e, t) {
                var n =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : 0,
                  r = Math.pow(2, -n),
                  i = Math.floor(t.image.width * r),
                  a = Math.floor(t.image.height * r);
                ue.setTexture2D(t, 0),
                  Ce.copyTexSubImage2D(Ce.TEXTURE_2D, n, 0, 0, e.x, e.y, i, a),
                  oe.unbindTexture();
              }),
              (this.copyTextureToTexture = function (e, t, n) {
                var r =
                    arguments.length > 3 && void 0 !== arguments[3]
                      ? arguments[3]
                      : 0,
                  i = t.image.width,
                  a = t.image.height,
                  o = Ee.convert(n.format),
                  s = Ee.convert(n.type);
                ue.setTexture2D(n, 0),
                  Ce.pixelStorei(Ce.UNPACK_FLIP_Y_WEBGL, n.flipY),
                  Ce.pixelStorei(
                    Ce.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
                    n.premultiplyAlpha
                  ),
                  Ce.pixelStorei(Ce.UNPACK_ALIGNMENT, n.unpackAlignment),
                  t.isDataTexture
                    ? Ce.texSubImage2D(
                        Ce.TEXTURE_2D,
                        r,
                        e.x,
                        e.y,
                        i,
                        a,
                        o,
                        s,
                        t.image.data
                      )
                    : t.isCompressedTexture
                    ? Ce.compressedTexSubImage2D(
                        Ce.TEXTURE_2D,
                        r,
                        e.x,
                        e.y,
                        t.mipmaps[0].width,
                        t.mipmaps[0].height,
                        o,
                        t.mipmaps[0].data
                      )
                    : Ce.texSubImage2D(
                        Ce.TEXTURE_2D,
                        r,
                        e.x,
                        e.y,
                        o,
                        s,
                        t.image
                      ),
                  0 === r &&
                    n.generateMipmaps &&
                    Ce.generateMipmap(Ce.TEXTURE_2D),
                  oe.unbindTexture();
              }),
              (this.copyTextureToTexture3D = function (e, t, n, r) {
                var i =
                  arguments.length > 4 && void 0 !== arguments[4]
                    ? arguments[4]
                    : 0;
                if (A.isWebGL1Renderer)
                  console.warn(
                    "THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2."
                  );
                else {
                  var a,
                    o = e.max.x - e.min.x + 1,
                    s = e.max.y - e.min.y + 1,
                    l = e.max.z - e.min.z + 1,
                    u = Ee.convert(r.format),
                    c = Ee.convert(r.type);
                  if (r.isData3DTexture)
                    ue.setTexture3D(r, 0), (a = Ce.TEXTURE_3D);
                  else {
                    if (!r.isDataArrayTexture)
                      return void console.warn(
                        "THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray."
                      );
                    ue.setTexture2DArray(r, 0), (a = Ce.TEXTURE_2D_ARRAY);
                  }
                  Ce.pixelStorei(Ce.UNPACK_FLIP_Y_WEBGL, r.flipY),
                    Ce.pixelStorei(
                      Ce.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
                      r.premultiplyAlpha
                    ),
                    Ce.pixelStorei(Ce.UNPACK_ALIGNMENT, r.unpackAlignment);
                  var d = Ce.getParameter(Ce.UNPACK_ROW_LENGTH),
                    f = Ce.getParameter(Ce.UNPACK_IMAGE_HEIGHT),
                    h = Ce.getParameter(Ce.UNPACK_SKIP_PIXELS),
                    p = Ce.getParameter(Ce.UNPACK_SKIP_ROWS),
                    v = Ce.getParameter(Ce.UNPACK_SKIP_IMAGES),
                    m = n.isCompressedTexture ? n.mipmaps[0] : n.image;
                  Ce.pixelStorei(Ce.UNPACK_ROW_LENGTH, m.width),
                    Ce.pixelStorei(Ce.UNPACK_IMAGE_HEIGHT, m.height),
                    Ce.pixelStorei(Ce.UNPACK_SKIP_PIXELS, e.min.x),
                    Ce.pixelStorei(Ce.UNPACK_SKIP_ROWS, e.min.y),
                    Ce.pixelStorei(Ce.UNPACK_SKIP_IMAGES, e.min.z),
                    n.isDataTexture || n.isData3DTexture
                      ? Ce.texSubImage3D(
                          a,
                          i,
                          t.x,
                          t.y,
                          t.z,
                          o,
                          s,
                          l,
                          u,
                          c,
                          m.data
                        )
                      : n.isCompressedArrayTexture
                      ? (console.warn(
                          "THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."
                        ),
                        Ce.compressedTexSubImage3D(
                          a,
                          i,
                          t.x,
                          t.y,
                          t.z,
                          o,
                          s,
                          l,
                          u,
                          m.data
                        ))
                      : Ce.texSubImage3D(a, i, t.x, t.y, t.z, o, s, l, u, c, m),
                    Ce.pixelStorei(Ce.UNPACK_ROW_LENGTH, d),
                    Ce.pixelStorei(Ce.UNPACK_IMAGE_HEIGHT, f),
                    Ce.pixelStorei(Ce.UNPACK_SKIP_PIXELS, h),
                    Ce.pixelStorei(Ce.UNPACK_SKIP_ROWS, p),
                    Ce.pixelStorei(Ce.UNPACK_SKIP_IMAGES, v),
                    0 === i && r.generateMipmaps && Ce.generateMipmap(a),
                    oe.unbindTexture();
                }
              }),
              (this.initTexture = function (e) {
                e.isCubeTexture
                  ? ue.setTextureCube(e, 0)
                  : e.isData3DTexture
                  ? ue.setTexture3D(e, 0)
                  : e.isDataArrayTexture || e.isCompressedArrayTexture
                  ? ue.setTexture2DArray(e, 0)
                  : ue.setTexture2D(e, 0),
                  oe.unbindTexture();
              }),
              (this.resetState = function () {
                (P = 0), (R = 0), (L = null), oe.reset(), ke.reset();
              }),
              "undefined" !== typeof __THREE_DEVTOOLS__ &&
                __THREE_DEVTOOLS__.dispatchEvent(
                  new CustomEvent("observe", { detail: this })
                );
          }
          return (
            g(e, [
              {
                key: "physicallyCorrectLights",
                get: function () {
                  return (
                    console.warn(
                      "THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."
                    ),
                    !this.useLegacyLights
                  );
                },
                set: function (e) {
                  console.warn(
                    "THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."
                  ),
                    (this.useLegacyLights = !e);
                },
              },
              {
                key: "outputEncoding",
                get: function () {
                  return (
                    console.warn(
                      "THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."
                    ),
                    this.outputColorSpace === bn ? hn : fn
                  );
                },
                set: function (e) {
                  console.warn(
                    "THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."
                  ),
                    (this.outputColorSpace = e === hn ? bn : _n);
                },
              },
            ]),
            e
          );
        })(),
        Ql = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            return p(this, n), t.apply(this, arguments);
          }
          return g(n);
        })(Jl);
      Ql.prototype.isWebGL1Renderer = !0;
      var eu,
        tu = (function () {
          function e(t) {
            var n =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 25e-5;
            p(this, e),
              (this.isFogExp2 = !0),
              (this.name = ""),
              (this.color = new sa(t)),
              (this.density = n);
          }
          return (
            g(e, [
              {
                key: "clone",
                value: function () {
                  return new e(this.color, this.density);
                },
              },
              {
                key: "toJSON",
                value: function () {
                  return {
                    type: "FogExp2",
                    color: this.color.getHex(),
                    density: this.density,
                  };
                },
              },
            ]),
            e
          );
        })(),
        nu = (function () {
          function e(t) {
            var n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1e3;
            p(this, e),
              (this.isFog = !0),
              (this.name = ""),
              (this.color = new sa(t)),
              (this.near = n),
              (this.far = r);
          }
          return (
            g(e, [
              {
                key: "clone",
                value: function () {
                  return new e(this.color, this.near, this.far);
                },
              },
              {
                key: "toJSON",
                value: function () {
                  return {
                    type: "Fog",
                    color: this.color.getHex(),
                    near: this.near,
                    far: this.far,
                  };
                },
              },
            ]),
            e
          );
        })(),
        ru = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e;
            return (
              p(this, n),
              ((e = t.call(this)).isScene = !0),
              (e.type = "Scene"),
              (e.background = null),
              (e.environment = null),
              (e.fog = null),
              (e.backgroundBlurriness = 0),
              (e.backgroundIntensity = 1),
              (e.overrideMaterial = null),
              "undefined" !== typeof __THREE_DEVTOOLS__ &&
                __THREE_DEVTOOLS__.dispatchEvent(
                  new CustomEvent("observe", { detail: E(e) })
                ),
              e
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e, t) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e, t),
                    null !== e.background &&
                      (this.background = e.background.clone()),
                    null !== e.environment &&
                      (this.environment = e.environment.clone()),
                    null !== e.fog && (this.fog = e.fog.clone()),
                    (this.backgroundBlurriness = e.backgroundBlurriness),
                    (this.backgroundIntensity = e.backgroundIntensity),
                    null !== e.overrideMaterial &&
                      (this.overrideMaterial = e.overrideMaterial.clone()),
                    (this.matrixAutoUpdate = e.matrixAutoUpdate),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = L(_(n.prototype), "toJSON", this).call(this, e);
                  return (
                    null !== this.fog && (t.object.fog = this.fog.toJSON()),
                    this.backgroundBlurriness > 0 &&
                      (t.object.backgroundBlurriness =
                        this.backgroundBlurriness),
                    1 !== this.backgroundIntensity &&
                      (t.object.backgroundIntensity = this.backgroundIntensity),
                    t
                  );
                },
              },
              {
                key: "autoUpdate",
                get: function () {
                  return (
                    console.warn(
                      "THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."
                    ),
                    this.matrixWorldAutoUpdate
                  );
                },
                set: function (e) {
                  console.warn(
                    "THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."
                  ),
                    (this.matrixWorldAutoUpdate = e);
                },
              },
            ]),
            n
          );
        })(Hi),
        iu = (function () {
          function e(t, n) {
            p(this, e),
              (this.isInterleavedBuffer = !0),
              (this.array = t),
              (this.stride = n),
              (this.count = void 0 !== t ? t.length / n : 0),
              (this.usage = zn),
              (this.updateRange = { offset: 0, count: -1 }),
              (this.version = 0),
              (this.uuid = tr());
          }
          return (
            g(e, [
              { key: "onUploadCallback", value: function () {} },
              {
                key: "needsUpdate",
                set: function (e) {
                  !0 === e && this.version++;
                },
              },
              {
                key: "setUsage",
                value: function (e) {
                  return (this.usage = e), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    (this.array = new e.array.constructor(e.array)),
                    (this.count = e.count),
                    (this.stride = e.stride),
                    (this.usage = e.usage),
                    this
                  );
                },
              },
              {
                key: "copyAt",
                value: function (e, t, n) {
                  (e *= this.stride), (n *= t.stride);
                  for (var r = 0, i = this.stride; r < i; r++)
                    this.array[e + r] = t.array[n + r];
                  return this;
                },
              },
              {
                key: "set",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0;
                  return this.array.set(e, t), this;
                },
              },
              {
                key: "clone",
                value: function (e) {
                  void 0 === e.arrayBuffers && (e.arrayBuffers = {}),
                    void 0 === this.array.buffer._uuid &&
                      (this.array.buffer._uuid = tr()),
                    void 0 === e.arrayBuffers[this.array.buffer._uuid] &&
                      (e.arrayBuffers[this.array.buffer._uuid] =
                        this.array.slice(0).buffer);
                  var t = new this.array.constructor(
                      e.arrayBuffers[this.array.buffer._uuid]
                    ),
                    n = new this.constructor(t, this.stride);
                  return n.setUsage(this.usage), n;
                },
              },
              {
                key: "onUpload",
                value: function (e) {
                  return (this.onUploadCallback = e), this;
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  return (
                    void 0 === e.arrayBuffers && (e.arrayBuffers = {}),
                    void 0 === this.array.buffer._uuid &&
                      (this.array.buffer._uuid = tr()),
                    void 0 === e.arrayBuffers[this.array.buffer._uuid] &&
                      (e.arrayBuffers[this.array.buffer._uuid] = Array.from(
                        new Uint32Array(this.array.buffer)
                      )),
                    {
                      uuid: this.uuid,
                      buffer: this.array.buffer._uuid,
                      type: this.array.constructor.name,
                      stride: this.stride,
                    }
                  );
                },
              },
            ]),
            e
          );
        })(),
        au = new Zr(),
        ou = (function () {
          function e(t, n, r) {
            var i =
              arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
            p(this, e),
              (this.isInterleavedBufferAttribute = !0),
              (this.name = ""),
              (this.data = t),
              (this.itemSize = n),
              (this.offset = r),
              (this.normalized = i);
          }
          return (
            g(e, [
              {
                key: "count",
                get: function () {
                  return this.data.count;
                },
              },
              {
                key: "array",
                get: function () {
                  return this.data.array;
                },
              },
              {
                key: "needsUpdate",
                set: function (e) {
                  this.data.needsUpdate = e;
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  for (var t = 0, n = this.data.count; t < n; t++)
                    au.fromBufferAttribute(this, t),
                      au.applyMatrix4(e),
                      this.setXYZ(t, au.x, au.y, au.z);
                  return this;
                },
              },
              {
                key: "applyNormalMatrix",
                value: function (e) {
                  for (var t = 0, n = this.count; t < n; t++)
                    au.fromBufferAttribute(this, t),
                      au.applyNormalMatrix(e),
                      this.setXYZ(t, au.x, au.y, au.z);
                  return this;
                },
              },
              {
                key: "transformDirection",
                value: function (e) {
                  for (var t = 0, n = this.count; t < n; t++)
                    au.fromBufferAttribute(this, t),
                      au.transformDirection(e),
                      this.setXYZ(t, au.x, au.y, au.z);
                  return this;
                },
              },
              {
                key: "setX",
                value: function (e, t) {
                  return (
                    this.normalized && (t = ur(t, this.array)),
                    (this.data.array[e * this.data.stride + this.offset] = t),
                    this
                  );
                },
              },
              {
                key: "setY",
                value: function (e, t) {
                  return (
                    this.normalized && (t = ur(t, this.array)),
                    (this.data.array[e * this.data.stride + this.offset + 1] =
                      t),
                    this
                  );
                },
              },
              {
                key: "setZ",
                value: function (e, t) {
                  return (
                    this.normalized && (t = ur(t, this.array)),
                    (this.data.array[e * this.data.stride + this.offset + 2] =
                      t),
                    this
                  );
                },
              },
              {
                key: "setW",
                value: function (e, t) {
                  return (
                    this.normalized && (t = ur(t, this.array)),
                    (this.data.array[e * this.data.stride + this.offset + 3] =
                      t),
                    this
                  );
                },
              },
              {
                key: "getX",
                value: function (e) {
                  var t = this.data.array[e * this.data.stride + this.offset];
                  return this.normalized && (t = lr(t, this.array)), t;
                },
              },
              {
                key: "getY",
                value: function (e) {
                  var t =
                    this.data.array[e * this.data.stride + this.offset + 1];
                  return this.normalized && (t = lr(t, this.array)), t;
                },
              },
              {
                key: "getZ",
                value: function (e) {
                  var t =
                    this.data.array[e * this.data.stride + this.offset + 2];
                  return this.normalized && (t = lr(t, this.array)), t;
                },
              },
              {
                key: "getW",
                value: function (e) {
                  var t =
                    this.data.array[e * this.data.stride + this.offset + 3];
                  return this.normalized && (t = lr(t, this.array)), t;
                },
              },
              {
                key: "setXY",
                value: function (e, t, n) {
                  return (
                    (e = e * this.data.stride + this.offset),
                    this.normalized &&
                      ((t = ur(t, this.array)), (n = ur(n, this.array))),
                    (this.data.array[e + 0] = t),
                    (this.data.array[e + 1] = n),
                    this
                  );
                },
              },
              {
                key: "setXYZ",
                value: function (e, t, n, r) {
                  return (
                    (e = e * this.data.stride + this.offset),
                    this.normalized &&
                      ((t = ur(t, this.array)),
                      (n = ur(n, this.array)),
                      (r = ur(r, this.array))),
                    (this.data.array[e + 0] = t),
                    (this.data.array[e + 1] = n),
                    (this.data.array[e + 2] = r),
                    this
                  );
                },
              },
              {
                key: "setXYZW",
                value: function (e, t, n, r, i) {
                  return (
                    (e = e * this.data.stride + this.offset),
                    this.normalized &&
                      ((t = ur(t, this.array)),
                      (n = ur(n, this.array)),
                      (r = ur(r, this.array)),
                      (i = ur(i, this.array))),
                    (this.data.array[e + 0] = t),
                    (this.data.array[e + 1] = n),
                    (this.data.array[e + 2] = r),
                    (this.data.array[e + 3] = i),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function (t) {
                  if (void 0 === t) {
                    console.log(
                      "THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data."
                    );
                    for (var n = [], r = 0; r < this.count; r++)
                      for (
                        var i = r * this.data.stride + this.offset, a = 0;
                        a < this.itemSize;
                        a++
                      )
                        n.push(this.data.array[i + a]);
                    return new ga(
                      new this.array.constructor(n),
                      this.itemSize,
                      this.normalized
                    );
                  }
                  return (
                    void 0 === t.interleavedBuffers &&
                      (t.interleavedBuffers = {}),
                    void 0 === t.interleavedBuffers[this.data.uuid] &&
                      (t.interleavedBuffers[this.data.uuid] =
                        this.data.clone(t)),
                    new e(
                      t.interleavedBuffers[this.data.uuid],
                      this.itemSize,
                      this.offset,
                      this.normalized
                    )
                  );
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  if (void 0 === e) {
                    console.log(
                      "THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data."
                    );
                    for (var t = [], n = 0; n < this.count; n++)
                      for (
                        var r = n * this.data.stride + this.offset, i = 0;
                        i < this.itemSize;
                        i++
                      )
                        t.push(this.data.array[r + i]);
                    return {
                      itemSize: this.itemSize,
                      type: this.array.constructor.name,
                      array: t,
                      normalized: this.normalized,
                    };
                  }
                  return (
                    void 0 === e.interleavedBuffers &&
                      (e.interleavedBuffers = {}),
                    void 0 === e.interleavedBuffers[this.data.uuid] &&
                      (e.interleavedBuffers[this.data.uuid] =
                        this.data.toJSON(e)),
                    {
                      isInterleavedBufferAttribute: !0,
                      itemSize: this.itemSize,
                      data: this.data.uuid,
                      offset: this.offset,
                      normalized: this.normalized,
                    }
                  );
                },
              },
            ]),
            e
          );
        })(),
        su = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return (
              p(this, n),
              ((r = t.call(this)).isSpriteMaterial = !0),
              (r.type = "SpriteMaterial"),
              (r.color = new sa(16777215)),
              (r.map = null),
              (r.alphaMap = null),
              (r.rotation = 0),
              (r.sizeAttenuation = !0),
              (r.transparent = !0),
              (r.fog = !0),
              r.setValues(e),
              r
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    this.color.copy(e.color),
                    (this.map = e.map),
                    (this.alphaMap = e.alphaMap),
                    (this.rotation = e.rotation),
                    (this.sizeAttenuation = e.sizeAttenuation),
                    (this.fog = e.fog),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(na),
        lu = new Zr(),
        uu = new Zr(),
        cu = new Zr(),
        du = new dr(),
        fu = new dr(),
        hu = new gi(),
        pu = new Zr(),
        vu = new Zr(),
        mu = new Zr(),
        gu = new dr(),
        yu = new dr(),
        bu = new dr(),
        _u = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            if (
              (p(this, n),
              ((r = t.call(this)).isSprite = !0),
              (r.type = "Sprite"),
              void 0 === eu)
            ) {
              eu = new Oa();
              var i = new Float32Array([
                  -0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1,
                  -0.5, 0.5, 0, 0, 1,
                ]),
                a = new iu(i, 5);
              eu.setIndex([0, 1, 2, 0, 2, 3]),
                eu.setAttribute("position", new ou(a, 3, 0, !1)),
                eu.setAttribute("uv", new ou(a, 2, 3, !1));
            }
            return (
              (r.geometry = eu),
              (r.material = void 0 !== e ? e : new su()),
              (r.center = new dr(0.5, 0.5)),
              r
            );
          }
          return (
            g(n, [
              {
                key: "raycast",
                value: function (e, t) {
                  null === e.camera &&
                    console.error(
                      'THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'
                    ),
                    uu.setFromMatrixScale(this.matrixWorld),
                    hu.copy(e.camera.matrixWorld),
                    this.modelViewMatrix.multiplyMatrices(
                      e.camera.matrixWorldInverse,
                      this.matrixWorld
                    ),
                    cu.setFromMatrixPosition(this.modelViewMatrix),
                    e.camera.isPerspectiveCamera &&
                      !1 === this.material.sizeAttenuation &&
                      uu.multiplyScalar(-cu.z);
                  var n,
                    r,
                    i = this.material.rotation;
                  0 !== i && ((r = Math.cos(i)), (n = Math.sin(i)));
                  var a = this.center;
                  xu(pu.set(-0.5, -0.5, 0), cu, a, uu, n, r),
                    xu(vu.set(0.5, -0.5, 0), cu, a, uu, n, r),
                    xu(mu.set(0.5, 0.5, 0), cu, a, uu, n, r),
                    gu.set(0, 0),
                    yu.set(1, 0),
                    bu.set(1, 1);
                  var o = e.ray.intersectTriangle(pu, vu, mu, !1, lu);
                  if (
                    null !== o ||
                    (xu(vu.set(-0.5, 0.5, 0), cu, a, uu, n, r),
                    yu.set(0, 1),
                    null !== (o = e.ray.intersectTriangle(pu, mu, vu, !1, lu)))
                  ) {
                    var s = e.ray.origin.distanceTo(lu);
                    s < e.near ||
                      s > e.far ||
                      t.push({
                        distance: s,
                        point: lu.clone(),
                        uv: ea.getInterpolation(
                          lu,
                          pu,
                          vu,
                          mu,
                          gu,
                          yu,
                          bu,
                          new dr()
                        ),
                        face: null,
                        object: this,
                      });
                  }
                },
              },
              {
                key: "copy",
                value: function (e, t) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e, t),
                    void 0 !== e.center && this.center.copy(e.center),
                    (this.material = e.material),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(Hi);
      function xu(e, t, n, r, i, a) {
        du.subVectors(e, n).addScalar(0.5).multiply(r),
          void 0 !== i
            ? ((fu.x = a * du.x - i * du.y), (fu.y = i * du.x + a * du.y))
            : fu.copy(du),
          e.copy(t),
          (e.x += fu.x),
          (e.y += fu.y),
          e.applyMatrix4(hu);
      }
      var Su = new Zr(),
        wu = new Zr(),
        Mu = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e;
            return (
              p(this, n),
              ((e = t.call(this))._currentLevel = 0),
              (e.type = "LOD"),
              Object.defineProperties(E(e), {
                levels: { enumerable: !0, value: [] },
                isLOD: { value: !0 },
              }),
              (e.autoUpdate = !0),
              e
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e) {
                  L(_(n.prototype), "copy", this).call(this, e, !1);
                  for (var t = e.levels, r = 0, i = t.length; r < i; r++) {
                    var a = t[r];
                    this.addLevel(a.object.clone(), a.distance, a.hysteresis);
                  }
                  return (this.autoUpdate = e.autoUpdate), this;
                },
              },
              {
                key: "addLevel",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0,
                    n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : 0;
                  t = Math.abs(t);
                  var r,
                    i = this.levels;
                  for (r = 0; r < i.length && !(t < i[r].distance); r++);
                  return (
                    i.splice(r, 0, { distance: t, hysteresis: n, object: e }),
                    this.add(e),
                    this
                  );
                },
              },
              {
                key: "getCurrentLevel",
                value: function () {
                  return this._currentLevel;
                },
              },
              {
                key: "getObjectForDistance",
                value: function (e) {
                  var t = this.levels;
                  if (t.length > 0) {
                    var n, r;
                    for (n = 1, r = t.length; n < r; n++) {
                      var i = t[n].distance;
                      if (
                        (t[n].object.visible && (i -= i * t[n].hysteresis),
                        e < i)
                      )
                        break;
                    }
                    return t[n - 1].object;
                  }
                  return null;
                },
              },
              {
                key: "raycast",
                value: function (e, t) {
                  if (this.levels.length > 0) {
                    Su.setFromMatrixPosition(this.matrixWorld);
                    var n = e.ray.origin.distanceTo(Su);
                    this.getObjectForDistance(n).raycast(e, t);
                  }
                },
              },
              {
                key: "update",
                value: function (e) {
                  var t = this.levels;
                  if (t.length > 1) {
                    Su.setFromMatrixPosition(e.matrixWorld),
                      wu.setFromMatrixPosition(this.matrixWorld);
                    var n,
                      r,
                      i = Su.distanceTo(wu) / e.zoom;
                    for (
                      t[0].object.visible = !0, n = 1, r = t.length;
                      n < r;
                      n++
                    ) {
                      var a = t[n].distance;
                      if (
                        (t[n].object.visible && (a -= a * t[n].hysteresis),
                        !(i >= a))
                      )
                        break;
                      (t[n - 1].object.visible = !1),
                        (t[n].object.visible = !0);
                    }
                    for (this._currentLevel = n - 1; n < r; n++)
                      t[n].object.visible = !1;
                  }
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = L(_(n.prototype), "toJSON", this).call(this, e);
                  !1 === this.autoUpdate && (t.object.autoUpdate = !1),
                    (t.object.levels = []);
                  for (var r = this.levels, i = 0, a = r.length; i < a; i++) {
                    var o = r[i];
                    t.object.levels.push({
                      object: o.object.uuid,
                      distance: o.distance,
                      hysteresis: o.hysteresis,
                    });
                  }
                  return t;
                },
              },
            ]),
            n
          );
        })(Hi),
        Eu = new Zr(),
        ku = new Ir(),
        Tu = new Ir(),
        Au = new Zr(),
        Cu = new gi(),
        Pu = new Zr(),
        Ru = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r) {
            var i;
            return (
              p(this, n),
              ((i = t.call(this, e, r)).isSkinnedMesh = !0),
              (i.type = "SkinnedMesh"),
              (i.bindMode = "attached"),
              (i.bindMatrix = new gi()),
              (i.bindMatrixInverse = new gi()),
              (i.boundingBox = null),
              (i.boundingSphere = null),
              i
            );
          }
          return (
            g(n, [
              {
                key: "computeBoundingBox",
                value: function () {
                  var e = this.geometry;
                  null === this.boundingBox && (this.boundingBox = new Gr()),
                    this.boundingBox.makeEmpty();
                  for (
                    var t = e.getAttribute("position"), n = 0;
                    n < t.count;
                    n++
                  )
                    Pu.fromBufferAttribute(t, n),
                      this.applyBoneTransform(n, Pu),
                      this.boundingBox.expandByPoint(Pu);
                },
              },
              {
                key: "computeBoundingSphere",
                value: function () {
                  var e = this.geometry;
                  null === this.boundingSphere &&
                    (this.boundingSphere = new li()),
                    this.boundingSphere.makeEmpty();
                  for (
                    var t = e.getAttribute("position"), n = 0;
                    n < t.count;
                    n++
                  )
                    Pu.fromBufferAttribute(t, n),
                      this.applyBoneTransform(n, Pu),
                      this.boundingSphere.expandByPoint(Pu);
                },
              },
              {
                key: "copy",
                value: function (e, t) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e, t),
                    (this.bindMode = e.bindMode),
                    this.bindMatrix.copy(e.bindMatrix),
                    this.bindMatrixInverse.copy(e.bindMatrixInverse),
                    (this.skeleton = e.skeleton),
                    this
                  );
                },
              },
              {
                key: "getVertexPosition",
                value: function (e, t) {
                  return (
                    L(_(n.prototype), "getVertexPosition", this).call(
                      this,
                      e,
                      t
                    ),
                    this.applyBoneTransform(e, t),
                    t
                  );
                },
              },
              {
                key: "bind",
                value: function (e, t) {
                  (this.skeleton = e),
                    void 0 === t &&
                      (this.updateMatrixWorld(!0),
                      this.skeleton.calculateInverses(),
                      (t = this.matrixWorld)),
                    this.bindMatrix.copy(t),
                    this.bindMatrixInverse.copy(t).invert();
                },
              },
              {
                key: "pose",
                value: function () {
                  this.skeleton.pose();
                },
              },
              {
                key: "normalizeSkinWeights",
                value: function () {
                  for (
                    var e = new Ir(),
                      t = this.geometry.attributes.skinWeight,
                      n = 0,
                      r = t.count;
                    n < r;
                    n++
                  ) {
                    e.fromBufferAttribute(t, n);
                    var i = 1 / e.manhattanLength();
                    i !== 1 / 0 ? e.multiplyScalar(i) : e.set(1, 0, 0, 0),
                      t.setXYZW(n, e.x, e.y, e.z, e.w);
                  }
                },
              },
              {
                key: "updateMatrixWorld",
                value: function (e) {
                  L(_(n.prototype), "updateMatrixWorld", this).call(this, e),
                    "attached" === this.bindMode
                      ? this.bindMatrixInverse.copy(this.matrixWorld).invert()
                      : "detached" === this.bindMode
                      ? this.bindMatrixInverse.copy(this.bindMatrix).invert()
                      : console.warn(
                          "THREE.SkinnedMesh: Unrecognized bindMode: " +
                            this.bindMode
                        );
                },
              },
              {
                key: "applyBoneTransform",
                value: function (e, t) {
                  var n = this.skeleton,
                    r = this.geometry;
                  ku.fromBufferAttribute(r.attributes.skinIndex, e),
                    Tu.fromBufferAttribute(r.attributes.skinWeight, e),
                    Eu.copy(t).applyMatrix4(this.bindMatrix),
                    t.set(0, 0, 0);
                  for (var i = 0; i < 4; i++) {
                    var a = Tu.getComponent(i);
                    if (0 !== a) {
                      var o = ku.getComponent(i);
                      Cu.multiplyMatrices(
                        n.bones[o].matrixWorld,
                        n.boneInverses[o]
                      ),
                        t.addScaledVector(Au.copy(Eu).applyMatrix4(Cu), a);
                    }
                  }
                  return t.applyMatrix4(this.bindMatrixInverse);
                },
              },
              {
                key: "boneTransform",
                value: function (e, t) {
                  return (
                    console.warn(
                      "THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."
                    ),
                    this.applyBoneTransform(e, t)
                  );
                },
              },
            ]),
            n
          );
        })(Qa),
        Lu = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e;
            return (
              p(this, n), ((e = t.call(this)).isBone = !0), (e.type = "Bone"), e
            );
          }
          return g(n);
        })(Hi),
        Iu = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : null,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o = arguments.length > 3 ? arguments[3] : void 0,
              s = arguments.length > 4 ? arguments[4] : void 0,
              l = arguments.length > 5 ? arguments[5] : void 0,
              u = arguments.length > 6 ? arguments[6] : void 0,
              c = arguments.length > 7 ? arguments[7] : void 0,
              d =
                arguments.length > 8 && void 0 !== arguments[8]
                  ? arguments[8]
                  : Ve,
              f =
                arguments.length > 9 && void 0 !== arguments[9]
                  ? arguments[9]
                  : Ve,
              h = arguments.length > 10 ? arguments[10] : void 0,
              v = arguments.length > 11 ? arguments[11] : void 0;
            return (
              p(this, n),
              ((e = t.call(
                this,
                null,
                l,
                u,
                c,
                d,
                f,
                o,
                s,
                h,
                v
              )).isDataTexture = !0),
              (e.image = { data: r, width: i, height: a }),
              (e.generateMipmaps = !1),
              (e.flipY = !1),
              (e.unpackAlignment = 1),
              e
            );
          }
          return g(n);
        })(Lr),
        Nu = new gi(),
        Ou = new gi(),
        Du = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : [],
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : [];
            p(this, e),
              (this.uuid = tr()),
              (this.bones = t.slice(0)),
              (this.boneInverses = n),
              (this.boneMatrices = null),
              (this.boneTexture = null),
              (this.boneTextureSize = 0),
              (this.frame = -1),
              this.init();
          }
          return (
            g(e, [
              {
                key: "init",
                value: function () {
                  var e = this.bones,
                    t = this.boneInverses;
                  if (
                    ((this.boneMatrices = new Float32Array(16 * e.length)),
                    0 === t.length)
                  )
                    this.calculateInverses();
                  else if (e.length !== t.length) {
                    console.warn(
                      "THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."
                    ),
                      (this.boneInverses = []);
                    for (var n = 0, r = this.bones.length; n < r; n++)
                      this.boneInverses.push(new gi());
                  }
                },
              },
              {
                key: "calculateInverses",
                value: function () {
                  this.boneInverses.length = 0;
                  for (var e = 0, t = this.bones.length; e < t; e++) {
                    var n = new gi();
                    this.bones[e] && n.copy(this.bones[e].matrixWorld).invert(),
                      this.boneInverses.push(n);
                  }
                },
              },
              {
                key: "pose",
                value: function () {
                  for (var e = 0, t = this.bones.length; e < t; e++) {
                    var n = this.bones[e];
                    n && n.matrixWorld.copy(this.boneInverses[e]).invert();
                  }
                  for (var r = 0, i = this.bones.length; r < i; r++) {
                    var a = this.bones[r];
                    a &&
                      (a.parent && a.parent.isBone
                        ? (a.matrix.copy(a.parent.matrixWorld).invert(),
                          a.matrix.multiply(a.matrixWorld))
                        : a.matrix.copy(a.matrixWorld),
                      a.matrix.decompose(a.position, a.quaternion, a.scale));
                  }
                },
              },
              {
                key: "update",
                value: function () {
                  for (
                    var e = this.bones,
                      t = this.boneInverses,
                      n = this.boneMatrices,
                      r = this.boneTexture,
                      i = 0,
                      a = e.length;
                    i < a;
                    i++
                  ) {
                    var o = e[i] ? e[i].matrixWorld : Ou;
                    Nu.multiplyMatrices(o, t[i]), Nu.toArray(n, 16 * i);
                  }
                  null !== r && (r.needsUpdate = !0);
                },
              },
              {
                key: "clone",
                value: function () {
                  return new e(this.bones, this.boneInverses);
                },
              },
              {
                key: "computeBoneTexture",
                value: function () {
                  var e = Math.sqrt(4 * this.bones.length);
                  (e = or(e)), (e = Math.max(e, 4));
                  var t = new Float32Array(e * e * 4);
                  t.set(this.boneMatrices);
                  var n = new Iu(t, e, e, dt, at);
                  return (
                    (n.needsUpdate = !0),
                    (this.boneMatrices = t),
                    (this.boneTexture = n),
                    (this.boneTextureSize = e),
                    this
                  );
                },
              },
              {
                key: "getBoneByName",
                value: function (e) {
                  for (var t = 0, n = this.bones.length; t < n; t++) {
                    var r = this.bones[t];
                    if (r.name === e) return r;
                  }
                },
              },
              {
                key: "dispose",
                value: function () {
                  null !== this.boneTexture &&
                    (this.boneTexture.dispose(), (this.boneTexture = null));
                },
              },
              {
                key: "fromJSON",
                value: function (e, t) {
                  this.uuid = e.uuid;
                  for (var n = 0, r = e.bones.length; n < r; n++) {
                    var i = e.bones[n],
                      a = t[i];
                    void 0 === a &&
                      (console.warn(
                        "THREE.Skeleton: No bone found with UUID:",
                        i
                      ),
                      (a = new Lu())),
                      this.bones.push(a),
                      this.boneInverses.push(
                        new gi().fromArray(e.boneInverses[n])
                      );
                  }
                  return this.init(), this;
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = {
                    metadata: {
                      version: 4.5,
                      type: "Skeleton",
                      generator: "Skeleton.toJSON",
                    },
                    bones: [],
                    boneInverses: [],
                  };
                  e.uuid = this.uuid;
                  for (
                    var t = this.bones,
                      n = this.boneInverses,
                      r = 0,
                      i = t.length;
                    r < i;
                    r++
                  ) {
                    var a = t[r];
                    e.bones.push(a.uuid);
                    var o = n[r];
                    e.boneInverses.push(o.toArray());
                  }
                  return e;
                },
              },
            ]),
            e
          );
        })(),
        Uu = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i) {
            var a,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1;
            return (
              p(this, n),
              ((a = t.call(this, e, r, i)).isInstancedBufferAttribute = !0),
              (a.meshPerAttribute = o),
              a
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    (this.meshPerAttribute = e.meshPerAttribute),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = L(_(n.prototype), "toJSON", this).call(this);
                  return (
                    (e.meshPerAttribute = this.meshPerAttribute),
                    (e.isInstancedBufferAttribute = !0),
                    e
                  );
                },
              },
            ]),
            n
          );
        })(ga),
        zu = new gi(),
        Fu = new gi(),
        Bu = [],
        Zu = new Gr(),
        Hu = new gi(),
        Vu = new Qa(),
        Gu = new li(),
        Wu = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i) {
            var a;
            p(this, n),
              ((a = t.call(this, e, r)).isInstancedMesh = !0),
              (a.instanceMatrix = new Uu(new Float32Array(16 * i), 16)),
              (a.instanceColor = null),
              (a.count = i),
              (a.boundingBox = null),
              (a.boundingSphere = null);
            for (var o = 0; o < i; o++) a.setMatrixAt(o, Hu);
            return a;
          }
          return (
            g(n, [
              {
                key: "computeBoundingBox",
                value: function () {
                  var e = this.geometry,
                    t = this.count;
                  null === this.boundingBox && (this.boundingBox = new Gr()),
                    null === e.boundingBox && e.computeBoundingBox(),
                    this.boundingBox.makeEmpty();
                  for (var n = 0; n < t; n++)
                    this.getMatrixAt(n, zu),
                      Zu.copy(e.boundingBox).applyMatrix4(zu),
                      this.boundingBox.union(Zu);
                },
              },
              {
                key: "computeBoundingSphere",
                value: function () {
                  var e = this.geometry,
                    t = this.count;
                  null === this.boundingSphere &&
                    (this.boundingSphere = new li()),
                    null === e.boundingSphere && e.computeBoundingSphere(),
                    this.boundingSphere.makeEmpty();
                  for (var n = 0; n < t; n++)
                    this.getMatrixAt(n, zu),
                      Gu.copy(e.boundingSphere).applyMatrix4(zu),
                      this.boundingSphere.union(Gu);
                },
              },
              {
                key: "copy",
                value: function (e, t) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e, t),
                    this.instanceMatrix.copy(e.instanceMatrix),
                    null !== e.instanceColor &&
                      (this.instanceColor = e.instanceColor.clone()),
                    (this.count = e.count),
                    this
                  );
                },
              },
              {
                key: "getColorAt",
                value: function (e, t) {
                  t.fromArray(this.instanceColor.array, 3 * e);
                },
              },
              {
                key: "getMatrixAt",
                value: function (e, t) {
                  t.fromArray(this.instanceMatrix.array, 16 * e);
                },
              },
              {
                key: "raycast",
                value: function (e, t) {
                  var n = this.matrixWorld,
                    r = this.count;
                  if (
                    ((Vu.geometry = this.geometry),
                    (Vu.material = this.material),
                    void 0 !== Vu.material &&
                      (null === this.boundingSphere &&
                        this.computeBoundingSphere(),
                      Gu.copy(this.boundingSphere),
                      Gu.applyMatrix4(n),
                      !1 !== e.ray.intersectsSphere(Gu)))
                  )
                    for (var i = 0; i < r; i++) {
                      this.getMatrixAt(i, zu),
                        Fu.multiplyMatrices(n, zu),
                        (Vu.matrixWorld = Fu),
                        Vu.raycast(e, Bu);
                      for (var a = 0, o = Bu.length; a < o; a++) {
                        var s = Bu[a];
                        (s.instanceId = i), (s.object = this), t.push(s);
                      }
                      Bu.length = 0;
                    }
                },
              },
              {
                key: "setColorAt",
                value: function (e, t) {
                  null === this.instanceColor &&
                    (this.instanceColor = new Uu(
                      new Float32Array(3 * this.instanceMatrix.count),
                      3
                    )),
                    t.toArray(this.instanceColor.array, 3 * e);
                },
              },
              {
                key: "setMatrixAt",
                value: function (e, t) {
                  t.toArray(this.instanceMatrix.array, 16 * e);
                },
              },
              { key: "updateMorphTargets", value: function () {} },
              {
                key: "dispose",
                value: function () {
                  this.dispatchEvent({ type: "dispose" });
                },
              },
            ]),
            n
          );
        })(Qa),
        ju = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return (
              p(this, n),
              ((r = t.call(this)).isLineBasicMaterial = !0),
              (r.type = "LineBasicMaterial"),
              (r.color = new sa(16777215)),
              (r.map = null),
              (r.linewidth = 1),
              (r.linecap = "round"),
              (r.linejoin = "round"),
              (r.fog = !0),
              r.setValues(e),
              r
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    this.color.copy(e.color),
                    (this.map = e.map),
                    (this.linewidth = e.linewidth),
                    (this.linecap = e.linecap),
                    (this.linejoin = e.linejoin),
                    (this.fog = e.fog),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(na),
        Xu = new Zr(),
        qu = new Zr(),
        Yu = new gi(),
        Ku = new mi(),
        $u = new li(),
        Ju = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Oa(),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new ju();
            return (
              p(this, n),
              ((e = t.call(this)).isLine = !0),
              (e.type = "Line"),
              (e.geometry = r),
              (e.material = i),
              e.updateMorphTargets(),
              e
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e, t) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e, t),
                    (this.material = e.material),
                    (this.geometry = e.geometry),
                    this
                  );
                },
              },
              {
                key: "computeLineDistances",
                value: function () {
                  var e = this.geometry;
                  if (null === e.index) {
                    for (
                      var t = e.attributes.position,
                        n = [0],
                        r = 1,
                        i = t.count;
                      r < i;
                      r++
                    )
                      Xu.fromBufferAttribute(t, r - 1),
                        qu.fromBufferAttribute(t, r),
                        (n[r] = n[r - 1]),
                        (n[r] += Xu.distanceTo(qu));
                    e.setAttribute("lineDistance", new ka(n, 1));
                  } else
                    console.warn(
                      "THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry."
                    );
                  return this;
                },
              },
              {
                key: "raycast",
                value: function (e, t) {
                  var n = this.geometry,
                    r = this.matrixWorld,
                    i = e.params.Line.threshold,
                    a = n.drawRange;
                  if (
                    (null === n.boundingSphere && n.computeBoundingSphere(),
                    $u.copy(n.boundingSphere),
                    $u.applyMatrix4(r),
                    ($u.radius += i),
                    !1 !== e.ray.intersectsSphere($u))
                  ) {
                    Yu.copy(r).invert(), Ku.copy(e.ray).applyMatrix4(Yu);
                    var o =
                        i / ((this.scale.x + this.scale.y + this.scale.z) / 3),
                      s = o * o,
                      l = new Zr(),
                      u = new Zr(),
                      c = new Zr(),
                      d = new Zr(),
                      f = this.isLineSegments ? 2 : 1,
                      h = n.index,
                      p = n.attributes.position;
                    if (null !== h)
                      for (
                        var v = Math.max(0, a.start),
                          m = Math.min(h.count, a.start + a.count) - 1;
                        v < m;
                        v += f
                      ) {
                        var g = h.getX(v),
                          y = h.getX(v + 1);
                        if (
                          (l.fromBufferAttribute(p, g),
                          u.fromBufferAttribute(p, y),
                          !(Ku.distanceSqToSegment(l, u, d, c) > s))
                        ) {
                          d.applyMatrix4(this.matrixWorld);
                          var b = e.ray.origin.distanceTo(d);
                          b < e.near ||
                            b > e.far ||
                            t.push({
                              distance: b,
                              point: c.clone().applyMatrix4(this.matrixWorld),
                              index: v,
                              face: null,
                              faceIndex: null,
                              object: this,
                            });
                        }
                      }
                    else
                      for (
                        var _ = Math.max(0, a.start),
                          x = Math.min(p.count, a.start + a.count) - 1;
                        _ < x;
                        _ += f
                      ) {
                        if (
                          (l.fromBufferAttribute(p, _),
                          u.fromBufferAttribute(p, _ + 1),
                          !(Ku.distanceSqToSegment(l, u, d, c) > s))
                        ) {
                          d.applyMatrix4(this.matrixWorld);
                          var S = e.ray.origin.distanceTo(d);
                          S < e.near ||
                            S > e.far ||
                            t.push({
                              distance: S,
                              point: c.clone().applyMatrix4(this.matrixWorld),
                              index: _,
                              face: null,
                              faceIndex: null,
                              object: this,
                            });
                        }
                      }
                  }
                },
              },
              {
                key: "updateMorphTargets",
                value: function () {
                  var e = this.geometry.morphAttributes,
                    t = Object.keys(e);
                  if (t.length > 0) {
                    var n = e[t[0]];
                    if (void 0 !== n) {
                      (this.morphTargetInfluences = []),
                        (this.morphTargetDictionary = {});
                      for (var r = 0, i = n.length; r < i; r++) {
                        var a = n[r].name || String(r);
                        this.morphTargetInfluences.push(0),
                          (this.morphTargetDictionary[a] = r);
                      }
                    }
                  }
                },
              },
            ]),
            n
          );
        })(Hi),
        Qu = new Zr(),
        ec = new Zr(),
        tc = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r) {
            var i;
            return (
              p(this, n),
              ((i = t.call(this, e, r)).isLineSegments = !0),
              (i.type = "LineSegments"),
              i
            );
          }
          return (
            g(n, [
              {
                key: "computeLineDistances",
                value: function () {
                  var e = this.geometry;
                  if (null === e.index) {
                    for (
                      var t = e.attributes.position, n = [], r = 0, i = t.count;
                      r < i;
                      r += 2
                    )
                      Qu.fromBufferAttribute(t, r),
                        ec.fromBufferAttribute(t, r + 1),
                        (n[r] = 0 === r ? 0 : n[r - 1]),
                        (n[r + 1] = n[r] + Qu.distanceTo(ec));
                    e.setAttribute("lineDistance", new ka(n, 1));
                  } else
                    console.warn(
                      "THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry."
                    );
                  return this;
                },
              },
            ]),
            n
          );
        })(Ju),
        nc = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r) {
            var i;
            return (
              p(this, n),
              ((i = t.call(this, e, r)).isLineLoop = !0),
              (i.type = "LineLoop"),
              i
            );
          }
          return g(n);
        })(Ju),
        rc = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return (
              p(this, n),
              ((r = t.call(this)).isPointsMaterial = !0),
              (r.type = "PointsMaterial"),
              (r.color = new sa(16777215)),
              (r.map = null),
              (r.alphaMap = null),
              (r.size = 1),
              (r.sizeAttenuation = !0),
              (r.fog = !0),
              r.setValues(e),
              r
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    this.color.copy(e.color),
                    (this.map = e.map),
                    (this.alphaMap = e.alphaMap),
                    (this.size = e.size),
                    (this.sizeAttenuation = e.sizeAttenuation),
                    (this.fog = e.fog),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(na),
        ic = new gi(),
        ac = new mi(),
        oc = new li(),
        sc = new Zr(),
        lc = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Oa(),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new rc();
            return (
              p(this, n),
              ((e = t.call(this)).isPoints = !0),
              (e.type = "Points"),
              (e.geometry = r),
              (e.material = i),
              e.updateMorphTargets(),
              e
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e, t) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e, t),
                    (this.material = e.material),
                    (this.geometry = e.geometry),
                    this
                  );
                },
              },
              {
                key: "raycast",
                value: function (e, t) {
                  var n = this.geometry,
                    r = this.matrixWorld,
                    i = e.params.Points.threshold,
                    a = n.drawRange;
                  if (
                    (null === n.boundingSphere && n.computeBoundingSphere(),
                    oc.copy(n.boundingSphere),
                    oc.applyMatrix4(r),
                    (oc.radius += i),
                    !1 !== e.ray.intersectsSphere(oc))
                  ) {
                    ic.copy(r).invert(), ac.copy(e.ray).applyMatrix4(ic);
                    var o =
                        i / ((this.scale.x + this.scale.y + this.scale.z) / 3),
                      s = o * o,
                      l = n.index,
                      u = n.attributes.position;
                    if (null !== l)
                      for (
                        var c = Math.max(0, a.start),
                          d = Math.min(l.count, a.start + a.count);
                        c < d;
                        c++
                      ) {
                        var f = l.getX(c);
                        sc.fromBufferAttribute(u, f),
                          uc(sc, f, s, r, e, t, this);
                      }
                    else
                      for (
                        var h = Math.max(0, a.start),
                          p = Math.min(u.count, a.start + a.count);
                        h < p;
                        h++
                      )
                        sc.fromBufferAttribute(u, h),
                          uc(sc, h, s, r, e, t, this);
                  }
                },
              },
              {
                key: "updateMorphTargets",
                value: function () {
                  var e = this.geometry.morphAttributes,
                    t = Object.keys(e);
                  if (t.length > 0) {
                    var n = e[t[0]];
                    if (void 0 !== n) {
                      (this.morphTargetInfluences = []),
                        (this.morphTargetDictionary = {});
                      for (var r = 0, i = n.length; r < i; r++) {
                        var a = n[r].name || String(r);
                        this.morphTargetInfluences.push(0),
                          (this.morphTargetDictionary[a] = r);
                      }
                    }
                  }
                },
              },
            ]),
            n
          );
        })(Hi);
      function uc(e, t, n, r, i, a, o) {
        var s = ac.distanceSqToPoint(e);
        if (s < n) {
          var l = new Zr();
          ac.closestPointToPoint(e, l), l.applyMatrix4(r);
          var u = i.ray.origin.distanceTo(l);
          if (u < i.near || u > i.far) return;
          a.push({
            distance: u,
            distanceToRay: Math.sqrt(s),
            point: l,
            index: t,
            face: null,
            object: o,
          });
        }
      }
      var cc = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i, a, o, s, l, u, c) {
            var d;
            p(this, n),
              ((d = t.call(this, e, r, i, a, o, s, l, u, c)).isVideoTexture =
                !0),
              (d.minFilter = void 0 !== s ? s : qe),
              (d.magFilter = void 0 !== o ? o : qe),
              (d.generateMipmaps = !1);
            var f = E(d);
            return (
              "requestVideoFrameCallback" in e &&
                e.requestVideoFrameCallback(function t() {
                  (f.needsUpdate = !0), e.requestVideoFrameCallback(t);
                }),
              d
            );
          }
          return (
            g(n, [
              {
                key: "clone",
                value: function () {
                  return new this.constructor(this.image).copy(this);
                },
              },
              {
                key: "update",
                value: function () {
                  var e = this.image;
                  !1 === "requestVideoFrameCallback" in e &&
                    e.readyState >= e.HAVE_CURRENT_DATA &&
                    (this.needsUpdate = !0);
                },
              },
            ]),
            n
          );
        })(Lr),
        dc = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i) {
            var a;
            return (
              p(this, n),
              ((a = t.call(this, {
                width: e,
                height: r,
              })).isFramebufferTexture = !0),
              (a.format = i),
              (a.magFilter = Ve),
              (a.minFilter = Ve),
              (a.generateMipmaps = !1),
              (a.needsUpdate = !0),
              a
            );
          }
          return g(n);
        })(Lr),
        fc = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i, a, o, s, l, u, c, d, f, h) {
            var v;
            return (
              p(this, n),
              ((v = t.call(
                this,
                null,
                s,
                l,
                u,
                c,
                d,
                a,
                o,
                f,
                h
              )).isCompressedTexture = !0),
              (v.image = { width: r, height: i }),
              (v.mipmaps = e),
              (v.flipY = !1),
              (v.generateMipmaps = !1),
              v
            );
          }
          return g(n);
        })(Lr),
        hc = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i, a, o, s) {
            var l;
            return (
              p(this, n),
              ((l = t.call(this, e, r, i, o, s)).isCompressedArrayTexture = !0),
              (l.image.depth = a),
              (l.wrapR = Ze),
              l
            );
          }
          return g(n);
        })(fc),
        pc = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i, a, o, s, l, u, c) {
            var d;
            return (
              p(this, n),
              ((d = t.call(this, e, r, i, a, o, s, l, u, c)).isCanvasTexture =
                !0),
              (d.needsUpdate = !0),
              d
            );
          }
          return g(n);
        })(Lr),
        vc = (function () {
          function e() {
            p(this, e), (this.type = "Curve"), (this.arcLengthDivisions = 200);
          }
          return (
            g(e, [
              {
                key: "getPoint",
                value: function () {
                  return (
                    console.warn("THREE.Curve: .getPoint() not implemented."),
                    null
                  );
                },
              },
              {
                key: "getPointAt",
                value: function (e, t) {
                  var n = this.getUtoTmapping(e);
                  return this.getPoint(n, t);
                },
              },
              {
                key: "getPoints",
                value: function () {
                  for (
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : 5,
                      t = [],
                      n = 0;
                    n <= e;
                    n++
                  )
                    t.push(this.getPoint(n / e));
                  return t;
                },
              },
              {
                key: "getSpacedPoints",
                value: function () {
                  for (
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : 5,
                      t = [],
                      n = 0;
                    n <= e;
                    n++
                  )
                    t.push(this.getPointAt(n / e));
                  return t;
                },
              },
              {
                key: "getLength",
                value: function () {
                  var e = this.getLengths();
                  return e[e.length - 1];
                },
              },
              {
                key: "getLengths",
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : this.arcLengthDivisions;
                  if (
                    this.cacheArcLengths &&
                    this.cacheArcLengths.length === e + 1 &&
                    !this.needsUpdate
                  )
                    return this.cacheArcLengths;
                  this.needsUpdate = !1;
                  var t,
                    n = [],
                    r = this.getPoint(0),
                    i = 0;
                  n.push(0);
                  for (var a = 1; a <= e; a++)
                    (i += (t = this.getPoint(a / e)).distanceTo(r)),
                      n.push(i),
                      (r = t);
                  return (this.cacheArcLengths = n), n;
                },
              },
              {
                key: "updateArcLengths",
                value: function () {
                  (this.needsUpdate = !0), this.getLengths();
                },
              },
              {
                key: "getUtoTmapping",
                value: function (e, t) {
                  var n,
                    r = this.getLengths(),
                    i = 0,
                    a = r.length;
                  n = t || e * r[a - 1];
                  for (var o, s = 0, l = a - 1; s <= l; )
                    if ((o = r[(i = Math.floor(s + (l - s) / 2))] - n) < 0)
                      s = i + 1;
                    else {
                      if (!(o > 0)) {
                        l = i;
                        break;
                      }
                      l = i - 1;
                    }
                  if (r[(i = l)] === n) return i / (a - 1);
                  var u = r[i];
                  return (i + (n - u) / (r[i + 1] - u)) / (a - 1);
                },
              },
              {
                key: "getTangent",
                value: function (e, t) {
                  var n = 1e-4,
                    r = e - n,
                    i = e + n;
                  r < 0 && (r = 0), i > 1 && (i = 1);
                  var a = this.getPoint(r),
                    o = this.getPoint(i),
                    s = t || (a.isVector2 ? new dr() : new Zr());
                  return s.copy(o).sub(a).normalize(), s;
                },
              },
              {
                key: "getTangentAt",
                value: function (e, t) {
                  var n = this.getUtoTmapping(e);
                  return this.getTangent(n, t);
                },
              },
              {
                key: "computeFrenetFrames",
                value: function (e, t) {
                  for (
                    var n = new Zr(),
                      r = [],
                      i = [],
                      a = [],
                      o = new Zr(),
                      s = new gi(),
                      l = 0;
                    l <= e;
                    l++
                  ) {
                    var u = l / e;
                    r[l] = this.getTangentAt(u, new Zr());
                  }
                  (i[0] = new Zr()), (a[0] = new Zr());
                  var c = Number.MAX_VALUE,
                    d = Math.abs(r[0].x),
                    f = Math.abs(r[0].y),
                    h = Math.abs(r[0].z);
                  d <= c && ((c = d), n.set(1, 0, 0)),
                    f <= c && ((c = f), n.set(0, 1, 0)),
                    h <= c && n.set(0, 0, 1),
                    o.crossVectors(r[0], n).normalize(),
                    i[0].crossVectors(r[0], o),
                    a[0].crossVectors(r[0], i[0]);
                  for (var p = 1; p <= e; p++) {
                    if (
                      ((i[p] = i[p - 1].clone()),
                      (a[p] = a[p - 1].clone()),
                      o.crossVectors(r[p - 1], r[p]),
                      o.length() > Number.EPSILON)
                    ) {
                      o.normalize();
                      var v = Math.acos(nr(r[p - 1].dot(r[p]), -1, 1));
                      i[p].applyMatrix4(s.makeRotationAxis(o, v));
                    }
                    a[p].crossVectors(r[p], i[p]);
                  }
                  if (!0 === t) {
                    var m = Math.acos(nr(i[0].dot(i[e]), -1, 1));
                    (m /= e),
                      r[0].dot(o.crossVectors(i[0], i[e])) > 0 && (m = -m);
                    for (var g = 1; g <= e; g++)
                      i[g].applyMatrix4(s.makeRotationAxis(r[g], m * g)),
                        a[g].crossVectors(r[g], i[g]);
                  }
                  return { tangents: r, normals: i, binormals: a };
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (this.arcLengthDivisions = e.arcLengthDivisions), this;
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = {
                    metadata: {
                      version: 4.5,
                      type: "Curve",
                      generator: "Curve.toJSON",
                    },
                  };
                  return (
                    (e.arcLengthDivisions = this.arcLengthDivisions),
                    (e.type = this.type),
                    e
                  );
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  return (this.arcLengthDivisions = e.arcLengthDivisions), this;
                },
              },
            ]),
            e
          );
        })(),
        mc = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 0,
              l =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : 2 * Math.PI,
              u =
                arguments.length > 6 && void 0 !== arguments[6] && arguments[6],
              c =
                arguments.length > 7 && void 0 !== arguments[7]
                  ? arguments[7]
                  : 0;
            return (
              p(this, n),
              ((e = t.call(this)).isEllipseCurve = !0),
              (e.type = "EllipseCurve"),
              (e.aX = r),
              (e.aY = i),
              (e.xRadius = a),
              (e.yRadius = o),
              (e.aStartAngle = s),
              (e.aEndAngle = l),
              (e.aClockwise = u),
              (e.aRotation = c),
              e
            );
          }
          return (
            g(n, [
              {
                key: "getPoint",
                value: function (e, t) {
                  for (
                    var n = t || new dr(),
                      r = 2 * Math.PI,
                      i = this.aEndAngle - this.aStartAngle,
                      a = Math.abs(i) < Number.EPSILON;
                    i < 0;

                  )
                    i += r;
                  for (; i > r; ) i -= r;
                  i < Number.EPSILON && (i = a ? 0 : r),
                    !0 !== this.aClockwise ||
                      a ||
                      (i === r ? (i = -r) : (i -= r));
                  var o = this.aStartAngle + e * i,
                    s = this.aX + this.xRadius * Math.cos(o),
                    l = this.aY + this.yRadius * Math.sin(o);
                  if (0 !== this.aRotation) {
                    var u = Math.cos(this.aRotation),
                      c = Math.sin(this.aRotation),
                      d = s - this.aX,
                      f = l - this.aY;
                    (s = d * u - f * c + this.aX),
                      (l = d * c + f * u + this.aY);
                  }
                  return n.set(s, l);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    (this.aX = e.aX),
                    (this.aY = e.aY),
                    (this.xRadius = e.xRadius),
                    (this.yRadius = e.yRadius),
                    (this.aStartAngle = e.aStartAngle),
                    (this.aEndAngle = e.aEndAngle),
                    (this.aClockwise = e.aClockwise),
                    (this.aRotation = e.aRotation),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = L(_(n.prototype), "toJSON", this).call(this);
                  return (
                    (e.aX = this.aX),
                    (e.aY = this.aY),
                    (e.xRadius = this.xRadius),
                    (e.yRadius = this.yRadius),
                    (e.aStartAngle = this.aStartAngle),
                    (e.aEndAngle = this.aEndAngle),
                    (e.aClockwise = this.aClockwise),
                    (e.aRotation = this.aRotation),
                    e
                  );
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  return (
                    L(_(n.prototype), "fromJSON", this).call(this, e),
                    (this.aX = e.aX),
                    (this.aY = e.aY),
                    (this.xRadius = e.xRadius),
                    (this.yRadius = e.yRadius),
                    (this.aStartAngle = e.aStartAngle),
                    (this.aEndAngle = e.aEndAngle),
                    (this.aClockwise = e.aClockwise),
                    (this.aRotation = e.aRotation),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(vc),
        gc = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i, a, o, s) {
            var l;
            return (
              p(this, n),
              ((l = t.call(this, e, r, i, i, a, o, s)).isArcCurve = !0),
              (l.type = "ArcCurve"),
              l
            );
          }
          return g(n);
        })(mc);
      function yc() {
        var e = 0,
          t = 0,
          n = 0,
          r = 0;
        function i(i, a, o, s) {
          (e = i),
            (t = o),
            (n = -3 * i + 3 * a - 2 * o - s),
            (r = 2 * i - 2 * a + o + s);
        }
        return {
          initCatmullRom: function (e, t, n, r, a) {
            i(t, n, a * (n - e), a * (r - t));
          },
          initNonuniformCatmullRom: function (e, t, n, r, a, o, s) {
            var l = (t - e) / a - (n - e) / (a + o) + (n - t) / o,
              u = (n - t) / o - (r - t) / (o + s) + (r - n) / s;
            i(t, n, (l *= o), (u *= o));
          },
          calc: function (i) {
            var a = i * i;
            return e + t * i + n * a + r * (a * i);
          },
        };
      }
      var bc = new Zr(),
        _c = new yc(),
        xc = new yc(),
        Sc = new yc(),
        wc = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : [],
              i =
                arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : "centripetal",
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 0.5;
            return (
              p(this, n),
              ((e = t.call(this)).isCatmullRomCurve3 = !0),
              (e.type = "CatmullRomCurve3"),
              (e.points = r),
              (e.closed = i),
              (e.curveType = a),
              (e.tension = o),
              e
            );
          }
          return (
            g(n, [
              {
                key: "getPoint",
                value: function (e) {
                  var t,
                    n,
                    r =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : new Zr(),
                    i = this.points,
                    a = i.length,
                    o = (a - (this.closed ? 0 : 1)) * e,
                    s = Math.floor(o),
                    l = o - s;
                  this.closed
                    ? (s += s > 0 ? 0 : (Math.floor(Math.abs(s) / a) + 1) * a)
                    : 0 === l && s === a - 1 && ((s = a - 2), (l = 1)),
                    this.closed || s > 0
                      ? (t = i[(s - 1) % a])
                      : (bc.subVectors(i[0], i[1]).add(i[0]), (t = bc));
                  var u = i[s % a],
                    c = i[(s + 1) % a];
                  if (
                    (this.closed || s + 2 < a
                      ? (n = i[(s + 2) % a])
                      : (bc.subVectors(i[a - 1], i[a - 2]).add(i[a - 1]),
                        (n = bc)),
                    "centripetal" === this.curveType ||
                      "chordal" === this.curveType)
                  ) {
                    var d = "chordal" === this.curveType ? 0.5 : 0.25,
                      f = Math.pow(t.distanceToSquared(u), d),
                      h = Math.pow(u.distanceToSquared(c), d),
                      p = Math.pow(c.distanceToSquared(n), d);
                    h < 1e-4 && (h = 1),
                      f < 1e-4 && (f = h),
                      p < 1e-4 && (p = h),
                      _c.initNonuniformCatmullRom(t.x, u.x, c.x, n.x, f, h, p),
                      xc.initNonuniformCatmullRom(t.y, u.y, c.y, n.y, f, h, p),
                      Sc.initNonuniformCatmullRom(t.z, u.z, c.z, n.z, f, h, p);
                  } else
                    "catmullrom" === this.curveType &&
                      (_c.initCatmullRom(t.x, u.x, c.x, n.x, this.tension),
                      xc.initCatmullRom(t.y, u.y, c.y, n.y, this.tension),
                      Sc.initCatmullRom(t.z, u.z, c.z, n.z, this.tension));
                  return r.set(_c.calc(l), xc.calc(l), Sc.calc(l)), r;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  L(_(n.prototype), "copy", this).call(this, e),
                    (this.points = []);
                  for (var t = 0, r = e.points.length; t < r; t++) {
                    var i = e.points[t];
                    this.points.push(i.clone());
                  }
                  return (
                    (this.closed = e.closed),
                    (this.curveType = e.curveType),
                    (this.tension = e.tension),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = L(_(n.prototype), "toJSON", this).call(this);
                  e.points = [];
                  for (var t = 0, r = this.points.length; t < r; t++) {
                    var i = this.points[t];
                    e.points.push(i.toArray());
                  }
                  return (
                    (e.closed = this.closed),
                    (e.curveType = this.curveType),
                    (e.tension = this.tension),
                    e
                  );
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  L(_(n.prototype), "fromJSON", this).call(this, e),
                    (this.points = []);
                  for (var t = 0, r = e.points.length; t < r; t++) {
                    var i = e.points[t];
                    this.points.push(new Zr().fromArray(i));
                  }
                  return (
                    (this.closed = e.closed),
                    (this.curveType = e.curveType),
                    (this.tension = e.tension),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(vc);
      function Mc(e, t, n, r, i) {
        var a = 0.5 * (r - t),
          o = 0.5 * (i - n),
          s = e * e;
        return (
          (2 * n - 2 * r + a + o) * (e * s) +
          (-3 * n + 3 * r - 2 * a - o) * s +
          a * e +
          n
        );
      }
      function Ec(e, t, n, r) {
        return (
          (function (e, t) {
            var n = 1 - e;
            return n * n * t;
          })(e, t) +
          (function (e, t) {
            return 2 * (1 - e) * e * t;
          })(e, n) +
          (function (e, t) {
            return e * e * t;
          })(e, r)
        );
      }
      function kc(e, t, n, r, i) {
        return (
          (function (e, t) {
            var n = 1 - e;
            return n * n * n * t;
          })(e, t) +
          (function (e, t) {
            var n = 1 - e;
            return 3 * n * n * e * t;
          })(e, n) +
          (function (e, t) {
            return 3 * (1 - e) * e * e * t;
          })(e, r) +
          (function (e, t) {
            return e * e * e * t;
          })(e, i)
        );
      }
      var Tc = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new dr(),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new dr(),
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : new dr(),
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : new dr();
            return (
              p(this, n),
              ((e = t.call(this)).isCubicBezierCurve = !0),
              (e.type = "CubicBezierCurve"),
              (e.v0 = r),
              (e.v1 = i),
              (e.v2 = a),
              (e.v3 = o),
              e
            );
          }
          return (
            g(n, [
              {
                key: "getPoint",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : new dr(),
                    n = this.v0,
                    r = this.v1,
                    i = this.v2,
                    a = this.v3;
                  return (
                    t.set(kc(e, n.x, r.x, i.x, a.x), kc(e, n.y, r.y, i.y, a.y)),
                    t
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    this.v0.copy(e.v0),
                    this.v1.copy(e.v1),
                    this.v2.copy(e.v2),
                    this.v3.copy(e.v3),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = L(_(n.prototype), "toJSON", this).call(this);
                  return (
                    (e.v0 = this.v0.toArray()),
                    (e.v1 = this.v1.toArray()),
                    (e.v2 = this.v2.toArray()),
                    (e.v3 = this.v3.toArray()),
                    e
                  );
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  return (
                    L(_(n.prototype), "fromJSON", this).call(this, e),
                    this.v0.fromArray(e.v0),
                    this.v1.fromArray(e.v1),
                    this.v2.fromArray(e.v2),
                    this.v3.fromArray(e.v3),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(vc),
        Ac = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Zr(),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new Zr(),
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : new Zr(),
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : new Zr();
            return (
              p(this, n),
              ((e = t.call(this)).isCubicBezierCurve3 = !0),
              (e.type = "CubicBezierCurve3"),
              (e.v0 = r),
              (e.v1 = i),
              (e.v2 = a),
              (e.v3 = o),
              e
            );
          }
          return (
            g(n, [
              {
                key: "getPoint",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : new Zr(),
                    n = this.v0,
                    r = this.v1,
                    i = this.v2,
                    a = this.v3;
                  return (
                    t.set(
                      kc(e, n.x, r.x, i.x, a.x),
                      kc(e, n.y, r.y, i.y, a.y),
                      kc(e, n.z, r.z, i.z, a.z)
                    ),
                    t
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    this.v0.copy(e.v0),
                    this.v1.copy(e.v1),
                    this.v2.copy(e.v2),
                    this.v3.copy(e.v3),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = L(_(n.prototype), "toJSON", this).call(this);
                  return (
                    (e.v0 = this.v0.toArray()),
                    (e.v1 = this.v1.toArray()),
                    (e.v2 = this.v2.toArray()),
                    (e.v3 = this.v3.toArray()),
                    e
                  );
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  return (
                    L(_(n.prototype), "fromJSON", this).call(this, e),
                    this.v0.fromArray(e.v0),
                    this.v1.fromArray(e.v1),
                    this.v2.fromArray(e.v2),
                    this.v3.fromArray(e.v3),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(vc),
        Cc = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new dr(),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new dr();
            return (
              p(this, n),
              ((e = t.call(this)).isLineCurve = !0),
              (e.type = "LineCurve"),
              (e.v1 = r),
              (e.v2 = i),
              e
            );
          }
          return (
            g(n, [
              {
                key: "getPoint",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : new dr();
                  return (
                    1 === e
                      ? t.copy(this.v2)
                      : (t.copy(this.v2).sub(this.v1),
                        t.multiplyScalar(e).add(this.v1)),
                    t
                  );
                },
              },
              {
                key: "getPointAt",
                value: function (e, t) {
                  return this.getPoint(e, t);
                },
              },
              {
                key: "getTangent",
                value: function (e) {
                  return (
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : new dr()
                  )
                    .subVectors(this.v2, this.v1)
                    .normalize();
                },
              },
              {
                key: "getTangentAt",
                value: function (e, t) {
                  return this.getTangent(e, t);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    this.v1.copy(e.v1),
                    this.v2.copy(e.v2),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = L(_(n.prototype), "toJSON", this).call(this);
                  return (
                    (e.v1 = this.v1.toArray()), (e.v2 = this.v2.toArray()), e
                  );
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  return (
                    L(_(n.prototype), "fromJSON", this).call(this, e),
                    this.v1.fromArray(e.v1),
                    this.v2.fromArray(e.v2),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(vc),
        Pc = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Zr(),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new Zr();
            return (
              p(this, n),
              ((e = t.call(this)).isLineCurve3 = !0),
              (e.type = "LineCurve3"),
              (e.v1 = r),
              (e.v2 = i),
              e
            );
          }
          return (
            g(n, [
              {
                key: "getPoint",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : new Zr();
                  return (
                    1 === e
                      ? t.copy(this.v2)
                      : (t.copy(this.v2).sub(this.v1),
                        t.multiplyScalar(e).add(this.v1)),
                    t
                  );
                },
              },
              {
                key: "getPointAt",
                value: function (e, t) {
                  return this.getPoint(e, t);
                },
              },
              {
                key: "getTangent",
                value: function (e) {
                  return (
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : new Zr()
                  )
                    .subVectors(this.v2, this.v1)
                    .normalize();
                },
              },
              {
                key: "getTangentAt",
                value: function (e, t) {
                  return this.getTangent(e, t);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    this.v1.copy(e.v1),
                    this.v2.copy(e.v2),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = L(_(n.prototype), "toJSON", this).call(this);
                  return (
                    (e.v1 = this.v1.toArray()), (e.v2 = this.v2.toArray()), e
                  );
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  return (
                    L(_(n.prototype), "fromJSON", this).call(this, e),
                    this.v1.fromArray(e.v1),
                    this.v2.fromArray(e.v2),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(vc),
        Rc = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new dr(),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new dr(),
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : new dr();
            return (
              p(this, n),
              ((e = t.call(this)).isQuadraticBezierCurve = !0),
              (e.type = "QuadraticBezierCurve"),
              (e.v0 = r),
              (e.v1 = i),
              (e.v2 = a),
              e
            );
          }
          return (
            g(n, [
              {
                key: "getPoint",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : new dr(),
                    n = this.v0,
                    r = this.v1,
                    i = this.v2;
                  return t.set(Ec(e, n.x, r.x, i.x), Ec(e, n.y, r.y, i.y)), t;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    this.v0.copy(e.v0),
                    this.v1.copy(e.v1),
                    this.v2.copy(e.v2),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = L(_(n.prototype), "toJSON", this).call(this);
                  return (
                    (e.v0 = this.v0.toArray()),
                    (e.v1 = this.v1.toArray()),
                    (e.v2 = this.v2.toArray()),
                    e
                  );
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  return (
                    L(_(n.prototype), "fromJSON", this).call(this, e),
                    this.v0.fromArray(e.v0),
                    this.v1.fromArray(e.v1),
                    this.v2.fromArray(e.v2),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(vc),
        Lc = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Zr(),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new Zr(),
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : new Zr();
            return (
              p(this, n),
              ((e = t.call(this)).isQuadraticBezierCurve3 = !0),
              (e.type = "QuadraticBezierCurve3"),
              (e.v0 = r),
              (e.v1 = i),
              (e.v2 = a),
              e
            );
          }
          return (
            g(n, [
              {
                key: "getPoint",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : new Zr(),
                    n = this.v0,
                    r = this.v1,
                    i = this.v2;
                  return (
                    t.set(
                      Ec(e, n.x, r.x, i.x),
                      Ec(e, n.y, r.y, i.y),
                      Ec(e, n.z, r.z, i.z)
                    ),
                    t
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    this.v0.copy(e.v0),
                    this.v1.copy(e.v1),
                    this.v2.copy(e.v2),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = L(_(n.prototype), "toJSON", this).call(this);
                  return (
                    (e.v0 = this.v0.toArray()),
                    (e.v1 = this.v1.toArray()),
                    (e.v2 = this.v2.toArray()),
                    e
                  );
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  return (
                    L(_(n.prototype), "fromJSON", this).call(this, e),
                    this.v0.fromArray(e.v0),
                    this.v1.fromArray(e.v1),
                    this.v2.fromArray(e.v2),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(vc),
        Ic = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : [];
            return (
              p(this, n),
              ((e = t.call(this)).isSplineCurve = !0),
              (e.type = "SplineCurve"),
              (e.points = r),
              e
            );
          }
          return (
            g(n, [
              {
                key: "getPoint",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : new dr(),
                    n = this.points,
                    r = (n.length - 1) * e,
                    i = Math.floor(r),
                    a = r - i,
                    o = n[0 === i ? i : i - 1],
                    s = n[i],
                    l = n[i > n.length - 2 ? n.length - 1 : i + 1],
                    u = n[i > n.length - 3 ? n.length - 1 : i + 2];
                  return (
                    t.set(Mc(a, o.x, s.x, l.x, u.x), Mc(a, o.y, s.y, l.y, u.y)),
                    t
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  L(_(n.prototype), "copy", this).call(this, e),
                    (this.points = []);
                  for (var t = 0, r = e.points.length; t < r; t++) {
                    var i = e.points[t];
                    this.points.push(i.clone());
                  }
                  return this;
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = L(_(n.prototype), "toJSON", this).call(this);
                  e.points = [];
                  for (var t = 0, r = this.points.length; t < r; t++) {
                    var i = this.points[t];
                    e.points.push(i.toArray());
                  }
                  return e;
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  L(_(n.prototype), "fromJSON", this).call(this, e),
                    (this.points = []);
                  for (var t = 0, r = e.points.length; t < r; t++) {
                    var i = e.points[t];
                    this.points.push(new dr().fromArray(i));
                  }
                  return this;
                },
              },
            ]),
            n
          );
        })(vc),
        Nc = Object.freeze({
          __proto__: null,
          ArcCurve: gc,
          CatmullRomCurve3: wc,
          CubicBezierCurve: Tc,
          CubicBezierCurve3: Ac,
          EllipseCurve: mc,
          LineCurve: Cc,
          LineCurve3: Pc,
          QuadraticBezierCurve: Rc,
          QuadraticBezierCurve3: Lc,
          SplineCurve: Ic,
        }),
        Oc = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e;
            return (
              p(this, n),
              ((e = t.call(this)).type = "CurvePath"),
              (e.curves = []),
              (e.autoClose = !1),
              e
            );
          }
          return (
            g(n, [
              {
                key: "add",
                value: function (e) {
                  this.curves.push(e);
                },
              },
              {
                key: "closePath",
                value: function () {
                  var e = this.curves[0].getPoint(0),
                    t = this.curves[this.curves.length - 1].getPoint(1);
                  e.equals(t) || this.curves.push(new Cc(t, e));
                },
              },
              {
                key: "getPoint",
                value: function (e, t) {
                  for (
                    var n = e * this.getLength(),
                      r = this.getCurveLengths(),
                      i = 0;
                    i < r.length;

                  ) {
                    if (r[i] >= n) {
                      var a = r[i] - n,
                        o = this.curves[i],
                        s = o.getLength(),
                        l = 0 === s ? 0 : 1 - a / s;
                      return o.getPointAt(l, t);
                    }
                    i++;
                  }
                  return null;
                },
              },
              {
                key: "getLength",
                value: function () {
                  var e = this.getCurveLengths();
                  return e[e.length - 1];
                },
              },
              {
                key: "updateArcLengths",
                value: function () {
                  (this.needsUpdate = !0),
                    (this.cacheLengths = null),
                    this.getCurveLengths();
                },
              },
              {
                key: "getCurveLengths",
                value: function () {
                  if (
                    this.cacheLengths &&
                    this.cacheLengths.length === this.curves.length
                  )
                    return this.cacheLengths;
                  for (
                    var e = [], t = 0, n = 0, r = this.curves.length;
                    n < r;
                    n++
                  )
                    (t += this.curves[n].getLength()), e.push(t);
                  return (this.cacheLengths = e), e;
                },
              },
              {
                key: "getSpacedPoints",
                value: function () {
                  for (
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : 40,
                      t = [],
                      n = 0;
                    n <= e;
                    n++
                  )
                    t.push(this.getPoint(n / e));
                  return this.autoClose && t.push(t[0]), t;
                },
              },
              {
                key: "getPoints",
                value: function () {
                  for (
                    var e,
                      t =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : 12,
                      n = [],
                      r = 0,
                      i = this.curves;
                    r < i.length;
                    r++
                  )
                    for (
                      var a = i[r],
                        o = a.isEllipseCurve
                          ? 2 * t
                          : a.isLineCurve || a.isLineCurve3
                          ? 1
                          : a.isSplineCurve
                          ? t * a.points.length
                          : t,
                        s = a.getPoints(o),
                        l = 0;
                      l < s.length;
                      l++
                    ) {
                      var u = s[l];
                      (e && e.equals(u)) || (n.push(u), (e = u));
                    }
                  return (
                    this.autoClose &&
                      n.length > 1 &&
                      !n[n.length - 1].equals(n[0]) &&
                      n.push(n[0]),
                    n
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  L(_(n.prototype), "copy", this).call(this, e),
                    (this.curves = []);
                  for (var t = 0, r = e.curves.length; t < r; t++) {
                    var i = e.curves[t];
                    this.curves.push(i.clone());
                  }
                  return (this.autoClose = e.autoClose), this;
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = L(_(n.prototype), "toJSON", this).call(this);
                  (e.autoClose = this.autoClose), (e.curves = []);
                  for (var t = 0, r = this.curves.length; t < r; t++) {
                    var i = this.curves[t];
                    e.curves.push(i.toJSON());
                  }
                  return e;
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  L(_(n.prototype), "fromJSON", this).call(this, e),
                    (this.autoClose = e.autoClose),
                    (this.curves = []);
                  for (var t = 0, r = e.curves.length; t < r; t++) {
                    var i = e.curves[t];
                    this.curves.push(new Nc[i.type]().fromJSON(i));
                  }
                  return this;
                },
              },
            ]),
            n
          );
        })(vc),
        Dc = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return (
              p(this, n),
              ((r = t.call(this)).type = "Path"),
              (r.currentPoint = new dr()),
              e && r.setFromPoints(e),
              r
            );
          }
          return (
            g(n, [
              {
                key: "setFromPoints",
                value: function (e) {
                  this.moveTo(e[0].x, e[0].y);
                  for (var t = 1, n = e.length; t < n; t++)
                    this.lineTo(e[t].x, e[t].y);
                  return this;
                },
              },
              {
                key: "moveTo",
                value: function (e, t) {
                  return this.currentPoint.set(e, t), this;
                },
              },
              {
                key: "lineTo",
                value: function (e, t) {
                  var n = new Cc(this.currentPoint.clone(), new dr(e, t));
                  return this.curves.push(n), this.currentPoint.set(e, t), this;
                },
              },
              {
                key: "quadraticCurveTo",
                value: function (e, t, n, r) {
                  var i = new Rc(
                    this.currentPoint.clone(),
                    new dr(e, t),
                    new dr(n, r)
                  );
                  return this.curves.push(i), this.currentPoint.set(n, r), this;
                },
              },
              {
                key: "bezierCurveTo",
                value: function (e, t, n, r, i, a) {
                  var o = new Tc(
                    this.currentPoint.clone(),
                    new dr(e, t),
                    new dr(n, r),
                    new dr(i, a)
                  );
                  return this.curves.push(o), this.currentPoint.set(i, a), this;
                },
              },
              {
                key: "splineThru",
                value: function (e) {
                  var t = [this.currentPoint.clone()].concat(e),
                    n = new Ic(t);
                  return (
                    this.curves.push(n),
                    this.currentPoint.copy(e[e.length - 1]),
                    this
                  );
                },
              },
              {
                key: "arc",
                value: function (e, t, n, r, i, a) {
                  var o = this.currentPoint.x,
                    s = this.currentPoint.y;
                  return this.absarc(e + o, t + s, n, r, i, a), this;
                },
              },
              {
                key: "absarc",
                value: function (e, t, n, r, i, a) {
                  return this.absellipse(e, t, n, n, r, i, a), this;
                },
              },
              {
                key: "ellipse",
                value: function (e, t, n, r, i, a, o, s) {
                  var l = this.currentPoint.x,
                    u = this.currentPoint.y;
                  return this.absellipse(e + l, t + u, n, r, i, a, o, s), this;
                },
              },
              {
                key: "absellipse",
                value: function (e, t, n, r, i, a, o, s) {
                  var l = new mc(e, t, n, r, i, a, o, s);
                  if (this.curves.length > 0) {
                    var u = l.getPoint(0);
                    u.equals(this.currentPoint) || this.lineTo(u.x, u.y);
                  }
                  this.curves.push(l);
                  var c = l.getPoint(1);
                  return this.currentPoint.copy(c), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    this.currentPoint.copy(e.currentPoint),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = L(_(n.prototype), "toJSON", this).call(this);
                  return (e.currentPoint = this.currentPoint.toArray()), e;
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  return (
                    L(_(n.prototype), "fromJSON", this).call(this, e),
                    this.currentPoint.fromArray(e.currentPoint),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(Oc),
        Uc = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : [new dr(0, -0.5), new dr(0.5, 0), new dr(0, 0.5)],
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 12,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 2 * Math.PI;
            p(this, n),
              ((e = t.call(this)).type = "LatheGeometry"),
              (e.parameters = {
                points: r,
                segments: i,
                phiStart: a,
                phiLength: o,
              }),
              (i = Math.floor(i)),
              (o = nr(o, 0, 2 * Math.PI));
            for (
              var s = [],
                l = [],
                u = [],
                c = [],
                d = [],
                f = 1 / i,
                h = new Zr(),
                v = new dr(),
                m = new Zr(),
                g = new Zr(),
                y = new Zr(),
                b = 0,
                _ = 0,
                x = 0;
              x <= r.length - 1;
              x++
            )
              switch (x) {
                case 0:
                  (b = r[x + 1].x - r[x].x),
                    (_ = r[x + 1].y - r[x].y),
                    (m.x = 1 * _),
                    (m.y = -b),
                    (m.z = 0 * _),
                    y.copy(m),
                    m.normalize(),
                    c.push(m.x, m.y, m.z);
                  break;
                case r.length - 1:
                  c.push(y.x, y.y, y.z);
                  break;
                default:
                  (b = r[x + 1].x - r[x].x),
                    (_ = r[x + 1].y - r[x].y),
                    (m.x = 1 * _),
                    (m.y = -b),
                    (m.z = 0 * _),
                    g.copy(m),
                    (m.x += y.x),
                    (m.y += y.y),
                    (m.z += y.z),
                    m.normalize(),
                    c.push(m.x, m.y, m.z),
                    y.copy(g);
              }
            for (var S = 0; S <= i; S++)
              for (
                var w = a + S * f * o, M = Math.sin(w), E = Math.cos(w), k = 0;
                k <= r.length - 1;
                k++
              ) {
                (h.x = r[k].x * M),
                  (h.y = r[k].y),
                  (h.z = r[k].x * E),
                  l.push(h.x, h.y, h.z),
                  (v.x = S / i),
                  (v.y = k / (r.length - 1)),
                  u.push(v.x, v.y);
                var T = c[3 * k + 0] * M,
                  A = c[3 * k + 1],
                  C = c[3 * k + 0] * E;
                d.push(T, A, C);
              }
            for (var P = 0; P < i; P++)
              for (var R = 0; R < r.length - 1; R++) {
                var L = R + P * r.length,
                  I = L,
                  N = L + r.length,
                  O = L + r.length + 1,
                  D = L + 1;
                s.push(I, N, D), s.push(O, D, N);
              }
            return (
              e.setIndex(s),
              e.setAttribute("position", new ka(l, 3)),
              e.setAttribute("uv", new ka(u, 2)),
              e.setAttribute("normal", new ka(d, 3)),
              e
            );
          }
          return (
            g(
              n,
              [
                {
                  key: "copy",
                  value: function (e) {
                    return (
                      L(_(n.prototype), "copy", this).call(this, e),
                      (this.parameters = Object.assign({}, e.parameters)),
                      this
                    );
                  },
                },
              ],
              [
                {
                  key: "fromJSON",
                  value: function (e) {
                    return new n(e.points, e.segments, e.phiStart, e.phiLength);
                  },
                },
              ]
            ),
            n
          );
        })(Oa),
        zc = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 4,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 8;
            p(this, n);
            var s = new Dc();
            return (
              s.absarc(0, -i / 2, r, 1.5 * Math.PI, 0),
              s.absarc(0, i / 2, r, 0, 0.5 * Math.PI),
              ((e = t.call(this, s.getPoints(a), o)).type = "CapsuleGeometry"),
              (e.parameters = {
                radius: r,
                height: i,
                capSegments: a,
                radialSegments: o,
              }),
              e
            );
          }
          return (
            g(n, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new n(
                    e.radius,
                    e.length,
                    e.capSegments,
                    e.radialSegments
                  );
                },
              },
            ]),
            n
          );
        })(Uc),
        Fc = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 32,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 2 * Math.PI;
            p(this, n),
              ((e = t.call(this)).type = "CircleGeometry"),
              (e.parameters = {
                radius: r,
                segments: i,
                thetaStart: a,
                thetaLength: o,
              }),
              (i = Math.max(3, i));
            var s = [],
              l = [],
              u = [],
              c = [],
              d = new Zr(),
              f = new dr();
            l.push(0, 0, 0), u.push(0, 0, 1), c.push(0.5, 0.5);
            for (var h = 0, v = 3; h <= i; h++, v += 3) {
              var m = a + (h / i) * o;
              (d.x = r * Math.cos(m)),
                (d.y = r * Math.sin(m)),
                l.push(d.x, d.y, d.z),
                u.push(0, 0, 1),
                (f.x = (l[v] / r + 1) / 2),
                (f.y = (l[v + 1] / r + 1) / 2),
                c.push(f.x, f.y);
            }
            for (var g = 1; g <= i; g++) s.push(g, g + 1, 0);
            return (
              e.setIndex(s),
              e.setAttribute("position", new ka(l, 3)),
              e.setAttribute("normal", new ka(u, 3)),
              e.setAttribute("uv", new ka(c, 2)),
              e
            );
          }
          return (
            g(
              n,
              [
                {
                  key: "copy",
                  value: function (e) {
                    return (
                      L(_(n.prototype), "copy", this).call(this, e),
                      (this.parameters = Object.assign({}, e.parameters)),
                      this
                    );
                  },
                },
              ],
              [
                {
                  key: "fromJSON",
                  value: function (e) {
                    return new n(
                      e.radius,
                      e.segments,
                      e.thetaStart,
                      e.thetaLength
                    );
                  },
                },
              ]
            ),
            n
          );
        })(Oa),
        Bc = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 32,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 1,
              l =
                arguments.length > 5 && void 0 !== arguments[5] && arguments[5],
              u =
                arguments.length > 6 && void 0 !== arguments[6]
                  ? arguments[6]
                  : 0,
              c =
                arguments.length > 7 && void 0 !== arguments[7]
                  ? arguments[7]
                  : 2 * Math.PI;
            p(this, n),
              ((e = t.call(this)).type = "CylinderGeometry"),
              (e.parameters = {
                radiusTop: r,
                radiusBottom: i,
                height: a,
                radialSegments: o,
                heightSegments: s,
                openEnded: l,
                thetaStart: u,
                thetaLength: c,
              });
            var d = E(e);
            (o = Math.floor(o)), (s = Math.floor(s));
            var f = [],
              h = [],
              v = [],
              m = [],
              g = 0,
              y = [],
              b = a / 2,
              _ = 0;
            function x(e) {
              for (
                var t = g,
                  n = new dr(),
                  a = new Zr(),
                  s = 0,
                  l = !0 === e ? r : i,
                  p = !0 === e ? 1 : -1,
                  y = 1;
                y <= o;
                y++
              )
                h.push(0, b * p, 0), v.push(0, p, 0), m.push(0.5, 0.5), g++;
              for (var x = g, S = 0; S <= o; S++) {
                var w = (S / o) * c + u,
                  M = Math.cos(w),
                  E = Math.sin(w);
                (a.x = l * E),
                  (a.y = b * p),
                  (a.z = l * M),
                  h.push(a.x, a.y, a.z),
                  v.push(0, p, 0),
                  (n.x = 0.5 * M + 0.5),
                  (n.y = 0.5 * E * p + 0.5),
                  m.push(n.x, n.y),
                  g++;
              }
              for (var k = 0; k < o; k++) {
                var T = t + k,
                  A = x + k;
                !0 === e ? f.push(A, A + 1, T) : f.push(A + 1, A, T), (s += 3);
              }
              d.addGroup(_, s, !0 === e ? 1 : 2), (_ += s);
            }
            return (
              (function () {
                for (
                  var e = new Zr(), t = new Zr(), n = 0, l = (i - r) / a, p = 0;
                  p <= s;
                  p++
                ) {
                  for (
                    var x = [], S = p / s, w = S * (i - r) + r, M = 0;
                    M <= o;
                    M++
                  ) {
                    var E = M / o,
                      k = E * c + u,
                      T = Math.sin(k),
                      A = Math.cos(k);
                    (t.x = w * T),
                      (t.y = -S * a + b),
                      (t.z = w * A),
                      h.push(t.x, t.y, t.z),
                      e.set(T, l, A).normalize(),
                      v.push(e.x, e.y, e.z),
                      m.push(E, 1 - S),
                      x.push(g++);
                  }
                  y.push(x);
                }
                for (var C = 0; C < o; C++)
                  for (var P = 0; P < s; P++) {
                    var R = y[P][C],
                      L = y[P + 1][C],
                      I = y[P + 1][C + 1],
                      N = y[P][C + 1];
                    f.push(R, L, N), f.push(L, I, N), (n += 6);
                  }
                d.addGroup(_, n, 0), (_ += n);
              })(),
              !1 === l && (r > 0 && x(!0), i > 0 && x(!1)),
              e.setIndex(f),
              e.setAttribute("position", new ka(h, 3)),
              e.setAttribute("normal", new ka(v, 3)),
              e.setAttribute("uv", new ka(m, 2)),
              e
            );
          }
          return (
            g(
              n,
              [
                {
                  key: "copy",
                  value: function (e) {
                    return (
                      L(_(n.prototype), "copy", this).call(this, e),
                      (this.parameters = Object.assign({}, e.parameters)),
                      this
                    );
                  },
                },
              ],
              [
                {
                  key: "fromJSON",
                  value: function (e) {
                    return new n(
                      e.radiusTop,
                      e.radiusBottom,
                      e.height,
                      e.radialSegments,
                      e.heightSegments,
                      e.openEnded,
                      e.thetaStart,
                      e.thetaLength
                    );
                  },
                },
              ]
            ),
            n
          );
        })(Oa),
        Zc = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 32,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1,
              s =
                arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
              l =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : 0,
              u =
                arguments.length > 6 && void 0 !== arguments[6]
                  ? arguments[6]
                  : 2 * Math.PI;
            return (
              p(this, n),
              ((e = t.call(this, 0, r, i, a, o, s, l, u)).type =
                "ConeGeometry"),
              (e.parameters = {
                radius: r,
                height: i,
                radialSegments: a,
                heightSegments: o,
                openEnded: s,
                thetaStart: l,
                thetaLength: u,
              }),
              e
            );
          }
          return (
            g(n, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new n(
                    e.radius,
                    e.height,
                    e.radialSegments,
                    e.heightSegments,
                    e.openEnded,
                    e.thetaStart,
                    e.thetaLength
                  );
                },
              },
            ]),
            n
          );
        })(Bc),
        Hc = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : [],
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : [],
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 0;
            p(this, n),
              ((e = t.call(this)).type = "PolyhedronGeometry"),
              (e.parameters = {
                vertices: r,
                indices: i,
                radius: a,
                detail: o,
              });
            var s = [],
              l = [];
            function u(e, t, n, r) {
              for (var i = r + 1, a = [], o = 0; o <= i; o++) {
                a[o] = [];
                for (
                  var s = e.clone().lerp(n, o / i),
                    l = t.clone().lerp(n, o / i),
                    u = i - o,
                    d = 0;
                  d <= u;
                  d++
                )
                  a[o][d] = 0 === d && o === i ? s : s.clone().lerp(l, d / u);
              }
              for (var f = 0; f < i; f++)
                for (var h = 0; h < 2 * (i - f) - 1; h++) {
                  var p = Math.floor(h / 2);
                  h % 2 === 0
                    ? (c(a[f][p + 1]), c(a[f + 1][p]), c(a[f][p]))
                    : (c(a[f][p + 1]), c(a[f + 1][p + 1]), c(a[f + 1][p]));
                }
            }
            function c(e) {
              s.push(e.x, e.y, e.z);
            }
            function d(e, t) {
              var n = 3 * e;
              (t.x = r[n + 0]), (t.y = r[n + 1]), (t.z = r[n + 2]);
            }
            function f(e, t, n, r) {
              r < 0 && 1 === e.x && (l[t] = e.x - 1),
                0 === n.x && 0 === n.z && (l[t] = r / 2 / Math.PI + 0.5);
            }
            function h(e) {
              return Math.atan2(e.z, -e.x);
            }
            return (
              (function (e) {
                for (
                  var t = new Zr(), n = new Zr(), r = new Zr(), a = 0;
                  a < i.length;
                  a += 3
                )
                  d(i[a + 0], t), d(i[a + 1], n), d(i[a + 2], r), u(t, n, r, e);
              })(o),
              (function (e) {
                for (var t = new Zr(), n = 0; n < s.length; n += 3)
                  (t.x = s[n + 0]),
                    (t.y = s[n + 1]),
                    (t.z = s[n + 2]),
                    t.normalize().multiplyScalar(e),
                    (s[n + 0] = t.x),
                    (s[n + 1] = t.y),
                    (s[n + 2] = t.z);
              })(a),
              (function () {
                for (var e = new Zr(), t = 0; t < s.length; t += 3) {
                  (e.x = s[t + 0]), (e.y = s[t + 1]), (e.z = s[t + 2]);
                  var n = h(e) / 2 / Math.PI + 0.5,
                    r =
                      ((i = e),
                      Math.atan2(-i.y, Math.sqrt(i.x * i.x + i.z * i.z)) /
                        Math.PI +
                        0.5);
                  l.push(n, 1 - r);
                }
                var i;
                (function () {
                  for (
                    var e = new Zr(),
                      t = new Zr(),
                      n = new Zr(),
                      r = new Zr(),
                      i = new dr(),
                      a = new dr(),
                      o = new dr(),
                      u = 0,
                      c = 0;
                    u < s.length;
                    u += 9, c += 6
                  ) {
                    e.set(s[u + 0], s[u + 1], s[u + 2]),
                      t.set(s[u + 3], s[u + 4], s[u + 5]),
                      n.set(s[u + 6], s[u + 7], s[u + 8]),
                      i.set(l[c + 0], l[c + 1]),
                      a.set(l[c + 2], l[c + 3]),
                      o.set(l[c + 4], l[c + 5]),
                      r.copy(e).add(t).add(n).divideScalar(3);
                    var d = h(r);
                    f(i, c + 0, e, d), f(a, c + 2, t, d), f(o, c + 4, n, d);
                  }
                })(),
                  (function () {
                    for (var e = 0; e < l.length; e += 6) {
                      var t = l[e + 0],
                        n = l[e + 2],
                        r = l[e + 4],
                        i = Math.max(t, n, r),
                        a = Math.min(t, n, r);
                      i > 0.9 &&
                        a < 0.1 &&
                        (t < 0.2 && (l[e + 0] += 1),
                        n < 0.2 && (l[e + 2] += 1),
                        r < 0.2 && (l[e + 4] += 1));
                    }
                  })();
              })(),
              e.setAttribute("position", new ka(s, 3)),
              e.setAttribute("normal", new ka(s.slice(), 3)),
              e.setAttribute("uv", new ka(l, 2)),
              0 === o ? e.computeVertexNormals() : e.normalizeNormals(),
              e
            );
          }
          return (
            g(
              n,
              [
                {
                  key: "copy",
                  value: function (e) {
                    return (
                      L(_(n.prototype), "copy", this).call(this, e),
                      (this.parameters = Object.assign({}, e.parameters)),
                      this
                    );
                  },
                },
              ],
              [
                {
                  key: "fromJSON",
                  value: function (e) {
                    return new n(e.vertices, e.indices, e.radius, e.details);
                  },
                },
              ]
            ),
            n
          );
        })(Oa),
        Vc = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0;
            p(this, n);
            var a = (1 + Math.sqrt(5)) / 2,
              o = 1 / a,
              s = [
                -1,
                -1,
                -1,
                -1,
                -1,
                1,
                -1,
                1,
                -1,
                -1,
                1,
                1,
                1,
                -1,
                -1,
                1,
                -1,
                1,
                1,
                1,
                -1,
                1,
                1,
                1,
                0,
                -o,
                -a,
                0,
                -o,
                a,
                0,
                o,
                -a,
                0,
                o,
                a,
                -o,
                -a,
                0,
                -o,
                a,
                0,
                o,
                -a,
                0,
                o,
                a,
                0,
                -a,
                0,
                -o,
                a,
                0,
                -o,
                -a,
                0,
                o,
                a,
                0,
                o,
              ];
            return (
              ((e = t.call(
                this,
                s,
                [
                  3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15,
                  17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10,
                  0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15,
                  2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3,
                  4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7,
                  19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9,
                ],
                r,
                i
              )).type = "DodecahedronGeometry"),
              (e.parameters = { radius: r, detail: i }),
              e
            );
          }
          return (
            g(n, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new n(e.radius, e.detail);
                },
              },
            ]),
            n
          );
        })(Hc),
        Gc = new Zr(),
        Wc = new Zr(),
        jc = new Zr(),
        Xc = new ea(),
        qc = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : null,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1;
            if (
              (p(this, n),
              ((e = t.call(this)).type = "EdgesGeometry"),
              (e.parameters = { geometry: r, thresholdAngle: i }),
              null !== r)
            ) {
              for (
                var a = Math.pow(10, 4),
                  o = Math.cos(Qn * i),
                  s = r.getIndex(),
                  l = r.getAttribute("position"),
                  u = s ? s.count : l.count,
                  c = [0, 0, 0],
                  d = ["a", "b", "c"],
                  f = new Array(3),
                  h = {},
                  v = [],
                  m = 0;
                m < u;
                m += 3
              ) {
                s
                  ? ((c[0] = s.getX(m)),
                    (c[1] = s.getX(m + 1)),
                    (c[2] = s.getX(m + 2)))
                  : ((c[0] = m), (c[1] = m + 1), (c[2] = m + 2));
                var g = Xc.a,
                  y = Xc.b,
                  b = Xc.c;
                if (
                  (g.fromBufferAttribute(l, c[0]),
                  y.fromBufferAttribute(l, c[1]),
                  b.fromBufferAttribute(l, c[2]),
                  Xc.getNormal(jc),
                  (f[0] = ""
                    .concat(Math.round(g.x * a), ",")
                    .concat(Math.round(g.y * a), ",")
                    .concat(Math.round(g.z * a))),
                  (f[1] = ""
                    .concat(Math.round(y.x * a), ",")
                    .concat(Math.round(y.y * a), ",")
                    .concat(Math.round(y.z * a))),
                  (f[2] = ""
                    .concat(Math.round(b.x * a), ",")
                    .concat(Math.round(b.y * a), ",")
                    .concat(Math.round(b.z * a))),
                  f[0] !== f[1] && f[1] !== f[2] && f[2] !== f[0])
                )
                  for (var _ = 0; _ < 3; _++) {
                    var x = (_ + 1) % 3,
                      S = f[_],
                      w = f[x],
                      M = Xc[d[_]],
                      E = Xc[d[x]],
                      k = "".concat(S, "_").concat(w),
                      T = "".concat(w, "_").concat(S);
                    T in h && h[T]
                      ? (jc.dot(h[T].normal) <= o &&
                          (v.push(M.x, M.y, M.z), v.push(E.x, E.y, E.z)),
                        (h[T] = null))
                      : k in h ||
                        (h[k] = {
                          index0: c[_],
                          index1: c[x],
                          normal: jc.clone(),
                        });
                  }
              }
              for (var A in h)
                if (h[A]) {
                  var C = h[A],
                    P = C.index0,
                    R = C.index1;
                  Gc.fromBufferAttribute(l, P),
                    Wc.fromBufferAttribute(l, R),
                    v.push(Gc.x, Gc.y, Gc.z),
                    v.push(Wc.x, Wc.y, Wc.z);
                }
              e.setAttribute("position", new ka(v, 3));
            }
            return e;
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    (this.parameters = Object.assign({}, e.parameters)),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(Oa),
        Yc = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return (
              p(this, n),
              ((r = t.call(this, e)).uuid = tr()),
              (r.type = "Shape"),
              (r.holes = []),
              r
            );
          }
          return (
            g(n, [
              {
                key: "getPointsHoles",
                value: function (e) {
                  for (var t = [], n = 0, r = this.holes.length; n < r; n++)
                    t[n] = this.holes[n].getPoints(e);
                  return t;
                },
              },
              {
                key: "extractPoints",
                value: function (e) {
                  return {
                    shape: this.getPoints(e),
                    holes: this.getPointsHoles(e),
                  };
                },
              },
              {
                key: "copy",
                value: function (e) {
                  L(_(n.prototype), "copy", this).call(this, e),
                    (this.holes = []);
                  for (var t = 0, r = e.holes.length; t < r; t++) {
                    var i = e.holes[t];
                    this.holes.push(i.clone());
                  }
                  return this;
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = L(_(n.prototype), "toJSON", this).call(this);
                  (e.uuid = this.uuid), (e.holes = []);
                  for (var t = 0, r = this.holes.length; t < r; t++) {
                    var i = this.holes[t];
                    e.holes.push(i.toJSON());
                  }
                  return e;
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  L(_(n.prototype), "fromJSON", this).call(this, e),
                    (this.uuid = e.uuid),
                    (this.holes = []);
                  for (var t = 0, r = e.holes.length; t < r; t++) {
                    var i = e.holes[t];
                    this.holes.push(new Dc().fromJSON(i));
                  }
                  return this;
                },
              },
            ]),
            n
          );
        })(Dc),
        Kc = function (e, t) {
          var n,
            r,
            i,
            a,
            o,
            s,
            l,
            u =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 2,
            c = t && t.length,
            d = c ? t[0] * u : e.length,
            f = $c(e, 0, d, u, !0),
            h = [];
          if (!f || f.next === f.prev) return h;
          if (
            (c &&
              (f = (function (e, t, n, r) {
                var i,
                  a,
                  o,
                  s = [];
                for (i = 0, a = t.length; i < a; i++)
                  (o = $c(
                    e,
                    t[i] * r,
                    i < a - 1 ? t[i + 1] * r : e.length,
                    r,
                    !1
                  )) === o.next && (o.steiner = !0),
                    s.push(ld(o));
                for (s.sort(id), i = 0; i < s.length; i++) n = ad(s[i], n);
                return n;
              })(e, t, f, u)),
            e.length > 80 * u)
          ) {
            (n = i = e[0]), (r = a = e[1]);
            for (var p = u; p < d; p += u)
              (o = e[p]) < n && (n = o),
                (s = e[p + 1]) < r && (r = s),
                o > i && (i = o),
                s > a && (a = s);
            l = 0 !== (l = Math.max(i - n, a - r)) ? 32767 / l : 0;
          }
          return Qc(f, h, u, n, r, l, 0), h;
        };
      function $c(e, t, n, r, i) {
        var a, o;
        if (
          i ===
          (function (e, t, n, r) {
            for (var i = 0, a = t, o = n - r; a < n; a += r)
              (i += (e[o] - e[a]) * (e[a + 1] + e[o + 1])), (o = a);
            return i;
          })(e, t, n, r) >
            0
        )
          for (a = t; a < n; a += r) o = yd(a, e[a], e[a + 1], o);
        else for (a = n - r; a >= t; a -= r) o = yd(a, e[a], e[a + 1], o);
        return o && fd(o, o.next) && (bd(o), (o = o.next)), o;
      }
      function Jc(e, t) {
        if (!e) return e;
        t || (t = e);
        var n,
          r = e;
        do {
          if (
            ((n = !1),
            r.steiner || (!fd(r, r.next) && 0 !== dd(r.prev, r, r.next)))
          )
            r = r.next;
          else {
            if ((bd(r), (r = t = r.prev) === r.next)) break;
            n = !0;
          }
        } while (n || r !== t);
        return t;
      }
      function Qc(e, t, n, r, i, a, o) {
        if (e) {
          !o &&
            a &&
            (function (e, t, n, r) {
              var i = e;
              do {
                0 === i.z && (i.z = sd(i.x, i.y, t, n, r)),
                  (i.prevZ = i.prev),
                  (i.nextZ = i.next),
                  (i = i.next);
              } while (i !== e);
              (i.prevZ.nextZ = null),
                (i.prevZ = null),
                (function (e) {
                  var t,
                    n,
                    r,
                    i,
                    a,
                    o,
                    s,
                    l,
                    u = 1;
                  do {
                    for (n = e, e = null, a = null, o = 0; n; ) {
                      for (
                        o++, r = n, s = 0, t = 0;
                        t < u && (s++, (r = r.nextZ));
                        t++
                      );
                      for (l = u; s > 0 || (l > 0 && r); )
                        0 !== s && (0 === l || !r || n.z <= r.z)
                          ? ((i = n), (n = n.nextZ), s--)
                          : ((i = r), (r = r.nextZ), l--),
                          a ? (a.nextZ = i) : (e = i),
                          (i.prevZ = a),
                          (a = i);
                      n = r;
                    }
                    (a.nextZ = null), (u *= 2);
                  } while (o > 1);
                })(i);
            })(e, r, i, a);
          for (var s, l, u = e; e.prev !== e.next; )
            if (((s = e.prev), (l = e.next), a ? td(e, r, i, a) : ed(e)))
              t.push((s.i / n) | 0),
                t.push((e.i / n) | 0),
                t.push((l.i / n) | 0),
                bd(e),
                (e = l.next),
                (u = l.next);
            else if ((e = l) === u) {
              o
                ? 1 === o
                  ? Qc((e = nd(Jc(e), t, n)), t, n, r, i, a, 2)
                  : 2 === o && rd(e, t, n, r, i, a)
                : Qc(Jc(e), t, n, r, i, a, 1);
              break;
            }
        }
      }
      function ed(e) {
        var t = e.prev,
          n = e,
          r = e.next;
        if (dd(t, n, r) >= 0) return !1;
        for (
          var i = t.x,
            a = n.x,
            o = r.x,
            s = t.y,
            l = n.y,
            u = r.y,
            c = i < a ? (i < o ? i : o) : a < o ? a : o,
            d = s < l ? (s < u ? s : u) : l < u ? l : u,
            f = i > a ? (i > o ? i : o) : a > o ? a : o,
            h = s > l ? (s > u ? s : u) : l > u ? l : u,
            p = r.next;
          p !== t;

        ) {
          if (
            p.x >= c &&
            p.x <= f &&
            p.y >= d &&
            p.y <= h &&
            ud(i, s, a, l, o, u, p.x, p.y) &&
            dd(p.prev, p, p.next) >= 0
          )
            return !1;
          p = p.next;
        }
        return !0;
      }
      function td(e, t, n, r) {
        var i = e.prev,
          a = e,
          o = e.next;
        if (dd(i, a, o) >= 0) return !1;
        for (
          var s = i.x,
            l = a.x,
            u = o.x,
            c = i.y,
            d = a.y,
            f = o.y,
            h = s < l ? (s < u ? s : u) : l < u ? l : u,
            p = c < d ? (c < f ? c : f) : d < f ? d : f,
            v = s > l ? (s > u ? s : u) : l > u ? l : u,
            m = c > d ? (c > f ? c : f) : d > f ? d : f,
            g = sd(h, p, t, n, r),
            y = sd(v, m, t, n, r),
            b = e.prevZ,
            _ = e.nextZ;
          b && b.z >= g && _ && _.z <= y;

        ) {
          if (
            b.x >= h &&
            b.x <= v &&
            b.y >= p &&
            b.y <= m &&
            b !== i &&
            b !== o &&
            ud(s, c, l, d, u, f, b.x, b.y) &&
            dd(b.prev, b, b.next) >= 0
          )
            return !1;
          if (
            ((b = b.prevZ),
            _.x >= h &&
              _.x <= v &&
              _.y >= p &&
              _.y <= m &&
              _ !== i &&
              _ !== o &&
              ud(s, c, l, d, u, f, _.x, _.y) &&
              dd(_.prev, _, _.next) >= 0)
          )
            return !1;
          _ = _.nextZ;
        }
        for (; b && b.z >= g; ) {
          if (
            b.x >= h &&
            b.x <= v &&
            b.y >= p &&
            b.y <= m &&
            b !== i &&
            b !== o &&
            ud(s, c, l, d, u, f, b.x, b.y) &&
            dd(b.prev, b, b.next) >= 0
          )
            return !1;
          b = b.prevZ;
        }
        for (; _ && _.z <= y; ) {
          if (
            _.x >= h &&
            _.x <= v &&
            _.y >= p &&
            _.y <= m &&
            _ !== i &&
            _ !== o &&
            ud(s, c, l, d, u, f, _.x, _.y) &&
            dd(_.prev, _, _.next) >= 0
          )
            return !1;
          _ = _.nextZ;
        }
        return !0;
      }
      function nd(e, t, n) {
        var r = e;
        do {
          var i = r.prev,
            a = r.next.next;
          !fd(i, a) &&
            hd(i, r, r.next, a) &&
            md(i, a) &&
            md(a, i) &&
            (t.push((i.i / n) | 0),
            t.push((r.i / n) | 0),
            t.push((a.i / n) | 0),
            bd(r),
            bd(r.next),
            (r = e = a)),
            (r = r.next);
        } while (r !== e);
        return Jc(r);
      }
      function rd(e, t, n, r, i, a) {
        var o = e;
        do {
          for (var s = o.next.next; s !== o.prev; ) {
            if (o.i !== s.i && cd(o, s)) {
              var l = gd(o, s);
              return (
                (o = Jc(o, o.next)),
                (l = Jc(l, l.next)),
                Qc(o, t, n, r, i, a, 0),
                void Qc(l, t, n, r, i, a, 0)
              );
            }
            s = s.next;
          }
          o = o.next;
        } while (o !== e);
      }
      function id(e, t) {
        return e.x - t.x;
      }
      function ad(e, t) {
        var n = (function (e, t) {
          var n,
            r = t,
            i = -1 / 0,
            a = e.x,
            o = e.y;
          do {
            if (o <= r.y && o >= r.next.y && r.next.y !== r.y) {
              var s = r.x + ((o - r.y) * (r.next.x - r.x)) / (r.next.y - r.y);
              if (
                s <= a &&
                s > i &&
                ((i = s), (n = r.x < r.next.x ? r : r.next), s === a)
              )
                return n;
            }
            r = r.next;
          } while (r !== t);
          if (!n) return null;
          var l,
            u = n,
            c = n.x,
            d = n.y,
            f = 1 / 0;
          r = n;
          do {
            a >= r.x &&
              r.x >= c &&
              a !== r.x &&
              ud(o < d ? a : i, o, c, d, o < d ? i : a, o, r.x, r.y) &&
              ((l = Math.abs(o - r.y) / (a - r.x)),
              md(r, e) &&
                (l < f ||
                  (l === f && (r.x > n.x || (r.x === n.x && od(n, r))))) &&
                ((n = r), (f = l))),
              (r = r.next);
          } while (r !== u);
          return n;
        })(e, t);
        if (!n) return t;
        var r = gd(n, e);
        return Jc(r, r.next), Jc(n, n.next);
      }
      function od(e, t) {
        return dd(e.prev, e, t.prev) < 0 && dd(t.next, e, e.next) < 0;
      }
      function sd(e, t, n, r, i) {
        return (
          (e =
            1431655765 &
            ((e =
              858993459 &
              ((e =
                252645135 &
                ((e = 16711935 & ((e = ((e - n) * i) | 0) | (e << 8))) |
                  (e << 4))) |
                (e << 2))) |
              (e << 1))) |
          ((t =
            1431655765 &
            ((t =
              858993459 &
              ((t =
                252645135 &
                ((t = 16711935 & ((t = ((t - r) * i) | 0) | (t << 8))) |
                  (t << 4))) |
                (t << 2))) |
              (t << 1))) <<
            1)
        );
      }
      function ld(e) {
        var t = e,
          n = e;
        do {
          (t.x < n.x || (t.x === n.x && t.y < n.y)) && (n = t), (t = t.next);
        } while (t !== e);
        return n;
      }
      function ud(e, t, n, r, i, a, o, s) {
        return (
          (i - o) * (t - s) >= (e - o) * (a - s) &&
          (e - o) * (r - s) >= (n - o) * (t - s) &&
          (n - o) * (a - s) >= (i - o) * (r - s)
        );
      }
      function cd(e, t) {
        return (
          e.next.i !== t.i &&
          e.prev.i !== t.i &&
          !(function (e, t) {
            var n = e;
            do {
              if (
                n.i !== e.i &&
                n.next.i !== e.i &&
                n.i !== t.i &&
                n.next.i !== t.i &&
                hd(n, n.next, e, t)
              )
                return !0;
              n = n.next;
            } while (n !== e);
            return !1;
          })(e, t) &&
          ((md(e, t) &&
            md(t, e) &&
            (function (e, t) {
              var n = e,
                r = !1,
                i = (e.x + t.x) / 2,
                a = (e.y + t.y) / 2;
              do {
                n.y > a !== n.next.y > a &&
                  n.next.y !== n.y &&
                  i < ((n.next.x - n.x) * (a - n.y)) / (n.next.y - n.y) + n.x &&
                  (r = !r),
                  (n = n.next);
              } while (n !== e);
              return r;
            })(e, t) &&
            (dd(e.prev, e, t.prev) || dd(e, t.prev, t))) ||
            (fd(e, t) &&
              dd(e.prev, e, e.next) > 0 &&
              dd(t.prev, t, t.next) > 0))
        );
      }
      function dd(e, t, n) {
        return (t.y - e.y) * (n.x - t.x) - (t.x - e.x) * (n.y - t.y);
      }
      function fd(e, t) {
        return e.x === t.x && e.y === t.y;
      }
      function hd(e, t, n, r) {
        var i = vd(dd(e, t, n)),
          a = vd(dd(e, t, r)),
          o = vd(dd(n, r, e)),
          s = vd(dd(n, r, t));
        return (
          (i !== a && o !== s) ||
          !(0 !== i || !pd(e, n, t)) ||
          !(0 !== a || !pd(e, r, t)) ||
          !(0 !== o || !pd(n, e, r)) ||
          !(0 !== s || !pd(n, t, r))
        );
      }
      function pd(e, t, n) {
        return (
          t.x <= Math.max(e.x, n.x) &&
          t.x >= Math.min(e.x, n.x) &&
          t.y <= Math.max(e.y, n.y) &&
          t.y >= Math.min(e.y, n.y)
        );
      }
      function vd(e) {
        return e > 0 ? 1 : e < 0 ? -1 : 0;
      }
      function md(e, t) {
        return dd(e.prev, e, e.next) < 0
          ? dd(e, t, e.next) >= 0 && dd(e, e.prev, t) >= 0
          : dd(e, t, e.prev) < 0 || dd(e, e.next, t) < 0;
      }
      function gd(e, t) {
        var n = new _d(e.i, e.x, e.y),
          r = new _d(t.i, t.x, t.y),
          i = e.next,
          a = t.prev;
        return (
          (e.next = t),
          (t.prev = e),
          (n.next = i),
          (i.prev = n),
          (r.next = n),
          (n.prev = r),
          (a.next = r),
          (r.prev = a),
          r
        );
      }
      function yd(e, t, n, r) {
        var i = new _d(e, t, n);
        return (
          r
            ? ((i.next = r.next), (i.prev = r), (r.next.prev = i), (r.next = i))
            : ((i.prev = i), (i.next = i)),
          i
        );
      }
      function bd(e) {
        (e.next.prev = e.prev),
          (e.prev.next = e.next),
          e.prevZ && (e.prevZ.nextZ = e.nextZ),
          e.nextZ && (e.nextZ.prevZ = e.prevZ);
      }
      function _d(e, t, n) {
        (this.i = e),
          (this.x = t),
          (this.y = n),
          (this.prev = null),
          (this.next = null),
          (this.z = 0),
          (this.prevZ = null),
          (this.nextZ = null),
          (this.steiner = !1);
      }
      var xd = (function () {
        function e() {
          p(this, e);
        }
        return (
          g(e, null, [
            {
              key: "area",
              value: function (e) {
                for (var t = e.length, n = 0, r = t - 1, i = 0; i < t; r = i++)
                  n += e[r].x * e[i].y - e[i].x * e[r].y;
                return 0.5 * n;
              },
            },
            {
              key: "isClockWise",
              value: function (t) {
                return e.area(t) < 0;
              },
            },
            {
              key: "triangulateShape",
              value: function (e, t) {
                var n = [],
                  r = [],
                  i = [];
                Sd(e), wd(n, e);
                var a = e.length;
                t.forEach(Sd);
                for (var o = 0; o < t.length; o++)
                  r.push(a), (a += t[o].length), wd(n, t[o]);
                for (var s = Kc(n, r), l = 0; l < s.length; l += 3)
                  i.push(s.slice(l, l + 3));
                return i;
              },
            },
          ]),
          e
        );
      })();
      function Sd(e) {
        var t = e.length;
        t > 2 && e[t - 1].equals(e[0]) && e.pop();
      }
      function wd(e, t) {
        for (var n = 0; n < t.length; n++) e.push(t[n].x), e.push(t[n].y);
      }
      var Md = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Yc([
                      new dr(0.5, 0.5),
                      new dr(-0.5, 0.5),
                      new dr(-0.5, -0.5),
                      new dr(0.5, -0.5),
                    ]),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {};
            p(this, n),
              ((e = t.call(this)).type = "ExtrudeGeometry"),
              (e.parameters = { shapes: r, options: i }),
              (r = Array.isArray(r) ? r : [r]);
            for (
              var a = E(e), o = [], s = [], l = 0, u = r.length;
              l < u;
              l++
            ) {
              c(r[l]);
            }
            function c(e) {
              var t,
                n,
                r,
                l,
                u,
                c = [],
                d = void 0 !== i.curveSegments ? i.curveSegments : 12,
                f = void 0 !== i.steps ? i.steps : 1,
                h = void 0 !== i.depth ? i.depth : 1,
                p = void 0 === i.bevelEnabled || i.bevelEnabled,
                v = void 0 !== i.bevelThickness ? i.bevelThickness : 0.2,
                m = void 0 !== i.bevelSize ? i.bevelSize : v - 0.1,
                g = void 0 !== i.bevelOffset ? i.bevelOffset : 0,
                y = void 0 !== i.bevelSegments ? i.bevelSegments : 3,
                b = i.extrudePath,
                _ = void 0 !== i.UVGenerator ? i.UVGenerator : Ed,
                x = !1;
              b &&
                ((t = b.getSpacedPoints(f)),
                (x = !0),
                (p = !1),
                (n = b.computeFrenetFrames(f, !1)),
                (r = new Zr()),
                (l = new Zr()),
                (u = new Zr())),
                p || ((y = 0), (v = 0), (m = 0), (g = 0));
              var S = e.extractPoints(d),
                w = S.shape,
                M = S.holes;
              if (!xd.isClockWise(w)) {
                w = w.reverse();
                for (var E = 0, k = M.length; E < k; E++) {
                  var T = M[E];
                  xd.isClockWise(T) && (M[E] = T.reverse());
                }
              }
              for (
                var A = xd.triangulateShape(w, M), C = w, P = 0, R = M.length;
                P < R;
                P++
              ) {
                var L = M[P];
                w = w.concat(L);
              }
              function I(e, t, n) {
                return (
                  t ||
                    console.error("THREE.ExtrudeGeometry: vec does not exist"),
                  e.clone().addScaledVector(t, n)
                );
              }
              var N = w.length,
                O = A.length;
              function D(e, t, n) {
                var r,
                  i,
                  a,
                  o = e.x - t.x,
                  s = e.y - t.y,
                  l = n.x - e.x,
                  u = n.y - e.y,
                  c = o * o + s * s,
                  d = o * u - s * l;
                if (Math.abs(d) > Number.EPSILON) {
                  var f = Math.sqrt(c),
                    h = Math.sqrt(l * l + u * u),
                    p = t.x - s / f,
                    v = t.y + o / f,
                    m =
                      ((n.x - u / h - p) * u - (n.y + l / h - v) * l) /
                      (o * u - s * l),
                    g = (r = p + o * m - e.x) * r + (i = v + s * m - e.y) * i;
                  if (g <= 2) return new dr(r, i);
                  a = Math.sqrt(g / 2);
                } else {
                  var y = !1;
                  o > Number.EPSILON
                    ? l > Number.EPSILON && (y = !0)
                    : o < -Number.EPSILON
                    ? l < -Number.EPSILON && (y = !0)
                    : Math.sign(s) === Math.sign(u) && (y = !0),
                    y
                      ? ((r = -s), (i = o), (a = Math.sqrt(c)))
                      : ((r = o), (i = s), (a = Math.sqrt(c / 2)));
                }
                return new dr(r / a, i / a);
              }
              for (
                var U = [], z = 0, F = C.length, B = F - 1, Z = z + 1;
                z < F;
                z++, B++, Z++
              )
                B === F && (B = 0),
                  Z === F && (Z = 0),
                  (U[z] = D(C[z], C[B], C[Z]));
              for (
                var H, V = [], G = U.concat(), W = 0, j = M.length;
                W < j;
                W++
              ) {
                var X = M[W];
                H = [];
                for (
                  var q = 0, Y = X.length, K = Y - 1, $ = q + 1;
                  q < Y;
                  q++, K++, $++
                )
                  K === Y && (K = 0),
                    $ === Y && ($ = 0),
                    (H[q] = D(X[q], X[K], X[$]));
                V.push(H), (G = G.concat(H));
              }
              for (var J = 0; J < y; J++) {
                for (
                  var Q = J / y,
                    ee = v * Math.cos((Q * Math.PI) / 2),
                    te = m * Math.sin((Q * Math.PI) / 2) + g,
                    ne = 0,
                    re = C.length;
                  ne < re;
                  ne++
                ) {
                  var ie = I(C[ne], U[ne], te);
                  Re(ie.x, ie.y, -ee);
                }
                for (var ae = 0, oe = M.length; ae < oe; ae++) {
                  var se = M[ae];
                  H = V[ae];
                  for (var le = 0, ue = se.length; le < ue; le++) {
                    var ce = I(se[le], H[le], te);
                    Re(ce.x, ce.y, -ee);
                  }
                }
              }
              for (var de = m + g, fe = 0; fe < N; fe++) {
                var he = p ? I(w[fe], G[fe], de) : w[fe];
                x
                  ? (l.copy(n.normals[0]).multiplyScalar(he.x),
                    r.copy(n.binormals[0]).multiplyScalar(he.y),
                    u.copy(t[0]).add(l).add(r),
                    Re(u.x, u.y, u.z))
                  : Re(he.x, he.y, 0);
              }
              for (var pe = 1; pe <= f; pe++)
                for (var ve = 0; ve < N; ve++) {
                  var me = p ? I(w[ve], G[ve], de) : w[ve];
                  x
                    ? (l.copy(n.normals[pe]).multiplyScalar(me.x),
                      r.copy(n.binormals[pe]).multiplyScalar(me.y),
                      u.copy(t[pe]).add(l).add(r),
                      Re(u.x, u.y, u.z))
                    : Re(me.x, me.y, (h / f) * pe);
                }
              for (var ge = y - 1; ge >= 0; ge--) {
                for (
                  var ye = ge / y,
                    be = v * Math.cos((ye * Math.PI) / 2),
                    _e = m * Math.sin((ye * Math.PI) / 2) + g,
                    xe = 0,
                    Se = C.length;
                  xe < Se;
                  xe++
                ) {
                  var we = I(C[xe], U[xe], _e);
                  Re(we.x, we.y, h + be);
                }
                for (var Me = 0, Ee = M.length; Me < Ee; Me++) {
                  var ke = M[Me];
                  H = V[Me];
                  for (var Te = 0, Ae = ke.length; Te < Ae; Te++) {
                    var Ce = I(ke[Te], H[Te], _e);
                    x
                      ? Re(Ce.x, Ce.y + t[f - 1].y, t[f - 1].x + be)
                      : Re(Ce.x, Ce.y, h + be);
                  }
                }
              }
              function Pe(e, t) {
                for (var n = e.length; --n >= 0; ) {
                  var r = n,
                    i = n - 1;
                  i < 0 && (i = e.length - 1);
                  for (var a = 0, o = f + 2 * y; a < o; a++) {
                    var s = N * a,
                      l = N * (a + 1);
                    Ie(t + r + s, t + i + s, t + i + l, t + r + l);
                  }
                }
              }
              function Re(e, t, n) {
                c.push(e), c.push(t), c.push(n);
              }
              function Le(e, t, n) {
                Ne(e), Ne(t), Ne(n);
                var r = o.length / 3,
                  i = _.generateTopUV(a, o, r - 3, r - 2, r - 1);
                Oe(i[0]), Oe(i[1]), Oe(i[2]);
              }
              function Ie(e, t, n, r) {
                Ne(e), Ne(t), Ne(r), Ne(t), Ne(n), Ne(r);
                var i = o.length / 3,
                  s = _.generateSideWallUV(a, o, i - 6, i - 3, i - 2, i - 1);
                Oe(s[0]), Oe(s[1]), Oe(s[3]), Oe(s[1]), Oe(s[2]), Oe(s[3]);
              }
              function Ne(e) {
                o.push(c[3 * e + 0]),
                  o.push(c[3 * e + 1]),
                  o.push(c[3 * e + 2]);
              }
              function Oe(e) {
                s.push(e.x), s.push(e.y);
              }
              !(function () {
                var e = o.length / 3;
                if (p) {
                  for (var t = 0, n = N * t, r = 0; r < O; r++) {
                    var i = A[r];
                    Le(i[2] + n, i[1] + n, i[0] + n);
                  }
                  n = N * (t = f + 2 * y);
                  for (var s = 0; s < O; s++) {
                    var l = A[s];
                    Le(l[0] + n, l[1] + n, l[2] + n);
                  }
                } else {
                  for (var u = 0; u < O; u++) {
                    var c = A[u];
                    Le(c[2], c[1], c[0]);
                  }
                  for (var d = 0; d < O; d++) {
                    var h = A[d];
                    Le(h[0] + N * f, h[1] + N * f, h[2] + N * f);
                  }
                }
                a.addGroup(e, o.length / 3 - e, 0);
              })(),
                (function () {
                  var e = o.length / 3,
                    t = 0;
                  Pe(C, t), (t += C.length);
                  for (var n = 0, r = M.length; n < r; n++) {
                    var i = M[n];
                    Pe(i, t), (t += i.length);
                  }
                  a.addGroup(e, o.length / 3 - e, 1);
                })();
            }
            return (
              e.setAttribute("position", new ka(o, 3)),
              e.setAttribute("uv", new ka(s, 2)),
              e.computeVertexNormals(),
              e
            );
          }
          return (
            g(
              n,
              [
                {
                  key: "copy",
                  value: function (e) {
                    return (
                      L(_(n.prototype), "copy", this).call(this, e),
                      (this.parameters = Object.assign({}, e.parameters)),
                      this
                    );
                  },
                },
                {
                  key: "toJSON",
                  value: function () {
                    var e = L(_(n.prototype), "toJSON", this).call(this);
                    return (function (e, t, n) {
                      if (((n.shapes = []), Array.isArray(e)))
                        for (var r = 0, i = e.length; r < i; r++) {
                          var a = e[r];
                          n.shapes.push(a.uuid);
                        }
                      else n.shapes.push(e.uuid);
                      (n.options = Object.assign({}, t)),
                        void 0 !== t.extrudePath &&
                          (n.options.extrudePath = t.extrudePath.toJSON());
                      return n;
                    })(this.parameters.shapes, this.parameters.options, e);
                  },
                },
              ],
              [
                {
                  key: "fromJSON",
                  value: function (e, t) {
                    for (var r = [], i = 0, a = e.shapes.length; i < a; i++) {
                      var o = t[e.shapes[i]];
                      r.push(o);
                    }
                    var s = e.options.extrudePath;
                    return (
                      void 0 !== s &&
                        (e.options.extrudePath = new Nc[s.type]().fromJSON(s)),
                      new n(r, e.options)
                    );
                  },
                },
              ]
            ),
            n
          );
        })(Oa),
        Ed = {
          generateTopUV: function (e, t, n, r, i) {
            var a = t[3 * n],
              o = t[3 * n + 1],
              s = t[3 * r],
              l = t[3 * r + 1],
              u = t[3 * i],
              c = t[3 * i + 1];
            return [new dr(a, o), new dr(s, l), new dr(u, c)];
          },
          generateSideWallUV: function (e, t, n, r, i, a) {
            var o = t[3 * n],
              s = t[3 * n + 1],
              l = t[3 * n + 2],
              u = t[3 * r],
              c = t[3 * r + 1],
              d = t[3 * r + 2],
              f = t[3 * i],
              h = t[3 * i + 1],
              p = t[3 * i + 2],
              v = t[3 * a],
              m = t[3 * a + 1],
              g = t[3 * a + 2];
            return Math.abs(s - c) < Math.abs(o - u)
              ? [
                  new dr(o, 1 - l),
                  new dr(u, 1 - d),
                  new dr(f, 1 - p),
                  new dr(v, 1 - g),
                ]
              : [
                  new dr(s, 1 - l),
                  new dr(c, 1 - d),
                  new dr(h, 1 - p),
                  new dr(m, 1 - g),
                ];
          },
        };
      var kd = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0;
            p(this, n);
            var a = (1 + Math.sqrt(5)) / 2,
              o = [
                -1,
                a,
                0,
                1,
                a,
                0,
                -1,
                -a,
                0,
                1,
                -a,
                0,
                0,
                -1,
                a,
                0,
                1,
                a,
                0,
                -1,
                -a,
                0,
                1,
                -a,
                a,
                0,
                -1,
                a,
                0,
                1,
                -a,
                0,
                -1,
                -a,
                0,
                1,
              ];
            return (
              ((e = t.call(
                this,
                o,
                [
                  0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5,
                  11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2,
                  6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9,
                  8, 1,
                ],
                r,
                i
              )).type = "IcosahedronGeometry"),
              (e.parameters = { radius: r, detail: i }),
              e
            );
          }
          return (
            g(n, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new n(e.radius, e.detail);
                },
              },
            ]),
            n
          );
        })(Hc),
        Td = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0;
            p(this, n);
            return (
              ((e = t.call(
                this,
                [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1],
                [
                  0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4,
                  1, 4, 2,
                ],
                r,
                i
              )).type = "OctahedronGeometry"),
              (e.parameters = { radius: r, detail: i }),
              e
            );
          }
          return (
            g(n, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new n(e.radius, e.detail);
                },
              },
            ]),
            n
          );
        })(Hc),
        Ad = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0.5,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 32,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 0,
              l =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : 2 * Math.PI;
            p(this, n),
              ((e = t.call(this)).type = "RingGeometry"),
              (e.parameters = {
                innerRadius: r,
                outerRadius: i,
                thetaSegments: a,
                phiSegments: o,
                thetaStart: s,
                thetaLength: l,
              }),
              (a = Math.max(3, a));
            for (
              var u = [],
                c = [],
                d = [],
                f = [],
                h = r,
                v = (i - r) / (o = Math.max(1, o)),
                m = new Zr(),
                g = new dr(),
                y = 0;
              y <= o;
              y++
            ) {
              for (var b = 0; b <= a; b++) {
                var _ = s + (b / a) * l;
                (m.x = h * Math.cos(_)),
                  (m.y = h * Math.sin(_)),
                  c.push(m.x, m.y, m.z),
                  d.push(0, 0, 1),
                  (g.x = (m.x / i + 1) / 2),
                  (g.y = (m.y / i + 1) / 2),
                  f.push(g.x, g.y);
              }
              h += v;
            }
            for (var x = 0; x < o; x++)
              for (var S = x * (a + 1), w = 0; w < a; w++) {
                var M = w + S,
                  E = M,
                  k = M + a + 1,
                  T = M + a + 2,
                  A = M + 1;
                u.push(E, k, A), u.push(k, T, A);
              }
            return (
              e.setIndex(u),
              e.setAttribute("position", new ka(c, 3)),
              e.setAttribute("normal", new ka(d, 3)),
              e.setAttribute("uv", new ka(f, 2)),
              e
            );
          }
          return (
            g(
              n,
              [
                {
                  key: "copy",
                  value: function (e) {
                    return (
                      L(_(n.prototype), "copy", this).call(this, e),
                      (this.parameters = Object.assign({}, e.parameters)),
                      this
                    );
                  },
                },
              ],
              [
                {
                  key: "fromJSON",
                  value: function (e) {
                    return new n(
                      e.innerRadius,
                      e.outerRadius,
                      e.thetaSegments,
                      e.phiSegments,
                      e.thetaStart,
                      e.thetaLength
                    );
                  },
                },
              ]
            ),
            n
          );
        })(Oa),
        Cd = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Yc([
                      new dr(0, 0.5),
                      new dr(-0.5, -0.5),
                      new dr(0.5, -0.5),
                    ]),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 12;
            p(this, n),
              ((e = t.call(this)).type = "ShapeGeometry"),
              (e.parameters = { shapes: r, curveSegments: i });
            var a = [],
              o = [],
              s = [],
              l = [],
              u = 0,
              c = 0;
            if (!1 === Array.isArray(r)) f(r);
            else
              for (var d = 0; d < r.length; d++)
                f(r[d]), e.addGroup(u, c, d), (u += c), (c = 0);
            function f(e) {
              var t = o.length / 3,
                n = e.extractPoints(i),
                r = n.shape,
                u = n.holes;
              !1 === xd.isClockWise(r) && (r = r.reverse());
              for (var d = 0, f = u.length; d < f; d++) {
                var h = u[d];
                !0 === xd.isClockWise(h) && (u[d] = h.reverse());
              }
              for (
                var p = xd.triangulateShape(r, u), v = 0, m = u.length;
                v < m;
                v++
              ) {
                var g = u[v];
                r = r.concat(g);
              }
              for (var y = 0, b = r.length; y < b; y++) {
                var _ = r[y];
                o.push(_.x, _.y, 0), s.push(0, 0, 1), l.push(_.x, _.y);
              }
              for (var x = 0, S = p.length; x < S; x++) {
                var w = p[x],
                  M = w[0] + t,
                  E = w[1] + t,
                  k = w[2] + t;
                a.push(M, E, k), (c += 3);
              }
            }
            return (
              e.setIndex(a),
              e.setAttribute("position", new ka(o, 3)),
              e.setAttribute("normal", new ka(s, 3)),
              e.setAttribute("uv", new ka(l, 2)),
              e
            );
          }
          return (
            g(
              n,
              [
                {
                  key: "copy",
                  value: function (e) {
                    return (
                      L(_(n.prototype), "copy", this).call(this, e),
                      (this.parameters = Object.assign({}, e.parameters)),
                      this
                    );
                  },
                },
                {
                  key: "toJSON",
                  value: function () {
                    var e = L(_(n.prototype), "toJSON", this).call(this);
                    return (function (e, t) {
                      if (((t.shapes = []), Array.isArray(e)))
                        for (var n = 0, r = e.length; n < r; n++) {
                          var i = e[n];
                          t.shapes.push(i.uuid);
                        }
                      else t.shapes.push(e.uuid);
                      return t;
                    })(this.parameters.shapes, e);
                  },
                },
              ],
              [
                {
                  key: "fromJSON",
                  value: function (e, t) {
                    for (var r = [], i = 0, a = e.shapes.length; i < a; i++) {
                      var o = t[e.shapes[i]];
                      r.push(o);
                    }
                    return new n(r, e.curveSegments);
                  },
                },
              ]
            ),
            n
          );
        })(Oa);
      var Pd = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 32,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 16,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 0,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 2 * Math.PI,
              l =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : 0,
              u =
                arguments.length > 6 && void 0 !== arguments[6]
                  ? arguments[6]
                  : Math.PI;
            p(this, n),
              ((e = t.call(this)).type = "SphereGeometry"),
              (e.parameters = {
                radius: r,
                widthSegments: i,
                heightSegments: a,
                phiStart: o,
                phiLength: s,
                thetaStart: l,
                thetaLength: u,
              }),
              (i = Math.max(3, Math.floor(i))),
              (a = Math.max(2, Math.floor(a)));
            for (
              var c = Math.min(l + u, Math.PI),
                d = 0,
                f = [],
                h = new Zr(),
                v = new Zr(),
                m = [],
                g = [],
                y = [],
                b = [],
                _ = 0;
              _ <= a;
              _++
            ) {
              var x = [],
                S = _ / a,
                w = 0;
              0 === _ && 0 === l
                ? (w = 0.5 / i)
                : _ === a && c === Math.PI && (w = -0.5 / i);
              for (var M = 0; M <= i; M++) {
                var E = M / i;
                (h.x = -r * Math.cos(o + E * s) * Math.sin(l + S * u)),
                  (h.y = r * Math.cos(l + S * u)),
                  (h.z = r * Math.sin(o + E * s) * Math.sin(l + S * u)),
                  g.push(h.x, h.y, h.z),
                  v.copy(h).normalize(),
                  y.push(v.x, v.y, v.z),
                  b.push(E + w, 1 - S),
                  x.push(d++);
              }
              f.push(x);
            }
            for (var k = 0; k < a; k++)
              for (var T = 0; T < i; T++) {
                var A = f[k][T + 1],
                  C = f[k][T],
                  P = f[k + 1][T],
                  R = f[k + 1][T + 1];
                (0 !== k || l > 0) && m.push(A, C, R),
                  (k !== a - 1 || c < Math.PI) && m.push(C, P, R);
              }
            return (
              e.setIndex(m),
              e.setAttribute("position", new ka(g, 3)),
              e.setAttribute("normal", new ka(y, 3)),
              e.setAttribute("uv", new ka(b, 2)),
              e
            );
          }
          return (
            g(
              n,
              [
                {
                  key: "copy",
                  value: function (e) {
                    return (
                      L(_(n.prototype), "copy", this).call(this, e),
                      (this.parameters = Object.assign({}, e.parameters)),
                      this
                    );
                  },
                },
              ],
              [
                {
                  key: "fromJSON",
                  value: function (e) {
                    return new n(
                      e.radius,
                      e.widthSegments,
                      e.heightSegments,
                      e.phiStart,
                      e.phiLength,
                      e.thetaStart,
                      e.thetaLength
                    );
                  },
                },
              ]
            ),
            n
          );
        })(Oa),
        Rd = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0;
            p(this, n);
            return (
              ((e = t.call(
                this,
                [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1],
                [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1],
                r,
                i
              )).type = "TetrahedronGeometry"),
              (e.parameters = { radius: r, detail: i }),
              e
            );
          }
          return (
            g(n, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new n(e.radius, e.detail);
                },
              },
            ]),
            n
          );
        })(Hc),
        Ld = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0.4,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 12,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 48,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 2 * Math.PI;
            p(this, n),
              ((e = t.call(this)).type = "TorusGeometry"),
              (e.parameters = {
                radius: r,
                tube: i,
                radialSegments: a,
                tubularSegments: o,
                arc: s,
              }),
              (a = Math.floor(a)),
              (o = Math.floor(o));
            for (
              var l = [],
                u = [],
                c = [],
                d = [],
                f = new Zr(),
                h = new Zr(),
                v = new Zr(),
                m = 0;
              m <= a;
              m++
            )
              for (var g = 0; g <= o; g++) {
                var y = (g / o) * s,
                  b = (m / a) * Math.PI * 2;
                (h.x = (r + i * Math.cos(b)) * Math.cos(y)),
                  (h.y = (r + i * Math.cos(b)) * Math.sin(y)),
                  (h.z = i * Math.sin(b)),
                  u.push(h.x, h.y, h.z),
                  (f.x = r * Math.cos(y)),
                  (f.y = r * Math.sin(y)),
                  v.subVectors(h, f).normalize(),
                  c.push(v.x, v.y, v.z),
                  d.push(g / o),
                  d.push(m / a);
              }
            for (var _ = 1; _ <= a; _++)
              for (var x = 1; x <= o; x++) {
                var S = (o + 1) * _ + x - 1,
                  w = (o + 1) * (_ - 1) + x - 1,
                  M = (o + 1) * (_ - 1) + x,
                  E = (o + 1) * _ + x;
                l.push(S, w, E), l.push(w, M, E);
              }
            return (
              e.setIndex(l),
              e.setAttribute("position", new ka(u, 3)),
              e.setAttribute("normal", new ka(c, 3)),
              e.setAttribute("uv", new ka(d, 2)),
              e
            );
          }
          return (
            g(
              n,
              [
                {
                  key: "copy",
                  value: function (e) {
                    return (
                      L(_(n.prototype), "copy", this).call(this, e),
                      (this.parameters = Object.assign({}, e.parameters)),
                      this
                    );
                  },
                },
              ],
              [
                {
                  key: "fromJSON",
                  value: function (e) {
                    return new n(
                      e.radius,
                      e.tube,
                      e.radialSegments,
                      e.tubularSegments,
                      e.arc
                    );
                  },
                },
              ]
            ),
            n
          );
        })(Oa),
        Id = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0.4,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 64,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 8,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 2,
              l =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : 3;
            p(this, n),
              ((e = t.call(this)).type = "TorusKnotGeometry"),
              (e.parameters = {
                radius: r,
                tube: i,
                tubularSegments: a,
                radialSegments: o,
                p: s,
                q: l,
              }),
              (a = Math.floor(a)),
              (o = Math.floor(o));
            for (
              var u = [],
                c = [],
                d = [],
                f = [],
                h = new Zr(),
                v = new Zr(),
                m = new Zr(),
                g = new Zr(),
                y = new Zr(),
                b = new Zr(),
                _ = new Zr(),
                x = 0;
              x <= a;
              ++x
            ) {
              var S = (x / a) * s * Math.PI * 2;
              I(S, s, l, r, m),
                I(S + 0.01, s, l, r, g),
                b.subVectors(g, m),
                _.addVectors(g, m),
                y.crossVectors(b, _),
                _.crossVectors(y, b),
                y.normalize(),
                _.normalize();
              for (var w = 0; w <= o; ++w) {
                var M = (w / o) * Math.PI * 2,
                  E = -i * Math.cos(M),
                  k = i * Math.sin(M);
                (h.x = m.x + (E * _.x + k * y.x)),
                  (h.y = m.y + (E * _.y + k * y.y)),
                  (h.z = m.z + (E * _.z + k * y.z)),
                  c.push(h.x, h.y, h.z),
                  v.subVectors(h, m).normalize(),
                  d.push(v.x, v.y, v.z),
                  f.push(x / a),
                  f.push(w / o);
              }
            }
            for (var T = 1; T <= a; T++)
              for (var A = 1; A <= o; A++) {
                var C = (o + 1) * (T - 1) + (A - 1),
                  P = (o + 1) * T + (A - 1),
                  R = (o + 1) * T + A,
                  L = (o + 1) * (T - 1) + A;
                u.push(C, P, L), u.push(P, R, L);
              }
            function I(e, t, n, r, i) {
              var a = Math.cos(e),
                o = Math.sin(e),
                s = (n / t) * e,
                l = Math.cos(s);
              (i.x = r * (2 + l) * 0.5 * a),
                (i.y = r * (2 + l) * o * 0.5),
                (i.z = r * Math.sin(s) * 0.5);
            }
            return (
              e.setIndex(u),
              e.setAttribute("position", new ka(c, 3)),
              e.setAttribute("normal", new ka(d, 3)),
              e.setAttribute("uv", new ka(f, 2)),
              e
            );
          }
          return (
            g(
              n,
              [
                {
                  key: "copy",
                  value: function (e) {
                    return (
                      L(_(n.prototype), "copy", this).call(this, e),
                      (this.parameters = Object.assign({}, e.parameters)),
                      this
                    );
                  },
                },
              ],
              [
                {
                  key: "fromJSON",
                  value: function (e) {
                    return new n(
                      e.radius,
                      e.tube,
                      e.tubularSegments,
                      e.radialSegments,
                      e.p,
                      e.q
                    );
                  },
                },
              ]
            ),
            n
          );
        })(Oa),
        Nd = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Lc(
                      new Zr(-1, -1, 0),
                      new Zr(-1, 1, 0),
                      new Zr(1, 1, 0)
                    ),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 64,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 8,
              s =
                arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
            p(this, n),
              ((e = t.call(this)).type = "TubeGeometry"),
              (e.parameters = {
                path: r,
                tubularSegments: i,
                radius: a,
                radialSegments: o,
                closed: s,
              });
            var l = r.computeFrenetFrames(i, s);
            (e.tangents = l.tangents),
              (e.normals = l.normals),
              (e.binormals = l.binormals);
            var u = new Zr(),
              c = new Zr(),
              d = new dr(),
              f = new Zr(),
              h = [],
              v = [],
              m = [],
              g = [];
            function y(e) {
              f = r.getPointAt(e / i, f);
              for (
                var t = l.normals[e], n = l.binormals[e], s = 0;
                s <= o;
                s++
              ) {
                var d = (s / o) * Math.PI * 2,
                  p = Math.sin(d),
                  m = -Math.cos(d);
                (c.x = m * t.x + p * n.x),
                  (c.y = m * t.y + p * n.y),
                  (c.z = m * t.z + p * n.z),
                  c.normalize(),
                  v.push(c.x, c.y, c.z),
                  (u.x = f.x + a * c.x),
                  (u.y = f.y + a * c.y),
                  (u.z = f.z + a * c.z),
                  h.push(u.x, u.y, u.z);
              }
            }
            return (
              (function () {
                for (var e = 0; e < i; e++) y(e);
                y(!1 === s ? i : 0),
                  (function () {
                    for (var e = 0; e <= i; e++)
                      for (var t = 0; t <= o; t++)
                        (d.x = e / i), (d.y = t / o), m.push(d.x, d.y);
                  })(),
                  (function () {
                    for (var e = 1; e <= i; e++)
                      for (var t = 1; t <= o; t++) {
                        var n = (o + 1) * (e - 1) + (t - 1),
                          r = (o + 1) * e + (t - 1),
                          a = (o + 1) * e + t,
                          s = (o + 1) * (e - 1) + t;
                        g.push(n, r, s), g.push(r, a, s);
                      }
                  })();
              })(),
              e.setIndex(g),
              e.setAttribute("position", new ka(h, 3)),
              e.setAttribute("normal", new ka(v, 3)),
              e.setAttribute("uv", new ka(m, 2)),
              e
            );
          }
          return (
            g(
              n,
              [
                {
                  key: "copy",
                  value: function (e) {
                    return (
                      L(_(n.prototype), "copy", this).call(this, e),
                      (this.parameters = Object.assign({}, e.parameters)),
                      this
                    );
                  },
                },
                {
                  key: "toJSON",
                  value: function () {
                    var e = L(_(n.prototype), "toJSON", this).call(this);
                    return (e.path = this.parameters.path.toJSON()), e;
                  },
                },
              ],
              [
                {
                  key: "fromJSON",
                  value: function (e) {
                    return new n(
                      new Nc[e.path.type]().fromJSON(e.path),
                      e.tubularSegments,
                      e.radius,
                      e.radialSegments,
                      e.closed
                    );
                  },
                },
              ]
            ),
            n
          );
        })(Oa),
        Od = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : null;
            if (
              (p(this, n),
              ((e = t.call(this)).type = "WireframeGeometry"),
              (e.parameters = { geometry: r }),
              null !== r)
            ) {
              var i = [],
                a = new Set(),
                o = new Zr(),
                s = new Zr();
              if (null !== r.index) {
                var l = r.attributes.position,
                  u = r.index,
                  c = r.groups;
                0 === c.length &&
                  (c = [{ start: 0, count: u.count, materialIndex: 0 }]);
                for (var d = 0, f = c.length; d < f; ++d)
                  for (
                    var h = c[d], v = h.start, m = v, g = v + h.count;
                    m < g;
                    m += 3
                  )
                    for (var y = 0; y < 3; y++) {
                      var b = u.getX(m + y),
                        _ = u.getX(m + ((y + 1) % 3));
                      o.fromBufferAttribute(l, b),
                        s.fromBufferAttribute(l, _),
                        !0 === Dd(o, s, a) &&
                          (i.push(o.x, o.y, o.z), i.push(s.x, s.y, s.z));
                    }
              } else
                for (
                  var x = r.attributes.position, S = 0, w = x.count / 3;
                  S < w;
                  S++
                )
                  for (var M = 0; M < 3; M++) {
                    var E = 3 * S + M,
                      k = 3 * S + ((M + 1) % 3);
                    o.fromBufferAttribute(x, E),
                      s.fromBufferAttribute(x, k),
                      !0 === Dd(o, s, a) &&
                        (i.push(o.x, o.y, o.z), i.push(s.x, s.y, s.z));
                  }
              e.setAttribute("position", new ka(i, 3));
            }
            return e;
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    (this.parameters = Object.assign({}, e.parameters)),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(Oa);
      function Dd(e, t, n) {
        var r = ""
            .concat(e.x, ",")
            .concat(e.y, ",")
            .concat(e.z, "-")
            .concat(t.x, ",")
            .concat(t.y, ",")
            .concat(t.z),
          i = ""
            .concat(t.x, ",")
            .concat(t.y, ",")
            .concat(t.z, "-")
            .concat(e.x, ",")
            .concat(e.y, ",")
            .concat(e.z);
        return !0 !== n.has(r) && !0 !== n.has(i) && (n.add(r), n.add(i), !0);
      }
      var Ud = Object.freeze({
          __proto__: null,
          BoxGeometry: to,
          CapsuleGeometry: zc,
          CircleGeometry: Fc,
          ConeGeometry: Zc,
          CylinderGeometry: Bc,
          DodecahedronGeometry: Vc,
          EdgesGeometry: qc,
          ExtrudeGeometry: Md,
          IcosahedronGeometry: kd,
          LatheGeometry: Uc,
          OctahedronGeometry: Td,
          PlaneGeometry: wo,
          PolyhedronGeometry: Hc,
          RingGeometry: Ad,
          ShapeGeometry: Cd,
          SphereGeometry: Pd,
          TetrahedronGeometry: Rd,
          TorusGeometry: Ld,
          TorusKnotGeometry: Id,
          TubeGeometry: Nd,
          WireframeGeometry: Od,
        }),
        zd = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return (
              p(this, n),
              ((r = t.call(this)).isShadowMaterial = !0),
              (r.type = "ShadowMaterial"),
              (r.color = new sa(0)),
              (r.transparent = !0),
              (r.fog = !0),
              r.setValues(e),
              r
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    this.color.copy(e.color),
                    (this.fog = e.fog),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(na),
        Fd = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return (
              p(this, n),
              ((r = t.call(this, e)).isRawShaderMaterial = !0),
              (r.type = "RawShaderMaterial"),
              r
            );
          }
          return g(n);
        })(oo),
        Bd = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return (
              p(this, n),
              ((r = t.call(this)).isMeshStandardMaterial = !0),
              (r.defines = { STANDARD: "" }),
              (r.type = "MeshStandardMaterial"),
              (r.color = new sa(16777215)),
              (r.roughness = 1),
              (r.metalness = 0),
              (r.map = null),
              (r.lightMap = null),
              (r.lightMapIntensity = 1),
              (r.aoMap = null),
              (r.aoMapIntensity = 1),
              (r.emissive = new sa(0)),
              (r.emissiveIntensity = 1),
              (r.emissiveMap = null),
              (r.bumpMap = null),
              (r.bumpScale = 1),
              (r.normalMap = null),
              (r.normalMapType = mn),
              (r.normalScale = new dr(1, 1)),
              (r.displacementMap = null),
              (r.displacementScale = 1),
              (r.displacementBias = 0),
              (r.roughnessMap = null),
              (r.metalnessMap = null),
              (r.alphaMap = null),
              (r.envMap = null),
              (r.envMapIntensity = 1),
              (r.wireframe = !1),
              (r.wireframeLinewidth = 1),
              (r.wireframeLinecap = "round"),
              (r.wireframeLinejoin = "round"),
              (r.flatShading = !1),
              (r.fog = !0),
              r.setValues(e),
              r
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    (this.defines = { STANDARD: "" }),
                    this.color.copy(e.color),
                    (this.roughness = e.roughness),
                    (this.metalness = e.metalness),
                    (this.map = e.map),
                    (this.lightMap = e.lightMap),
                    (this.lightMapIntensity = e.lightMapIntensity),
                    (this.aoMap = e.aoMap),
                    (this.aoMapIntensity = e.aoMapIntensity),
                    this.emissive.copy(e.emissive),
                    (this.emissiveMap = e.emissiveMap),
                    (this.emissiveIntensity = e.emissiveIntensity),
                    (this.bumpMap = e.bumpMap),
                    (this.bumpScale = e.bumpScale),
                    (this.normalMap = e.normalMap),
                    (this.normalMapType = e.normalMapType),
                    this.normalScale.copy(e.normalScale),
                    (this.displacementMap = e.displacementMap),
                    (this.displacementScale = e.displacementScale),
                    (this.displacementBias = e.displacementBias),
                    (this.roughnessMap = e.roughnessMap),
                    (this.metalnessMap = e.metalnessMap),
                    (this.alphaMap = e.alphaMap),
                    (this.envMap = e.envMap),
                    (this.envMapIntensity = e.envMapIntensity),
                    (this.wireframe = e.wireframe),
                    (this.wireframeLinewidth = e.wireframeLinewidth),
                    (this.wireframeLinecap = e.wireframeLinecap),
                    (this.wireframeLinejoin = e.wireframeLinejoin),
                    (this.flatShading = e.flatShading),
                    (this.fog = e.fog),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(na),
        Zd = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return (
              p(this, n),
              ((r = t.call(this)).isMeshPhysicalMaterial = !0),
              (r.defines = { STANDARD: "", PHYSICAL: "" }),
              (r.type = "MeshPhysicalMaterial"),
              (r.clearcoatMap = null),
              (r.clearcoatRoughness = 0),
              (r.clearcoatRoughnessMap = null),
              (r.clearcoatNormalScale = new dr(1, 1)),
              (r.clearcoatNormalMap = null),
              (r.ior = 1.5),
              Object.defineProperty(E(r), "reflectivity", {
                get: function () {
                  return nr((2.5 * (this.ior - 1)) / (this.ior + 1), 0, 1);
                },
                set: function (e) {
                  this.ior = (1 + 0.4 * e) / (1 - 0.4 * e);
                },
              }),
              (r.iridescenceMap = null),
              (r.iridescenceIOR = 1.3),
              (r.iridescenceThicknessRange = [100, 400]),
              (r.iridescenceThicknessMap = null),
              (r.sheenColor = new sa(0)),
              (r.sheenColorMap = null),
              (r.sheenRoughness = 1),
              (r.sheenRoughnessMap = null),
              (r.transmissionMap = null),
              (r.thickness = 0),
              (r.thicknessMap = null),
              (r.attenuationDistance = 1 / 0),
              (r.attenuationColor = new sa(1, 1, 1)),
              (r.specularIntensity = 1),
              (r.specularIntensityMap = null),
              (r.specularColor = new sa(1, 1, 1)),
              (r.specularColorMap = null),
              (r._sheen = 0),
              (r._clearcoat = 0),
              (r._iridescence = 0),
              (r._transmission = 0),
              r.setValues(e),
              r
            );
          }
          return (
            g(n, [
              {
                key: "sheen",
                get: function () {
                  return this._sheen;
                },
                set: function (e) {
                  this._sheen > 0 !== e > 0 && this.version++,
                    (this._sheen = e);
                },
              },
              {
                key: "clearcoat",
                get: function () {
                  return this._clearcoat;
                },
                set: function (e) {
                  this._clearcoat > 0 !== e > 0 && this.version++,
                    (this._clearcoat = e);
                },
              },
              {
                key: "iridescence",
                get: function () {
                  return this._iridescence;
                },
                set: function (e) {
                  this._iridescence > 0 !== e > 0 && this.version++,
                    (this._iridescence = e);
                },
              },
              {
                key: "transmission",
                get: function () {
                  return this._transmission;
                },
                set: function (e) {
                  this._transmission > 0 !== e > 0 && this.version++,
                    (this._transmission = e);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    (this.defines = { STANDARD: "", PHYSICAL: "" }),
                    (this.clearcoat = e.clearcoat),
                    (this.clearcoatMap = e.clearcoatMap),
                    (this.clearcoatRoughness = e.clearcoatRoughness),
                    (this.clearcoatRoughnessMap = e.clearcoatRoughnessMap),
                    (this.clearcoatNormalMap = e.clearcoatNormalMap),
                    this.clearcoatNormalScale.copy(e.clearcoatNormalScale),
                    (this.ior = e.ior),
                    (this.iridescence = e.iridescence),
                    (this.iridescenceMap = e.iridescenceMap),
                    (this.iridescenceIOR = e.iridescenceIOR),
                    (this.iridescenceThicknessRange = (0, r.Z)(
                      e.iridescenceThicknessRange
                    )),
                    (this.iridescenceThicknessMap = e.iridescenceThicknessMap),
                    (this.sheen = e.sheen),
                    this.sheenColor.copy(e.sheenColor),
                    (this.sheenColorMap = e.sheenColorMap),
                    (this.sheenRoughness = e.sheenRoughness),
                    (this.sheenRoughnessMap = e.sheenRoughnessMap),
                    (this.transmission = e.transmission),
                    (this.transmissionMap = e.transmissionMap),
                    (this.thickness = e.thickness),
                    (this.thicknessMap = e.thicknessMap),
                    (this.attenuationDistance = e.attenuationDistance),
                    this.attenuationColor.copy(e.attenuationColor),
                    (this.specularIntensity = e.specularIntensity),
                    (this.specularIntensityMap = e.specularIntensityMap),
                    this.specularColor.copy(e.specularColor),
                    (this.specularColorMap = e.specularColorMap),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(Bd),
        Hd = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return (
              p(this, n),
              ((r = t.call(this)).isMeshPhongMaterial = !0),
              (r.type = "MeshPhongMaterial"),
              (r.color = new sa(16777215)),
              (r.specular = new sa(1118481)),
              (r.shininess = 30),
              (r.map = null),
              (r.lightMap = null),
              (r.lightMapIntensity = 1),
              (r.aoMap = null),
              (r.aoMapIntensity = 1),
              (r.emissive = new sa(0)),
              (r.emissiveIntensity = 1),
              (r.emissiveMap = null),
              (r.bumpMap = null),
              (r.bumpScale = 1),
              (r.normalMap = null),
              (r.normalMapType = mn),
              (r.normalScale = new dr(1, 1)),
              (r.displacementMap = null),
              (r.displacementScale = 1),
              (r.displacementBias = 0),
              (r.specularMap = null),
              (r.alphaMap = null),
              (r.envMap = null),
              (r.combine = Ee),
              (r.reflectivity = 1),
              (r.refractionRatio = 0.98),
              (r.wireframe = !1),
              (r.wireframeLinewidth = 1),
              (r.wireframeLinecap = "round"),
              (r.wireframeLinejoin = "round"),
              (r.flatShading = !1),
              (r.fog = !0),
              r.setValues(e),
              r
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    this.color.copy(e.color),
                    this.specular.copy(e.specular),
                    (this.shininess = e.shininess),
                    (this.map = e.map),
                    (this.lightMap = e.lightMap),
                    (this.lightMapIntensity = e.lightMapIntensity),
                    (this.aoMap = e.aoMap),
                    (this.aoMapIntensity = e.aoMapIntensity),
                    this.emissive.copy(e.emissive),
                    (this.emissiveMap = e.emissiveMap),
                    (this.emissiveIntensity = e.emissiveIntensity),
                    (this.bumpMap = e.bumpMap),
                    (this.bumpScale = e.bumpScale),
                    (this.normalMap = e.normalMap),
                    (this.normalMapType = e.normalMapType),
                    this.normalScale.copy(e.normalScale),
                    (this.displacementMap = e.displacementMap),
                    (this.displacementScale = e.displacementScale),
                    (this.displacementBias = e.displacementBias),
                    (this.specularMap = e.specularMap),
                    (this.alphaMap = e.alphaMap),
                    (this.envMap = e.envMap),
                    (this.combine = e.combine),
                    (this.reflectivity = e.reflectivity),
                    (this.refractionRatio = e.refractionRatio),
                    (this.wireframe = e.wireframe),
                    (this.wireframeLinewidth = e.wireframeLinewidth),
                    (this.wireframeLinecap = e.wireframeLinecap),
                    (this.wireframeLinejoin = e.wireframeLinejoin),
                    (this.flatShading = e.flatShading),
                    (this.fog = e.fog),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(na),
        Vd = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return (
              p(this, n),
              ((r = t.call(this)).isMeshToonMaterial = !0),
              (r.defines = { TOON: "" }),
              (r.type = "MeshToonMaterial"),
              (r.color = new sa(16777215)),
              (r.map = null),
              (r.gradientMap = null),
              (r.lightMap = null),
              (r.lightMapIntensity = 1),
              (r.aoMap = null),
              (r.aoMapIntensity = 1),
              (r.emissive = new sa(0)),
              (r.emissiveIntensity = 1),
              (r.emissiveMap = null),
              (r.bumpMap = null),
              (r.bumpScale = 1),
              (r.normalMap = null),
              (r.normalMapType = mn),
              (r.normalScale = new dr(1, 1)),
              (r.displacementMap = null),
              (r.displacementScale = 1),
              (r.displacementBias = 0),
              (r.alphaMap = null),
              (r.wireframe = !1),
              (r.wireframeLinewidth = 1),
              (r.wireframeLinecap = "round"),
              (r.wireframeLinejoin = "round"),
              (r.fog = !0),
              r.setValues(e),
              r
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    this.color.copy(e.color),
                    (this.map = e.map),
                    (this.gradientMap = e.gradientMap),
                    (this.lightMap = e.lightMap),
                    (this.lightMapIntensity = e.lightMapIntensity),
                    (this.aoMap = e.aoMap),
                    (this.aoMapIntensity = e.aoMapIntensity),
                    this.emissive.copy(e.emissive),
                    (this.emissiveMap = e.emissiveMap),
                    (this.emissiveIntensity = e.emissiveIntensity),
                    (this.bumpMap = e.bumpMap),
                    (this.bumpScale = e.bumpScale),
                    (this.normalMap = e.normalMap),
                    (this.normalMapType = e.normalMapType),
                    this.normalScale.copy(e.normalScale),
                    (this.displacementMap = e.displacementMap),
                    (this.displacementScale = e.displacementScale),
                    (this.displacementBias = e.displacementBias),
                    (this.alphaMap = e.alphaMap),
                    (this.wireframe = e.wireframe),
                    (this.wireframeLinewidth = e.wireframeLinewidth),
                    (this.wireframeLinecap = e.wireframeLinecap),
                    (this.wireframeLinejoin = e.wireframeLinejoin),
                    (this.fog = e.fog),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(na),
        Gd = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return (
              p(this, n),
              ((r = t.call(this)).isMeshNormalMaterial = !0),
              (r.type = "MeshNormalMaterial"),
              (r.bumpMap = null),
              (r.bumpScale = 1),
              (r.normalMap = null),
              (r.normalMapType = mn),
              (r.normalScale = new dr(1, 1)),
              (r.displacementMap = null),
              (r.displacementScale = 1),
              (r.displacementBias = 0),
              (r.wireframe = !1),
              (r.wireframeLinewidth = 1),
              (r.flatShading = !1),
              r.setValues(e),
              r
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    (this.bumpMap = e.bumpMap),
                    (this.bumpScale = e.bumpScale),
                    (this.normalMap = e.normalMap),
                    (this.normalMapType = e.normalMapType),
                    this.normalScale.copy(e.normalScale),
                    (this.displacementMap = e.displacementMap),
                    (this.displacementScale = e.displacementScale),
                    (this.displacementBias = e.displacementBias),
                    (this.wireframe = e.wireframe),
                    (this.wireframeLinewidth = e.wireframeLinewidth),
                    (this.flatShading = e.flatShading),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(na),
        Wd = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return (
              p(this, n),
              ((r = t.call(this)).isMeshLambertMaterial = !0),
              (r.type = "MeshLambertMaterial"),
              (r.color = new sa(16777215)),
              (r.map = null),
              (r.lightMap = null),
              (r.lightMapIntensity = 1),
              (r.aoMap = null),
              (r.aoMapIntensity = 1),
              (r.emissive = new sa(0)),
              (r.emissiveIntensity = 1),
              (r.emissiveMap = null),
              (r.bumpMap = null),
              (r.bumpScale = 1),
              (r.normalMap = null),
              (r.normalMapType = mn),
              (r.normalScale = new dr(1, 1)),
              (r.displacementMap = null),
              (r.displacementScale = 1),
              (r.displacementBias = 0),
              (r.specularMap = null),
              (r.alphaMap = null),
              (r.envMap = null),
              (r.combine = Ee),
              (r.reflectivity = 1),
              (r.refractionRatio = 0.98),
              (r.wireframe = !1),
              (r.wireframeLinewidth = 1),
              (r.wireframeLinecap = "round"),
              (r.wireframeLinejoin = "round"),
              (r.flatShading = !1),
              (r.fog = !0),
              r.setValues(e),
              r
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    this.color.copy(e.color),
                    (this.map = e.map),
                    (this.lightMap = e.lightMap),
                    (this.lightMapIntensity = e.lightMapIntensity),
                    (this.aoMap = e.aoMap),
                    (this.aoMapIntensity = e.aoMapIntensity),
                    this.emissive.copy(e.emissive),
                    (this.emissiveMap = e.emissiveMap),
                    (this.emissiveIntensity = e.emissiveIntensity),
                    (this.bumpMap = e.bumpMap),
                    (this.bumpScale = e.bumpScale),
                    (this.normalMap = e.normalMap),
                    (this.normalMapType = e.normalMapType),
                    this.normalScale.copy(e.normalScale),
                    (this.displacementMap = e.displacementMap),
                    (this.displacementScale = e.displacementScale),
                    (this.displacementBias = e.displacementBias),
                    (this.specularMap = e.specularMap),
                    (this.alphaMap = e.alphaMap),
                    (this.envMap = e.envMap),
                    (this.combine = e.combine),
                    (this.reflectivity = e.reflectivity),
                    (this.refractionRatio = e.refractionRatio),
                    (this.wireframe = e.wireframe),
                    (this.wireframeLinewidth = e.wireframeLinewidth),
                    (this.wireframeLinecap = e.wireframeLinecap),
                    (this.wireframeLinejoin = e.wireframeLinejoin),
                    (this.flatShading = e.flatShading),
                    (this.fog = e.fog),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(na),
        jd = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return (
              p(this, n),
              ((r = t.call(this)).isMeshMatcapMaterial = !0),
              (r.defines = { MATCAP: "" }),
              (r.type = "MeshMatcapMaterial"),
              (r.color = new sa(16777215)),
              (r.matcap = null),
              (r.map = null),
              (r.bumpMap = null),
              (r.bumpScale = 1),
              (r.normalMap = null),
              (r.normalMapType = mn),
              (r.normalScale = new dr(1, 1)),
              (r.displacementMap = null),
              (r.displacementScale = 1),
              (r.displacementBias = 0),
              (r.alphaMap = null),
              (r.flatShading = !1),
              (r.fog = !0),
              r.setValues(e),
              r
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    (this.defines = { MATCAP: "" }),
                    this.color.copy(e.color),
                    (this.matcap = e.matcap),
                    (this.map = e.map),
                    (this.bumpMap = e.bumpMap),
                    (this.bumpScale = e.bumpScale),
                    (this.normalMap = e.normalMap),
                    (this.normalMapType = e.normalMapType),
                    this.normalScale.copy(e.normalScale),
                    (this.displacementMap = e.displacementMap),
                    (this.displacementScale = e.displacementScale),
                    (this.displacementBias = e.displacementBias),
                    (this.alphaMap = e.alphaMap),
                    (this.flatShading = e.flatShading),
                    (this.fog = e.fog),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(na),
        Xd = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return (
              p(this, n),
              ((r = t.call(this)).isLineDashedMaterial = !0),
              (r.type = "LineDashedMaterial"),
              (r.scale = 1),
              (r.dashSize = 3),
              (r.gapSize = 1),
              r.setValues(e),
              r
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    (this.scale = e.scale),
                    (this.dashSize = e.dashSize),
                    (this.gapSize = e.gapSize),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(ju);
      function qd(e, t, n) {
        return Kd(e)
          ? new e.constructor(e.subarray(t, void 0 !== n ? n : e.length))
          : e.slice(t, n);
      }
      function Yd(e, t, n) {
        return !e || (!n && e.constructor === t)
          ? e
          : "number" === typeof t.BYTES_PER_ELEMENT
          ? new t(e)
          : Array.prototype.slice.call(e);
      }
      function Kd(e) {
        return ArrayBuffer.isView(e) && !(e instanceof DataView);
      }
      function $d(e) {
        for (var t = e.length, n = new Array(t), r = 0; r !== t; ++r) n[r] = r;
        return (
          n.sort(function (t, n) {
            return e[t] - e[n];
          }),
          n
        );
      }
      function Jd(e, t, n) {
        for (
          var r = e.length, i = new e.constructor(r), a = 0, o = 0;
          o !== r;
          ++a
        )
          for (var s = n[a] * t, l = 0; l !== t; ++l) i[o++] = e[s + l];
        return i;
      }
      function Qd(e, t, n, r) {
        for (var i = 1, a = e[0]; void 0 !== a && void 0 === a[r]; ) a = e[i++];
        if (void 0 !== a) {
          var o = a[r];
          if (void 0 !== o)
            if (Array.isArray(o))
              do {
                void 0 !== (o = a[r]) && (t.push(a.time), n.push.apply(n, o)),
                  (a = e[i++]);
              } while (void 0 !== a);
            else if (void 0 !== o.toArray)
              do {
                void 0 !== (o = a[r]) &&
                  (t.push(a.time), o.toArray(n, n.length)),
                  (a = e[i++]);
              } while (void 0 !== a);
            else
              do {
                void 0 !== (o = a[r]) && (t.push(a.time), n.push(o)),
                  (a = e[i++]);
              } while (void 0 !== a);
        }
      }
      var ef = {
          arraySlice: qd,
          convertArray: Yd,
          isTypedArray: Kd,
          getKeyframeOrder: $d,
          sortedArray: Jd,
          flattenJSON: Qd,
          subclip: function (e, t, n, r) {
            var i =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 30,
              a = e.clone();
            a.name = t;
            for (var o = [], s = 0; s < a.tracks.length; ++s) {
              for (
                var l = a.tracks[s],
                  u = l.getValueSize(),
                  c = [],
                  d = [],
                  f = 0;
                f < l.times.length;
                ++f
              ) {
                var h = l.times[f] * i;
                if (!(h < n || h >= r)) {
                  c.push(l.times[f]);
                  for (var p = 0; p < u; ++p) d.push(l.values[f * u + p]);
                }
              }
              0 !== c.length &&
                ((l.times = Yd(c, l.times.constructor)),
                (l.values = Yd(d, l.values.constructor)),
                o.push(l));
            }
            a.tracks = o;
            for (var v = 1 / 0, m = 0; m < a.tracks.length; ++m)
              v > a.tracks[m].times[0] && (v = a.tracks[m].times[0]);
            for (var g = 0; g < a.tracks.length; ++g) a.tracks[g].shift(-1 * v);
            return a.resetDuration(), a;
          },
          makeClipAdditive: function (e) {
            var t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              n =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : e,
              r =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 30;
            r <= 0 && (r = 30);
            for (
              var i = n.tracks.length,
                a = t / r,
                o = function () {
                  var t = n.tracks[s],
                    r = t.ValueTypeName;
                  if ("bool" === r || "string" === r) return "continue";
                  var i = e.tracks.find(function (e) {
                    return e.name === t.name && e.ValueTypeName === r;
                  });
                  if (void 0 === i) return "continue";
                  var o = 0,
                    l = t.getValueSize();
                  t.createInterpolant
                    .isInterpolantFactoryMethodGLTFCubicSpline && (o = l / 3);
                  var u = 0,
                    c = i.getValueSize();
                  i.createInterpolant
                    .isInterpolantFactoryMethodGLTFCubicSpline && (u = c / 3);
                  var d,
                    f = t.times.length - 1;
                  if (a <= t.times[0]) {
                    var h = o,
                      p = l - o;
                    d = qd(t.values, h, p);
                  } else if (a >= t.times[f]) {
                    var v = f * l + o,
                      m = v + l - o;
                    d = qd(t.values, v, m);
                  } else {
                    var g = t.createInterpolant(),
                      y = o,
                      b = l - o;
                    g.evaluate(a), (d = qd(g.resultBuffer, y, b));
                  }
                  "quaternion" === r &&
                    new Br().fromArray(d).normalize().conjugate().toArray(d);
                  for (var _ = i.times.length, x = 0; x < _; ++x) {
                    var S = x * c + u;
                    if ("quaternion" === r)
                      Br.multiplyQuaternionsFlat(
                        i.values,
                        S,
                        d,
                        0,
                        i.values,
                        S
                      );
                    else
                      for (var w = c - 2 * u, M = 0; M < w; ++M)
                        i.values[S + M] -= d[M];
                  }
                },
                s = 0;
              s < i;
              ++s
            )
              o();
            return (e.blendMode = ln), e;
          },
        },
        tf = (function () {
          function e(t, n, r, i) {
            p(this, e),
              (this.parameterPositions = t),
              (this._cachedIndex = 0),
              (this.resultBuffer = void 0 !== i ? i : new n.constructor(r)),
              (this.sampleValues = n),
              (this.valueSize = r),
              (this.settings = null),
              (this.DefaultSettings_ = {});
          }
          return (
            g(e, [
              {
                key: "evaluate",
                value: function (e) {
                  var t = this.parameterPositions,
                    n = this._cachedIndex,
                    r = t[n],
                    i = t[n - 1];
                  e: {
                    t: {
                      var a;
                      n: {
                        r: if (!(e < r)) {
                          for (var o = n + 2; ; ) {
                            if (void 0 === r) {
                              if (e < i) break r;
                              return (
                                (n = t.length),
                                (this._cachedIndex = n),
                                this.copySampleValue_(n - 1)
                              );
                            }
                            if (n === o) break;
                            if (((i = r), e < (r = t[++n]))) break t;
                          }
                          a = t.length;
                          break n;
                        }
                        if (e >= i) break e;
                        var s = t[1];
                        e < s && ((n = 2), (i = s));
                        for (var l = n - 2; ; ) {
                          if (void 0 === i)
                            return (
                              (this._cachedIndex = 0), this.copySampleValue_(0)
                            );
                          if (n === l) break;
                          if (((r = i), e >= (i = t[--n - 1]))) break t;
                        }
                        (a = n), (n = 0);
                      }
                      for (; n < a; ) {
                        var u = (n + a) >>> 1;
                        e < t[u] ? (a = u) : (n = u + 1);
                      }
                      if (((r = t[n]), void 0 === (i = t[n - 1])))
                        return (
                          (this._cachedIndex = 0), this.copySampleValue_(0)
                        );
                      if (void 0 === r)
                        return (
                          (n = t.length),
                          (this._cachedIndex = n),
                          this.copySampleValue_(n - 1)
                        );
                    }
                    (this._cachedIndex = n), this.intervalChanged_(n, i, r);
                  }
                  return this.interpolate_(n, i, e, r);
                },
              },
              {
                key: "getSettings_",
                value: function () {
                  return this.settings || this.DefaultSettings_;
                },
              },
              {
                key: "copySampleValue_",
                value: function (e) {
                  for (
                    var t = this.resultBuffer,
                      n = this.sampleValues,
                      r = this.valueSize,
                      i = e * r,
                      a = 0;
                    a !== r;
                    ++a
                  )
                    t[a] = n[i + a];
                  return t;
                },
              },
              {
                key: "interpolate_",
                value: function () {
                  throw new Error("call to abstract method");
                },
              },
              { key: "intervalChanged_", value: function () {} },
            ]),
            e
          );
        })(),
        nf = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i, a) {
            var o;
            return (
              p(this, n),
              ((o = t.call(this, e, r, i, a))._weightPrev = -0),
              (o._offsetPrev = -0),
              (o._weightNext = -0),
              (o._offsetNext = -0),
              (o.DefaultSettings_ = { endingStart: rn, endingEnd: rn }),
              o
            );
          }
          return (
            g(n, [
              {
                key: "intervalChanged_",
                value: function (e, t, n) {
                  var r = this.parameterPositions,
                    i = e - 2,
                    a = e + 1,
                    o = r[i],
                    s = r[a];
                  if (void 0 === o)
                    switch (this.getSettings_().endingStart) {
                      case an:
                        (i = e), (o = 2 * t - n);
                        break;
                      case on:
                        o = t + r[(i = r.length - 2)] - r[i + 1];
                        break;
                      default:
                        (i = e), (o = n);
                    }
                  if (void 0 === s)
                    switch (this.getSettings_().endingEnd) {
                      case an:
                        (a = e), (s = 2 * n - t);
                        break;
                      case on:
                        (a = 1), (s = n + r[1] - r[0]);
                        break;
                      default:
                        (a = e - 1), (s = t);
                    }
                  var l = 0.5 * (n - t),
                    u = this.valueSize;
                  (this._weightPrev = l / (t - o)),
                    (this._weightNext = l / (s - n)),
                    (this._offsetPrev = i * u),
                    (this._offsetNext = a * u);
                },
              },
              {
                key: "interpolate_",
                value: function (e, t, n, r) {
                  for (
                    var i = this.resultBuffer,
                      a = this.sampleValues,
                      o = this.valueSize,
                      s = e * o,
                      l = s - o,
                      u = this._offsetPrev,
                      c = this._offsetNext,
                      d = this._weightPrev,
                      f = this._weightNext,
                      h = (n - t) / (r - t),
                      p = h * h,
                      v = p * h,
                      m = -d * v + 2 * d * p - d * h,
                      g = (1 + d) * v + (-1.5 - 2 * d) * p + (-0.5 + d) * h + 1,
                      y = (-1 - f) * v + (1.5 + f) * p + 0.5 * h,
                      b = f * v - f * p,
                      _ = 0;
                    _ !== o;
                    ++_
                  )
                    i[_] =
                      m * a[u + _] + g * a[l + _] + y * a[s + _] + b * a[c + _];
                  return i;
                },
              },
            ]),
            n
          );
        })(tf),
        rf = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i, a) {
            return p(this, n), t.call(this, e, r, i, a);
          }
          return (
            g(n, [
              {
                key: "interpolate_",
                value: function (e, t, n, r) {
                  for (
                    var i = this.resultBuffer,
                      a = this.sampleValues,
                      o = this.valueSize,
                      s = e * o,
                      l = s - o,
                      u = (n - t) / (r - t),
                      c = 1 - u,
                      d = 0;
                    d !== o;
                    ++d
                  )
                    i[d] = a[l + d] * c + a[s + d] * u;
                  return i;
                },
              },
            ]),
            n
          );
        })(tf),
        af = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i, a) {
            return p(this, n), t.call(this, e, r, i, a);
          }
          return (
            g(n, [
              {
                key: "interpolate_",
                value: function (e) {
                  return this.copySampleValue_(e - 1);
                },
              },
            ]),
            n
          );
        })(tf),
        of = (function () {
          function e(t, n, r, i) {
            if ((p(this, e), void 0 === t))
              throw new Error("THREE.KeyframeTrack: track name is undefined");
            if (void 0 === n || 0 === n.length)
              throw new Error(
                "THREE.KeyframeTrack: no keyframes in track named " + t
              );
            (this.name = t),
              (this.times = Yd(n, this.TimeBufferType)),
              (this.values = Yd(r, this.ValueBufferType)),
              this.setInterpolation(i || this.DefaultInterpolation);
          }
          return (
            g(
              e,
              [
                {
                  key: "InterpolantFactoryMethodDiscrete",
                  value: function (e) {
                    return new af(
                      this.times,
                      this.values,
                      this.getValueSize(),
                      e
                    );
                  },
                },
                {
                  key: "InterpolantFactoryMethodLinear",
                  value: function (e) {
                    return new rf(
                      this.times,
                      this.values,
                      this.getValueSize(),
                      e
                    );
                  },
                },
                {
                  key: "InterpolantFactoryMethodSmooth",
                  value: function (e) {
                    return new nf(
                      this.times,
                      this.values,
                      this.getValueSize(),
                      e
                    );
                  },
                },
                {
                  key: "setInterpolation",
                  value: function (e) {
                    var t;
                    switch (e) {
                      case en:
                        t = this.InterpolantFactoryMethodDiscrete;
                        break;
                      case tn:
                        t = this.InterpolantFactoryMethodLinear;
                        break;
                      case nn:
                        t = this.InterpolantFactoryMethodSmooth;
                    }
                    if (void 0 === t) {
                      var n =
                        "unsupported interpolation for " +
                        this.ValueTypeName +
                        " keyframe track named " +
                        this.name;
                      if (void 0 === this.createInterpolant) {
                        if (e === this.DefaultInterpolation) throw new Error(n);
                        this.setInterpolation(this.DefaultInterpolation);
                      }
                      return console.warn("THREE.KeyframeTrack:", n), this;
                    }
                    return (this.createInterpolant = t), this;
                  },
                },
                {
                  key: "getInterpolation",
                  value: function () {
                    switch (this.createInterpolant) {
                      case this.InterpolantFactoryMethodDiscrete:
                        return en;
                      case this.InterpolantFactoryMethodLinear:
                        return tn;
                      case this.InterpolantFactoryMethodSmooth:
                        return nn;
                    }
                  },
                },
                {
                  key: "getValueSize",
                  value: function () {
                    return this.values.length / this.times.length;
                  },
                },
                {
                  key: "shift",
                  value: function (e) {
                    if (0 !== e)
                      for (
                        var t = this.times, n = 0, r = t.length;
                        n !== r;
                        ++n
                      )
                        t[n] += e;
                    return this;
                  },
                },
                {
                  key: "scale",
                  value: function (e) {
                    if (1 !== e)
                      for (
                        var t = this.times, n = 0, r = t.length;
                        n !== r;
                        ++n
                      )
                        t[n] *= e;
                    return this;
                  },
                },
                {
                  key: "trim",
                  value: function (e, t) {
                    for (
                      var n = this.times, r = n.length, i = 0, a = r - 1;
                      i !== r && n[i] < e;

                    )
                      ++i;
                    for (; -1 !== a && n[a] > t; ) --a;
                    if ((++a, 0 !== i || a !== r)) {
                      i >= a && (i = (a = Math.max(a, 1)) - 1);
                      var o = this.getValueSize();
                      (this.times = qd(n, i, a)),
                        (this.values = qd(this.values, i * o, a * o));
                    }
                    return this;
                  },
                },
                {
                  key: "validate",
                  value: function () {
                    var e = !0,
                      t = this.getValueSize();
                    t - Math.floor(t) !== 0 &&
                      (console.error(
                        "THREE.KeyframeTrack: Invalid value size in track.",
                        this
                      ),
                      (e = !1));
                    var n = this.times,
                      r = this.values,
                      i = n.length;
                    0 === i &&
                      (console.error(
                        "THREE.KeyframeTrack: Track is empty.",
                        this
                      ),
                      (e = !1));
                    for (var a = null, o = 0; o !== i; o++) {
                      var s = n[o];
                      if ("number" === typeof s && isNaN(s)) {
                        console.error(
                          "THREE.KeyframeTrack: Time is not a valid number.",
                          this,
                          o,
                          s
                        ),
                          (e = !1);
                        break;
                      }
                      if (null !== a && a > s) {
                        console.error(
                          "THREE.KeyframeTrack: Out of order keys.",
                          this,
                          o,
                          s,
                          a
                        ),
                          (e = !1);
                        break;
                      }
                      a = s;
                    }
                    if (void 0 !== r && Kd(r))
                      for (var l = 0, u = r.length; l !== u; ++l) {
                        var c = r[l];
                        if (isNaN(c)) {
                          console.error(
                            "THREE.KeyframeTrack: Value is not a valid number.",
                            this,
                            l,
                            c
                          ),
                            (e = !1);
                          break;
                        }
                      }
                    return e;
                  },
                },
                {
                  key: "optimize",
                  value: function () {
                    for (
                      var e = qd(this.times),
                        t = qd(this.values),
                        n = this.getValueSize(),
                        r = this.getInterpolation() === nn,
                        i = e.length - 1,
                        a = 1,
                        o = 1;
                      o < i;
                      ++o
                    ) {
                      var s = !1,
                        l = e[o];
                      if (l !== e[o + 1] && (1 !== o || l !== e[0]))
                        if (r) s = !0;
                        else
                          for (
                            var u = o * n, c = u - n, d = u + n, f = 0;
                            f !== n;
                            ++f
                          ) {
                            var h = t[u + f];
                            if (h !== t[c + f] || h !== t[d + f]) {
                              s = !0;
                              break;
                            }
                          }
                      if (s) {
                        if (o !== a) {
                          e[a] = e[o];
                          for (var p = o * n, v = a * n, m = 0; m !== n; ++m)
                            t[v + m] = t[p + m];
                        }
                        ++a;
                      }
                    }
                    if (i > 0) {
                      e[a] = e[i];
                      for (var g = i * n, y = a * n, b = 0; b !== n; ++b)
                        t[y + b] = t[g + b];
                      ++a;
                    }
                    return (
                      a !== e.length
                        ? ((this.times = qd(e, 0, a)),
                          (this.values = qd(t, 0, a * n)))
                        : ((this.times = e), (this.values = t)),
                      this
                    );
                  },
                },
                {
                  key: "clone",
                  value: function () {
                    var e = qd(this.times, 0),
                      t = qd(this.values, 0),
                      n = new (0, this.constructor)(this.name, e, t);
                    return (n.createInterpolant = this.createInterpolant), n;
                  },
                },
              ],
              [
                {
                  key: "toJSON",
                  value: function (e) {
                    var t,
                      n = e.constructor;
                    if (n.toJSON !== this.toJSON) t = n.toJSON(e);
                    else {
                      t = {
                        name: e.name,
                        times: Yd(e.times, Array),
                        values: Yd(e.values, Array),
                      };
                      var r = e.getInterpolation();
                      r !== e.DefaultInterpolation && (t.interpolation = r);
                    }
                    return (t.type = e.ValueTypeName), t;
                  },
                },
              ]
            ),
            e
          );
        })();
      (of.prototype.TimeBufferType = Float32Array),
        (of.prototype.ValueBufferType = Float32Array),
        (of.prototype.DefaultInterpolation = tn);
      var sf = (function (e) {
        b(n, e);
        var t = k(n);
        function n() {
          return p(this, n), t.apply(this, arguments);
        }
        return g(n);
      })(of);
      (sf.prototype.ValueTypeName = "bool"),
        (sf.prototype.ValueBufferType = Array),
        (sf.prototype.DefaultInterpolation = en),
        (sf.prototype.InterpolantFactoryMethodLinear = void 0),
        (sf.prototype.InterpolantFactoryMethodSmooth = void 0);
      var lf = (function (e) {
        b(n, e);
        var t = k(n);
        function n() {
          return p(this, n), t.apply(this, arguments);
        }
        return g(n);
      })(of);
      lf.prototype.ValueTypeName = "color";
      var uf = (function (e) {
        b(n, e);
        var t = k(n);
        function n() {
          return p(this, n), t.apply(this, arguments);
        }
        return g(n);
      })(of);
      uf.prototype.ValueTypeName = "number";
      var cf = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i, a) {
            return p(this, n), t.call(this, e, r, i, a);
          }
          return (
            g(n, [
              {
                key: "interpolate_",
                value: function (e, t, n, r) {
                  for (
                    var i = this.resultBuffer,
                      a = this.sampleValues,
                      o = this.valueSize,
                      s = (n - t) / (r - t),
                      l = e * o,
                      u = l + o;
                    l !== u;
                    l += 4
                  )
                    Br.slerpFlat(i, 0, a, l - o, a, l, s);
                  return i;
                },
              },
            ]),
            n
          );
        })(tf),
        df = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            return p(this, n), t.apply(this, arguments);
          }
          return (
            g(n, [
              {
                key: "InterpolantFactoryMethodLinear",
                value: function (e) {
                  return new cf(
                    this.times,
                    this.values,
                    this.getValueSize(),
                    e
                  );
                },
              },
            ]),
            n
          );
        })(of);
      (df.prototype.ValueTypeName = "quaternion"),
        (df.prototype.DefaultInterpolation = tn),
        (df.prototype.InterpolantFactoryMethodSmooth = void 0);
      var ff = (function (e) {
        b(n, e);
        var t = k(n);
        function n() {
          return p(this, n), t.apply(this, arguments);
        }
        return g(n);
      })(of);
      (ff.prototype.ValueTypeName = "string"),
        (ff.prototype.ValueBufferType = Array),
        (ff.prototype.DefaultInterpolation = en),
        (ff.prototype.InterpolantFactoryMethodLinear = void 0),
        (ff.prototype.InterpolantFactoryMethodSmooth = void 0);
      var hf = (function (e) {
        b(n, e);
        var t = k(n);
        function n() {
          return p(this, n), t.apply(this, arguments);
        }
        return g(n);
      })(of);
      hf.prototype.ValueTypeName = "vector";
      var pf = (function () {
        function e(t) {
          var n =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : -1,
            r = arguments.length > 2 ? arguments[2] : void 0,
            i =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : sn;
          p(this, e),
            (this.name = t),
            (this.tracks = r),
            (this.duration = n),
            (this.blendMode = i),
            (this.uuid = tr()),
            this.duration < 0 && this.resetDuration();
        }
        return (
          g(
            e,
            [
              {
                key: "resetDuration",
                value: function () {
                  for (var e = 0, t = 0, n = this.tracks.length; t !== n; ++t) {
                    var r = this.tracks[t];
                    e = Math.max(e, r.times[r.times.length - 1]);
                  }
                  return (this.duration = e), this;
                },
              },
              {
                key: "trim",
                value: function () {
                  for (var e = 0; e < this.tracks.length; e++)
                    this.tracks[e].trim(0, this.duration);
                  return this;
                },
              },
              {
                key: "validate",
                value: function () {
                  for (var e = !0, t = 0; t < this.tracks.length; t++)
                    e = e && this.tracks[t].validate();
                  return e;
                },
              },
              {
                key: "optimize",
                value: function () {
                  for (var e = 0; e < this.tracks.length; e++)
                    this.tracks[e].optimize();
                  return this;
                },
              },
              {
                key: "clone",
                value: function () {
                  for (var e = [], t = 0; t < this.tracks.length; t++)
                    e.push(this.tracks[t].clone());
                  return new this.constructor(
                    this.name,
                    this.duration,
                    e,
                    this.blendMode
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  return this.constructor.toJSON(this);
                },
              },
            ],
            [
              {
                key: "parse",
                value: function (e) {
                  for (
                    var t = [],
                      n = e.tracks,
                      r = 1 / (e.fps || 1),
                      i = 0,
                      a = n.length;
                    i !== a;
                    ++i
                  )
                    t.push(vf(n[i]).scale(r));
                  var o = new this(e.name, e.duration, t, e.blendMode);
                  return (o.uuid = e.uuid), o;
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  for (
                    var t = [],
                      n = e.tracks,
                      r = {
                        name: e.name,
                        duration: e.duration,
                        tracks: t,
                        uuid: e.uuid,
                        blendMode: e.blendMode,
                      },
                      i = 0,
                      a = n.length;
                    i !== a;
                    ++i
                  )
                    t.push(of.toJSON(n[i]));
                  return r;
                },
              },
              {
                key: "CreateFromMorphTargetSequence",
                value: function (e, t, n, r) {
                  for (var i = t.length, a = [], o = 0; o < i; o++) {
                    var s = [],
                      l = [];
                    s.push((o + i - 1) % i, o, (o + 1) % i), l.push(0, 1, 0);
                    var u = $d(s);
                    (s = Jd(s, 1, u)),
                      (l = Jd(l, 1, u)),
                      r || 0 !== s[0] || (s.push(i), l.push(l[0])),
                      a.push(
                        new uf(
                          ".morphTargetInfluences[" + t[o].name + "]",
                          s,
                          l
                        ).scale(1 / n)
                      );
                  }
                  return new this(e, -1, a);
                },
              },
              {
                key: "findByName",
                value: function (e, t) {
                  var n = e;
                  if (!Array.isArray(e)) {
                    var r = e;
                    n = (r.geometry && r.geometry.animations) || r.animations;
                  }
                  for (var i = 0; i < n.length; i++)
                    if (n[i].name === t) return n[i];
                  return null;
                },
              },
              {
                key: "CreateClipsFromMorphTargetSequences",
                value: function (e, t, n) {
                  for (
                    var r = {}, i = /^([\w-]*?)([\d]+)$/, a = 0, o = e.length;
                    a < o;
                    a++
                  ) {
                    var s = e[a],
                      l = s.name.match(i);
                    if (l && l.length > 1) {
                      var u = l[1],
                        c = r[u];
                      c || (r[u] = c = []), c.push(s);
                    }
                  }
                  var d = [];
                  for (var f in r)
                    d.push(this.CreateFromMorphTargetSequence(f, r[f], t, n));
                  return d;
                },
              },
              {
                key: "parseAnimation",
                value: function (e, t) {
                  if (!e)
                    return (
                      console.error(
                        "THREE.AnimationClip: No animation in JSONLoader data."
                      ),
                      null
                    );
                  for (
                    var n = function (e, t, n, r, i) {
                        if (0 !== n.length) {
                          var a = [],
                            o = [];
                          Qd(n, a, o, r),
                            0 !== a.length && i.push(new e(t, a, o));
                        }
                      },
                      r = [],
                      i = e.name || "default",
                      a = e.fps || 30,
                      o = e.blendMode,
                      s = e.length || -1,
                      l = e.hierarchy || [],
                      u = 0;
                    u < l.length;
                    u++
                  ) {
                    var c = l[u].keys;
                    if (c && 0 !== c.length)
                      if (c[0].morphTargets) {
                        var d = {},
                          f = void 0;
                        for (f = 0; f < c.length; f++)
                          if (c[f].morphTargets)
                            for (var h = 0; h < c[f].morphTargets.length; h++)
                              d[c[f].morphTargets[h]] = -1;
                        for (var p in d) {
                          for (
                            var v = [], m = [], g = 0;
                            g !== c[f].morphTargets.length;
                            ++g
                          ) {
                            var y = c[f];
                            v.push(y.time), m.push(y.morphTarget === p ? 1 : 0);
                          }
                          r.push(
                            new uf(".morphTargetInfluence[" + p + "]", v, m)
                          );
                        }
                        s = d.length * a;
                      } else {
                        var b = ".bones[" + t[u].name + "]";
                        n(hf, b + ".position", c, "pos", r),
                          n(df, b + ".quaternion", c, "rot", r),
                          n(hf, b + ".scale", c, "scl", r);
                      }
                  }
                  return 0 === r.length ? null : new this(i, s, r, o);
                },
              },
            ]
          ),
          e
        );
      })();
      function vf(e) {
        if (void 0 === e.type)
          throw new Error(
            "THREE.KeyframeTrack: track type undefined, can not parse"
          );
        var t = (function (e) {
          switch (e.toLowerCase()) {
            case "scalar":
            case "double":
            case "float":
            case "number":
            case "integer":
              return uf;
            case "vector":
            case "vector2":
            case "vector3":
            case "vector4":
              return hf;
            case "color":
              return lf;
            case "quaternion":
              return df;
            case "bool":
            case "boolean":
              return sf;
            case "string":
              return ff;
          }
          throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + e);
        })(e.type);
        if (void 0 === e.times) {
          var n = [],
            r = [];
          Qd(e.keys, n, r, "value"), (e.times = n), (e.values = r);
        }
        return void 0 !== t.parse
          ? t.parse(e)
          : new t(e.name, e.times, e.values, e.interpolation);
      }
      var mf,
        gf = {
          enabled: !1,
          files: {},
          add: function (e, t) {
            !1 !== this.enabled && (this.files[e] = t);
          },
          get: function (e) {
            if (!1 !== this.enabled) return this.files[e];
          },
          remove: function (e) {
            delete this.files[e];
          },
          clear: function () {
            this.files = {};
          },
        },
        yf = g(function e(t, n, r) {
          p(this, e);
          var i = this,
            a = !1,
            o = 0,
            s = 0,
            l = void 0,
            u = [];
          (this.onStart = void 0),
            (this.onLoad = t),
            (this.onProgress = n),
            (this.onError = r),
            (this.itemStart = function (e) {
              s++,
                !1 === a && void 0 !== i.onStart && i.onStart(e, o, s),
                (a = !0);
            }),
            (this.itemEnd = function (e) {
              o++,
                void 0 !== i.onProgress && i.onProgress(e, o, s),
                o === s && ((a = !1), void 0 !== i.onLoad && i.onLoad());
            }),
            (this.itemError = function (e) {
              void 0 !== i.onError && i.onError(e);
            }),
            (this.resolveURL = function (e) {
              return l ? l(e) : e;
            }),
            (this.setURLModifier = function (e) {
              return (l = e), this;
            }),
            (this.addHandler = function (e, t) {
              return u.push(e, t), this;
            }),
            (this.removeHandler = function (e) {
              var t = u.indexOf(e);
              return -1 !== t && u.splice(t, 2), this;
            }),
            (this.getHandler = function (e) {
              for (var t = 0, n = u.length; t < n; t += 2) {
                var r = u[t],
                  i = u[t + 1];
                if ((r.global && (r.lastIndex = 0), r.test(e))) return i;
              }
              return null;
            });
        }),
        bf = new yf(),
        _f = (function () {
          function e(t) {
            p(this, e),
              (this.manager = void 0 !== t ? t : bf),
              (this.crossOrigin = "anonymous"),
              (this.withCredentials = !1),
              (this.path = ""),
              (this.resourcePath = ""),
              (this.requestHeader = {});
          }
          return (
            g(e, [
              { key: "load", value: function () {} },
              {
                key: "loadAsync",
                value: function (e, t) {
                  var n = this;
                  return new Promise(function (r, i) {
                    n.load(e, r, t, i);
                  });
                },
              },
              { key: "parse", value: function () {} },
              {
                key: "setCrossOrigin",
                value: function (e) {
                  return (this.crossOrigin = e), this;
                },
              },
              {
                key: "setWithCredentials",
                value: function (e) {
                  return (this.withCredentials = e), this;
                },
              },
              {
                key: "setPath",
                value: function (e) {
                  return (this.path = e), this;
                },
              },
              {
                key: "setResourcePath",
                value: function (e) {
                  return (this.resourcePath = e), this;
                },
              },
              {
                key: "setRequestHeader",
                value: function (e) {
                  return (this.requestHeader = e), this;
                },
              },
            ]),
            e
          );
        })(),
        xf = {},
        Sf = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r) {
            var i;
            return p(this, n), ((i = t.call(this, e)).response = r), i;
          }
          return g(n);
        })(C(Error)),
        wf = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            return p(this, n), t.call(this, e);
          }
          return (
            g(n, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = this;
                  void 0 === e && (e = ""),
                    void 0 !== this.path && (e = this.path + e),
                    (e = this.manager.resolveURL(e));
                  var a = gf.get(e);
                  if (void 0 !== a)
                    return (
                      this.manager.itemStart(e),
                      setTimeout(function () {
                        t && t(a), i.manager.itemEnd(e);
                      }, 0),
                      a
                    );
                  if (void 0 === xf[e]) {
                    (xf[e] = []),
                      xf[e].push({ onLoad: t, onProgress: n, onError: r });
                    var o = new Request(e, {
                        headers: new Headers(this.requestHeader),
                        credentials: this.withCredentials
                          ? "include"
                          : "same-origin",
                      }),
                      s = this.mimeType,
                      l = this.responseType;
                    fetch(o)
                      .then(function (t) {
                        if (200 === t.status || 0 === t.status) {
                          if (
                            (0 === t.status &&
                              console.warn(
                                "THREE.FileLoader: HTTP Status 0 received."
                              ),
                            "undefined" === typeof ReadableStream ||
                              void 0 === t.body ||
                              void 0 === t.body.getReader)
                          )
                            return t;
                          var n = xf[e],
                            r = t.body.getReader(),
                            i =
                              t.headers.get("Content-Length") ||
                              t.headers.get("X-File-Size"),
                            a = i ? parseInt(i) : 0,
                            o = 0 !== a,
                            s = 0,
                            l = new ReadableStream({
                              start: function (e) {
                                !(function t() {
                                  r.read().then(function (r) {
                                    var i = r.done,
                                      l = r.value;
                                    if (i) e.close();
                                    else {
                                      s += l.byteLength;
                                      for (
                                        var u = new ProgressEvent("progress", {
                                            lengthComputable: o,
                                            loaded: s,
                                            total: a,
                                          }),
                                          c = 0,
                                          d = n.length;
                                        c < d;
                                        c++
                                      ) {
                                        var f = n[c];
                                        f.onProgress && f.onProgress(u);
                                      }
                                      e.enqueue(l), t();
                                    }
                                  });
                                })();
                              },
                            });
                          return new Response(l);
                        }
                        throw new Sf(
                          'fetch for "'
                            .concat(t.url, '" responded with ')
                            .concat(t.status, ": ")
                            .concat(t.statusText),
                          t
                        );
                      })
                      .then(function (e) {
                        switch (l) {
                          case "arraybuffer":
                            return e.arrayBuffer();
                          case "blob":
                            return e.blob();
                          case "document":
                            return e.text().then(function (e) {
                              return new DOMParser().parseFromString(e, s);
                            });
                          case "json":
                            return e.json();
                          default:
                            if (void 0 === s) return e.text();
                            var t = /charset="?([^;"\s]*)"?/i.exec(s),
                              n = t && t[1] ? t[1].toLowerCase() : void 0,
                              r = new TextDecoder(n);
                            return e.arrayBuffer().then(function (e) {
                              return r.decode(e);
                            });
                        }
                      })
                      .then(function (t) {
                        gf.add(e, t);
                        var n = xf[e];
                        delete xf[e];
                        for (var r = 0, i = n.length; r < i; r++) {
                          var a = n[r];
                          a.onLoad && a.onLoad(t);
                        }
                      })
                      .catch(function (t) {
                        var n = xf[e];
                        if (void 0 === n) throw (i.manager.itemError(e), t);
                        delete xf[e];
                        for (var r = 0, a = n.length; r < a; r++) {
                          var o = n[r];
                          o.onError && o.onError(t);
                        }
                        i.manager.itemError(e);
                      })
                      .finally(function () {
                        i.manager.itemEnd(e);
                      }),
                      this.manager.itemStart(e);
                  } else xf[e].push({ onLoad: t, onProgress: n, onError: r });
                },
              },
              {
                key: "setResponseType",
                value: function (e) {
                  return (this.responseType = e), this;
                },
              },
              {
                key: "setMimeType",
                value: function (e) {
                  return (this.mimeType = e), this;
                },
              },
            ]),
            n
          );
        })(_f),
        Mf = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            return p(this, n), t.call(this, e);
          }
          return (
            g(n, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = this,
                    a = new wf(this.manager);
                  a.setPath(this.path),
                    a.setRequestHeader(this.requestHeader),
                    a.setWithCredentials(this.withCredentials),
                    a.load(
                      e,
                      function (n) {
                        try {
                          t(i.parse(JSON.parse(n)));
                        } catch (a) {
                          r ? r(a) : console.error(a), i.manager.itemError(e);
                        }
                      },
                      n,
                      r
                    );
                },
              },
              {
                key: "parse",
                value: function (e) {
                  for (var t = [], n = 0; n < e.length; n++) {
                    var r = pf.parse(e[n]);
                    t.push(r);
                  }
                  return t;
                },
              },
            ]),
            n
          );
        })(_f),
        Ef = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            return p(this, n), t.call(this, e);
          }
          return (
            g(n, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = this,
                    a = [],
                    o = new fc(),
                    s = new wf(this.manager);
                  s.setPath(this.path),
                    s.setResponseType("arraybuffer"),
                    s.setRequestHeader(this.requestHeader),
                    s.setWithCredentials(i.withCredentials);
                  var l = 0;
                  function u(u) {
                    s.load(
                      e[u],
                      function (e) {
                        var n = i.parse(e, !0);
                        (a[u] = {
                          width: n.width,
                          height: n.height,
                          format: n.format,
                          mipmaps: n.mipmaps,
                        }),
                          6 === (l += 1) &&
                            (1 === n.mipmapCount && (o.minFilter = qe),
                            (o.image = a),
                            (o.format = n.format),
                            (o.needsUpdate = !0),
                            t && t(o));
                      },
                      n,
                      r
                    );
                  }
                  if (Array.isArray(e))
                    for (var c = 0, d = e.length; c < d; ++c) u(c);
                  else
                    s.load(
                      e,
                      function (e) {
                        var n = i.parse(e, !0);
                        if (n.isCubemap) {
                          for (
                            var r = n.mipmaps.length / n.mipmapCount, s = 0;
                            s < r;
                            s++
                          ) {
                            a[s] = { mipmaps: [] };
                            for (var l = 0; l < n.mipmapCount; l++)
                              a[s].mipmaps.push(
                                n.mipmaps[s * n.mipmapCount + l]
                              ),
                                (a[s].format = n.format),
                                (a[s].width = n.width),
                                (a[s].height = n.height);
                          }
                          o.image = a;
                        } else
                          (o.image.width = n.width),
                            (o.image.height = n.height),
                            (o.mipmaps = n.mipmaps);
                        1 === n.mipmapCount && (o.minFilter = qe),
                          (o.format = n.format),
                          (o.needsUpdate = !0),
                          t && t(o);
                      },
                      n,
                      r
                    );
                  return o;
                },
              },
            ]),
            n
          );
        })(_f),
        kf = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            return p(this, n), t.call(this, e);
          }
          return (
            g(n, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  void 0 !== this.path && (e = this.path + e),
                    (e = this.manager.resolveURL(e));
                  var i = this,
                    a = gf.get(e);
                  if (void 0 !== a)
                    return (
                      i.manager.itemStart(e),
                      setTimeout(function () {
                        t && t(a), i.manager.itemEnd(e);
                      }, 0),
                      a
                    );
                  var o = gr("img");
                  function s() {
                    u(), gf.add(e, this), t && t(this), i.manager.itemEnd(e);
                  }
                  function l(t) {
                    u(),
                      r && r(t),
                      i.manager.itemError(e),
                      i.manager.itemEnd(e);
                  }
                  function u() {
                    o.removeEventListener("load", s, !1),
                      o.removeEventListener("error", l, !1);
                  }
                  return (
                    o.addEventListener("load", s, !1),
                    o.addEventListener("error", l, !1),
                    "data:" !== e.slice(0, 5) &&
                      void 0 !== this.crossOrigin &&
                      (o.crossOrigin = this.crossOrigin),
                    i.manager.itemStart(e),
                    (o.src = e),
                    o
                  );
                },
              },
            ]),
            n
          );
        })(_f),
        Tf = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            return p(this, n), t.call(this, e);
          }
          return (
            g(n, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = new fo(),
                    a = new kf(this.manager);
                  a.setCrossOrigin(this.crossOrigin), a.setPath(this.path);
                  var o = 0;
                  function s(n) {
                    a.load(
                      e[n],
                      function (e) {
                        (i.images[n] = e),
                          6 === ++o && ((i.needsUpdate = !0), t && t(i));
                      },
                      void 0,
                      r
                    );
                  }
                  for (var l = 0; l < e.length; ++l) s(l);
                  return i;
                },
              },
            ]),
            n
          );
        })(_f),
        Af = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            return p(this, n), t.call(this, e);
          }
          return (
            g(n, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = this,
                    a = new Iu(),
                    o = new wf(this.manager);
                  return (
                    o.setResponseType("arraybuffer"),
                    o.setRequestHeader(this.requestHeader),
                    o.setPath(this.path),
                    o.setWithCredentials(i.withCredentials),
                    o.load(
                      e,
                      function (e) {
                        var n = i.parse(e);
                        n &&
                          (void 0 !== n.image
                            ? (a.image = n.image)
                            : void 0 !== n.data &&
                              ((a.image.width = n.width),
                              (a.image.height = n.height),
                              (a.image.data = n.data)),
                          (a.wrapS = void 0 !== n.wrapS ? n.wrapS : Ze),
                          (a.wrapT = void 0 !== n.wrapT ? n.wrapT : Ze),
                          (a.magFilter =
                            void 0 !== n.magFilter ? n.magFilter : qe),
                          (a.minFilter =
                            void 0 !== n.minFilter ? n.minFilter : qe),
                          (a.anisotropy =
                            void 0 !== n.anisotropy ? n.anisotropy : 1),
                          void 0 !== n.colorSpace
                            ? (a.colorSpace = n.colorSpace)
                            : void 0 !== n.encoding &&
                              (a.encoding = n.encoding),
                          void 0 !== n.flipY && (a.flipY = n.flipY),
                          void 0 !== n.format && (a.format = n.format),
                          void 0 !== n.type && (a.type = n.type),
                          void 0 !== n.mipmaps &&
                            ((a.mipmaps = n.mipmaps), (a.minFilter = $e)),
                          1 === n.mipmapCount && (a.minFilter = qe),
                          void 0 !== n.generateMipmaps &&
                            (a.generateMipmaps = n.generateMipmaps),
                          (a.needsUpdate = !0),
                          t && t(a, n));
                      },
                      n,
                      r
                    ),
                    a
                  );
                },
              },
            ]),
            n
          );
        })(_f),
        Cf = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            return p(this, n), t.call(this, e);
          }
          return (
            g(n, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = new Lr(),
                    a = new kf(this.manager);
                  return (
                    a.setCrossOrigin(this.crossOrigin),
                    a.setPath(this.path),
                    a.load(
                      e,
                      function (e) {
                        (i.image = e),
                          (i.needsUpdate = !0),
                          void 0 !== t && t(i);
                      },
                      n,
                      r
                    ),
                    i
                  );
                },
              },
            ]),
            n
          );
        })(_f),
        Pf = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1;
            return (
              p(this, n),
              ((r = t.call(this)).isLight = !0),
              (r.type = "Light"),
              (r.color = new sa(e)),
              (r.intensity = i),
              r
            );
          }
          return (
            g(n, [
              { key: "dispose", value: function () {} },
              {
                key: "copy",
                value: function (e, t) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e, t),
                    this.color.copy(e.color),
                    (this.intensity = e.intensity),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = L(_(n.prototype), "toJSON", this).call(this, e);
                  return (
                    (t.object.color = this.color.getHex()),
                    (t.object.intensity = this.intensity),
                    void 0 !== this.groundColor &&
                      (t.object.groundColor = this.groundColor.getHex()),
                    void 0 !== this.distance &&
                      (t.object.distance = this.distance),
                    void 0 !== this.angle && (t.object.angle = this.angle),
                    void 0 !== this.decay && (t.object.decay = this.decay),
                    void 0 !== this.penumbra &&
                      (t.object.penumbra = this.penumbra),
                    void 0 !== this.shadow &&
                      (t.object.shadow = this.shadow.toJSON()),
                    t
                  );
                },
              },
            ]),
            n
          );
        })(Hi),
        Rf = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i) {
            var a;
            return (
              p(this, n),
              ((a = t.call(this, e, i)).isHemisphereLight = !0),
              (a.type = "HemisphereLight"),
              a.position.copy(Hi.DEFAULT_UP),
              a.updateMatrix(),
              (a.groundColor = new sa(r)),
              a
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e, t) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e, t),
                    this.groundColor.copy(e.groundColor),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(Pf),
        Lf = new gi(),
        If = new Zr(),
        Nf = new Zr(),
        Of = (function () {
          function e(t) {
            p(this, e),
              (this.camera = t),
              (this.bias = 0),
              (this.normalBias = 0),
              (this.radius = 1),
              (this.blurSamples = 8),
              (this.mapSize = new dr(512, 512)),
              (this.map = null),
              (this.mapPass = null),
              (this.matrix = new gi()),
              (this.autoUpdate = !0),
              (this.needsUpdate = !1),
              (this._frustum = new _o()),
              (this._frameExtents = new dr(1, 1)),
              (this._viewportCount = 1),
              (this._viewports = [new Ir(0, 0, 1, 1)]);
          }
          return (
            g(e, [
              {
                key: "getViewportCount",
                value: function () {
                  return this._viewportCount;
                },
              },
              {
                key: "getFrustum",
                value: function () {
                  return this._frustum;
                },
              },
              {
                key: "updateMatrices",
                value: function (e) {
                  var t = this.camera,
                    n = this.matrix;
                  If.setFromMatrixPosition(e.matrixWorld),
                    t.position.copy(If),
                    Nf.setFromMatrixPosition(e.target.matrixWorld),
                    t.lookAt(Nf),
                    t.updateMatrixWorld(),
                    Lf.multiplyMatrices(
                      t.projectionMatrix,
                      t.matrixWorldInverse
                    ),
                    this._frustum.setFromProjectionMatrix(Lf),
                    n.set(
                      0.5,
                      0,
                      0,
                      0.5,
                      0,
                      0.5,
                      0,
                      0.5,
                      0,
                      0,
                      0.5,
                      0.5,
                      0,
                      0,
                      0,
                      1
                    ),
                    n.multiply(Lf);
                },
              },
              {
                key: "getViewport",
                value: function (e) {
                  return this._viewports[e];
                },
              },
              {
                key: "getFrameExtents",
                value: function () {
                  return this._frameExtents;
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.map && this.map.dispose(),
                    this.mapPass && this.mapPass.dispose();
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    (this.camera = e.camera.clone()),
                    (this.bias = e.bias),
                    (this.radius = e.radius),
                    this.mapSize.copy(e.mapSize),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = {};
                  return (
                    0 !== this.bias && (e.bias = this.bias),
                    0 !== this.normalBias && (e.normalBias = this.normalBias),
                    1 !== this.radius && (e.radius = this.radius),
                    (512 === this.mapSize.x && 512 === this.mapSize.y) ||
                      (e.mapSize = this.mapSize.toArray()),
                    (e.camera = this.camera.toJSON(!1).object),
                    delete e.camera.matrix,
                    e
                  );
                },
              },
            ]),
            e
          );
        })(),
        Df = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e;
            return (
              p(this, n),
              ((e = t.call(this, new lo(50, 1, 0.5, 500))).isSpotLightShadow =
                !0),
              (e.focus = 1),
              e
            );
          }
          return (
            g(n, [
              {
                key: "updateMatrices",
                value: function (e) {
                  var t = this.camera,
                    r = 2 * er * e.angle * this.focus,
                    i = this.mapSize.width / this.mapSize.height,
                    a = e.distance || t.far;
                  (r === t.fov && i === t.aspect && a === t.far) ||
                    ((t.fov = r),
                    (t.aspect = i),
                    (t.far = a),
                    t.updateProjectionMatrix()),
                    L(_(n.prototype), "updateMatrices", this).call(this, e);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    (this.focus = e.focus),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(Of),
        Uf = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r) {
            var i,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : Math.PI / 3,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 0,
              l =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : 2;
            return (
              p(this, n),
              ((i = t.call(this, e, r)).isSpotLight = !0),
              (i.type = "SpotLight"),
              i.position.copy(Hi.DEFAULT_UP),
              i.updateMatrix(),
              (i.target = new Hi()),
              (i.distance = a),
              (i.angle = o),
              (i.penumbra = s),
              (i.decay = l),
              (i.map = null),
              (i.shadow = new Df()),
              i
            );
          }
          return (
            g(n, [
              {
                key: "power",
                get: function () {
                  return this.intensity * Math.PI;
                },
                set: function (e) {
                  this.intensity = e / Math.PI;
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.shadow.dispose();
                },
              },
              {
                key: "copy",
                value: function (e, t) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e, t),
                    (this.distance = e.distance),
                    (this.angle = e.angle),
                    (this.penumbra = e.penumbra),
                    (this.decay = e.decay),
                    (this.target = e.target.clone()),
                    (this.shadow = e.shadow.clone()),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(Pf),
        zf = new gi(),
        Ff = new Zr(),
        Bf = new Zr(),
        Zf = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e;
            return (
              p(this, n),
              ((e = t.call(this, new lo(90, 1, 0.5, 500))).isPointLightShadow =
                !0),
              (e._frameExtents = new dr(4, 2)),
              (e._viewportCount = 6),
              (e._viewports = [
                new Ir(2, 1, 1, 1),
                new Ir(0, 1, 1, 1),
                new Ir(3, 1, 1, 1),
                new Ir(1, 1, 1, 1),
                new Ir(3, 0, 1, 1),
                new Ir(1, 0, 1, 1),
              ]),
              (e._cubeDirections = [
                new Zr(1, 0, 0),
                new Zr(-1, 0, 0),
                new Zr(0, 0, 1),
                new Zr(0, 0, -1),
                new Zr(0, 1, 0),
                new Zr(0, -1, 0),
              ]),
              (e._cubeUps = [
                new Zr(0, 1, 0),
                new Zr(0, 1, 0),
                new Zr(0, 1, 0),
                new Zr(0, 1, 0),
                new Zr(0, 0, 1),
                new Zr(0, 0, -1),
              ]),
              e
            );
          }
          return (
            g(n, [
              {
                key: "updateMatrices",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0,
                    n = this.camera,
                    r = this.matrix,
                    i = e.distance || n.far;
                  i !== n.far && ((n.far = i), n.updateProjectionMatrix()),
                    Ff.setFromMatrixPosition(e.matrixWorld),
                    n.position.copy(Ff),
                    Bf.copy(n.position),
                    Bf.add(this._cubeDirections[t]),
                    n.up.copy(this._cubeUps[t]),
                    n.lookAt(Bf),
                    n.updateMatrixWorld(),
                    r.makeTranslation(-Ff.x, -Ff.y, -Ff.z),
                    zf.multiplyMatrices(
                      n.projectionMatrix,
                      n.matrixWorldInverse
                    ),
                    this._frustum.setFromProjectionMatrix(zf);
                },
              },
            ]),
            n
          );
        })(Of),
        Hf = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r) {
            var i,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 2;
            return (
              p(this, n),
              ((i = t.call(this, e, r)).isPointLight = !0),
              (i.type = "PointLight"),
              (i.distance = a),
              (i.decay = o),
              (i.shadow = new Zf()),
              i
            );
          }
          return (
            g(n, [
              {
                key: "power",
                get: function () {
                  return 4 * this.intensity * Math.PI;
                },
                set: function (e) {
                  this.intensity = e / (4 * Math.PI);
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.shadow.dispose();
                },
              },
              {
                key: "copy",
                value: function (e, t) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e, t),
                    (this.distance = e.distance),
                    (this.decay = e.decay),
                    (this.shadow = e.shadow.clone()),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(Pf),
        Vf = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e;
            return (
              p(this, n),
              ((e = t.call(
                this,
                new No(-5, 5, 5, -5, 0.5, 500)
              )).isDirectionalLightShadow = !0),
              e
            );
          }
          return g(n);
        })(Of),
        Gf = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r) {
            var i;
            return (
              p(this, n),
              ((i = t.call(this, e, r)).isDirectionalLight = !0),
              (i.type = "DirectionalLight"),
              i.position.copy(Hi.DEFAULT_UP),
              i.updateMatrix(),
              (i.target = new Hi()),
              (i.shadow = new Vf()),
              i
            );
          }
          return (
            g(n, [
              {
                key: "dispose",
                value: function () {
                  this.shadow.dispose();
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    (this.target = e.target.clone()),
                    (this.shadow = e.shadow.clone()),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(Pf),
        Wf = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r) {
            var i;
            return (
              p(this, n),
              ((i = t.call(this, e, r)).isAmbientLight = !0),
              (i.type = "AmbientLight"),
              i
            );
          }
          return g(n);
        })(Pf),
        jf = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r) {
            var i,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 10,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 10;
            return (
              p(this, n),
              ((i = t.call(this, e, r)).isRectAreaLight = !0),
              (i.type = "RectAreaLight"),
              (i.width = a),
              (i.height = o),
              i
            );
          }
          return (
            g(n, [
              {
                key: "power",
                get: function () {
                  return this.intensity * this.width * this.height * Math.PI;
                },
                set: function (e) {
                  this.intensity = e / (this.width * this.height * Math.PI);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    (this.width = e.width),
                    (this.height = e.height),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = L(_(n.prototype), "toJSON", this).call(this, e);
                  return (
                    (t.object.width = this.width),
                    (t.object.height = this.height),
                    t
                  );
                },
              },
            ]),
            n
          );
        })(Pf),
        Xf = (function () {
          function e() {
            p(this, e),
              (this.isSphericalHarmonics3 = !0),
              (this.coefficients = []);
            for (var t = 0; t < 9; t++) this.coefficients.push(new Zr());
          }
          return (
            g(
              e,
              [
                {
                  key: "set",
                  value: function (e) {
                    for (var t = 0; t < 9; t++) this.coefficients[t].copy(e[t]);
                    return this;
                  },
                },
                {
                  key: "zero",
                  value: function () {
                    for (var e = 0; e < 9; e++)
                      this.coefficients[e].set(0, 0, 0);
                    return this;
                  },
                },
                {
                  key: "getAt",
                  value: function (e, t) {
                    var n = e.x,
                      r = e.y,
                      i = e.z,
                      a = this.coefficients;
                    return (
                      t.copy(a[0]).multiplyScalar(0.282095),
                      t.addScaledVector(a[1], 0.488603 * r),
                      t.addScaledVector(a[2], 0.488603 * i),
                      t.addScaledVector(a[3], 0.488603 * n),
                      t.addScaledVector(a[4], n * r * 1.092548),
                      t.addScaledVector(a[5], r * i * 1.092548),
                      t.addScaledVector(a[6], 0.315392 * (3 * i * i - 1)),
                      t.addScaledVector(a[7], n * i * 1.092548),
                      t.addScaledVector(a[8], 0.546274 * (n * n - r * r)),
                      t
                    );
                  },
                },
                {
                  key: "getIrradianceAt",
                  value: function (e, t) {
                    var n = e.x,
                      r = e.y,
                      i = e.z,
                      a = this.coefficients;
                    return (
                      t.copy(a[0]).multiplyScalar(0.886227),
                      t.addScaledVector(a[1], 1.023328 * r),
                      t.addScaledVector(a[2], 1.023328 * i),
                      t.addScaledVector(a[3], 1.023328 * n),
                      t.addScaledVector(a[4], 0.858086 * n * r),
                      t.addScaledVector(a[5], 0.858086 * r * i),
                      t.addScaledVector(a[6], 0.743125 * i * i - 0.247708),
                      t.addScaledVector(a[7], 0.858086 * n * i),
                      t.addScaledVector(a[8], 0.429043 * (n * n - r * r)),
                      t
                    );
                  },
                },
                {
                  key: "add",
                  value: function (e) {
                    for (var t = 0; t < 9; t++)
                      this.coefficients[t].add(e.coefficients[t]);
                    return this;
                  },
                },
                {
                  key: "addScaledSH",
                  value: function (e, t) {
                    for (var n = 0; n < 9; n++)
                      this.coefficients[n].addScaledVector(
                        e.coefficients[n],
                        t
                      );
                    return this;
                  },
                },
                {
                  key: "scale",
                  value: function (e) {
                    for (var t = 0; t < 9; t++)
                      this.coefficients[t].multiplyScalar(e);
                    return this;
                  },
                },
                {
                  key: "lerp",
                  value: function (e, t) {
                    for (var n = 0; n < 9; n++)
                      this.coefficients[n].lerp(e.coefficients[n], t);
                    return this;
                  },
                },
                {
                  key: "equals",
                  value: function (e) {
                    for (var t = 0; t < 9; t++)
                      if (!this.coefficients[t].equals(e.coefficients[t]))
                        return !1;
                    return !0;
                  },
                },
                {
                  key: "copy",
                  value: function (e) {
                    return this.set(e.coefficients);
                  },
                },
                {
                  key: "clone",
                  value: function () {
                    return new this.constructor().copy(this);
                  },
                },
                {
                  key: "fromArray",
                  value: function (e) {
                    for (
                      var t =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : 0,
                        n = this.coefficients,
                        r = 0;
                      r < 9;
                      r++
                    )
                      n[r].fromArray(e, t + 3 * r);
                    return this;
                  },
                },
                {
                  key: "toArray",
                  value: function () {
                    for (
                      var e =
                          arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : [],
                        t =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : 0,
                        n = this.coefficients,
                        r = 0;
                      r < 9;
                      r++
                    )
                      n[r].toArray(e, t + 3 * r);
                    return e;
                  },
                },
              ],
              [
                {
                  key: "getBasisAt",
                  value: function (e, t) {
                    var n = e.x,
                      r = e.y,
                      i = e.z;
                    (t[0] = 0.282095),
                      (t[1] = 0.488603 * r),
                      (t[2] = 0.488603 * i),
                      (t[3] = 0.488603 * n),
                      (t[4] = 1.092548 * n * r),
                      (t[5] = 1.092548 * r * i),
                      (t[6] = 0.315392 * (3 * i * i - 1)),
                      (t[7] = 1.092548 * n * i),
                      (t[8] = 0.546274 * (n * n - r * r));
                  },
                },
              ]
            ),
            e
          );
        })(),
        qf = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Xf(),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1;
            return (
              p(this, n),
              ((e = t.call(this, void 0, i)).isLightProbe = !0),
              (e.sh = r),
              e
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    this.sh.copy(e.sh),
                    this
                  );
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  return (
                    (this.intensity = e.intensity),
                    this.sh.fromArray(e.sh),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = L(_(n.prototype), "toJSON", this).call(this, e);
                  return (t.object.sh = this.sh.toArray()), t;
                },
              },
            ]),
            n
          );
        })(Pf),
        Yf = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return p(this, n), ((r = t.call(this, e)).textures = {}), r;
          }
          return (
            g(
              n,
              [
                {
                  key: "load",
                  value: function (e, t, n, r) {
                    var i = this,
                      a = new wf(i.manager);
                    a.setPath(i.path),
                      a.setRequestHeader(i.requestHeader),
                      a.setWithCredentials(i.withCredentials),
                      a.load(
                        e,
                        function (n) {
                          try {
                            t(i.parse(JSON.parse(n)));
                          } catch (a) {
                            r ? r(a) : console.error(a), i.manager.itemError(e);
                          }
                        },
                        n,
                        r
                      );
                  },
                },
                {
                  key: "parse",
                  value: function (e) {
                    var t = this.textures;
                    function r(e) {
                      return (
                        void 0 === t[e] &&
                          console.warn(
                            "THREE.MaterialLoader: Undefined texture",
                            e
                          ),
                        t[e]
                      );
                    }
                    var i = n.createMaterialFromType(e.type);
                    if (
                      (void 0 !== e.uuid && (i.uuid = e.uuid),
                      void 0 !== e.name && (i.name = e.name),
                      void 0 !== e.color &&
                        void 0 !== i.color &&
                        i.color.setHex(e.color),
                      void 0 !== e.roughness && (i.roughness = e.roughness),
                      void 0 !== e.metalness && (i.metalness = e.metalness),
                      void 0 !== e.sheen && (i.sheen = e.sheen),
                      void 0 !== e.sheenColor &&
                        (i.sheenColor = new sa().setHex(e.sheenColor)),
                      void 0 !== e.sheenRoughness &&
                        (i.sheenRoughness = e.sheenRoughness),
                      void 0 !== e.emissive &&
                        void 0 !== i.emissive &&
                        i.emissive.setHex(e.emissive),
                      void 0 !== e.specular &&
                        void 0 !== i.specular &&
                        i.specular.setHex(e.specular),
                      void 0 !== e.specularIntensity &&
                        (i.specularIntensity = e.specularIntensity),
                      void 0 !== e.specularColor &&
                        void 0 !== i.specularColor &&
                        i.specularColor.setHex(e.specularColor),
                      void 0 !== e.shininess && (i.shininess = e.shininess),
                      void 0 !== e.clearcoat && (i.clearcoat = e.clearcoat),
                      void 0 !== e.clearcoatRoughness &&
                        (i.clearcoatRoughness = e.clearcoatRoughness),
                      void 0 !== e.iridescence &&
                        (i.iridescence = e.iridescence),
                      void 0 !== e.iridescenceIOR &&
                        (i.iridescenceIOR = e.iridescenceIOR),
                      void 0 !== e.iridescenceThicknessRange &&
                        (i.iridescenceThicknessRange =
                          e.iridescenceThicknessRange),
                      void 0 !== e.transmission &&
                        (i.transmission = e.transmission),
                      void 0 !== e.thickness && (i.thickness = e.thickness),
                      void 0 !== e.attenuationDistance &&
                        (i.attenuationDistance = e.attenuationDistance),
                      void 0 !== e.attenuationColor &&
                        void 0 !== i.attenuationColor &&
                        i.attenuationColor.setHex(e.attenuationColor),
                      void 0 !== e.fog && (i.fog = e.fog),
                      void 0 !== e.flatShading &&
                        (i.flatShading = e.flatShading),
                      void 0 !== e.blending && (i.blending = e.blending),
                      void 0 !== e.combine && (i.combine = e.combine),
                      void 0 !== e.side && (i.side = e.side),
                      void 0 !== e.shadowSide && (i.shadowSide = e.shadowSide),
                      void 0 !== e.opacity && (i.opacity = e.opacity),
                      void 0 !== e.transparent &&
                        (i.transparent = e.transparent),
                      void 0 !== e.alphaTest && (i.alphaTest = e.alphaTest),
                      void 0 !== e.depthTest && (i.depthTest = e.depthTest),
                      void 0 !== e.depthWrite && (i.depthWrite = e.depthWrite),
                      void 0 !== e.colorWrite && (i.colorWrite = e.colorWrite),
                      void 0 !== e.stencilWrite &&
                        (i.stencilWrite = e.stencilWrite),
                      void 0 !== e.stencilWriteMask &&
                        (i.stencilWriteMask = e.stencilWriteMask),
                      void 0 !== e.stencilFunc &&
                        (i.stencilFunc = e.stencilFunc),
                      void 0 !== e.stencilRef && (i.stencilRef = e.stencilRef),
                      void 0 !== e.stencilFuncMask &&
                        (i.stencilFuncMask = e.stencilFuncMask),
                      void 0 !== e.stencilFail &&
                        (i.stencilFail = e.stencilFail),
                      void 0 !== e.stencilZFail &&
                        (i.stencilZFail = e.stencilZFail),
                      void 0 !== e.stencilZPass &&
                        (i.stencilZPass = e.stencilZPass),
                      void 0 !== e.wireframe && (i.wireframe = e.wireframe),
                      void 0 !== e.wireframeLinewidth &&
                        (i.wireframeLinewidth = e.wireframeLinewidth),
                      void 0 !== e.wireframeLinecap &&
                        (i.wireframeLinecap = e.wireframeLinecap),
                      void 0 !== e.wireframeLinejoin &&
                        (i.wireframeLinejoin = e.wireframeLinejoin),
                      void 0 !== e.rotation && (i.rotation = e.rotation),
                      1 !== e.linewidth && (i.linewidth = e.linewidth),
                      void 0 !== e.dashSize && (i.dashSize = e.dashSize),
                      void 0 !== e.gapSize && (i.gapSize = e.gapSize),
                      void 0 !== e.scale && (i.scale = e.scale),
                      void 0 !== e.polygonOffset &&
                        (i.polygonOffset = e.polygonOffset),
                      void 0 !== e.polygonOffsetFactor &&
                        (i.polygonOffsetFactor = e.polygonOffsetFactor),
                      void 0 !== e.polygonOffsetUnits &&
                        (i.polygonOffsetUnits = e.polygonOffsetUnits),
                      void 0 !== e.dithering && (i.dithering = e.dithering),
                      void 0 !== e.alphaToCoverage &&
                        (i.alphaToCoverage = e.alphaToCoverage),
                      void 0 !== e.premultipliedAlpha &&
                        (i.premultipliedAlpha = e.premultipliedAlpha),
                      void 0 !== e.forceSinglePass &&
                        (i.forceSinglePass = e.forceSinglePass),
                      void 0 !== e.visible && (i.visible = e.visible),
                      void 0 !== e.toneMapped && (i.toneMapped = e.toneMapped),
                      void 0 !== e.userData && (i.userData = e.userData),
                      void 0 !== e.vertexColors &&
                        ("number" === typeof e.vertexColors
                          ? (i.vertexColors = e.vertexColors > 0)
                          : (i.vertexColors = e.vertexColors)),
                      void 0 !== e.uniforms)
                    )
                      for (var a in e.uniforms) {
                        var o = e.uniforms[a];
                        switch (((i.uniforms[a] = {}), o.type)) {
                          case "t":
                            i.uniforms[a].value = r(o.value);
                            break;
                          case "c":
                            i.uniforms[a].value = new sa().setHex(o.value);
                            break;
                          case "v2":
                            i.uniforms[a].value = new dr().fromArray(o.value);
                            break;
                          case "v3":
                            i.uniforms[a].value = new Zr().fromArray(o.value);
                            break;
                          case "v4":
                            i.uniforms[a].value = new Ir().fromArray(o.value);
                            break;
                          case "m3":
                            i.uniforms[a].value = new fr().fromArray(o.value);
                            break;
                          case "m4":
                            i.uniforms[a].value = new gi().fromArray(o.value);
                            break;
                          default:
                            i.uniforms[a].value = o.value;
                        }
                      }
                    if (
                      (void 0 !== e.defines && (i.defines = e.defines),
                      void 0 !== e.vertexShader &&
                        (i.vertexShader = e.vertexShader),
                      void 0 !== e.fragmentShader &&
                        (i.fragmentShader = e.fragmentShader),
                      void 0 !== e.glslVersion &&
                        (i.glslVersion = e.glslVersion),
                      void 0 !== e.extensions)
                    )
                      for (var s in e.extensions)
                        i.extensions[s] = e.extensions[s];
                    if (
                      (void 0 !== e.lights && (i.lights = e.lights),
                      void 0 !== e.clipping && (i.clipping = e.clipping),
                      void 0 !== e.size && (i.size = e.size),
                      void 0 !== e.sizeAttenuation &&
                        (i.sizeAttenuation = e.sizeAttenuation),
                      void 0 !== e.map && (i.map = r(e.map)),
                      void 0 !== e.matcap && (i.matcap = r(e.matcap)),
                      void 0 !== e.alphaMap && (i.alphaMap = r(e.alphaMap)),
                      void 0 !== e.bumpMap && (i.bumpMap = r(e.bumpMap)),
                      void 0 !== e.bumpScale && (i.bumpScale = e.bumpScale),
                      void 0 !== e.normalMap && (i.normalMap = r(e.normalMap)),
                      void 0 !== e.normalMapType &&
                        (i.normalMapType = e.normalMapType),
                      void 0 !== e.normalScale)
                    ) {
                      var l = e.normalScale;
                      !1 === Array.isArray(l) && (l = [l, l]),
                        (i.normalScale = new dr().fromArray(l));
                    }
                    return (
                      void 0 !== e.displacementMap &&
                        (i.displacementMap = r(e.displacementMap)),
                      void 0 !== e.displacementScale &&
                        (i.displacementScale = e.displacementScale),
                      void 0 !== e.displacementBias &&
                        (i.displacementBias = e.displacementBias),
                      void 0 !== e.roughnessMap &&
                        (i.roughnessMap = r(e.roughnessMap)),
                      void 0 !== e.metalnessMap &&
                        (i.metalnessMap = r(e.metalnessMap)),
                      void 0 !== e.emissiveMap &&
                        (i.emissiveMap = r(e.emissiveMap)),
                      void 0 !== e.emissiveIntensity &&
                        (i.emissiveIntensity = e.emissiveIntensity),
                      void 0 !== e.specularMap &&
                        (i.specularMap = r(e.specularMap)),
                      void 0 !== e.specularIntensityMap &&
                        (i.specularIntensityMap = r(e.specularIntensityMap)),
                      void 0 !== e.specularColorMap &&
                        (i.specularColorMap = r(e.specularColorMap)),
                      void 0 !== e.envMap && (i.envMap = r(e.envMap)),
                      void 0 !== e.envMapIntensity &&
                        (i.envMapIntensity = e.envMapIntensity),
                      void 0 !== e.reflectivity &&
                        (i.reflectivity = e.reflectivity),
                      void 0 !== e.refractionRatio &&
                        (i.refractionRatio = e.refractionRatio),
                      void 0 !== e.lightMap && (i.lightMap = r(e.lightMap)),
                      void 0 !== e.lightMapIntensity &&
                        (i.lightMapIntensity = e.lightMapIntensity),
                      void 0 !== e.aoMap && (i.aoMap = r(e.aoMap)),
                      void 0 !== e.aoMapIntensity &&
                        (i.aoMapIntensity = e.aoMapIntensity),
                      void 0 !== e.gradientMap &&
                        (i.gradientMap = r(e.gradientMap)),
                      void 0 !== e.clearcoatMap &&
                        (i.clearcoatMap = r(e.clearcoatMap)),
                      void 0 !== e.clearcoatRoughnessMap &&
                        (i.clearcoatRoughnessMap = r(e.clearcoatRoughnessMap)),
                      void 0 !== e.clearcoatNormalMap &&
                        (i.clearcoatNormalMap = r(e.clearcoatNormalMap)),
                      void 0 !== e.clearcoatNormalScale &&
                        (i.clearcoatNormalScale = new dr().fromArray(
                          e.clearcoatNormalScale
                        )),
                      void 0 !== e.iridescenceMap &&
                        (i.iridescenceMap = r(e.iridescenceMap)),
                      void 0 !== e.iridescenceThicknessMap &&
                        (i.iridescenceThicknessMap = r(
                          e.iridescenceThicknessMap
                        )),
                      void 0 !== e.transmissionMap &&
                        (i.transmissionMap = r(e.transmissionMap)),
                      void 0 !== e.thicknessMap &&
                        (i.thicknessMap = r(e.thicknessMap)),
                      void 0 !== e.sheenColorMap &&
                        (i.sheenColorMap = r(e.sheenColorMap)),
                      void 0 !== e.sheenRoughnessMap &&
                        (i.sheenRoughnessMap = r(e.sheenRoughnessMap)),
                      i
                    );
                  },
                },
                {
                  key: "setTextures",
                  value: function (e) {
                    return (this.textures = e), this;
                  },
                },
              ],
              [
                {
                  key: "createMaterialFromType",
                  value: function (e) {
                    return new {
                      ShadowMaterial: zd,
                      SpriteMaterial: su,
                      RawShaderMaterial: Fd,
                      ShaderMaterial: oo,
                      PointsMaterial: rc,
                      MeshPhysicalMaterial: Zd,
                      MeshStandardMaterial: Bd,
                      MeshPhongMaterial: Hd,
                      MeshToonMaterial: Vd,
                      MeshNormalMaterial: Gd,
                      MeshLambertMaterial: Wd,
                      MeshDepthMaterial: zl,
                      MeshDistanceMaterial: Fl,
                      MeshBasicMaterial: ua,
                      MeshMatcapMaterial: jd,
                      LineDashedMaterial: Xd,
                      LineBasicMaterial: ju,
                      Material: na,
                    }[e]();
                  },
                },
              ]
            ),
            n
          );
        })(_f),
        Kf = (function () {
          function e() {
            p(this, e);
          }
          return (
            g(e, null, [
              {
                key: "decodeText",
                value: function (e) {
                  if ("undefined" !== typeof TextDecoder)
                    return new TextDecoder().decode(e);
                  for (var t = "", n = 0, r = e.length; n < r; n++)
                    t += String.fromCharCode(e[n]);
                  try {
                    return decodeURIComponent(escape(t));
                  } catch (i) {
                    return t;
                  }
                },
              },
              {
                key: "extractUrlBase",
                value: function (e) {
                  var t = e.lastIndexOf("/");
                  return -1 === t ? "./" : e.slice(0, t + 1);
                },
              },
              {
                key: "resolveURL",
                value: function (e, t) {
                  return "string" !== typeof e || "" === e
                    ? ""
                    : (/^https?:\/\//i.test(t) &&
                        /^\//.test(e) &&
                        (t = t.replace(/(^https?:\/\/[^\/]+).*/i, "$1")),
                      /^(https?:)?\/\//i.test(e) ||
                      /^data:.*,.*$/i.test(e) ||
                      /^blob:.*$/i.test(e)
                        ? e
                        : t + e);
                },
              },
            ]),
            e
          );
        })(),
        $f = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e;
            return (
              p(this, n),
              ((e = t.call(this)).isInstancedBufferGeometry = !0),
              (e.type = "InstancedBufferGeometry"),
              (e.instanceCount = 1 / 0),
              e
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    (this.instanceCount = e.instanceCount),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = L(_(n.prototype), "toJSON", this).call(this);
                  return (
                    (e.instanceCount = this.instanceCount),
                    (e.isInstancedBufferGeometry = !0),
                    e
                  );
                },
              },
            ]),
            n
          );
        })(Oa),
        Jf = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            return p(this, n), t.call(this, e);
          }
          return (
            g(n, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = this,
                    a = new wf(i.manager);
                  a.setPath(i.path),
                    a.setRequestHeader(i.requestHeader),
                    a.setWithCredentials(i.withCredentials),
                    a.load(
                      e,
                      function (n) {
                        try {
                          t(i.parse(JSON.parse(n)));
                        } catch (a) {
                          r ? r(a) : console.error(a), i.manager.itemError(e);
                        }
                      },
                      n,
                      r
                    );
                },
              },
              {
                key: "parse",
                value: function (e) {
                  var t = {},
                    n = {};
                  function r(e, r) {
                    if (void 0 !== t[r]) return t[r];
                    var i = e.interleavedBuffers[r],
                      a = (function (e, t) {
                        if (void 0 !== n[t]) return n[t];
                        var r = e.arrayBuffers,
                          i = r[t],
                          a = new Uint32Array(i).buffer;
                        return (n[t] = a), a;
                      })(e, i.buffer),
                      o = mr(i.type, a),
                      s = new iu(o, i.stride);
                    return (s.uuid = i.uuid), (t[r] = s), s;
                  }
                  var i = e.isInstancedBufferGeometry ? new $f() : new Oa(),
                    a = e.data.index;
                  if (void 0 !== a) {
                    var o = mr(a.type, a.array);
                    i.setIndex(new ga(o, 1));
                  }
                  var s = e.data.attributes;
                  for (var l in s) {
                    var u = s[l],
                      c = void 0;
                    if (u.isInterleavedBufferAttribute) {
                      var d = r(e.data, u.data);
                      c = new ou(d, u.itemSize, u.offset, u.normalized);
                    } else {
                      var f = mr(u.type, u.array);
                      c = new (u.isInstancedBufferAttribute ? Uu : ga)(
                        f,
                        u.itemSize,
                        u.normalized
                      );
                    }
                    void 0 !== u.name && (c.name = u.name),
                      void 0 !== u.usage && c.setUsage(u.usage),
                      void 0 !== u.updateRange &&
                        ((c.updateRange.offset = u.updateRange.offset),
                        (c.updateRange.count = u.updateRange.count)),
                      i.setAttribute(l, c);
                  }
                  var h = e.data.morphAttributes;
                  if (h)
                    for (var p in h) {
                      for (
                        var v = h[p], m = [], g = 0, y = v.length;
                        g < y;
                        g++
                      ) {
                        var b = v[g],
                          _ = void 0;
                        if (b.isInterleavedBufferAttribute) {
                          var x = r(e.data, b.data);
                          _ = new ou(x, b.itemSize, b.offset, b.normalized);
                        } else {
                          var S = mr(b.type, b.array);
                          _ = new ga(S, b.itemSize, b.normalized);
                        }
                        void 0 !== b.name && (_.name = b.name), m.push(_);
                      }
                      i.morphAttributes[p] = m;
                    }
                  e.data.morphTargetsRelative && (i.morphTargetsRelative = !0);
                  var w = e.data.groups || e.data.drawcalls || e.data.offsets;
                  if (void 0 !== w)
                    for (var M = 0, E = w.length; M !== E; ++M) {
                      var k = w[M];
                      i.addGroup(k.start, k.count, k.materialIndex);
                    }
                  var T = e.data.boundingSphere;
                  if (void 0 !== T) {
                    var A = new Zr();
                    void 0 !== T.center && A.fromArray(T.center),
                      (i.boundingSphere = new li(A, T.radius));
                  }
                  return (
                    e.name && (i.name = e.name),
                    e.userData && (i.userData = e.userData),
                    i
                  );
                },
              },
            ]),
            n
          );
        })(_f),
        Qf = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            return p(this, n), t.call(this, e);
          }
          return (
            g(n, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = this,
                    a = "" === this.path ? Kf.extractUrlBase(e) : this.path;
                  this.resourcePath = this.resourcePath || a;
                  var o = new wf(this.manager);
                  o.setPath(this.path),
                    o.setRequestHeader(this.requestHeader),
                    o.setWithCredentials(this.withCredentials),
                    o.load(
                      e,
                      function (n) {
                        var a = null;
                        try {
                          a = JSON.parse(n);
                        } catch (s) {
                          return (
                            void 0 !== r && r(s),
                            void console.error(
                              "THREE:ObjectLoader: Can't parse " + e + ".",
                              s.message
                            )
                          );
                        }
                        var o = a.metadata;
                        if (
                          void 0 === o ||
                          void 0 === o.type ||
                          "geometry" === o.type.toLowerCase()
                        )
                          return (
                            void 0 !== r &&
                              r(
                                new Error("THREE.ObjectLoader: Can't load " + e)
                              ),
                            void console.error(
                              "THREE.ObjectLoader: Can't load " + e
                            )
                          );
                        i.parse(a, t);
                      },
                      n,
                      r
                    );
                },
              },
              {
                key: "loadAsync",
                value: (function () {
                  var e = R(
                    I().mark(function e(t, n) {
                      var r, i, a, o, s, l;
                      return I().wrap(
                        function (e) {
                          for (;;)
                            switch ((e.prev = e.next)) {
                              case 0:
                                return (
                                  (r = this),
                                  (i =
                                    "" === this.path
                                      ? Kf.extractUrlBase(t)
                                      : this.path),
                                  (this.resourcePath = this.resourcePath || i),
                                  (a = new wf(this.manager)).setPath(this.path),
                                  a.setRequestHeader(this.requestHeader),
                                  a.setWithCredentials(this.withCredentials),
                                  (e.next = 9),
                                  a.loadAsync(t, n)
                                );
                              case 9:
                                if (
                                  ((o = e.sent),
                                  (s = JSON.parse(o)),
                                  void 0 !== (l = s.metadata) &&
                                    void 0 !== l.type &&
                                    "geometry" !== l.type.toLowerCase())
                                ) {
                                  e.next = 14;
                                  break;
                                }
                                throw new Error(
                                  "THREE.ObjectLoader: Can't load " + t
                                );
                              case 14:
                                return (e.next = 16), r.parseAsync(s);
                              case 16:
                                return e.abrupt("return", e.sent);
                              case 17:
                              case "end":
                                return e.stop();
                            }
                        },
                        e,
                        this
                      );
                    })
                  );
                  return function (t, n) {
                    return e.apply(this, arguments);
                  };
                })(),
              },
              {
                key: "parse",
                value: function (e, t) {
                  var n = this.parseAnimations(e.animations),
                    r = this.parseShapes(e.shapes),
                    i = this.parseGeometries(e.geometries, r),
                    a = this.parseImages(e.images, function () {
                      void 0 !== t && t(l);
                    }),
                    o = this.parseTextures(e.textures, a),
                    s = this.parseMaterials(e.materials, o),
                    l = this.parseObject(e.object, i, s, o, n),
                    u = this.parseSkeletons(e.skeletons, l);
                  if ((this.bindSkeletons(l, u), void 0 !== t)) {
                    var c = !1;
                    for (var d in a)
                      if (a[d].data instanceof HTMLImageElement) {
                        c = !0;
                        break;
                      }
                    !1 === c && t(l);
                  }
                  return l;
                },
              },
              {
                key: "parseAsync",
                value: (function () {
                  var e = R(
                    I().mark(function e(t) {
                      var n, r, i, a, o, s, l, u;
                      return I().wrap(
                        function (e) {
                          for (;;)
                            switch ((e.prev = e.next)) {
                              case 0:
                                return (
                                  (n = this.parseAnimations(t.animations)),
                                  (r = this.parseShapes(t.shapes)),
                                  (i = this.parseGeometries(t.geometries, r)),
                                  (e.next = 5),
                                  this.parseImagesAsync(t.images)
                                );
                              case 5:
                                return (
                                  (a = e.sent),
                                  (o = this.parseTextures(t.textures, a)),
                                  (s = this.parseMaterials(t.materials, o)),
                                  (l = this.parseObject(t.object, i, s, o, n)),
                                  (u = this.parseSkeletons(t.skeletons, l)),
                                  this.bindSkeletons(l, u),
                                  e.abrupt("return", l)
                                );
                              case 12:
                              case "end":
                                return e.stop();
                            }
                        },
                        e,
                        this
                      );
                    })
                  );
                  return function (t) {
                    return e.apply(this, arguments);
                  };
                })(),
              },
              {
                key: "parseShapes",
                value: function (e) {
                  var t = {};
                  if (void 0 !== e)
                    for (var n = 0, r = e.length; n < r; n++) {
                      var i = new Yc().fromJSON(e[n]);
                      t[i.uuid] = i;
                    }
                  return t;
                },
              },
              {
                key: "parseSkeletons",
                value: function (e, t) {
                  var n = {},
                    r = {};
                  if (
                    (t.traverse(function (e) {
                      e.isBone && (r[e.uuid] = e);
                    }),
                    void 0 !== e)
                  )
                    for (var i = 0, a = e.length; i < a; i++) {
                      var o = new Du().fromJSON(e[i], r);
                      n[o.uuid] = o;
                    }
                  return n;
                },
              },
              {
                key: "parseGeometries",
                value: function (e, t) {
                  var n = {};
                  if (void 0 !== e)
                    for (var r = new Jf(), i = 0, a = e.length; i < a; i++) {
                      var o = void 0,
                        s = e[i];
                      switch (s.type) {
                        case "BufferGeometry":
                        case "InstancedBufferGeometry":
                          o = r.parse(s);
                          break;
                        default:
                          s.type in Ud
                            ? (o = Ud[s.type].fromJSON(s, t))
                            : console.warn(
                                'THREE.ObjectLoader: Unsupported geometry type "'.concat(
                                  s.type,
                                  '"'
                                )
                              );
                      }
                      (o.uuid = s.uuid),
                        void 0 !== s.name && (o.name = s.name),
                        void 0 !== s.userData && (o.userData = s.userData),
                        (n[s.uuid] = o);
                    }
                  return n;
                },
              },
              {
                key: "parseMaterials",
                value: function (e, t) {
                  var n = {},
                    r = {};
                  if (void 0 !== e) {
                    var i = new Yf();
                    i.setTextures(t);
                    for (var a = 0, o = e.length; a < o; a++) {
                      var s = e[a];
                      void 0 === n[s.uuid] && (n[s.uuid] = i.parse(s)),
                        (r[s.uuid] = n[s.uuid]);
                    }
                  }
                  return r;
                },
              },
              {
                key: "parseAnimations",
                value: function (e) {
                  var t = {};
                  if (void 0 !== e)
                    for (var n = 0; n < e.length; n++) {
                      var r = e[n],
                        i = pf.parse(r);
                      t[i.uuid] = i;
                    }
                  return t;
                },
              },
              {
                key: "parseImages",
                value: function (e, t) {
                  var n,
                    r = this,
                    i = {};
                  function a(e) {
                    if ("string" === typeof e) {
                      var t = e;
                      return (function (e) {
                        return (
                          r.manager.itemStart(e),
                          n.load(
                            e,
                            function () {
                              r.manager.itemEnd(e);
                            },
                            void 0,
                            function () {
                              r.manager.itemError(e), r.manager.itemEnd(e);
                            }
                          )
                        );
                      })(
                        /^(\/\/)|([a-z]+:(\/\/)?)/i.test(t)
                          ? t
                          : r.resourcePath + t
                      );
                    }
                    return e.data
                      ? {
                          data: mr(e.type, e.data),
                          width: e.width,
                          height: e.height,
                        }
                      : null;
                  }
                  if (void 0 !== e && e.length > 0) {
                    var o = new yf(t);
                    (n = new kf(o)).setCrossOrigin(this.crossOrigin);
                    for (var s = 0, l = e.length; s < l; s++) {
                      var u = e[s],
                        c = u.url;
                      if (Array.isArray(c)) {
                        for (var d = [], f = 0, h = c.length; f < h; f++) {
                          var p = a(c[f]);
                          null !== p &&
                            (p instanceof HTMLImageElement
                              ? d.push(p)
                              : d.push(new Iu(p.data, p.width, p.height)));
                        }
                        i[u.uuid] = new Cr(d);
                      } else {
                        var v = a(u.url);
                        i[u.uuid] = new Cr(v);
                      }
                    }
                  }
                  return i;
                },
              },
              {
                key: "parseImagesAsync",
                value: (function () {
                  var e = R(
                    I().mark(function e(t) {
                      var n, r, i, a, o, s, l, u, c, d, f, h, p, v, m;
                      return I().wrap(
                        function (e) {
                          for (;;)
                            switch ((e.prev = e.next)) {
                              case 0:
                                if (
                                  ((o = function () {
                                    return (
                                      (o = R(
                                        I().mark(function e(t) {
                                          var r, a;
                                          return I().wrap(function (e) {
                                            for (;;)
                                              switch ((e.prev = e.next)) {
                                                case 0:
                                                  if ("string" !== typeof t) {
                                                    e.next = 8;
                                                    break;
                                                  }
                                                  return (
                                                    (a =
                                                      /^(\/\/)|([a-z]+:(\/\/)?)/i.test(
                                                        (r = t)
                                                      )
                                                        ? r
                                                        : n.resourcePath + r),
                                                    (e.next = 5),
                                                    i.loadAsync(a)
                                                  );
                                                case 5:
                                                  return e.abrupt(
                                                    "return",
                                                    e.sent
                                                  );
                                                case 8:
                                                  if (!t.data) {
                                                    e.next = 12;
                                                    break;
                                                  }
                                                  return e.abrupt("return", {
                                                    data: mr(t.type, t.data),
                                                    width: t.width,
                                                    height: t.height,
                                                  });
                                                case 12:
                                                  return e.abrupt(
                                                    "return",
                                                    null
                                                  );
                                                case 13:
                                                case "end":
                                                  return e.stop();
                                              }
                                          }, e);
                                        })
                                      )),
                                      o.apply(this, arguments)
                                    );
                                  }),
                                  (a = function (e) {
                                    return o.apply(this, arguments);
                                  }),
                                  (n = this),
                                  (r = {}),
                                  !(void 0 !== t && t.length > 0))
                                ) {
                                  e.next = 33;
                                  break;
                                }
                                (i = new kf(this.manager)).setCrossOrigin(
                                  this.crossOrigin
                                ),
                                  (s = 0),
                                  (l = t.length);
                              case 8:
                                if (!(s < l)) {
                                  e.next = 33;
                                  break;
                                }
                                if (
                                  ((u = t[s]), (c = u.url), !Array.isArray(c))
                                ) {
                                  e.next = 26;
                                  break;
                                }
                                (d = []), (f = 0), (h = c.length);
                              case 14:
                                if (!(f < h)) {
                                  e.next = 23;
                                  break;
                                }
                                return (p = c[f]), (e.next = 18), a(p);
                              case 18:
                                null !== (v = e.sent) &&
                                  (v instanceof HTMLImageElement
                                    ? d.push(v)
                                    : d.push(
                                        new Iu(v.data, v.width, v.height)
                                      ));
                              case 20:
                                f++, (e.next = 14);
                                break;
                              case 23:
                                (r[u.uuid] = new Cr(d)), (e.next = 30);
                                break;
                              case 26:
                                return (e.next = 28), a(u.url);
                              case 28:
                                (m = e.sent), (r[u.uuid] = new Cr(m));
                              case 30:
                                s++, (e.next = 8);
                                break;
                              case 33:
                                return e.abrupt("return", r);
                              case 34:
                              case "end":
                                return e.stop();
                            }
                        },
                        e,
                        this
                      );
                    })
                  );
                  return function (t) {
                    return e.apply(this, arguments);
                  };
                })(),
              },
              {
                key: "parseTextures",
                value: function (e, t) {
                  function n(e, t) {
                    return "number" === typeof e
                      ? e
                      : (console.warn(
                          "THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",
                          e
                        ),
                        t[e]);
                  }
                  var r = {};
                  if (void 0 !== e)
                    for (var i = 0, a = e.length; i < a; i++) {
                      var o = e[i];
                      void 0 === o.image &&
                        console.warn(
                          'THREE.ObjectLoader: No "image" specified for',
                          o.uuid
                        ),
                        void 0 === t[o.image] &&
                          console.warn(
                            "THREE.ObjectLoader: Undefined image",
                            o.image
                          );
                      var s = t[o.image],
                        l = s.data,
                        u = void 0;
                      Array.isArray(l)
                        ? ((u = new fo()),
                          6 === l.length && (u.needsUpdate = !0))
                        : ((u = l && l.data ? new Iu() : new Lr()),
                          l && (u.needsUpdate = !0)),
                        (u.source = s),
                        (u.uuid = o.uuid),
                        void 0 !== o.name && (u.name = o.name),
                        void 0 !== o.mapping && (u.mapping = n(o.mapping, eh)),
                        void 0 !== o.channel && (u.channel = o.channel),
                        void 0 !== o.offset && u.offset.fromArray(o.offset),
                        void 0 !== o.repeat && u.repeat.fromArray(o.repeat),
                        void 0 !== o.center && u.center.fromArray(o.center),
                        void 0 !== o.rotation && (u.rotation = o.rotation),
                        void 0 !== o.wrap &&
                          ((u.wrapS = n(o.wrap[0], th)),
                          (u.wrapT = n(o.wrap[1], th))),
                        void 0 !== o.format && (u.format = o.format),
                        void 0 !== o.internalFormat &&
                          (u.internalFormat = o.internalFormat),
                        void 0 !== o.type && (u.type = o.type),
                        void 0 !== o.colorSpace &&
                          (u.colorSpace = o.colorSpace),
                        void 0 !== o.encoding && (u.encoding = o.encoding),
                        void 0 !== o.minFilter &&
                          (u.minFilter = n(o.minFilter, nh)),
                        void 0 !== o.magFilter &&
                          (u.magFilter = n(o.magFilter, nh)),
                        void 0 !== o.anisotropy &&
                          (u.anisotropy = o.anisotropy),
                        void 0 !== o.flipY && (u.flipY = o.flipY),
                        void 0 !== o.generateMipmaps &&
                          (u.generateMipmaps = o.generateMipmaps),
                        void 0 !== o.premultiplyAlpha &&
                          (u.premultiplyAlpha = o.premultiplyAlpha),
                        void 0 !== o.unpackAlignment &&
                          (u.unpackAlignment = o.unpackAlignment),
                        void 0 !== o.userData && (u.userData = o.userData),
                        (r[o.uuid] = u);
                    }
                  return r;
                },
              },
              {
                key: "parseObject",
                value: function (e, t, n, r, i) {
                  var a, o, s;
                  function l(e) {
                    return (
                      void 0 === t[e] &&
                        console.warn(
                          "THREE.ObjectLoader: Undefined geometry",
                          e
                        ),
                      t[e]
                    );
                  }
                  function u(e) {
                    if (void 0 !== e) {
                      if (Array.isArray(e)) {
                        for (var t = [], r = 0, i = e.length; r < i; r++) {
                          var a = e[r];
                          void 0 === n[a] &&
                            console.warn(
                              "THREE.ObjectLoader: Undefined material",
                              a
                            ),
                            t.push(n[a]);
                        }
                        return t;
                      }
                      return (
                        void 0 === n[e] &&
                          console.warn(
                            "THREE.ObjectLoader: Undefined material",
                            e
                          ),
                        n[e]
                      );
                    }
                  }
                  function c(e) {
                    return (
                      void 0 === r[e] &&
                        console.warn(
                          "THREE.ObjectLoader: Undefined texture",
                          e
                        ),
                      r[e]
                    );
                  }
                  switch (e.type) {
                    case "Scene":
                      (a = new ru()),
                        void 0 !== e.background &&
                          (Number.isInteger(e.background)
                            ? (a.background = new sa(e.background))
                            : (a.background = c(e.background))),
                        void 0 !== e.environment &&
                          (a.environment = c(e.environment)),
                        void 0 !== e.fog &&
                          ("Fog" === e.fog.type
                            ? (a.fog = new nu(
                                e.fog.color,
                                e.fog.near,
                                e.fog.far
                              ))
                            : "FogExp2" === e.fog.type &&
                              (a.fog = new tu(e.fog.color, e.fog.density))),
                        void 0 !== e.backgroundBlurriness &&
                          (a.backgroundBlurriness = e.backgroundBlurriness),
                        void 0 !== e.backgroundIntensity &&
                          (a.backgroundIntensity = e.backgroundIntensity);
                      break;
                    case "PerspectiveCamera":
                      (a = new lo(e.fov, e.aspect, e.near, e.far)),
                        void 0 !== e.focus && (a.focus = e.focus),
                        void 0 !== e.zoom && (a.zoom = e.zoom),
                        void 0 !== e.filmGauge && (a.filmGauge = e.filmGauge),
                        void 0 !== e.filmOffset &&
                          (a.filmOffset = e.filmOffset),
                        void 0 !== e.view &&
                          (a.view = Object.assign({}, e.view));
                      break;
                    case "OrthographicCamera":
                      (a = new No(
                        e.left,
                        e.right,
                        e.top,
                        e.bottom,
                        e.near,
                        e.far
                      )),
                        void 0 !== e.zoom && (a.zoom = e.zoom),
                        void 0 !== e.view &&
                          (a.view = Object.assign({}, e.view));
                      break;
                    case "AmbientLight":
                      a = new Wf(e.color, e.intensity);
                      break;
                    case "DirectionalLight":
                      a = new Gf(e.color, e.intensity);
                      break;
                    case "PointLight":
                      a = new Hf(e.color, e.intensity, e.distance, e.decay);
                      break;
                    case "RectAreaLight":
                      a = new jf(e.color, e.intensity, e.width, e.height);
                      break;
                    case "SpotLight":
                      a = new Uf(
                        e.color,
                        e.intensity,
                        e.distance,
                        e.angle,
                        e.penumbra,
                        e.decay
                      );
                      break;
                    case "HemisphereLight":
                      a = new Rf(e.color, e.groundColor, e.intensity);
                      break;
                    case "LightProbe":
                      a = new qf().fromJSON(e);
                      break;
                    case "SkinnedMesh":
                      (o = l(e.geometry)),
                        (s = u(e.material)),
                        (a = new Ru(o, s)),
                        void 0 !== e.bindMode && (a.bindMode = e.bindMode),
                        void 0 !== e.bindMatrix &&
                          a.bindMatrix.fromArray(e.bindMatrix),
                        void 0 !== e.skeleton && (a.skeleton = e.skeleton);
                      break;
                    case "Mesh":
                      (o = l(e.geometry)),
                        (s = u(e.material)),
                        (a = new Qa(o, s));
                      break;
                    case "InstancedMesh":
                      (o = l(e.geometry)), (s = u(e.material));
                      var d = e.count,
                        f = e.instanceMatrix,
                        h = e.instanceColor;
                      ((a = new Wu(o, s, d)).instanceMatrix = new Uu(
                        new Float32Array(f.array),
                        16
                      )),
                        void 0 !== h &&
                          (a.instanceColor = new Uu(
                            new Float32Array(h.array),
                            h.itemSize
                          ));
                      break;
                    case "LOD":
                      a = new Mu();
                      break;
                    case "Line":
                      a = new Ju(l(e.geometry), u(e.material));
                      break;
                    case "LineLoop":
                      a = new nc(l(e.geometry), u(e.material));
                      break;
                    case "LineSegments":
                      a = new tc(l(e.geometry), u(e.material));
                      break;
                    case "PointCloud":
                    case "Points":
                      a = new lc(l(e.geometry), u(e.material));
                      break;
                    case "Sprite":
                      a = new _u(u(e.material));
                      break;
                    case "Group":
                      a = new Wl();
                      break;
                    case "Bone":
                      a = new Lu();
                      break;
                    default:
                      a = new Hi();
                  }
                  if (
                    ((a.uuid = e.uuid),
                    void 0 !== e.name && (a.name = e.name),
                    void 0 !== e.matrix
                      ? (a.matrix.fromArray(e.matrix),
                        void 0 !== e.matrixAutoUpdate &&
                          (a.matrixAutoUpdate = e.matrixAutoUpdate),
                        a.matrixAutoUpdate &&
                          a.matrix.decompose(a.position, a.quaternion, a.scale))
                      : (void 0 !== e.position &&
                          a.position.fromArray(e.position),
                        void 0 !== e.rotation &&
                          a.rotation.fromArray(e.rotation),
                        void 0 !== e.quaternion &&
                          a.quaternion.fromArray(e.quaternion),
                        void 0 !== e.scale && a.scale.fromArray(e.scale)),
                    void 0 !== e.up && a.up.fromArray(e.up),
                    void 0 !== e.castShadow && (a.castShadow = e.castShadow),
                    void 0 !== e.receiveShadow &&
                      (a.receiveShadow = e.receiveShadow),
                    e.shadow &&
                      (void 0 !== e.shadow.bias &&
                        (a.shadow.bias = e.shadow.bias),
                      void 0 !== e.shadow.normalBias &&
                        (a.shadow.normalBias = e.shadow.normalBias),
                      void 0 !== e.shadow.radius &&
                        (a.shadow.radius = e.shadow.radius),
                      void 0 !== e.shadow.mapSize &&
                        a.shadow.mapSize.fromArray(e.shadow.mapSize),
                      void 0 !== e.shadow.camera &&
                        (a.shadow.camera = this.parseObject(e.shadow.camera))),
                    void 0 !== e.visible && (a.visible = e.visible),
                    void 0 !== e.frustumCulled &&
                      (a.frustumCulled = e.frustumCulled),
                    void 0 !== e.renderOrder && (a.renderOrder = e.renderOrder),
                    void 0 !== e.userData && (a.userData = e.userData),
                    void 0 !== e.layers && (a.layers.mask = e.layers),
                    void 0 !== e.children)
                  )
                    for (var p = e.children, v = 0; v < p.length; v++)
                      a.add(this.parseObject(p[v], t, n, r, i));
                  if (void 0 !== e.animations)
                    for (var m = e.animations, g = 0; g < m.length; g++) {
                      var y = m[g];
                      a.animations.push(i[y]);
                    }
                  if ("LOD" === e.type) {
                    void 0 !== e.autoUpdate && (a.autoUpdate = e.autoUpdate);
                    for (var b = e.levels, _ = 0; _ < b.length; _++) {
                      var x = b[_],
                        S = a.getObjectByProperty("uuid", x.object);
                      void 0 !== S && a.addLevel(S, x.distance, x.hysteresis);
                    }
                  }
                  return a;
                },
              },
              {
                key: "bindSkeletons",
                value: function (e, t) {
                  0 !== Object.keys(t).length &&
                    e.traverse(function (e) {
                      if (!0 === e.isSkinnedMesh && void 0 !== e.skeleton) {
                        var n = t[e.skeleton];
                        void 0 === n
                          ? console.warn(
                              "THREE.ObjectLoader: No skeleton found with UUID:",
                              e.skeleton
                            )
                          : e.bind(n, e.bindMatrix);
                      }
                    });
                },
              },
            ]),
            n
          );
        })(_f),
        eh = {
          UVMapping: Ne,
          CubeReflectionMapping: Oe,
          CubeRefractionMapping: De,
          EquirectangularReflectionMapping: Ue,
          EquirectangularRefractionMapping: ze,
          CubeUVReflectionMapping: Fe,
        },
        th = {
          RepeatWrapping: Be,
          ClampToEdgeWrapping: Ze,
          MirroredRepeatWrapping: He,
        },
        nh = {
          NearestFilter: Ve,
          NearestMipmapNearestFilter: Ge,
          NearestMipmapLinearFilter: je,
          LinearFilter: qe,
          LinearMipmapNearestFilter: Ye,
          LinearMipmapLinearFilter: $e,
        },
        rh = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return (
              p(this, n),
              ((r = t.call(this, e)).isImageBitmapLoader = !0),
              "undefined" === typeof createImageBitmap &&
                console.warn(
                  "THREE.ImageBitmapLoader: createImageBitmap() not supported."
                ),
              "undefined" === typeof fetch &&
                console.warn("THREE.ImageBitmapLoader: fetch() not supported."),
              (r.options = { premultiplyAlpha: "none" }),
              r
            );
          }
          return (
            g(n, [
              {
                key: "setOptions",
                value: function (e) {
                  return (this.options = e), this;
                },
              },
              {
                key: "load",
                value: function (e, t, n, r) {
                  void 0 === e && (e = ""),
                    void 0 !== this.path && (e = this.path + e),
                    (e = this.manager.resolveURL(e));
                  var i = this,
                    a = gf.get(e);
                  if (void 0 !== a)
                    return (
                      i.manager.itemStart(e),
                      setTimeout(function () {
                        t && t(a), i.manager.itemEnd(e);
                      }, 0),
                      a
                    );
                  var o = {};
                  (o.credentials =
                    "anonymous" === this.crossOrigin
                      ? "same-origin"
                      : "include"),
                    (o.headers = this.requestHeader),
                    fetch(e, o)
                      .then(function (e) {
                        return e.blob();
                      })
                      .then(function (e) {
                        return createImageBitmap(
                          e,
                          Object.assign(i.options, {
                            colorSpaceConversion: "none",
                          })
                        );
                      })
                      .then(function (n) {
                        gf.add(e, n), t && t(n), i.manager.itemEnd(e);
                      })
                      .catch(function (t) {
                        r && r(t), i.manager.itemError(e), i.manager.itemEnd(e);
                      }),
                    i.manager.itemStart(e);
                },
              },
            ]),
            n
          );
        })(_f),
        ih = (function () {
          function e() {
            p(this, e);
          }
          return (
            g(e, null, [
              {
                key: "getContext",
                value: function () {
                  return (
                    void 0 === mf &&
                      (mf = new (window.AudioContext ||
                        window.webkitAudioContext)()),
                    mf
                  );
                },
              },
              {
                key: "setContext",
                value: function (e) {
                  mf = e;
                },
              },
            ]),
            e
          );
        })(),
        ah = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            return p(this, n), t.call(this, e);
          }
          return (
            g(n, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = this,
                    a = new wf(this.manager);
                  function o(t) {
                    r ? r(t) : console.error(t), i.manager.itemError(e);
                  }
                  a.setResponseType("arraybuffer"),
                    a.setPath(this.path),
                    a.setRequestHeader(this.requestHeader),
                    a.setWithCredentials(this.withCredentials),
                    a.load(
                      e,
                      function (e) {
                        try {
                          var n = e.slice(0);
                          ih.getContext().decodeAudioData(
                            n,
                            function (e) {
                              t(e);
                            },
                            o
                          );
                        } catch (r) {
                          o(r);
                        }
                      },
                      n,
                      r
                    );
                },
              },
            ]),
            n
          );
        })(_f),
        oh = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r) {
            var i,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1;
            p(this, n),
              ((i = t.call(this, void 0, a)).isHemisphereLightProbe = !0);
            var o = new sa().set(e),
              s = new sa().set(r),
              l = new Zr(o.r, o.g, o.b),
              u = new Zr(s.r, s.g, s.b),
              c = Math.sqrt(Math.PI),
              d = c * Math.sqrt(0.75);
            return (
              i.sh.coefficients[0].copy(l).add(u).multiplyScalar(c),
              i.sh.coefficients[1].copy(l).sub(u).multiplyScalar(d),
              i
            );
          }
          return g(n);
        })(qf),
        sh = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1;
            p(this, n),
              ((r = t.call(this, void 0, i)).isAmbientLightProbe = !0);
            var a = new sa().set(e);
            return (
              r.sh.coefficients[0]
                .set(a.r, a.g, a.b)
                .multiplyScalar(2 * Math.sqrt(Math.PI)),
              r
            );
          }
          return g(n);
        })(qf),
        lh = new gi(),
        uh = new gi(),
        ch = new gi(),
        dh = (function () {
          function e() {
            p(this, e),
              (this.type = "StereoCamera"),
              (this.aspect = 1),
              (this.eyeSep = 0.064),
              (this.cameraL = new lo()),
              this.cameraL.layers.enable(1),
              (this.cameraL.matrixAutoUpdate = !1),
              (this.cameraR = new lo()),
              this.cameraR.layers.enable(2),
              (this.cameraR.matrixAutoUpdate = !1),
              (this._cache = {
                focus: null,
                fov: null,
                aspect: null,
                near: null,
                far: null,
                zoom: null,
                eyeSep: null,
              });
          }
          return (
            g(e, [
              {
                key: "update",
                value: function (e) {
                  var t = this._cache;
                  if (
                    t.focus !== e.focus ||
                    t.fov !== e.fov ||
                    t.aspect !== e.aspect * this.aspect ||
                    t.near !== e.near ||
                    t.far !== e.far ||
                    t.zoom !== e.zoom ||
                    t.eyeSep !== this.eyeSep
                  ) {
                    (t.focus = e.focus),
                      (t.fov = e.fov),
                      (t.aspect = e.aspect * this.aspect),
                      (t.near = e.near),
                      (t.far = e.far),
                      (t.zoom = e.zoom),
                      (t.eyeSep = this.eyeSep),
                      ch.copy(e.projectionMatrix);
                    var n,
                      r,
                      i = t.eyeSep / 2,
                      a = (i * t.near) / t.focus,
                      o = (t.near * Math.tan(Qn * t.fov * 0.5)) / t.zoom;
                    (uh.elements[12] = -i),
                      (lh.elements[12] = i),
                      (n = -o * t.aspect + a),
                      (r = o * t.aspect + a),
                      (ch.elements[0] = (2 * t.near) / (r - n)),
                      (ch.elements[8] = (r + n) / (r - n)),
                      this.cameraL.projectionMatrix.copy(ch),
                      (n = -o * t.aspect - a),
                      (r = o * t.aspect - a),
                      (ch.elements[0] = (2 * t.near) / (r - n)),
                      (ch.elements[8] = (r + n) / (r - n)),
                      this.cameraR.projectionMatrix.copy(ch);
                  }
                  this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(uh),
                    this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(lh);
                },
              },
            ]),
            e
          );
        })(),
        fh = (function () {
          function e() {
            var t =
              !(arguments.length > 0 && void 0 !== arguments[0]) ||
              arguments[0];
            p(this, e),
              (this.autoStart = t),
              (this.startTime = 0),
              (this.oldTime = 0),
              (this.elapsedTime = 0),
              (this.running = !1);
          }
          return (
            g(e, [
              {
                key: "start",
                value: function () {
                  (this.startTime = hh()),
                    (this.oldTime = this.startTime),
                    (this.elapsedTime = 0),
                    (this.running = !0);
                },
              },
              {
                key: "stop",
                value: function () {
                  this.getElapsedTime(),
                    (this.running = !1),
                    (this.autoStart = !1);
                },
              },
              {
                key: "getElapsedTime",
                value: function () {
                  return this.getDelta(), this.elapsedTime;
                },
              },
              {
                key: "getDelta",
                value: function () {
                  var e = 0;
                  if (this.autoStart && !this.running) return this.start(), 0;
                  if (this.running) {
                    var t = hh();
                    (e = (t - this.oldTime) / 1e3),
                      (this.oldTime = t),
                      (this.elapsedTime += e);
                  }
                  return e;
                },
              },
            ]),
            e
          );
        })();
      function hh() {
        return ("undefined" === typeof performance ? Date : performance).now();
      }
      var ph = new Zr(),
        vh = new Br(),
        mh = new Zr(),
        gh = new Zr(),
        yh = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e;
            return (
              p(this, n),
              ((e = t.call(this)).type = "AudioListener"),
              (e.context = ih.getContext()),
              (e.gain = e.context.createGain()),
              e.gain.connect(e.context.destination),
              (e.filter = null),
              (e.timeDelta = 0),
              (e._clock = new fh()),
              e
            );
          }
          return (
            g(n, [
              {
                key: "getInput",
                value: function () {
                  return this.gain;
                },
              },
              {
                key: "removeFilter",
                value: function () {
                  return (
                    null !== this.filter &&
                      (this.gain.disconnect(this.filter),
                      this.filter.disconnect(this.context.destination),
                      this.gain.connect(this.context.destination),
                      (this.filter = null)),
                    this
                  );
                },
              },
              {
                key: "getFilter",
                value: function () {
                  return this.filter;
                },
              },
              {
                key: "setFilter",
                value: function (e) {
                  return (
                    null !== this.filter
                      ? (this.gain.disconnect(this.filter),
                        this.filter.disconnect(this.context.destination))
                      : this.gain.disconnect(this.context.destination),
                    (this.filter = e),
                    this.gain.connect(this.filter),
                    this.filter.connect(this.context.destination),
                    this
                  );
                },
              },
              {
                key: "getMasterVolume",
                value: function () {
                  return this.gain.gain.value;
                },
              },
              {
                key: "setMasterVolume",
                value: function (e) {
                  return (
                    this.gain.gain.setTargetAtTime(
                      e,
                      this.context.currentTime,
                      0.01
                    ),
                    this
                  );
                },
              },
              {
                key: "updateMatrixWorld",
                value: function (e) {
                  L(_(n.prototype), "updateMatrixWorld", this).call(this, e);
                  var t = this.context.listener,
                    r = this.up;
                  if (
                    ((this.timeDelta = this._clock.getDelta()),
                    this.matrixWorld.decompose(ph, vh, mh),
                    gh.set(0, 0, -1).applyQuaternion(vh),
                    t.positionX)
                  ) {
                    var i = this.context.currentTime + this.timeDelta;
                    t.positionX.linearRampToValueAtTime(ph.x, i),
                      t.positionY.linearRampToValueAtTime(ph.y, i),
                      t.positionZ.linearRampToValueAtTime(ph.z, i),
                      t.forwardX.linearRampToValueAtTime(gh.x, i),
                      t.forwardY.linearRampToValueAtTime(gh.y, i),
                      t.forwardZ.linearRampToValueAtTime(gh.z, i),
                      t.upX.linearRampToValueAtTime(r.x, i),
                      t.upY.linearRampToValueAtTime(r.y, i),
                      t.upZ.linearRampToValueAtTime(r.z, i);
                  } else
                    t.setPosition(ph.x, ph.y, ph.z),
                      t.setOrientation(gh.x, gh.y, gh.z, r.x, r.y, r.z);
                },
              },
            ]),
            n
          );
        })(Hi),
        bh = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return (
              p(this, n),
              ((r = t.call(this)).type = "Audio"),
              (r.listener = e),
              (r.context = e.context),
              (r.gain = r.context.createGain()),
              r.gain.connect(e.getInput()),
              (r.autoplay = !1),
              (r.buffer = null),
              (r.detune = 0),
              (r.loop = !1),
              (r.loopStart = 0),
              (r.loopEnd = 0),
              (r.offset = 0),
              (r.duration = void 0),
              (r.playbackRate = 1),
              (r.isPlaying = !1),
              (r.hasPlaybackControl = !0),
              (r.source = null),
              (r.sourceType = "empty"),
              (r._startedAt = 0),
              (r._progress = 0),
              (r._connected = !1),
              (r.filters = []),
              r
            );
          }
          return (
            g(n, [
              {
                key: "getOutput",
                value: function () {
                  return this.gain;
                },
              },
              {
                key: "setNodeSource",
                value: function (e) {
                  return (
                    (this.hasPlaybackControl = !1),
                    (this.sourceType = "audioNode"),
                    (this.source = e),
                    this.connect(),
                    this
                  );
                },
              },
              {
                key: "setMediaElementSource",
                value: function (e) {
                  return (
                    (this.hasPlaybackControl = !1),
                    (this.sourceType = "mediaNode"),
                    (this.source = this.context.createMediaElementSource(e)),
                    this.connect(),
                    this
                  );
                },
              },
              {
                key: "setMediaStreamSource",
                value: function (e) {
                  return (
                    (this.hasPlaybackControl = !1),
                    (this.sourceType = "mediaStreamNode"),
                    (this.source = this.context.createMediaStreamSource(e)),
                    this.connect(),
                    this
                  );
                },
              },
              {
                key: "setBuffer",
                value: function (e) {
                  return (
                    (this.buffer = e),
                    (this.sourceType = "buffer"),
                    this.autoplay && this.play(),
                    this
                  );
                },
              },
              {
                key: "play",
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : 0;
                  if (!0 !== this.isPlaying) {
                    if (!1 !== this.hasPlaybackControl) {
                      this._startedAt = this.context.currentTime + e;
                      var t = this.context.createBufferSource();
                      return (
                        (t.buffer = this.buffer),
                        (t.loop = this.loop),
                        (t.loopStart = this.loopStart),
                        (t.loopEnd = this.loopEnd),
                        (t.onended = this.onEnded.bind(this)),
                        t.start(
                          this._startedAt,
                          this._progress + this.offset,
                          this.duration
                        ),
                        (this.isPlaying = !0),
                        (this.source = t),
                        this.setDetune(this.detune),
                        this.setPlaybackRate(this.playbackRate),
                        this.connect()
                      );
                    }
                    console.warn(
                      "THREE.Audio: this Audio has no playback control."
                    );
                  } else console.warn("THREE.Audio: Audio is already playing.");
                },
              },
              {
                key: "pause",
                value: function () {
                  if (!1 !== this.hasPlaybackControl)
                    return (
                      !0 === this.isPlaying &&
                        ((this._progress +=
                          Math.max(
                            this.context.currentTime - this._startedAt,
                            0
                          ) * this.playbackRate),
                        !0 === this.loop &&
                          (this._progress =
                            this._progress %
                            (this.duration || this.buffer.duration)),
                        this.source.stop(),
                        (this.source.onended = null),
                        (this.isPlaying = !1)),
                      this
                    );
                  console.warn(
                    "THREE.Audio: this Audio has no playback control."
                  );
                },
              },
              {
                key: "stop",
                value: function () {
                  if (!1 !== this.hasPlaybackControl)
                    return (
                      (this._progress = 0),
                      null !== this.source &&
                        (this.source.stop(), (this.source.onended = null)),
                      (this.isPlaying = !1),
                      this
                    );
                  console.warn(
                    "THREE.Audio: this Audio has no playback control."
                  );
                },
              },
              {
                key: "connect",
                value: function () {
                  if (this.filters.length > 0) {
                    this.source.connect(this.filters[0]);
                    for (var e = 1, t = this.filters.length; e < t; e++)
                      this.filters[e - 1].connect(this.filters[e]);
                    this.filters[this.filters.length - 1].connect(
                      this.getOutput()
                    );
                  } else this.source.connect(this.getOutput());
                  return (this._connected = !0), this;
                },
              },
              {
                key: "disconnect",
                value: function () {
                  if (this.filters.length > 0) {
                    this.source.disconnect(this.filters[0]);
                    for (var e = 1, t = this.filters.length; e < t; e++)
                      this.filters[e - 1].disconnect(this.filters[e]);
                    this.filters[this.filters.length - 1].disconnect(
                      this.getOutput()
                    );
                  } else this.source.disconnect(this.getOutput());
                  return (this._connected = !1), this;
                },
              },
              {
                key: "getFilters",
                value: function () {
                  return this.filters;
                },
              },
              {
                key: "setFilters",
                value: function (e) {
                  return (
                    e || (e = []),
                    !0 === this._connected
                      ? (this.disconnect(),
                        (this.filters = e.slice()),
                        this.connect())
                      : (this.filters = e.slice()),
                    this
                  );
                },
              },
              {
                key: "setDetune",
                value: function (e) {
                  if (((this.detune = e), void 0 !== this.source.detune))
                    return (
                      !0 === this.isPlaying &&
                        this.source.detune.setTargetAtTime(
                          this.detune,
                          this.context.currentTime,
                          0.01
                        ),
                      this
                    );
                },
              },
              {
                key: "getDetune",
                value: function () {
                  return this.detune;
                },
              },
              {
                key: "getFilter",
                value: function () {
                  return this.getFilters()[0];
                },
              },
              {
                key: "setFilter",
                value: function (e) {
                  return this.setFilters(e ? [e] : []);
                },
              },
              {
                key: "setPlaybackRate",
                value: function (e) {
                  if (!1 !== this.hasPlaybackControl)
                    return (
                      (this.playbackRate = e),
                      !0 === this.isPlaying &&
                        this.source.playbackRate.setTargetAtTime(
                          this.playbackRate,
                          this.context.currentTime,
                          0.01
                        ),
                      this
                    );
                  console.warn(
                    "THREE.Audio: this Audio has no playback control."
                  );
                },
              },
              {
                key: "getPlaybackRate",
                value: function () {
                  return this.playbackRate;
                },
              },
              {
                key: "onEnded",
                value: function () {
                  this.isPlaying = !1;
                },
              },
              {
                key: "getLoop",
                value: function () {
                  return !1 === this.hasPlaybackControl
                    ? (console.warn(
                        "THREE.Audio: this Audio has no playback control."
                      ),
                      !1)
                    : this.loop;
                },
              },
              {
                key: "setLoop",
                value: function (e) {
                  if (!1 !== this.hasPlaybackControl)
                    return (
                      (this.loop = e),
                      !0 === this.isPlaying && (this.source.loop = this.loop),
                      this
                    );
                  console.warn(
                    "THREE.Audio: this Audio has no playback control."
                  );
                },
              },
              {
                key: "setLoopStart",
                value: function (e) {
                  return (this.loopStart = e), this;
                },
              },
              {
                key: "setLoopEnd",
                value: function (e) {
                  return (this.loopEnd = e), this;
                },
              },
              {
                key: "getVolume",
                value: function () {
                  return this.gain.gain.value;
                },
              },
              {
                key: "setVolume",
                value: function (e) {
                  return (
                    this.gain.gain.setTargetAtTime(
                      e,
                      this.context.currentTime,
                      0.01
                    ),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(Hi),
        _h = new Zr(),
        xh = new Br(),
        Sh = new Zr(),
        wh = new Zr(),
        Mh = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return (
              p(this, n),
              ((r = t.call(this, e)).panner = r.context.createPanner()),
              (r.panner.panningModel = "HRTF"),
              r.panner.connect(r.gain),
              r
            );
          }
          return (
            g(n, [
              {
                key: "disconnect",
                value: function () {
                  L(_(n.prototype), "disconnect", this).call(this),
                    this.panner.disconnect(this.gain);
                },
              },
              {
                key: "getOutput",
                value: function () {
                  return this.panner;
                },
              },
              {
                key: "getRefDistance",
                value: function () {
                  return this.panner.refDistance;
                },
              },
              {
                key: "setRefDistance",
                value: function (e) {
                  return (this.panner.refDistance = e), this;
                },
              },
              {
                key: "getRolloffFactor",
                value: function () {
                  return this.panner.rolloffFactor;
                },
              },
              {
                key: "setRolloffFactor",
                value: function (e) {
                  return (this.panner.rolloffFactor = e), this;
                },
              },
              {
                key: "getDistanceModel",
                value: function () {
                  return this.panner.distanceModel;
                },
              },
              {
                key: "setDistanceModel",
                value: function (e) {
                  return (this.panner.distanceModel = e), this;
                },
              },
              {
                key: "getMaxDistance",
                value: function () {
                  return this.panner.maxDistance;
                },
              },
              {
                key: "setMaxDistance",
                value: function (e) {
                  return (this.panner.maxDistance = e), this;
                },
              },
              {
                key: "setDirectionalCone",
                value: function (e, t, n) {
                  return (
                    (this.panner.coneInnerAngle = e),
                    (this.panner.coneOuterAngle = t),
                    (this.panner.coneOuterGain = n),
                    this
                  );
                },
              },
              {
                key: "updateMatrixWorld",
                value: function (e) {
                  if (
                    (L(_(n.prototype), "updateMatrixWorld", this).call(this, e),
                    !0 !== this.hasPlaybackControl || !1 !== this.isPlaying)
                  ) {
                    this.matrixWorld.decompose(_h, xh, Sh),
                      wh.set(0, 0, 1).applyQuaternion(xh);
                    var t = this.panner;
                    if (t.positionX) {
                      var r =
                        this.context.currentTime + this.listener.timeDelta;
                      t.positionX.linearRampToValueAtTime(_h.x, r),
                        t.positionY.linearRampToValueAtTime(_h.y, r),
                        t.positionZ.linearRampToValueAtTime(_h.z, r),
                        t.orientationX.linearRampToValueAtTime(wh.x, r),
                        t.orientationY.linearRampToValueAtTime(wh.y, r),
                        t.orientationZ.linearRampToValueAtTime(wh.z, r);
                    } else
                      t.setPosition(_h.x, _h.y, _h.z),
                        t.setOrientation(wh.x, wh.y, wh.z);
                  }
                },
              },
            ]),
            n
          );
        })(bh),
        Eh = (function () {
          function e(t) {
            var n =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 2048;
            p(this, e),
              (this.analyser = t.context.createAnalyser()),
              (this.analyser.fftSize = n),
              (this.data = new Uint8Array(this.analyser.frequencyBinCount)),
              t.getOutput().connect(this.analyser);
          }
          return (
            g(e, [
              {
                key: "getFrequencyData",
                value: function () {
                  return (
                    this.analyser.getByteFrequencyData(this.data), this.data
                  );
                },
              },
              {
                key: "getAverageFrequency",
                value: function () {
                  for (
                    var e = 0, t = this.getFrequencyData(), n = 0;
                    n < t.length;
                    n++
                  )
                    e += t[n];
                  return e / t.length;
                },
              },
            ]),
            e
          );
        })(),
        kh = (function () {
          function e(t, n, r) {
            var i, a, o;
            switch ((p(this, e), (this.binding = t), (this.valueSize = r), n)) {
              case "quaternion":
                (i = this._slerp),
                  (a = this._slerpAdditive),
                  (o = this._setAdditiveIdentityQuaternion),
                  (this.buffer = new Float64Array(6 * r)),
                  (this._workIndex = 5);
                break;
              case "string":
              case "bool":
                (i = this._select),
                  (a = this._select),
                  (o = this._setAdditiveIdentityOther),
                  (this.buffer = new Array(5 * r));
                break;
              default:
                (i = this._lerp),
                  (a = this._lerpAdditive),
                  (o = this._setAdditiveIdentityNumeric),
                  (this.buffer = new Float64Array(5 * r));
            }
            (this._mixBufferRegion = i),
              (this._mixBufferRegionAdditive = a),
              (this._setIdentity = o),
              (this._origIndex = 3),
              (this._addIndex = 4),
              (this.cumulativeWeight = 0),
              (this.cumulativeWeightAdditive = 0),
              (this.useCount = 0),
              (this.referenceCount = 0);
          }
          return (
            g(e, [
              {
                key: "accumulate",
                value: function (e, t) {
                  var n = this.buffer,
                    r = this.valueSize,
                    i = e * r + r,
                    a = this.cumulativeWeight;
                  if (0 === a) {
                    for (var o = 0; o !== r; ++o) n[i + o] = n[o];
                    a = t;
                  } else {
                    var s = t / (a += t);
                    this._mixBufferRegion(n, i, 0, s, r);
                  }
                  this.cumulativeWeight = a;
                },
              },
              {
                key: "accumulateAdditive",
                value: function (e) {
                  var t = this.buffer,
                    n = this.valueSize,
                    r = n * this._addIndex;
                  0 === this.cumulativeWeightAdditive && this._setIdentity(),
                    this._mixBufferRegionAdditive(t, r, 0, e, n),
                    (this.cumulativeWeightAdditive += e);
                },
              },
              {
                key: "apply",
                value: function (e) {
                  var t = this.valueSize,
                    n = this.buffer,
                    r = e * t + t,
                    i = this.cumulativeWeight,
                    a = this.cumulativeWeightAdditive,
                    o = this.binding;
                  if (
                    ((this.cumulativeWeight = 0),
                    (this.cumulativeWeightAdditive = 0),
                    i < 1)
                  ) {
                    var s = t * this._origIndex;
                    this._mixBufferRegion(n, r, s, 1 - i, t);
                  }
                  a > 0 &&
                    this._mixBufferRegionAdditive(
                      n,
                      r,
                      this._addIndex * t,
                      1,
                      t
                    );
                  for (var l = t, u = t + t; l !== u; ++l)
                    if (n[l] !== n[l + t]) {
                      o.setValue(n, r);
                      break;
                    }
                },
              },
              {
                key: "saveOriginalState",
                value: function () {
                  var e = this.binding,
                    t = this.buffer,
                    n = this.valueSize,
                    r = n * this._origIndex;
                  e.getValue(t, r);
                  for (var i = n, a = r; i !== a; ++i) t[i] = t[r + (i % n)];
                  this._setIdentity(),
                    (this.cumulativeWeight = 0),
                    (this.cumulativeWeightAdditive = 0);
                },
              },
              {
                key: "restoreOriginalState",
                value: function () {
                  var e = 3 * this.valueSize;
                  this.binding.setValue(this.buffer, e);
                },
              },
              {
                key: "_setAdditiveIdentityNumeric",
                value: function () {
                  for (
                    var e = this._addIndex * this.valueSize,
                      t = e + this.valueSize,
                      n = e;
                    n < t;
                    n++
                  )
                    this.buffer[n] = 0;
                },
              },
              {
                key: "_setAdditiveIdentityQuaternion",
                value: function () {
                  this._setAdditiveIdentityNumeric(),
                    (this.buffer[this._addIndex * this.valueSize + 3] = 1);
                },
              },
              {
                key: "_setAdditiveIdentityOther",
                value: function () {
                  for (
                    var e = this._origIndex * this.valueSize,
                      t = this._addIndex * this.valueSize,
                      n = 0;
                    n < this.valueSize;
                    n++
                  )
                    this.buffer[t + n] = this.buffer[e + n];
                },
              },
              {
                key: "_select",
                value: function (e, t, n, r, i) {
                  if (r >= 0.5)
                    for (var a = 0; a !== i; ++a) e[t + a] = e[n + a];
                },
              },
              {
                key: "_slerp",
                value: function (e, t, n, r) {
                  Br.slerpFlat(e, t, e, t, e, n, r);
                },
              },
              {
                key: "_slerpAdditive",
                value: function (e, t, n, r, i) {
                  var a = this._workIndex * i;
                  Br.multiplyQuaternionsFlat(e, a, e, t, e, n),
                    Br.slerpFlat(e, t, e, t, e, a, r);
                },
              },
              {
                key: "_lerp",
                value: function (e, t, n, r, i) {
                  for (var a = 1 - r, o = 0; o !== i; ++o) {
                    var s = t + o;
                    e[s] = e[s] * a + e[n + o] * r;
                  }
                },
              },
              {
                key: "_lerpAdditive",
                value: function (e, t, n, r, i) {
                  for (var a = 0; a !== i; ++a) {
                    var o = t + a;
                    e[o] = e[o] + e[n + a] * r;
                  }
                },
              },
            ]),
            e
          );
        })(),
        Th = "\\[\\]\\.:\\/",
        Ah = new RegExp("[" + Th + "]", "g"),
        Ch = "[^" + Th + "]",
        Ph = "[^" + Th.replace("\\.", "") + "]",
        Rh = new RegExp(
          "^" +
            /((?:WC+[\/:])*)/.source.replace("WC", Ch) +
            /(WCOD+)?/.source.replace("WCOD", Ph) +
            /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", Ch) +
            /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", Ch) +
            "$"
        ),
        Lh = ["material", "materials", "bones", "map"],
        Ih = (function () {
          function e(t, n, r) {
            p(this, e);
            var i = r || Nh.parseTrackName(n);
            (this._targetGroup = t), (this._bindings = t.subscribe_(n, i));
          }
          return (
            g(e, [
              {
                key: "getValue",
                value: function (e, t) {
                  this.bind();
                  var n = this._targetGroup.nCachedObjects_,
                    r = this._bindings[n];
                  void 0 !== r && r.getValue(e, t);
                },
              },
              {
                key: "setValue",
                value: function (e, t) {
                  for (
                    var n = this._bindings,
                      r = this._targetGroup.nCachedObjects_,
                      i = n.length;
                    r !== i;
                    ++r
                  )
                    n[r].setValue(e, t);
                },
              },
              {
                key: "bind",
                value: function () {
                  for (
                    var e = this._bindings,
                      t = this._targetGroup.nCachedObjects_,
                      n = e.length;
                    t !== n;
                    ++t
                  )
                    e[t].bind();
                },
              },
              {
                key: "unbind",
                value: function () {
                  for (
                    var e = this._bindings,
                      t = this._targetGroup.nCachedObjects_,
                      n = e.length;
                    t !== n;
                    ++t
                  )
                    e[t].unbind();
                },
              },
            ]),
            e
          );
        })(),
        Nh = (function () {
          function e(t, n, r) {
            p(this, e),
              (this.path = n),
              (this.parsedPath = r || e.parseTrackName(n)),
              (this.node = e.findNode(t, this.parsedPath.nodeName)),
              (this.rootNode = t),
              (this.getValue = this._getValue_unbound),
              (this.setValue = this._setValue_unbound);
          }
          return (
            g(
              e,
              [
                { key: "_getValue_unavailable", value: function () {} },
                { key: "_setValue_unavailable", value: function () {} },
                {
                  key: "_getValue_direct",
                  value: function (e, t) {
                    e[t] = this.targetObject[this.propertyName];
                  },
                },
                {
                  key: "_getValue_array",
                  value: function (e, t) {
                    for (
                      var n = this.resolvedProperty, r = 0, i = n.length;
                      r !== i;
                      ++r
                    )
                      e[t++] = n[r];
                  },
                },
                {
                  key: "_getValue_arrayElement",
                  value: function (e, t) {
                    e[t] = this.resolvedProperty[this.propertyIndex];
                  },
                },
                {
                  key: "_getValue_toArray",
                  value: function (e, t) {
                    this.resolvedProperty.toArray(e, t);
                  },
                },
                {
                  key: "_setValue_direct",
                  value: function (e, t) {
                    this.targetObject[this.propertyName] = e[t];
                  },
                },
                {
                  key: "_setValue_direct_setNeedsUpdate",
                  value: function (e, t) {
                    (this.targetObject[this.propertyName] = e[t]),
                      (this.targetObject.needsUpdate = !0);
                  },
                },
                {
                  key: "_setValue_direct_setMatrixWorldNeedsUpdate",
                  value: function (e, t) {
                    (this.targetObject[this.propertyName] = e[t]),
                      (this.targetObject.matrixWorldNeedsUpdate = !0);
                  },
                },
                {
                  key: "_setValue_array",
                  value: function (e, t) {
                    for (
                      var n = this.resolvedProperty, r = 0, i = n.length;
                      r !== i;
                      ++r
                    )
                      n[r] = e[t++];
                  },
                },
                {
                  key: "_setValue_array_setNeedsUpdate",
                  value: function (e, t) {
                    for (
                      var n = this.resolvedProperty, r = 0, i = n.length;
                      r !== i;
                      ++r
                    )
                      n[r] = e[t++];
                    this.targetObject.needsUpdate = !0;
                  },
                },
                {
                  key: "_setValue_array_setMatrixWorldNeedsUpdate",
                  value: function (e, t) {
                    for (
                      var n = this.resolvedProperty, r = 0, i = n.length;
                      r !== i;
                      ++r
                    )
                      n[r] = e[t++];
                    this.targetObject.matrixWorldNeedsUpdate = !0;
                  },
                },
                {
                  key: "_setValue_arrayElement",
                  value: function (e, t) {
                    this.resolvedProperty[this.propertyIndex] = e[t];
                  },
                },
                {
                  key: "_setValue_arrayElement_setNeedsUpdate",
                  value: function (e, t) {
                    (this.resolvedProperty[this.propertyIndex] = e[t]),
                      (this.targetObject.needsUpdate = !0);
                  },
                },
                {
                  key: "_setValue_arrayElement_setMatrixWorldNeedsUpdate",
                  value: function (e, t) {
                    (this.resolvedProperty[this.propertyIndex] = e[t]),
                      (this.targetObject.matrixWorldNeedsUpdate = !0);
                  },
                },
                {
                  key: "_setValue_fromArray",
                  value: function (e, t) {
                    this.resolvedProperty.fromArray(e, t);
                  },
                },
                {
                  key: "_setValue_fromArray_setNeedsUpdate",
                  value: function (e, t) {
                    this.resolvedProperty.fromArray(e, t),
                      (this.targetObject.needsUpdate = !0);
                  },
                },
                {
                  key: "_setValue_fromArray_setMatrixWorldNeedsUpdate",
                  value: function (e, t) {
                    this.resolvedProperty.fromArray(e, t),
                      (this.targetObject.matrixWorldNeedsUpdate = !0);
                  },
                },
                {
                  key: "_getValue_unbound",
                  value: function (e, t) {
                    this.bind(), this.getValue(e, t);
                  },
                },
                {
                  key: "_setValue_unbound",
                  value: function (e, t) {
                    this.bind(), this.setValue(e, t);
                  },
                },
                {
                  key: "bind",
                  value: function () {
                    var t = this.node,
                      n = this.parsedPath,
                      r = n.objectName,
                      i = n.propertyName,
                      a = n.propertyIndex;
                    if (
                      (t ||
                        ((t = e.findNode(this.rootNode, n.nodeName)),
                        (this.node = t)),
                      (this.getValue = this._getValue_unavailable),
                      (this.setValue = this._setValue_unavailable),
                      t)
                    ) {
                      if (r) {
                        var o = n.objectIndex;
                        switch (r) {
                          case "materials":
                            if (!t.material)
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to material as node does not have a material.",
                                this
                              );
                            if (!t.material.materials)
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",
                                this
                              );
                            t = t.material.materials;
                            break;
                          case "bones":
                            if (!t.skeleton)
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",
                                this
                              );
                            t = t.skeleton.bones;
                            for (var s = 0; s < t.length; s++)
                              if (t[s].name === o) {
                                o = s;
                                break;
                              }
                            break;
                          case "map":
                            if ("map" in t) {
                              t = t.map;
                              break;
                            }
                            if (!t.material)
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to material as node does not have a material.",
                                this
                              );
                            if (!t.material.map)
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",
                                this
                              );
                            t = t.material.map;
                            break;
                          default:
                            if (void 0 === t[r])
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to objectName of node undefined.",
                                this
                              );
                            t = t[r];
                        }
                        if (void 0 !== o) {
                          if (void 0 === t[o])
                            return void console.error(
                              "THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",
                              this,
                              t
                            );
                          t = t[o];
                        }
                      }
                      var l = t[i];
                      if (void 0 !== l) {
                        var u = this.Versioning.None;
                        (this.targetObject = t),
                          void 0 !== t.needsUpdate
                            ? (u = this.Versioning.NeedsUpdate)
                            : void 0 !== t.matrixWorldNeedsUpdate &&
                              (u = this.Versioning.MatrixWorldNeedsUpdate);
                        var c = this.BindingType.Direct;
                        if (void 0 !== a) {
                          if ("morphTargetInfluences" === i) {
                            if (!t.geometry)
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",
                                this
                              );
                            if (!t.geometry.morphAttributes)
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",
                                this
                              );
                            void 0 !== t.morphTargetDictionary[a] &&
                              (a = t.morphTargetDictionary[a]);
                          }
                          (c = this.BindingType.ArrayElement),
                            (this.resolvedProperty = l),
                            (this.propertyIndex = a);
                        } else
                          void 0 !== l.fromArray && void 0 !== l.toArray
                            ? ((c = this.BindingType.HasFromToArray),
                              (this.resolvedProperty = l))
                            : Array.isArray(l)
                            ? ((c = this.BindingType.EntireArray),
                              (this.resolvedProperty = l))
                            : (this.propertyName = i);
                        (this.getValue = this.GetterByBindingType[c]),
                          (this.setValue =
                            this.SetterByBindingTypeAndVersioning[c][u]);
                      } else {
                        var d = n.nodeName;
                        console.error(
                          "THREE.PropertyBinding: Trying to update property for track: " +
                            d +
                            "." +
                            i +
                            " but it wasn't found.",
                          t
                        );
                      }
                    } else
                      console.error(
                        "THREE.PropertyBinding: Trying to update node for track: " +
                          this.path +
                          " but it wasn't found."
                      );
                  },
                },
                {
                  key: "unbind",
                  value: function () {
                    (this.node = null),
                      (this.getValue = this._getValue_unbound),
                      (this.setValue = this._setValue_unbound);
                  },
                },
              ],
              [
                {
                  key: "create",
                  value: function (t, n, r) {
                    return t && t.isAnimationObjectGroup
                      ? new e.Composite(t, n, r)
                      : new e(t, n, r);
                  },
                },
                {
                  key: "sanitizeNodeName",
                  value: function (e) {
                    return e.replace(/\s/g, "_").replace(Ah, "");
                  },
                },
                {
                  key: "parseTrackName",
                  value: function (e) {
                    var t = Rh.exec(e);
                    if (null === t)
                      throw new Error(
                        "PropertyBinding: Cannot parse trackName: " + e
                      );
                    var n = {
                        nodeName: t[2],
                        objectName: t[3],
                        objectIndex: t[4],
                        propertyName: t[5],
                        propertyIndex: t[6],
                      },
                      r = n.nodeName && n.nodeName.lastIndexOf(".");
                    if (void 0 !== r && -1 !== r) {
                      var i = n.nodeName.substring(r + 1);
                      -1 !== Lh.indexOf(i) &&
                        ((n.nodeName = n.nodeName.substring(0, r)),
                        (n.objectName = i));
                    }
                    if (null === n.propertyName || 0 === n.propertyName.length)
                      throw new Error(
                        "PropertyBinding: can not parse propertyName from trackName: " +
                          e
                      );
                    return n;
                  },
                },
                {
                  key: "findNode",
                  value: function (e, t) {
                    if (
                      void 0 === t ||
                      "" === t ||
                      "." === t ||
                      -1 === t ||
                      t === e.name ||
                      t === e.uuid
                    )
                      return e;
                    if (e.skeleton) {
                      var n = e.skeleton.getBoneByName(t);
                      if (void 0 !== n) return n;
                    }
                    if (e.children) {
                      var r = (function e(n) {
                        for (var r = 0; r < n.length; r++) {
                          var i = n[r];
                          if (i.name === t || i.uuid === t) return i;
                          var a = e(i.children);
                          if (a) return a;
                        }
                        return null;
                      })(e.children);
                      if (r) return r;
                    }
                    return null;
                  },
                },
              ]
            ),
            e
          );
        })();
      (Nh.Composite = Ih),
        (Nh.prototype.BindingType = {
          Direct: 0,
          EntireArray: 1,
          ArrayElement: 2,
          HasFromToArray: 3,
        }),
        (Nh.prototype.Versioning = {
          None: 0,
          NeedsUpdate: 1,
          MatrixWorldNeedsUpdate: 2,
        }),
        (Nh.prototype.GetterByBindingType = [
          Nh.prototype._getValue_direct,
          Nh.prototype._getValue_array,
          Nh.prototype._getValue_arrayElement,
          Nh.prototype._getValue_toArray,
        ]),
        (Nh.prototype.SetterByBindingTypeAndVersioning = [
          [
            Nh.prototype._setValue_direct,
            Nh.prototype._setValue_direct_setNeedsUpdate,
            Nh.prototype._setValue_direct_setMatrixWorldNeedsUpdate,
          ],
          [
            Nh.prototype._setValue_array,
            Nh.prototype._setValue_array_setNeedsUpdate,
            Nh.prototype._setValue_array_setMatrixWorldNeedsUpdate,
          ],
          [
            Nh.prototype._setValue_arrayElement,
            Nh.prototype._setValue_arrayElement_setNeedsUpdate,
            Nh.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,
          ],
          [
            Nh.prototype._setValue_fromArray,
            Nh.prototype._setValue_fromArray_setNeedsUpdate,
            Nh.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,
          ],
        ]);
      var Oh = (function () {
          function e() {
            p(this, e),
              (this.isAnimationObjectGroup = !0),
              (this.uuid = tr()),
              (this._objects = Array.prototype.slice.call(arguments)),
              (this.nCachedObjects_ = 0);
            var t = {};
            this._indicesByUUID = t;
            for (var n = 0, r = arguments.length; n !== r; ++n)
              t[arguments[n].uuid] = n;
            (this._paths = []),
              (this._parsedPaths = []),
              (this._bindings = []),
              (this._bindingsIndicesByPath = {});
            var i = this;
            this.stats = {
              objects: {
                get total() {
                  return i._objects.length;
                },
                get inUse() {
                  return this.total - i.nCachedObjects_;
                },
              },
              get bindingsPerObject() {
                return i._bindings.length;
              },
            };
          }
          return (
            g(e, [
              {
                key: "add",
                value: function () {
                  for (
                    var e = this._objects,
                      t = this._indicesByUUID,
                      n = this._paths,
                      r = this._parsedPaths,
                      i = this._bindings,
                      a = i.length,
                      o = void 0,
                      s = e.length,
                      l = this.nCachedObjects_,
                      u = 0,
                      c = arguments.length;
                    u !== c;
                    ++u
                  ) {
                    var d = arguments[u],
                      f = d.uuid,
                      h = t[f];
                    if (void 0 === h) {
                      (h = s++), (t[f] = h), e.push(d);
                      for (var p = 0, v = a; p !== v; ++p)
                        i[p].push(new Nh(d, n[p], r[p]));
                    } else if (h < l) {
                      o = e[h];
                      var m = --l,
                        g = e[m];
                      (t[g.uuid] = h), (e[h] = g), (t[f] = m), (e[m] = d);
                      for (var y = 0, b = a; y !== b; ++y) {
                        var _ = i[y],
                          x = _[m],
                          S = _[h];
                        (_[h] = x),
                          void 0 === S && (S = new Nh(d, n[y], r[y])),
                          (_[m] = S);
                      }
                    } else
                      e[h] !== o &&
                        console.error(
                          "THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes."
                        );
                  }
                  this.nCachedObjects_ = l;
                },
              },
              {
                key: "remove",
                value: function () {
                  for (
                    var e = this._objects,
                      t = this._indicesByUUID,
                      n = this._bindings,
                      r = n.length,
                      i = this.nCachedObjects_,
                      a = 0,
                      o = arguments.length;
                    a !== o;
                    ++a
                  ) {
                    var s = arguments[a],
                      l = s.uuid,
                      u = t[l];
                    if (void 0 !== u && u >= i) {
                      var c = i++,
                        d = e[c];
                      (t[d.uuid] = u), (e[u] = d), (t[l] = c), (e[c] = s);
                      for (var f = 0, h = r; f !== h; ++f) {
                        var p = n[f],
                          v = p[c],
                          m = p[u];
                        (p[u] = v), (p[c] = m);
                      }
                    }
                  }
                  this.nCachedObjects_ = i;
                },
              },
              {
                key: "uncache",
                value: function () {
                  for (
                    var e = this._objects,
                      t = this._indicesByUUID,
                      n = this._bindings,
                      r = n.length,
                      i = this.nCachedObjects_,
                      a = e.length,
                      o = 0,
                      s = arguments.length;
                    o !== s;
                    ++o
                  ) {
                    var l = arguments[o].uuid,
                      u = t[l];
                    if (void 0 !== u)
                      if ((delete t[l], u < i)) {
                        var c = --i,
                          d = e[c],
                          f = --a,
                          h = e[f];
                        (t[d.uuid] = u),
                          (e[u] = d),
                          (t[h.uuid] = c),
                          (e[c] = h),
                          e.pop();
                        for (var p = 0, v = r; p !== v; ++p) {
                          var m = n[p],
                            g = m[c],
                            y = m[f];
                          (m[u] = g), (m[c] = y), m.pop();
                        }
                      } else {
                        var b = --a,
                          _ = e[b];
                        b > 0 && (t[_.uuid] = u), (e[u] = _), e.pop();
                        for (var x = 0, S = r; x !== S; ++x) {
                          var w = n[x];
                          (w[u] = w[b]), w.pop();
                        }
                      }
                  }
                  this.nCachedObjects_ = i;
                },
              },
              {
                key: "subscribe_",
                value: function (e, t) {
                  var n = this._bindingsIndicesByPath,
                    r = n[e],
                    i = this._bindings;
                  if (void 0 !== r) return i[r];
                  var a = this._paths,
                    o = this._parsedPaths,
                    s = this._objects,
                    l = s.length,
                    u = this.nCachedObjects_,
                    c = new Array(l);
                  (r = i.length), (n[e] = r), a.push(e), o.push(t), i.push(c);
                  for (var d = u, f = s.length; d !== f; ++d) {
                    var h = s[d];
                    c[d] = new Nh(h, e, t);
                  }
                  return c;
                },
              },
              {
                key: "unsubscribe_",
                value: function (e) {
                  var t = this._bindingsIndicesByPath,
                    n = t[e];
                  if (void 0 !== n) {
                    var r = this._paths,
                      i = this._parsedPaths,
                      a = this._bindings,
                      o = a.length - 1,
                      s = a[o];
                    (t[e[o]] = n),
                      (a[n] = s),
                      a.pop(),
                      (i[n] = i[o]),
                      i.pop(),
                      (r[n] = r[o]),
                      r.pop();
                  }
                },
              },
            ]),
            e
          );
        })(),
        Dh = (function () {
          function e(t, n) {
            var r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : null,
              i =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : n.blendMode;
            p(this, e),
              (this._mixer = t),
              (this._clip = n),
              (this._localRoot = r),
              (this.blendMode = i);
            for (
              var a = n.tracks,
                o = a.length,
                s = new Array(o),
                l = { endingStart: rn, endingEnd: rn },
                u = 0;
              u !== o;
              ++u
            ) {
              var c = a[u].createInterpolant(null);
              (s[u] = c), (c.settings = l);
            }
            (this._interpolantSettings = l),
              (this._interpolants = s),
              (this._propertyBindings = new Array(o)),
              (this._cacheIndex = null),
              (this._byClipCacheIndex = null),
              (this._timeScaleInterpolant = null),
              (this._weightInterpolant = null),
              (this.loop = Jt),
              (this._loopCount = -1),
              (this._startTime = null),
              (this.time = 0),
              (this.timeScale = 1),
              (this._effectiveTimeScale = 1),
              (this.weight = 1),
              (this._effectiveWeight = 1),
              (this.repetitions = 1 / 0),
              (this.paused = !1),
              (this.enabled = !0),
              (this.clampWhenFinished = !1),
              (this.zeroSlopeAtStart = !0),
              (this.zeroSlopeAtEnd = !0);
          }
          return (
            g(e, [
              {
                key: "play",
                value: function () {
                  return this._mixer._activateAction(this), this;
                },
              },
              {
                key: "stop",
                value: function () {
                  return this._mixer._deactivateAction(this), this.reset();
                },
              },
              {
                key: "reset",
                value: function () {
                  return (
                    (this.paused = !1),
                    (this.enabled = !0),
                    (this.time = 0),
                    (this._loopCount = -1),
                    (this._startTime = null),
                    this.stopFading().stopWarping()
                  );
                },
              },
              {
                key: "isRunning",
                value: function () {
                  return (
                    this.enabled &&
                    !this.paused &&
                    0 !== this.timeScale &&
                    null === this._startTime &&
                    this._mixer._isActiveAction(this)
                  );
                },
              },
              {
                key: "isScheduled",
                value: function () {
                  return this._mixer._isActiveAction(this);
                },
              },
              {
                key: "startAt",
                value: function (e) {
                  return (this._startTime = e), this;
                },
              },
              {
                key: "setLoop",
                value: function (e, t) {
                  return (this.loop = e), (this.repetitions = t), this;
                },
              },
              {
                key: "setEffectiveWeight",
                value: function (e) {
                  return (
                    (this.weight = e),
                    (this._effectiveWeight = this.enabled ? e : 0),
                    this.stopFading()
                  );
                },
              },
              {
                key: "getEffectiveWeight",
                value: function () {
                  return this._effectiveWeight;
                },
              },
              {
                key: "fadeIn",
                value: function (e) {
                  return this._scheduleFading(e, 0, 1);
                },
              },
              {
                key: "fadeOut",
                value: function (e) {
                  return this._scheduleFading(e, 1, 0);
                },
              },
              {
                key: "crossFadeFrom",
                value: function (e, t, n) {
                  if ((e.fadeOut(t), this.fadeIn(t), n)) {
                    var r = this._clip.duration,
                      i = e._clip.duration,
                      a = i / r,
                      o = r / i;
                    e.warp(1, a, t), this.warp(o, 1, t);
                  }
                  return this;
                },
              },
              {
                key: "crossFadeTo",
                value: function (e, t, n) {
                  return e.crossFadeFrom(this, t, n);
                },
              },
              {
                key: "stopFading",
                value: function () {
                  var e = this._weightInterpolant;
                  return (
                    null !== e &&
                      ((this._weightInterpolant = null),
                      this._mixer._takeBackControlInterpolant(e)),
                    this
                  );
                },
              },
              {
                key: "setEffectiveTimeScale",
                value: function (e) {
                  return (
                    (this.timeScale = e),
                    (this._effectiveTimeScale = this.paused ? 0 : e),
                    this.stopWarping()
                  );
                },
              },
              {
                key: "getEffectiveTimeScale",
                value: function () {
                  return this._effectiveTimeScale;
                },
              },
              {
                key: "setDuration",
                value: function (e) {
                  return (
                    (this.timeScale = this._clip.duration / e),
                    this.stopWarping()
                  );
                },
              },
              {
                key: "syncWith",
                value: function (e) {
                  return (
                    (this.time = e.time),
                    (this.timeScale = e.timeScale),
                    this.stopWarping()
                  );
                },
              },
              {
                key: "halt",
                value: function (e) {
                  return this.warp(this._effectiveTimeScale, 0, e);
                },
              },
              {
                key: "warp",
                value: function (e, t, n) {
                  var r = this._mixer,
                    i = r.time,
                    a = this.timeScale,
                    o = this._timeScaleInterpolant;
                  null === o &&
                    ((o = r._lendControlInterpolant()),
                    (this._timeScaleInterpolant = o));
                  var s = o.parameterPositions,
                    l = o.sampleValues;
                  return (
                    (s[0] = i),
                    (s[1] = i + n),
                    (l[0] = e / a),
                    (l[1] = t / a),
                    this
                  );
                },
              },
              {
                key: "stopWarping",
                value: function () {
                  var e = this._timeScaleInterpolant;
                  return (
                    null !== e &&
                      ((this._timeScaleInterpolant = null),
                      this._mixer._takeBackControlInterpolant(e)),
                    this
                  );
                },
              },
              {
                key: "getMixer",
                value: function () {
                  return this._mixer;
                },
              },
              {
                key: "getClip",
                value: function () {
                  return this._clip;
                },
              },
              {
                key: "getRoot",
                value: function () {
                  return this._localRoot || this._mixer._root;
                },
              },
              {
                key: "_update",
                value: function (e, t, n, r) {
                  if (this.enabled) {
                    var i = this._startTime;
                    if (null !== i) {
                      var a = (e - i) * n;
                      a < 0 || 0 === n
                        ? (t = 0)
                        : ((this._startTime = null), (t = n * a));
                    }
                    t *= this._updateTimeScale(e);
                    var o = this._updateTime(t),
                      s = this._updateWeight(e);
                    if (s > 0) {
                      var l = this._interpolants,
                        u = this._propertyBindings;
                      if (this.blendMode === ln)
                        for (var c = 0, d = l.length; c !== d; ++c)
                          l[c].evaluate(o), u[c].accumulateAdditive(s);
                      else
                        for (var f = 0, h = l.length; f !== h; ++f)
                          l[f].evaluate(o), u[f].accumulate(r, s);
                    }
                  } else this._updateWeight(e);
                },
              },
              {
                key: "_updateWeight",
                value: function (e) {
                  var t = 0;
                  if (this.enabled) {
                    t = this.weight;
                    var n = this._weightInterpolant;
                    if (null !== n) {
                      var r = n.evaluate(e)[0];
                      (t *= r),
                        e > n.parameterPositions[1] &&
                          (this.stopFading(), 0 === r && (this.enabled = !1));
                    }
                  }
                  return (this._effectiveWeight = t), t;
                },
              },
              {
                key: "_updateTimeScale",
                value: function (e) {
                  var t = 0;
                  if (!this.paused) {
                    t = this.timeScale;
                    var n = this._timeScaleInterpolant;
                    if (null !== n)
                      (t *= n.evaluate(e)[0]),
                        e > n.parameterPositions[1] &&
                          (this.stopWarping(),
                          0 === t ? (this.paused = !0) : (this.timeScale = t));
                  }
                  return (this._effectiveTimeScale = t), t;
                },
              },
              {
                key: "_updateTime",
                value: function (e) {
                  var t = this._clip.duration,
                    n = this.loop,
                    r = this.time + e,
                    i = this._loopCount,
                    a = n === Qt;
                  if (0 === e)
                    return -1 === i ? r : a && 1 === (1 & i) ? t - r : r;
                  if (n === $t) {
                    -1 === i &&
                      ((this._loopCount = 0), this._setEndings(!0, !0, !1));
                    e: {
                      if (r >= t) r = t;
                      else {
                        if (!(r < 0)) {
                          this.time = r;
                          break e;
                        }
                        r = 0;
                      }
                      this.clampWhenFinished
                        ? (this.paused = !0)
                        : (this.enabled = !1),
                        (this.time = r),
                        this._mixer.dispatchEvent({
                          type: "finished",
                          action: this,
                          direction: e < 0 ? -1 : 1,
                        });
                    }
                  } else {
                    if (
                      (-1 === i &&
                        (e >= 0
                          ? ((i = 0),
                            this._setEndings(!0, 0 === this.repetitions, a))
                          : this._setEndings(0 === this.repetitions, !0, a)),
                      r >= t || r < 0)
                    ) {
                      var o = Math.floor(r / t);
                      (r -= t * o), (i += Math.abs(o));
                      var s = this.repetitions - i;
                      if (s <= 0)
                        this.clampWhenFinished
                          ? (this.paused = !0)
                          : (this.enabled = !1),
                          (r = e > 0 ? t : 0),
                          (this.time = r),
                          this._mixer.dispatchEvent({
                            type: "finished",
                            action: this,
                            direction: e > 0 ? 1 : -1,
                          });
                      else {
                        if (1 === s) {
                          var l = e < 0;
                          this._setEndings(l, !l, a);
                        } else this._setEndings(!1, !1, a);
                        (this._loopCount = i),
                          (this.time = r),
                          this._mixer.dispatchEvent({
                            type: "loop",
                            action: this,
                            loopDelta: o,
                          });
                      }
                    } else this.time = r;
                    if (a && 1 === (1 & i)) return t - r;
                  }
                  return r;
                },
              },
              {
                key: "_setEndings",
                value: function (e, t, n) {
                  var r = this._interpolantSettings;
                  n
                    ? ((r.endingStart = an), (r.endingEnd = an))
                    : ((r.endingStart = e
                        ? this.zeroSlopeAtStart
                          ? an
                          : rn
                        : on),
                      (r.endingEnd = t ? (this.zeroSlopeAtEnd ? an : rn) : on));
                },
              },
              {
                key: "_scheduleFading",
                value: function (e, t, n) {
                  var r = this._mixer,
                    i = r.time,
                    a = this._weightInterpolant;
                  null === a &&
                    ((a = r._lendControlInterpolant()),
                    (this._weightInterpolant = a));
                  var o = a.parameterPositions,
                    s = a.sampleValues;
                  return (
                    (o[0] = i), (s[0] = t), (o[1] = i + e), (s[1] = n), this
                  );
                },
              },
            ]),
            e
          );
        })(),
        Uh = new Float32Array(1),
        zh = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return (
              p(this, n),
              ((r = t.call(this))._root = e),
              r._initMemoryManager(),
              (r._accuIndex = 0),
              (r.time = 0),
              (r.timeScale = 1),
              r
            );
          }
          return (
            g(n, [
              {
                key: "_bindAction",
                value: function (e, t) {
                  var n = e._localRoot || this._root,
                    r = e._clip.tracks,
                    i = r.length,
                    a = e._propertyBindings,
                    o = e._interpolants,
                    s = n.uuid,
                    l = this._bindingsByRootAndName,
                    u = l[s];
                  void 0 === u && ((u = {}), (l[s] = u));
                  for (var c = 0; c !== i; ++c) {
                    var d = r[c],
                      f = d.name,
                      h = u[f];
                    if (void 0 !== h) ++h.referenceCount, (a[c] = h);
                    else {
                      if (void 0 !== (h = a[c])) {
                        null === h._cacheIndex &&
                          (++h.referenceCount,
                          this._addInactiveBinding(h, s, f));
                        continue;
                      }
                      var p = t && t._propertyBindings[c].binding.parsedPath;
                      ++(h = new kh(
                        Nh.create(n, f, p),
                        d.ValueTypeName,
                        d.getValueSize()
                      )).referenceCount,
                        this._addInactiveBinding(h, s, f),
                        (a[c] = h);
                    }
                    o[c].resultBuffer = h.buffer;
                  }
                },
              },
              {
                key: "_activateAction",
                value: function (e) {
                  if (!this._isActiveAction(e)) {
                    if (null === e._cacheIndex) {
                      var t = (e._localRoot || this._root).uuid,
                        n = e._clip.uuid,
                        r = this._actionsByClip[n];
                      this._bindAction(e, r && r.knownActions[0]),
                        this._addInactiveAction(e, n, t);
                    }
                    for (
                      var i = e._propertyBindings, a = 0, o = i.length;
                      a !== o;
                      ++a
                    ) {
                      var s = i[a];
                      0 === s.useCount++ &&
                        (this._lendBinding(s), s.saveOriginalState());
                    }
                    this._lendAction(e);
                  }
                },
              },
              {
                key: "_deactivateAction",
                value: function (e) {
                  if (this._isActiveAction(e)) {
                    for (
                      var t = e._propertyBindings, n = 0, r = t.length;
                      n !== r;
                      ++n
                    ) {
                      var i = t[n];
                      0 === --i.useCount &&
                        (i.restoreOriginalState(), this._takeBackBinding(i));
                    }
                    this._takeBackAction(e);
                  }
                },
              },
              {
                key: "_initMemoryManager",
                value: function () {
                  (this._actions = []),
                    (this._nActiveActions = 0),
                    (this._actionsByClip = {}),
                    (this._bindings = []),
                    (this._nActiveBindings = 0),
                    (this._bindingsByRootAndName = {}),
                    (this._controlInterpolants = []),
                    (this._nActiveControlInterpolants = 0);
                  var e = this;
                  this.stats = {
                    actions: {
                      get total() {
                        return e._actions.length;
                      },
                      get inUse() {
                        return e._nActiveActions;
                      },
                    },
                    bindings: {
                      get total() {
                        return e._bindings.length;
                      },
                      get inUse() {
                        return e._nActiveBindings;
                      },
                    },
                    controlInterpolants: {
                      get total() {
                        return e._controlInterpolants.length;
                      },
                      get inUse() {
                        return e._nActiveControlInterpolants;
                      },
                    },
                  };
                },
              },
              {
                key: "_isActiveAction",
                value: function (e) {
                  var t = e._cacheIndex;
                  return null !== t && t < this._nActiveActions;
                },
              },
              {
                key: "_addInactiveAction",
                value: function (e, t, n) {
                  var r = this._actions,
                    i = this._actionsByClip,
                    a = i[t];
                  if (void 0 === a)
                    (a = { knownActions: [e], actionByRoot: {} }),
                      (e._byClipCacheIndex = 0),
                      (i[t] = a);
                  else {
                    var o = a.knownActions;
                    (e._byClipCacheIndex = o.length), o.push(e);
                  }
                  (e._cacheIndex = r.length),
                    r.push(e),
                    (a.actionByRoot[n] = e);
                },
              },
              {
                key: "_removeInactiveAction",
                value: function (e) {
                  var t = this._actions,
                    n = t[t.length - 1],
                    r = e._cacheIndex;
                  (n._cacheIndex = r),
                    (t[r] = n),
                    t.pop(),
                    (e._cacheIndex = null);
                  var i = e._clip.uuid,
                    a = this._actionsByClip,
                    o = a[i],
                    s = o.knownActions,
                    l = s[s.length - 1],
                    u = e._byClipCacheIndex;
                  (l._byClipCacheIndex = u),
                    (s[u] = l),
                    s.pop(),
                    (e._byClipCacheIndex = null),
                    delete o.actionByRoot[(e._localRoot || this._root).uuid],
                    0 === s.length && delete a[i],
                    this._removeInactiveBindingsForAction(e);
                },
              },
              {
                key: "_removeInactiveBindingsForAction",
                value: function (e) {
                  for (
                    var t = e._propertyBindings, n = 0, r = t.length;
                    n !== r;
                    ++n
                  ) {
                    var i = t[n];
                    0 === --i.referenceCount && this._removeInactiveBinding(i);
                  }
                },
              },
              {
                key: "_lendAction",
                value: function (e) {
                  var t = this._actions,
                    n = e._cacheIndex,
                    r = this._nActiveActions++,
                    i = t[r];
                  (e._cacheIndex = r),
                    (t[r] = e),
                    (i._cacheIndex = n),
                    (t[n] = i);
                },
              },
              {
                key: "_takeBackAction",
                value: function (e) {
                  var t = this._actions,
                    n = e._cacheIndex,
                    r = --this._nActiveActions,
                    i = t[r];
                  (e._cacheIndex = r),
                    (t[r] = e),
                    (i._cacheIndex = n),
                    (t[n] = i);
                },
              },
              {
                key: "_addInactiveBinding",
                value: function (e, t, n) {
                  var r = this._bindingsByRootAndName,
                    i = this._bindings,
                    a = r[t];
                  void 0 === a && ((a = {}), (r[t] = a)),
                    (a[n] = e),
                    (e._cacheIndex = i.length),
                    i.push(e);
                },
              },
              {
                key: "_removeInactiveBinding",
                value: function (e) {
                  var t = this._bindings,
                    n = e.binding,
                    r = n.rootNode.uuid,
                    i = n.path,
                    a = this._bindingsByRootAndName,
                    o = a[r],
                    s = t[t.length - 1],
                    l = e._cacheIndex;
                  (s._cacheIndex = l),
                    (t[l] = s),
                    t.pop(),
                    delete o[i],
                    0 === Object.keys(o).length && delete a[r];
                },
              },
              {
                key: "_lendBinding",
                value: function (e) {
                  var t = this._bindings,
                    n = e._cacheIndex,
                    r = this._nActiveBindings++,
                    i = t[r];
                  (e._cacheIndex = r),
                    (t[r] = e),
                    (i._cacheIndex = n),
                    (t[n] = i);
                },
              },
              {
                key: "_takeBackBinding",
                value: function (e) {
                  var t = this._bindings,
                    n = e._cacheIndex,
                    r = --this._nActiveBindings,
                    i = t[r];
                  (e._cacheIndex = r),
                    (t[r] = e),
                    (i._cacheIndex = n),
                    (t[n] = i);
                },
              },
              {
                key: "_lendControlInterpolant",
                value: function () {
                  var e = this._controlInterpolants,
                    t = this._nActiveControlInterpolants++,
                    n = e[t];
                  return (
                    void 0 === n &&
                      (((n = new rf(
                        new Float32Array(2),
                        new Float32Array(2),
                        1,
                        Uh
                      )).__cacheIndex = t),
                      (e[t] = n)),
                    n
                  );
                },
              },
              {
                key: "_takeBackControlInterpolant",
                value: function (e) {
                  var t = this._controlInterpolants,
                    n = e.__cacheIndex,
                    r = --this._nActiveControlInterpolants,
                    i = t[r];
                  (e.__cacheIndex = r),
                    (t[r] = e),
                    (i.__cacheIndex = n),
                    (t[n] = i);
                },
              },
              {
                key: "clipAction",
                value: function (e, t, n) {
                  var r = t || this._root,
                    i = r.uuid,
                    a = "string" === typeof e ? pf.findByName(r, e) : e,
                    o = null !== a ? a.uuid : e,
                    s = this._actionsByClip[o],
                    l = null;
                  if (
                    (void 0 === n && (n = null !== a ? a.blendMode : sn),
                    void 0 !== s)
                  ) {
                    var u = s.actionByRoot[i];
                    if (void 0 !== u && u.blendMode === n) return u;
                    (l = s.knownActions[0]), null === a && (a = l._clip);
                  }
                  if (null === a) return null;
                  var c = new Dh(this, a, t, n);
                  return (
                    this._bindAction(c, l), this._addInactiveAction(c, o, i), c
                  );
                },
              },
              {
                key: "existingAction",
                value: function (e, t) {
                  var n = t || this._root,
                    r = n.uuid,
                    i = "string" === typeof e ? pf.findByName(n, e) : e,
                    a = i ? i.uuid : e,
                    o = this._actionsByClip[a];
                  return (void 0 !== o && o.actionByRoot[r]) || null;
                },
              },
              {
                key: "stopAllAction",
                value: function () {
                  for (
                    var e = this._actions, t = this._nActiveActions - 1;
                    t >= 0;
                    --t
                  )
                    e[t].stop();
                  return this;
                },
              },
              {
                key: "update",
                value: function (e) {
                  e *= this.timeScale;
                  for (
                    var t = this._actions,
                      n = this._nActiveActions,
                      r = (this.time += e),
                      i = Math.sign(e),
                      a = (this._accuIndex ^= 1),
                      o = 0;
                    o !== n;
                    ++o
                  ) {
                    t[o]._update(r, e, i, a);
                  }
                  for (
                    var s = this._bindings, l = this._nActiveBindings, u = 0;
                    u !== l;
                    ++u
                  )
                    s[u].apply(a);
                  return this;
                },
              },
              {
                key: "setTime",
                value: function (e) {
                  this.time = 0;
                  for (var t = 0; t < this._actions.length; t++)
                    this._actions[t].time = 0;
                  return this.update(e);
                },
              },
              {
                key: "getRoot",
                value: function () {
                  return this._root;
                },
              },
              {
                key: "uncacheClip",
                value: function (e) {
                  var t = this._actions,
                    n = e.uuid,
                    r = this._actionsByClip,
                    i = r[n];
                  if (void 0 !== i) {
                    for (
                      var a = i.knownActions, o = 0, s = a.length;
                      o !== s;
                      ++o
                    ) {
                      var l = a[o];
                      this._deactivateAction(l);
                      var u = l._cacheIndex,
                        c = t[t.length - 1];
                      (l._cacheIndex = null),
                        (l._byClipCacheIndex = null),
                        (c._cacheIndex = u),
                        (t[u] = c),
                        t.pop(),
                        this._removeInactiveBindingsForAction(l);
                    }
                    delete r[n];
                  }
                },
              },
              {
                key: "uncacheRoot",
                value: function (e) {
                  var t = e.uuid,
                    n = this._actionsByClip;
                  for (var r in n) {
                    var i = n[r].actionByRoot[t];
                    void 0 !== i &&
                      (this._deactivateAction(i),
                      this._removeInactiveAction(i));
                  }
                  var a = this._bindingsByRootAndName[t];
                  if (void 0 !== a)
                    for (var o in a) {
                      var s = a[o];
                      s.restoreOriginalState(), this._removeInactiveBinding(s);
                    }
                },
              },
              {
                key: "uncacheAction",
                value: function (e, t) {
                  var n = this.existingAction(e, t);
                  null !== n &&
                    (this._deactivateAction(n), this._removeInactiveAction(n));
                },
              },
            ]),
            n
          );
        })(Kn),
        Fh = (function () {
          function e(t) {
            p(this, e), (this.value = t);
          }
          return (
            g(e, [
              {
                key: "clone",
                value: function () {
                  return new e(
                    void 0 === this.value.clone
                      ? this.value
                      : this.value.clone()
                  );
                },
              },
            ]),
            e
          );
        })(),
        Bh = 0,
        Zh = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e;
            return (
              p(this, n),
              ((e = t.call(this)).isUniformsGroup = !0),
              Object.defineProperty(E(e), "id", { value: Bh++ }),
              (e.name = ""),
              (e.usage = zn),
              (e.uniforms = []),
              e
            );
          }
          return (
            g(n, [
              {
                key: "add",
                value: function (e) {
                  return this.uniforms.push(e), this;
                },
              },
              {
                key: "remove",
                value: function (e) {
                  var t = this.uniforms.indexOf(e);
                  return -1 !== t && this.uniforms.splice(t, 1), this;
                },
              },
              {
                key: "setName",
                value: function (e) {
                  return (this.name = e), this;
                },
              },
              {
                key: "setUsage",
                value: function (e) {
                  return (this.usage = e), this;
                },
              },
              {
                key: "dispose",
                value: function () {
                  return this.dispatchEvent({ type: "dispose" }), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  (this.name = e.name), (this.usage = e.usage);
                  var t = e.uniforms;
                  this.uniforms.length = 0;
                  for (var n = 0, r = t.length; n < r; n++)
                    this.uniforms.push(t[n].clone());
                  return this;
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            n
          );
        })(Kn),
        Hh = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r) {
            var i,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1;
            return (
              p(this, n),
              ((i = t.call(this, e, r)).isInstancedInterleavedBuffer = !0),
              (i.meshPerAttribute = a),
              i
            );
          }
          return (
            g(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e),
                    (this.meshPerAttribute = e.meshPerAttribute),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function (e) {
                  var t = L(_(n.prototype), "clone", this).call(this, e);
                  return (t.meshPerAttribute = this.meshPerAttribute), t;
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = L(_(n.prototype), "toJSON", this).call(this, e);
                  return (
                    (t.isInstancedInterleavedBuffer = !0),
                    (t.meshPerAttribute = this.meshPerAttribute),
                    t
                  );
                },
              },
            ]),
            n
          );
        })(iu),
        Vh = (function () {
          function e(t, n, r, i, a) {
            p(this, e),
              (this.isGLBufferAttribute = !0),
              (this.name = ""),
              (this.buffer = t),
              (this.type = n),
              (this.itemSize = r),
              (this.elementSize = i),
              (this.count = a),
              (this.version = 0);
          }
          return (
            g(e, [
              {
                key: "needsUpdate",
                set: function (e) {
                  !0 === e && this.version++;
                },
              },
              {
                key: "setBuffer",
                value: function (e) {
                  return (this.buffer = e), this;
                },
              },
              {
                key: "setType",
                value: function (e, t) {
                  return (this.type = e), (this.elementSize = t), this;
                },
              },
              {
                key: "setItemSize",
                value: function (e) {
                  return (this.itemSize = e), this;
                },
              },
              {
                key: "setCount",
                value: function (e) {
                  return (this.count = e), this;
                },
              },
            ]),
            e
          );
        })(),
        Gh = (function () {
          function e(t, n) {
            var r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0,
              i =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1 / 0;
            p(this, e),
              (this.ray = new mi(t, n)),
              (this.near = r),
              (this.far = i),
              (this.camera = null),
              (this.layers = new Ai()),
              (this.params = {
                Mesh: {},
                Line: { threshold: 1 },
                LOD: {},
                Points: { threshold: 1 },
                Sprite: {},
              });
          }
          return (
            g(e, [
              {
                key: "set",
                value: function (e, t) {
                  this.ray.set(e, t);
                },
              },
              {
                key: "setFromCamera",
                value: function (e, t) {
                  t.isPerspectiveCamera
                    ? (this.ray.origin.setFromMatrixPosition(t.matrixWorld),
                      this.ray.direction
                        .set(e.x, e.y, 0.5)
                        .unproject(t)
                        .sub(this.ray.origin)
                        .normalize(),
                      (this.camera = t))
                    : t.isOrthographicCamera
                    ? (this.ray.origin
                        .set(e.x, e.y, (t.near + t.far) / (t.near - t.far))
                        .unproject(t),
                      this.ray.direction
                        .set(0, 0, -1)
                        .transformDirection(t.matrixWorld),
                      (this.camera = t))
                    : console.error(
                        "THREE.Raycaster: Unsupported camera type: " + t.type
                      );
                },
              },
              {
                key: "intersectObject",
                value: function (e) {
                  var t =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : [];
                  return (
                    jh(
                      e,
                      this,
                      t,
                      !(arguments.length > 1 && void 0 !== arguments[1]) ||
                        arguments[1]
                    ),
                    t.sort(Wh),
                    t
                  );
                },
              },
              {
                key: "intersectObjects",
                value: function (e) {
                  for (
                    var t =
                        !(arguments.length > 1 && void 0 !== arguments[1]) ||
                        arguments[1],
                      n =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : [],
                      r = 0,
                      i = e.length;
                    r < i;
                    r++
                  )
                    jh(e[r], this, n, t);
                  return n.sort(Wh), n;
                },
              },
            ]),
            e
          );
        })();
      function Wh(e, t) {
        return e.distance - t.distance;
      }
      function jh(e, t, n, r) {
        if ((e.layers.test(t.layers) && e.raycast(t, n), !0 === r))
          for (var i = e.children, a = 0, o = i.length; a < o; a++)
            jh(i[a], t, n, !0);
      }
      var Xh = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0;
            return (
              p(this, e),
              (this.radius = t),
              (this.phi = n),
              (this.theta = r),
              this
            );
          }
          return (
            g(e, [
              {
                key: "set",
                value: function (e, t, n) {
                  return (
                    (this.radius = e), (this.phi = t), (this.theta = n), this
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    (this.radius = e.radius),
                    (this.phi = e.phi),
                    (this.theta = e.theta),
                    this
                  );
                },
              },
              {
                key: "makeSafe",
                value: function () {
                  var e = 1e-6;
                  return (
                    (this.phi = Math.max(e, Math.min(Math.PI - e, this.phi))),
                    this
                  );
                },
              },
              {
                key: "setFromVector3",
                value: function (e) {
                  return this.setFromCartesianCoords(e.x, e.y, e.z);
                },
              },
              {
                key: "setFromCartesianCoords",
                value: function (e, t, n) {
                  return (
                    (this.radius = Math.sqrt(e * e + t * t + n * n)),
                    0 === this.radius
                      ? ((this.theta = 0), (this.phi = 0))
                      : ((this.theta = Math.atan2(e, n)),
                        (this.phi = Math.acos(nr(t / this.radius, -1, 1)))),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            e
          );
        })(),
        qh = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0;
            return (
              p(this, e),
              (this.radius = t),
              (this.theta = n),
              (this.y = r),
              this
            );
          }
          return (
            g(e, [
              {
                key: "set",
                value: function (e, t, n) {
                  return (
                    (this.radius = e), (this.theta = t), (this.y = n), this
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    (this.radius = e.radius),
                    (this.theta = e.theta),
                    (this.y = e.y),
                    this
                  );
                },
              },
              {
                key: "setFromVector3",
                value: function (e) {
                  return this.setFromCartesianCoords(e.x, e.y, e.z);
                },
              },
              {
                key: "setFromCartesianCoords",
                value: function (e, t, n) {
                  return (
                    (this.radius = Math.sqrt(e * e + n * n)),
                    (this.theta = Math.atan2(e, n)),
                    (this.y = t),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            e
          );
        })(),
        Yh = new dr(),
        Kh = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new dr(1 / 0, 1 / 0),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new dr(-1 / 0, -1 / 0);
            p(this, e), (this.isBox2 = !0), (this.min = t), (this.max = n);
          }
          return (
            g(e, [
              {
                key: "set",
                value: function (e, t) {
                  return this.min.copy(e), this.max.copy(t), this;
                },
              },
              {
                key: "setFromPoints",
                value: function (e) {
                  this.makeEmpty();
                  for (var t = 0, n = e.length; t < n; t++)
                    this.expandByPoint(e[t]);
                  return this;
                },
              },
              {
                key: "setFromCenterAndSize",
                value: function (e, t) {
                  var n = Yh.copy(t).multiplyScalar(0.5);
                  return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return this.min.copy(e.min), this.max.copy(e.max), this;
                },
              },
              {
                key: "makeEmpty",
                value: function () {
                  return (
                    (this.min.x = this.min.y = 1 / 0),
                    (this.max.x = this.max.y = -1 / 0),
                    this
                  );
                },
              },
              {
                key: "isEmpty",
                value: function () {
                  return this.max.x < this.min.x || this.max.y < this.min.y;
                },
              },
              {
                key: "getCenter",
                value: function (e) {
                  return this.isEmpty()
                    ? e.set(0, 0)
                    : e.addVectors(this.min, this.max).multiplyScalar(0.5);
                },
              },
              {
                key: "getSize",
                value: function (e) {
                  return this.isEmpty()
                    ? e.set(0, 0)
                    : e.subVectors(this.max, this.min);
                },
              },
              {
                key: "expandByPoint",
                value: function (e) {
                  return this.min.min(e), this.max.max(e), this;
                },
              },
              {
                key: "expandByVector",
                value: function (e) {
                  return this.min.sub(e), this.max.add(e), this;
                },
              },
              {
                key: "expandByScalar",
                value: function (e) {
                  return this.min.addScalar(-e), this.max.addScalar(e), this;
                },
              },
              {
                key: "containsPoint",
                value: function (e) {
                  return !(
                    e.x < this.min.x ||
                    e.x > this.max.x ||
                    e.y < this.min.y ||
                    e.y > this.max.y
                  );
                },
              },
              {
                key: "containsBox",
                value: function (e) {
                  return (
                    this.min.x <= e.min.x &&
                    e.max.x <= this.max.x &&
                    this.min.y <= e.min.y &&
                    e.max.y <= this.max.y
                  );
                },
              },
              {
                key: "getParameter",
                value: function (e, t) {
                  return t.set(
                    (e.x - this.min.x) / (this.max.x - this.min.x),
                    (e.y - this.min.y) / (this.max.y - this.min.y)
                  );
                },
              },
              {
                key: "intersectsBox",
                value: function (e) {
                  return !(
                    e.max.x < this.min.x ||
                    e.min.x > this.max.x ||
                    e.max.y < this.min.y ||
                    e.min.y > this.max.y
                  );
                },
              },
              {
                key: "clampPoint",
                value: function (e, t) {
                  return t.copy(e).clamp(this.min, this.max);
                },
              },
              {
                key: "distanceToPoint",
                value: function (e) {
                  return this.clampPoint(e, Yh).distanceTo(e);
                },
              },
              {
                key: "intersect",
                value: function (e) {
                  return (
                    this.min.max(e.min),
                    this.max.min(e.max),
                    this.isEmpty() && this.makeEmpty(),
                    this
                  );
                },
              },
              {
                key: "union",
                value: function (e) {
                  return this.min.min(e.min), this.max.max(e.max), this;
                },
              },
              {
                key: "translate",
                value: function (e) {
                  return this.min.add(e), this.max.add(e), this;
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return e.min.equals(this.min) && e.max.equals(this.max);
                },
              },
            ]),
            e
          );
        })(),
        $h = new Zr(),
        Jh = new Zr(),
        Qh = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Zr(),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new Zr();
            p(this, e), (this.start = t), (this.end = n);
          }
          return (
            g(e, [
              {
                key: "set",
                value: function (e, t) {
                  return this.start.copy(e), this.end.copy(t), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return this.start.copy(e.start), this.end.copy(e.end), this;
                },
              },
              {
                key: "getCenter",
                value: function (e) {
                  return e.addVectors(this.start, this.end).multiplyScalar(0.5);
                },
              },
              {
                key: "delta",
                value: function (e) {
                  return e.subVectors(this.end, this.start);
                },
              },
              {
                key: "distanceSq",
                value: function () {
                  return this.start.distanceToSquared(this.end);
                },
              },
              {
                key: "distance",
                value: function () {
                  return this.start.distanceTo(this.end);
                },
              },
              {
                key: "at",
                value: function (e, t) {
                  return this.delta(t).multiplyScalar(e).add(this.start);
                },
              },
              {
                key: "closestPointToPointParameter",
                value: function (e, t) {
                  $h.subVectors(e, this.start),
                    Jh.subVectors(this.end, this.start);
                  var n = Jh.dot(Jh),
                    r = Jh.dot($h) / n;
                  return t && (r = nr(r, 0, 1)), r;
                },
              },
              {
                key: "closestPointToPoint",
                value: function (e, t, n) {
                  var r = this.closestPointToPointParameter(e, t);
                  return this.delta(n).multiplyScalar(r).add(this.start);
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  return (
                    this.start.applyMatrix4(e), this.end.applyMatrix4(e), this
                  );
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return e.start.equals(this.start) && e.end.equals(this.end);
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            e
          );
        })(),
        ep = new Zr(),
        tp = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r) {
            var i;
            p(this, n),
              ((i = t.call(this)).light = e),
              (i.matrix = e.matrixWorld),
              (i.matrixAutoUpdate = !1),
              (i.color = r),
              (i.type = "SpotLightHelper");
            for (
              var a = new Oa(),
                o = [
                  0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0,
                  0, 0, 1, 1, 0, 0, 0, 0, -1, 1,
                ],
                s = 0,
                l = 1;
              s < 32;
              s++, l++
            ) {
              var u = (s / 32) * Math.PI * 2,
                c = (l / 32) * Math.PI * 2;
              o.push(Math.cos(u), Math.sin(u), 1, Math.cos(c), Math.sin(c), 1);
            }
            a.setAttribute("position", new ka(o, 3));
            var d = new ju({ fog: !1, toneMapped: !1 });
            return (i.cone = new tc(a, d)), i.add(i.cone), i.update(), i;
          }
          return (
            g(n, [
              {
                key: "dispose",
                value: function () {
                  this.cone.geometry.dispose(), this.cone.material.dispose();
                },
              },
              {
                key: "update",
                value: function () {
                  this.light.updateWorldMatrix(!0, !1),
                    this.light.target.updateWorldMatrix(!0, !1);
                  var e = this.light.distance ? this.light.distance : 1e3,
                    t = e * Math.tan(this.light.angle);
                  this.cone.scale.set(t, t, e),
                    ep.setFromMatrixPosition(this.light.target.matrixWorld),
                    this.cone.lookAt(ep),
                    void 0 !== this.color
                      ? this.cone.material.color.set(this.color)
                      : this.cone.material.color.copy(this.light.color);
                },
              },
            ]),
            n
          );
        })(Hi),
        np = new Zr(),
        rp = new gi(),
        ip = new gi(),
        ap = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            p(this, n);
            for (
              var i = op(e),
                a = new Oa(),
                o = [],
                s = [],
                l = new sa(0, 0, 1),
                u = new sa(0, 1, 0),
                c = 0;
              c < i.length;
              c++
            ) {
              var d = i[c];
              d.parent &&
                d.parent.isBone &&
                (o.push(0, 0, 0),
                o.push(0, 0, 0),
                s.push(l.r, l.g, l.b),
                s.push(u.r, u.g, u.b));
            }
            a.setAttribute("position", new ka(o, 3)),
              a.setAttribute("color", new ka(s, 3));
            var f = new ju({
              vertexColors: !0,
              depthTest: !1,
              depthWrite: !1,
              toneMapped: !1,
              transparent: !0,
            });
            return (
              ((r = t.call(this, a, f)).isSkeletonHelper = !0),
              (r.type = "SkeletonHelper"),
              (r.root = e),
              (r.bones = i),
              (r.matrix = e.matrixWorld),
              (r.matrixAutoUpdate = !1),
              r
            );
          }
          return (
            g(n, [
              {
                key: "updateMatrixWorld",
                value: function (e) {
                  var t = this.bones,
                    r = this.geometry,
                    i = r.getAttribute("position");
                  ip.copy(this.root.matrixWorld).invert();
                  for (var a = 0, o = 0; a < t.length; a++) {
                    var s = t[a];
                    s.parent &&
                      s.parent.isBone &&
                      (rp.multiplyMatrices(ip, s.matrixWorld),
                      np.setFromMatrixPosition(rp),
                      i.setXYZ(o, np.x, np.y, np.z),
                      rp.multiplyMatrices(ip, s.parent.matrixWorld),
                      np.setFromMatrixPosition(rp),
                      i.setXYZ(o + 1, np.x, np.y, np.z),
                      (o += 2));
                  }
                  (r.getAttribute("position").needsUpdate = !0),
                    L(_(n.prototype), "updateMatrixWorld", this).call(this, e);
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.geometry.dispose(), this.material.dispose();
                },
              },
            ]),
            n
          );
        })(tc);
      function op(e) {
        var t = [];
        !0 === e.isBone && t.push(e);
        for (var n = 0; n < e.children.length; n++)
          t.push.apply(t, op(e.children[n]));
        return t;
      }
      var sp = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i) {
            var a;
            p(this, n);
            var o = new Pd(r, 4, 2),
              s = new ua({ wireframe: !0, fog: !1, toneMapped: !1 });
            return (
              ((a = t.call(this, o, s)).light = e),
              (a.color = i),
              (a.type = "PointLightHelper"),
              (a.matrix = a.light.matrixWorld),
              (a.matrixAutoUpdate = !1),
              a.update(),
              a
            );
          }
          return (
            g(n, [
              {
                key: "dispose",
                value: function () {
                  this.geometry.dispose(), this.material.dispose();
                },
              },
              {
                key: "update",
                value: function () {
                  this.light.updateWorldMatrix(!0, !1),
                    void 0 !== this.color
                      ? this.material.color.set(this.color)
                      : this.material.color.copy(this.light.color);
                },
              },
            ]),
            n
          );
        })(Qa),
        lp = new Zr(),
        up = new sa(),
        cp = new sa(),
        dp = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i) {
            var a;
            p(this, n),
              ((a = t.call(this)).light = e),
              (a.matrix = e.matrixWorld),
              (a.matrixAutoUpdate = !1),
              (a.color = i),
              (a.type = "HemisphereLightHelper");
            var o = new Td(r);
            o.rotateY(0.5 * Math.PI),
              (a.material = new ua({ wireframe: !0, fog: !1, toneMapped: !1 })),
              void 0 === a.color && (a.material.vertexColors = !0);
            var s = o.getAttribute("position"),
              l = new Float32Array(3 * s.count);
            return (
              o.setAttribute("color", new ga(l, 3)),
              a.add(new Qa(o, a.material)),
              a.update(),
              a
            );
          }
          return (
            g(n, [
              {
                key: "dispose",
                value: function () {
                  this.children[0].geometry.dispose(),
                    this.children[0].material.dispose();
                },
              },
              {
                key: "update",
                value: function () {
                  var e = this.children[0];
                  if (void 0 !== this.color)
                    this.material.color.set(this.color);
                  else {
                    var t = e.geometry.getAttribute("color");
                    up.copy(this.light.color), cp.copy(this.light.groundColor);
                    for (var n = 0, r = t.count; n < r; n++) {
                      var i = n < r / 2 ? up : cp;
                      t.setXYZ(n, i.r, i.g, i.b);
                    }
                    t.needsUpdate = !0;
                  }
                  this.light.updateWorldMatrix(!0, !1),
                    e.lookAt(
                      lp.setFromMatrixPosition(this.light.matrixWorld).negate()
                    );
                },
              },
            ]),
            n
          );
        })(Hi),
        fp = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 10,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 10,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 4473924,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 8947848;
            p(this, n), (a = new sa(a)), (o = new sa(o));
            for (
              var s = i / 2,
                l = r / i,
                u = r / 2,
                c = [],
                d = [],
                f = 0,
                h = 0,
                v = -u;
              f <= i;
              f++, v += l
            ) {
              c.push(-u, 0, v, u, 0, v), c.push(v, 0, -u, v, 0, u);
              var m = f === s ? a : o;
              m.toArray(d, h),
                (h += 3),
                m.toArray(d, h),
                (h += 3),
                m.toArray(d, h),
                (h += 3),
                m.toArray(d, h),
                (h += 3);
            }
            var g = new Oa();
            g.setAttribute("position", new ka(c, 3)),
              g.setAttribute("color", new ka(d, 3));
            var y = new ju({ vertexColors: !0, toneMapped: !1 });
            return ((e = t.call(this, g, y)).type = "GridHelper"), e;
          }
          return (
            g(n, [
              {
                key: "dispose",
                value: function () {
                  this.geometry.dispose(), this.material.dispose();
                },
              },
            ]),
            n
          );
        })(tc),
        hp = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 10,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 16,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 8,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 64,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 4473924,
              l =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : 8947848;
            p(this, n), (s = new sa(s)), (l = new sa(l));
            var u = [],
              c = [];
            if (i > 1)
              for (var d = 0; d < i; d++) {
                var f = (d / i) * (2 * Math.PI),
                  h = Math.sin(f) * r,
                  v = Math.cos(f) * r;
                u.push(0, 0, 0), u.push(h, 0, v);
                var m = 1 & d ? s : l;
                c.push(m.r, m.g, m.b), c.push(m.r, m.g, m.b);
              }
            for (var g = 0; g < a; g++)
              for (
                var y = 1 & g ? s : l, b = r - (r / a) * g, _ = 0;
                _ < o;
                _++
              ) {
                var x = (_ / o) * (2 * Math.PI),
                  S = Math.sin(x) * b,
                  w = Math.cos(x) * b;
                u.push(S, 0, w),
                  c.push(y.r, y.g, y.b),
                  (x = ((_ + 1) / o) * (2 * Math.PI)),
                  (S = Math.sin(x) * b),
                  (w = Math.cos(x) * b),
                  u.push(S, 0, w),
                  c.push(y.r, y.g, y.b);
              }
            var M = new Oa();
            M.setAttribute("position", new ka(u, 3)),
              M.setAttribute("color", new ka(c, 3));
            var E = new ju({ vertexColors: !0, toneMapped: !1 });
            return ((e = t.call(this, M, E)).type = "PolarGridHelper"), e;
          }
          return (
            g(n, [
              {
                key: "dispose",
                value: function () {
                  this.geometry.dispose(), this.material.dispose();
                },
              },
            ]),
            n
          );
        })(tc),
        pp = new Zr(),
        vp = new Zr(),
        mp = new Zr(),
        gp = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i) {
            var a;
            p(this, n),
              ((a = t.call(this)).light = e),
              (a.matrix = e.matrixWorld),
              (a.matrixAutoUpdate = !1),
              (a.color = i),
              (a.type = "DirectionalLightHelper"),
              void 0 === r && (r = 1);
            var o = new Oa();
            o.setAttribute(
              "position",
              new ka([-r, r, 0, r, r, 0, r, -r, 0, -r, -r, 0, -r, r, 0], 3)
            );
            var s = new ju({ fog: !1, toneMapped: !1 });
            return (
              (a.lightPlane = new Ju(o, s)),
              a.add(a.lightPlane),
              (o = new Oa()).setAttribute(
                "position",
                new ka([0, 0, 0, 0, 0, 1], 3)
              ),
              (a.targetLine = new Ju(o, s)),
              a.add(a.targetLine),
              a.update(),
              a
            );
          }
          return (
            g(n, [
              {
                key: "dispose",
                value: function () {
                  this.lightPlane.geometry.dispose(),
                    this.lightPlane.material.dispose(),
                    this.targetLine.geometry.dispose(),
                    this.targetLine.material.dispose();
                },
              },
              {
                key: "update",
                value: function () {
                  this.light.updateWorldMatrix(!0, !1),
                    this.light.target.updateWorldMatrix(!0, !1),
                    pp.setFromMatrixPosition(this.light.matrixWorld),
                    vp.setFromMatrixPosition(this.light.target.matrixWorld),
                    mp.subVectors(vp, pp),
                    this.lightPlane.lookAt(vp),
                    void 0 !== this.color
                      ? (this.lightPlane.material.color.set(this.color),
                        this.targetLine.material.color.set(this.color))
                      : (this.lightPlane.material.color.copy(this.light.color),
                        this.targetLine.material.color.copy(this.light.color)),
                    this.targetLine.lookAt(vp),
                    (this.targetLine.scale.z = mp.length());
                },
              },
            ]),
            n
          );
        })(Hi),
        yp = new Zr(),
        bp = new so(),
        _p = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            p(this, n);
            var i = new Oa(),
              a = new ju({ color: 16777215, vertexColors: !0, toneMapped: !1 }),
              o = [],
              s = [],
              l = {};
            function u(e, t) {
              c(e), c(t);
            }
            function c(e) {
              o.push(0, 0, 0),
                s.push(0, 0, 0),
                void 0 === l[e] && (l[e] = []),
                l[e].push(o.length / 3 - 1);
            }
            u("n1", "n2"),
              u("n2", "n4"),
              u("n4", "n3"),
              u("n3", "n1"),
              u("f1", "f2"),
              u("f2", "f4"),
              u("f4", "f3"),
              u("f3", "f1"),
              u("n1", "f1"),
              u("n2", "f2"),
              u("n3", "f3"),
              u("n4", "f4"),
              u("p", "n1"),
              u("p", "n2"),
              u("p", "n3"),
              u("p", "n4"),
              u("u1", "u2"),
              u("u2", "u3"),
              u("u3", "u1"),
              u("c", "t"),
              u("p", "c"),
              u("cn1", "cn2"),
              u("cn3", "cn4"),
              u("cf1", "cf2"),
              u("cf3", "cf4"),
              i.setAttribute("position", new ka(o, 3)),
              i.setAttribute("color", new ka(s, 3)),
              ((r = t.call(this, i, a)).type = "CameraHelper"),
              (r.camera = e),
              r.camera.updateProjectionMatrix &&
                r.camera.updateProjectionMatrix(),
              (r.matrix = e.matrixWorld),
              (r.matrixAutoUpdate = !1),
              (r.pointMap = l),
              r.update();
            var d = new sa(16755200),
              f = new sa(16711680),
              h = new sa(43775),
              v = new sa(16777215),
              m = new sa(3355443);
            return r.setColors(d, f, h, v, m), r;
          }
          return (
            g(n, [
              {
                key: "setColors",
                value: function (e, t, n, r, i) {
                  var a = this.geometry.getAttribute("color");
                  a.setXYZ(0, e.r, e.g, e.b),
                    a.setXYZ(1, e.r, e.g, e.b),
                    a.setXYZ(2, e.r, e.g, e.b),
                    a.setXYZ(3, e.r, e.g, e.b),
                    a.setXYZ(4, e.r, e.g, e.b),
                    a.setXYZ(5, e.r, e.g, e.b),
                    a.setXYZ(6, e.r, e.g, e.b),
                    a.setXYZ(7, e.r, e.g, e.b),
                    a.setXYZ(8, e.r, e.g, e.b),
                    a.setXYZ(9, e.r, e.g, e.b),
                    a.setXYZ(10, e.r, e.g, e.b),
                    a.setXYZ(11, e.r, e.g, e.b),
                    a.setXYZ(12, e.r, e.g, e.b),
                    a.setXYZ(13, e.r, e.g, e.b),
                    a.setXYZ(14, e.r, e.g, e.b),
                    a.setXYZ(15, e.r, e.g, e.b),
                    a.setXYZ(16, e.r, e.g, e.b),
                    a.setXYZ(17, e.r, e.g, e.b),
                    a.setXYZ(18, e.r, e.g, e.b),
                    a.setXYZ(19, e.r, e.g, e.b),
                    a.setXYZ(20, e.r, e.g, e.b),
                    a.setXYZ(21, e.r, e.g, e.b),
                    a.setXYZ(22, e.r, e.g, e.b),
                    a.setXYZ(23, e.r, e.g, e.b),
                    a.setXYZ(24, t.r, t.g, t.b),
                    a.setXYZ(25, t.r, t.g, t.b),
                    a.setXYZ(26, t.r, t.g, t.b),
                    a.setXYZ(27, t.r, t.g, t.b),
                    a.setXYZ(28, t.r, t.g, t.b),
                    a.setXYZ(29, t.r, t.g, t.b),
                    a.setXYZ(30, t.r, t.g, t.b),
                    a.setXYZ(31, t.r, t.g, t.b),
                    a.setXYZ(32, n.r, n.g, n.b),
                    a.setXYZ(33, n.r, n.g, n.b),
                    a.setXYZ(34, n.r, n.g, n.b),
                    a.setXYZ(35, n.r, n.g, n.b),
                    a.setXYZ(36, n.r, n.g, n.b),
                    a.setXYZ(37, n.r, n.g, n.b),
                    a.setXYZ(38, r.r, r.g, r.b),
                    a.setXYZ(39, r.r, r.g, r.b),
                    a.setXYZ(40, i.r, i.g, i.b),
                    a.setXYZ(41, i.r, i.g, i.b),
                    a.setXYZ(42, i.r, i.g, i.b),
                    a.setXYZ(43, i.r, i.g, i.b),
                    a.setXYZ(44, i.r, i.g, i.b),
                    a.setXYZ(45, i.r, i.g, i.b),
                    a.setXYZ(46, i.r, i.g, i.b),
                    a.setXYZ(47, i.r, i.g, i.b),
                    a.setXYZ(48, i.r, i.g, i.b),
                    a.setXYZ(49, i.r, i.g, i.b),
                    (a.needsUpdate = !0);
                },
              },
              {
                key: "update",
                value: function () {
                  var e = this.geometry,
                    t = this.pointMap;
                  bp.projectionMatrixInverse.copy(
                    this.camera.projectionMatrixInverse
                  ),
                    xp("c", t, e, bp, 0, 0, -1),
                    xp("t", t, e, bp, 0, 0, 1),
                    xp("n1", t, e, bp, -1, -1, -1),
                    xp("n2", t, e, bp, 1, -1, -1),
                    xp("n3", t, e, bp, -1, 1, -1),
                    xp("n4", t, e, bp, 1, 1, -1),
                    xp("f1", t, e, bp, -1, -1, 1),
                    xp("f2", t, e, bp, 1, -1, 1),
                    xp("f3", t, e, bp, -1, 1, 1),
                    xp("f4", t, e, bp, 1, 1, 1),
                    xp("u1", t, e, bp, 0.7, 1.1, -1),
                    xp("u2", t, e, bp, -0.7, 1.1, -1),
                    xp("u3", t, e, bp, 0, 2, -1),
                    xp("cf1", t, e, bp, -1, 0, 1),
                    xp("cf2", t, e, bp, 1, 0, 1),
                    xp("cf3", t, e, bp, 0, -1, 1),
                    xp("cf4", t, e, bp, 0, 1, 1),
                    xp("cn1", t, e, bp, -1, 0, -1),
                    xp("cn2", t, e, bp, 1, 0, -1),
                    xp("cn3", t, e, bp, 0, -1, -1),
                    xp("cn4", t, e, bp, 0, 1, -1),
                    (e.getAttribute("position").needsUpdate = !0);
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.geometry.dispose(), this.material.dispose();
                },
              },
            ]),
            n
          );
        })(tc);
      function xp(e, t, n, r, i, a, o) {
        yp.set(i, a, o).unproject(r);
        var s = t[e];
        if (void 0 !== s)
          for (
            var l = n.getAttribute("position"), u = 0, c = s.length;
            u < c;
            u++
          )
            l.setXYZ(s[u], yp.x, yp.y, yp.z);
      }
      var Sp,
        wp,
        Mp = new Gr(),
        Ep = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 16776960;
            p(this, n);
            var a = new Uint16Array([
                0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2,
                6, 3, 7,
              ]),
              o = new Float32Array(24),
              s = new Oa();
            return (
              s.setIndex(new ga(a, 1)),
              s.setAttribute("position", new ga(o, 3)),
              ((r = t.call(
                this,
                s,
                new ju({ color: i, toneMapped: !1 })
              )).object = e),
              (r.type = "BoxHelper"),
              (r.matrixAutoUpdate = !1),
              r.update(),
              r
            );
          }
          return (
            g(n, [
              {
                key: "update",
                value: function (e) {
                  if (
                    (void 0 !== e &&
                      console.warn(
                        "THREE.BoxHelper: .update() has no longer arguments."
                      ),
                    void 0 !== this.object && Mp.setFromObject(this.object),
                    !Mp.isEmpty())
                  ) {
                    var t = Mp.min,
                      n = Mp.max,
                      r = this.geometry.attributes.position,
                      i = r.array;
                    (i[0] = n.x),
                      (i[1] = n.y),
                      (i[2] = n.z),
                      (i[3] = t.x),
                      (i[4] = n.y),
                      (i[5] = n.z),
                      (i[6] = t.x),
                      (i[7] = t.y),
                      (i[8] = n.z),
                      (i[9] = n.x),
                      (i[10] = t.y),
                      (i[11] = n.z),
                      (i[12] = n.x),
                      (i[13] = n.y),
                      (i[14] = t.z),
                      (i[15] = t.x),
                      (i[16] = n.y),
                      (i[17] = t.z),
                      (i[18] = t.x),
                      (i[19] = t.y),
                      (i[20] = t.z),
                      (i[21] = n.x),
                      (i[22] = t.y),
                      (i[23] = t.z),
                      (r.needsUpdate = !0),
                      this.geometry.computeBoundingSphere();
                  }
                },
              },
              {
                key: "setFromObject",
                value: function (e) {
                  return (this.object = e), this.update(), this;
                },
              },
              {
                key: "copy",
                value: function (e, t) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e, t),
                    (this.object = e.object),
                    this
                  );
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.geometry.dispose(), this.material.dispose();
                },
              },
            ]),
            n
          );
        })(tc),
        kp = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 16776960;
            p(this, n);
            var a = new Uint16Array([
                0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2,
                6, 3, 7,
              ]),
              o = new Oa();
            return (
              o.setIndex(new ga(a, 1)),
              o.setAttribute(
                "position",
                new ka(
                  [
                    1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1,
                    -1, -1, -1, 1, -1, -1,
                  ],
                  3
                )
              ),
              ((r = t.call(this, o, new ju({ color: i, toneMapped: !1 }))).box =
                e),
              (r.type = "Box3Helper"),
              r.geometry.computeBoundingSphere(),
              r
            );
          }
          return (
            g(n, [
              {
                key: "updateMatrixWorld",
                value: function (e) {
                  var t = this.box;
                  t.isEmpty() ||
                    (t.getCenter(this.position),
                    t.getSize(this.scale),
                    this.scale.multiplyScalar(0.5),
                    L(_(n.prototype), "updateMatrixWorld", this).call(this, e));
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.geometry.dispose(), this.material.dispose();
                },
              },
            ]),
            n
          );
        })(tc),
        Tp = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 16776960;
            p(this, n);
            var o = a,
              s = new Oa();
            s.setAttribute(
              "position",
              new ka(
                [
                  1, -1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, -1, 1, 0, -1, -1, 0,
                  1, -1, 0, 1, 1, 0,
                ],
                3
              )
            ),
              s.computeBoundingSphere(),
              ((r = t.call(
                this,
                s,
                new ju({ color: o, toneMapped: !1 })
              )).type = "PlaneHelper"),
              (r.plane = e),
              (r.size = i);
            var l = new Oa();
            return (
              l.setAttribute(
                "position",
                new ka(
                  [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, -1, 0],
                  3
                )
              ),
              l.computeBoundingSphere(),
              r.add(
                new Qa(
                  l,
                  new ua({
                    color: o,
                    opacity: 0.2,
                    transparent: !0,
                    depthWrite: !1,
                    toneMapped: !1,
                  })
                )
              ),
              r
            );
          }
          return (
            g(n, [
              {
                key: "updateMatrixWorld",
                value: function (e) {
                  this.position.set(0, 0, 0),
                    this.scale.set(0.5 * this.size, 0.5 * this.size, 1),
                    this.lookAt(this.plane.normal),
                    this.translateZ(-this.plane.constant),
                    L(_(n.prototype), "updateMatrixWorld", this).call(this, e);
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.geometry.dispose(),
                    this.material.dispose(),
                    this.children[0].geometry.dispose(),
                    this.children[0].material.dispose();
                },
              },
            ]),
            n
          );
        })(Ju),
        Ap = new Zr(),
        Cp = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Zr(0, 0, 1),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new Zr(0, 0, 0),
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 16776960,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 0.2 * a,
              l =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : 0.2 * s;
            return (
              p(this, n),
              ((e = t.call(this)).type = "ArrowHelper"),
              void 0 === Sp &&
                ((Sp = new Oa()).setAttribute(
                  "position",
                  new ka([0, 0, 0, 0, 1, 0], 3)
                ),
                (wp = new Bc(0, 0.5, 1, 5, 1)).translate(0, -0.5, 0)),
              e.position.copy(i),
              (e.line = new Ju(Sp, new ju({ color: o, toneMapped: !1 }))),
              (e.line.matrixAutoUpdate = !1),
              e.add(e.line),
              (e.cone = new Qa(wp, new ua({ color: o, toneMapped: !1 }))),
              (e.cone.matrixAutoUpdate = !1),
              e.add(e.cone),
              e.setDirection(r),
              e.setLength(a, s, l),
              e
            );
          }
          return (
            g(n, [
              {
                key: "setDirection",
                value: function (e) {
                  if (e.y > 0.99999) this.quaternion.set(0, 0, 0, 1);
                  else if (e.y < -0.99999) this.quaternion.set(1, 0, 0, 0);
                  else {
                    Ap.set(e.z, 0, -e.x).normalize();
                    var t = Math.acos(e.y);
                    this.quaternion.setFromAxisAngle(Ap, t);
                  }
                },
              },
              {
                key: "setLength",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0.2 * e,
                    n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : 0.2 * t;
                  this.line.scale.set(1, Math.max(1e-4, e - t), 1),
                    this.line.updateMatrix(),
                    this.cone.scale.set(n, t, n),
                    (this.cone.position.y = e),
                    this.cone.updateMatrix();
                },
              },
              {
                key: "setColor",
                value: function (e) {
                  this.line.material.color.set(e),
                    this.cone.material.color.set(e);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    L(_(n.prototype), "copy", this).call(this, e, !1),
                    this.line.copy(e.line),
                    this.cone.copy(e.cone),
                    this
                  );
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.line.geometry.dispose(),
                    this.line.material.dispose(),
                    this.cone.geometry.dispose(),
                    this.cone.material.dispose();
                },
              },
            ]),
            n
          );
        })(Hi),
        Pp = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1;
            p(this, n);
            var i = [0, 0, 0, r, 0, 0, 0, 0, 0, 0, r, 0, 0, 0, 0, 0, 0, r],
              a = new Oa();
            a.setAttribute("position", new ka(i, 3)),
              a.setAttribute(
                "color",
                new ka(
                  [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1],
                  3
                )
              );
            var o = new ju({ vertexColors: !0, toneMapped: !1 });
            return ((e = t.call(this, a, o)).type = "AxesHelper"), e;
          }
          return (
            g(n, [
              {
                key: "setColors",
                value: function (e, t, n) {
                  var r = new sa(),
                    i = this.geometry.attributes.color.array;
                  return (
                    r.set(e),
                    r.toArray(i, 0),
                    r.toArray(i, 3),
                    r.set(t),
                    r.toArray(i, 6),
                    r.toArray(i, 9),
                    r.set(n),
                    r.toArray(i, 12),
                    r.toArray(i, 15),
                    (this.geometry.attributes.color.needsUpdate = !0),
                    this
                  );
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.geometry.dispose(), this.material.dispose();
                },
              },
            ]),
            n
          );
        })(tc),
        Rp = (function () {
          function e() {
            p(this, e),
              (this.type = "ShapePath"),
              (this.color = new sa()),
              (this.subPaths = []),
              (this.currentPath = null);
          }
          return (
            g(e, [
              {
                key: "moveTo",
                value: function (e, t) {
                  return (
                    (this.currentPath = new Dc()),
                    this.subPaths.push(this.currentPath),
                    this.currentPath.moveTo(e, t),
                    this
                  );
                },
              },
              {
                key: "lineTo",
                value: function (e, t) {
                  return this.currentPath.lineTo(e, t), this;
                },
              },
              {
                key: "quadraticCurveTo",
                value: function (e, t, n, r) {
                  return this.currentPath.quadraticCurveTo(e, t, n, r), this;
                },
              },
              {
                key: "bezierCurveTo",
                value: function (e, t, n, r, i, a) {
                  return this.currentPath.bezierCurveTo(e, t, n, r, i, a), this;
                },
              },
              {
                key: "splineThru",
                value: function (e) {
                  return this.currentPath.splineThru(e), this;
                },
              },
              {
                key: "toShapes",
                value: function (e) {
                  function t(e, t) {
                    for (
                      var n = t.length, r = !1, i = n - 1, a = 0;
                      a < n;
                      i = a++
                    ) {
                      var o = t[i],
                        s = t[a],
                        l = s.x - o.x,
                        u = s.y - o.y;
                      if (Math.abs(u) > Number.EPSILON) {
                        if (
                          (u < 0 &&
                            ((o = t[a]), (l = -l), (s = t[i]), (u = -u)),
                          e.y < o.y || e.y > s.y)
                        )
                          continue;
                        if (e.y === o.y) {
                          if (e.x === o.x) return !0;
                        } else {
                          var c = u * (e.x - o.x) - l * (e.y - o.y);
                          if (0 === c) return !0;
                          if (c < 0) continue;
                          r = !r;
                        }
                      } else {
                        if (e.y !== o.y) continue;
                        if (
                          (s.x <= e.x && e.x <= o.x) ||
                          (o.x <= e.x && e.x <= s.x)
                        )
                          return !0;
                      }
                    }
                    return r;
                  }
                  var n,
                    r,
                    i,
                    a = xd.isClockWise,
                    o = this.subPaths;
                  if (0 === o.length) return [];
                  var s = [];
                  if (1 === o.length)
                    return (
                      (r = o[0]),
                      ((i = new Yc()).curves = r.curves),
                      s.push(i),
                      s
                    );
                  var l = !a(o[0].getPoints());
                  l = e ? !l : l;
                  var u,
                    c,
                    d = [],
                    f = [],
                    h = [],
                    p = 0;
                  (f[p] = void 0), (h[p] = []);
                  for (var v = 0, m = o.length; v < m; v++)
                    (n = a((u = (r = o[v]).getPoints()))),
                      (n = e ? !n : n)
                        ? (!l && f[p] && p++,
                          (f[p] = { s: new Yc(), p: u }),
                          (f[p].s.curves = r.curves),
                          l && p++,
                          (h[p] = []))
                        : h[p].push({ h: r, p: u[0] });
                  if (!f[0])
                    return (function (e) {
                      for (var t = [], n = 0, r = e.length; n < r; n++) {
                        var i = e[n],
                          a = new Yc();
                        (a.curves = i.curves), t.push(a);
                      }
                      return t;
                    })(o);
                  if (f.length > 1) {
                    for (var g = !1, y = 0, b = 0, _ = f.length; b < _; b++)
                      d[b] = [];
                    for (var x = 0, S = f.length; x < S; x++)
                      for (var w = h[x], M = 0; M < w.length; M++) {
                        for (var E = w[M], k = !0, T = 0; T < f.length; T++)
                          t(E.p, f[T].p) &&
                            (x !== T && y++,
                            k ? ((k = !1), d[T].push(E)) : (g = !0));
                        k && d[x].push(E);
                      }
                    y > 0 && !1 === g && (h = d);
                  }
                  for (var A = 0, C = f.length; A < C; A++) {
                    (i = f[A].s), s.push(i);
                    for (var P = 0, R = (c = h[A]).length; P < R; P++)
                      i.holes.push(c[P].h);
                  }
                  return s;
                },
              },
            ]),
            e
          );
        })(),
        Lp = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i, a, o, s) {
            return (
              p(this, n),
              console.warn(
                "THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry."
              ),
              t.call(this, e, r, i, a, o, s)
            );
          }
          return g(n);
        })(to),
        Ip = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i, a) {
            return (
              p(this, n),
              console.warn(
                "THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry."
              ),
              t.call(this, e, r, i, a)
            );
          }
          return g(n);
        })(zc),
        Np = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i, a) {
            return (
              p(this, n),
              console.warn(
                "THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry."
              ),
              t.call(this, e, r, i, a)
            );
          }
          return g(n);
        })(Fc),
        Op = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i, a, o, s, l) {
            return (
              p(this, n),
              console.warn(
                "THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry."
              ),
              t.call(this, e, r, i, a, o, s, l)
            );
          }
          return g(n);
        })(Zc),
        Dp = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i, a, o, s, l, u) {
            return (
              p(this, n),
              console.warn(
                "THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry."
              ),
              t.call(this, e, r, i, a, o, s, l, u)
            );
          }
          return g(n);
        })(Bc),
        Up = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r) {
            return (
              p(this, n),
              console.warn(
                "THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry."
              ),
              t.call(this, e, r)
            );
          }
          return g(n);
        })(Vc),
        zp = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r) {
            return (
              p(this, n),
              console.warn(
                "THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry."
              ),
              t.call(this, e, r)
            );
          }
          return g(n);
        })(Md),
        Fp = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r) {
            return (
              p(this, n),
              console.warn(
                "THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry."
              ),
              t.call(this, e, r)
            );
          }
          return g(n);
        })(kd),
        Bp = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i, a) {
            return (
              p(this, n),
              console.warn(
                "THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry."
              ),
              t.call(this, e, r, i, a)
            );
          }
          return g(n);
        })(Uc),
        Zp = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r) {
            return (
              p(this, n),
              console.warn(
                "THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry."
              ),
              t.call(this, e, r)
            );
          }
          return g(n);
        })(Td),
        Hp = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i, a) {
            return (
              p(this, n),
              console.warn(
                "THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry."
              ),
              t.call(this, e, r, i, a)
            );
          }
          return g(n);
        })(wo),
        Vp = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i, a) {
            return (
              p(this, n),
              console.warn(
                "THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry."
              ),
              t.call(this, e, r, i, a)
            );
          }
          return g(n);
        })(Hc),
        Gp = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i, a, o, s) {
            return (
              p(this, n),
              console.warn(
                "THREE.RingBufferGeometry has been renamed to THREE.RingGeometry."
              ),
              t.call(this, e, r, i, a, o, s)
            );
          }
          return g(n);
        })(Ad),
        Wp = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r) {
            return (
              p(this, n),
              console.warn(
                "THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry."
              ),
              t.call(this, e, r)
            );
          }
          return g(n);
        })(Cd),
        jp = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i, a, o, s, l) {
            return (
              p(this, n),
              console.warn(
                "THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry."
              ),
              t.call(this, e, r, i, a, o, s, l)
            );
          }
          return g(n);
        })(Pd),
        Xp = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r) {
            return (
              p(this, n),
              console.warn(
                "THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry."
              ),
              t.call(this, e, r)
            );
          }
          return g(n);
        })(Rd),
        qp = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i, a, o) {
            return (
              p(this, n),
              console.warn(
                "THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry."
              ),
              t.call(this, e, r, i, a, o)
            );
          }
          return g(n);
        })(Ld),
        Yp = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i, a, o, s) {
            return (
              p(this, n),
              console.warn(
                "THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry."
              ),
              t.call(this, e, r, i, a, o, s)
            );
          }
          return g(n);
        })(Id),
        Kp = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r, i, a, o) {
            return (
              p(this, n),
              console.warn(
                "THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry."
              ),
              t.call(this, e, r, i, a, o)
            );
          }
          return g(n);
        })(Nd);
      "undefined" !== typeof __THREE_DEVTOOLS__ &&
        __THREE_DEVTOOLS__.dispatchEvent(
          new CustomEvent("register", { detail: { revision: N } })
        ),
        "undefined" !== typeof window &&
          (window.__THREE__
            ? console.warn(
                "WARNING: Multiple instances of Three.js being imported."
              )
            : (window.__THREE__ = N));
      var $p = n(4585);
      function Jp(e) {
        var t,
          n = new Set(),
          r = function (e, r) {
            var i = "function" === typeof e ? e(t) : e;
            if (i !== t) {
              var a = t;
              (t = r ? i : Object.assign({}, t, i)),
                n.forEach(function (e) {
                  return e(t, a);
                });
            }
          },
          i = function () {
            return t;
          },
          a = {
            setState: r,
            getState: i,
            subscribe: function (e, r, a) {
              return r || a
                ? (function (e) {
                    var r =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : i,
                      a =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : Object.is;
                    console.warn(
                      "[DEPRECATED] Please use `subscribeWithSelector` middleware"
                    );
                    var o = r(t);
                    function s() {
                      var n = r(t);
                      if (!a(o, n)) {
                        var i = o;
                        e((o = n), i);
                      }
                    }
                    return (
                      n.add(s),
                      function () {
                        return n.delete(s);
                      }
                    );
                  })(e, r, a)
                : (n.add(e),
                  function () {
                    return n.delete(e);
                  });
            },
            destroy: function () {
              return n.clear();
            },
          };
        return (t = e(r, i, a)), a;
      }
      var Qp =
        "undefined" === typeof window ||
        !window.navigator ||
        /ServerSideRendering|^Deno\//.test(window.navigator.userAgent)
          ? a.useEffect
          : a.useLayoutEffect;
      function ev(e) {
        var t = "function" === typeof e ? Jp(e) : e,
          n = function () {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : t.getState,
              r =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : Object.is,
              o = (0, a.useReducer)(function (e) {
                return e + 1;
              }, 0),
              s = (0, i.Z)(o, 2)[1],
              l = t.getState(),
              u = (0, a.useRef)(l),
              c = (0, a.useRef)(n),
              d = (0, a.useRef)(r),
              f = (0, a.useRef)(!1),
              h = (0, a.useRef)();
            void 0 === h.current && (h.current = n(l));
            var p = !1;
            (u.current !== l ||
              c.current !== n ||
              d.current !== r ||
              f.current) &&
              ((e = n(l)), (p = !r(h.current, e))),
              Qp(function () {
                p && (h.current = e),
                  (u.current = l),
                  (c.current = n),
                  (d.current = r),
                  (f.current = !1);
              });
            var v = (0, a.useRef)(l);
            Qp(function () {
              var e = function () {
                  try {
                    var e = t.getState(),
                      n = c.current(e);
                    d.current(h.current, n) ||
                      ((u.current = e), (h.current = n), s());
                  } catch (r) {
                    (f.current = !0), s();
                  }
                },
                n = t.subscribe(e);
              return t.getState() !== v.current && e(), n;
            }, []);
            var m = p ? e : h.current;
            return (0, a.useDebugValue)(m), m;
          };
        return (
          Object.assign(n, t),
          (n[Symbol.iterator] = function () {
            console.warn(
              "[useStore, api] = create() is deprecated and will be removed in v4"
            );
            var e = [n, t];
            return {
              next: function () {
                var t = e.length <= 0;
                return { value: e.shift(), done: t };
              },
            };
          }),
          n
        );
      }
      var tv = n(258),
        nv = n.n(tv),
        rv = n(4545);
      function iv(e, t) {
        var n =
          arguments.length > 2 && void 0 !== arguments[2]
            ? arguments[2]
            : function (e, t) {
                return e === t;
              };
        if (e === t) return !0;
        if (!e || !t) return !1;
        var r = e.length;
        if (t.length !== r) return !1;
        for (var i = 0; i < r; i++) if (!n(e[i], t[i])) return !1;
        return !0;
      }
      var av = [];
      function ov(e, t) {
        for (
          var n =
              arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
            i =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : {},
            a = 0,
            o = av;
          a < o.length;
          a++
        ) {
          var s = o[a];
          if (iv(t, s.keys, s.equal)) {
            if (n) return;
            if (Object.prototype.hasOwnProperty.call(s, "error")) throw s.error;
            if (Object.prototype.hasOwnProperty.call(s, "response"))
              return s.response;
            if (!n) throw s.promise;
          }
        }
        var l = {
          keys: t,
          equal: i.equal,
          promise: e
            .apply(void 0, (0, r.Z)(t))
            .then(function (e) {
              return (l.response = e);
            })
            .then(function () {
              i.lifespan &&
                i.lifespan > 0 &&
                setTimeout(function () {
                  var e = av.indexOf(l);
                  -1 !== e && av.splice(e, 1);
                }, i.lifespan);
            })
            .catch(function (e) {
              return (l.error = e);
            }),
        };
        if ((av.push(l), !n)) throw l.promise;
      }
      var sv,
        lv,
        uv = function (e, t, n) {
          return ov(e, t, !1, n);
        },
        cv = ["args", "attach"],
        dv = ["args", "children"],
        fv = ["args", "children"],
        hv = ["children", "key", "ref"],
        pv = ["children", "key", "ref"],
        vv = ["params"],
        mv = {};
      var gv = function (e) {
          return "colorSpace" in e || "outputColorSpace" in e;
        },
        yv = function () {
          var e;
          return null != (e = mv.ColorManagement) ? e : null;
        },
        bv = function (e) {
          return e && e.isOrthographicCamera;
        },
        _v =
          "undefined" !== typeof window &&
          ((null != (sv = window.document) && sv.createElement) ||
            "ReactNative" ===
              (null == (lv = window.navigator) ? void 0 : lv.product))
            ? a.useLayoutEffect
            : a.useEffect;
      function xv(e) {
        var t = a.useRef(e);
        return (
          _v(
            function () {
              t.current = e;
            },
            [e]
          ),
          t
        );
      }
      function Sv(e) {
        var t = e.set;
        return (
          _v(
            function () {
              return (
                t(
                  new Promise(function () {
                    return null;
                  })
                ),
                function () {
                  return t(!1);
                }
              );
            },
            [t]
          ),
          null
        );
      }
      var wv = (function (e) {
        b(n, e);
        var t = k(n);
        function n() {
          var e;
          p(this, n);
          for (var r = arguments.length, i = new Array(r), a = 0; a < r; a++)
            i[a] = arguments[a];
          return (
            ((e = t.call.apply(t, [this].concat(i))).state = { error: !1 }), e
          );
        }
        return (
          g(n, [
            {
              key: "componentDidCatch",
              value: function (e) {
                this.props.set(e);
              },
            },
            {
              key: "render",
              value: function () {
                return this.state.error ? null : this.props.children;
              },
            },
          ]),
          n
        );
      })(a.Component);
      wv.getDerivedStateFromError = function () {
        return { error: !0 };
      };
      var Mv = "__default",
        Ev = new Map(),
        kv = function (e) {
          return e && !!e.memoized && !!e.changes;
        };
      function Tv(e) {
        var t,
          n =
            "undefined" !== typeof window
              ? null != (t = window.devicePixelRatio)
                ? t
                : 2
              : 1;
        return Array.isArray(e) ? Math.min(Math.max(e[0], n), e[1]) : e;
      }
      var Av = function (e) {
          var t;
          return null == (t = e.__r3f) ? void 0 : t.root.getState();
        },
        Cv = {
          obj: function (e) {
            return e === Object(e) && !Cv.arr(e) && "function" !== typeof e;
          },
          fun: function (e) {
            return "function" === typeof e;
          },
          str: function (e) {
            return "string" === typeof e;
          },
          num: function (e) {
            return "number" === typeof e;
          },
          boo: function (e) {
            return "boolean" === typeof e;
          },
          und: function (e) {
            return void 0 === e;
          },
          arr: function (e) {
            return Array.isArray(e);
          },
          equ: function (e, t) {
            var n =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : {},
              r = n.arrays,
              i = void 0 === r ? "shallow" : r,
              a = n.objects,
              o = void 0 === a ? "reference" : a,
              s = n.strict,
              l = void 0 === s || s;
            if (typeof e !== typeof t || !!e !== !!t) return !1;
            if (Cv.str(e) || Cv.num(e)) return e === t;
            var u = Cv.obj(e);
            if (u && "reference" === o) return e === t;
            var c,
              d = Cv.arr(e);
            if (d && "reference" === i) return e === t;
            if ((d || u) && e === t) return !0;
            for (c in e) if (!(c in t)) return !1;
            if (u && "shallow" === i && "shallow" === o) {
              for (c in l ? t : e)
                if (!Cv.equ(e[c], t[c], { strict: l, objects: "reference" }))
                  return !1;
            } else for (c in l ? t : e) if (e[c] !== t[c]) return !1;
            if (Cv.und(c)) {
              if (d && 0 === e.length && 0 === t.length) return !0;
              if (
                u &&
                0 === Object.keys(e).length &&
                0 === Object.keys(t).length
              )
                return !0;
              if (e !== t) return !1;
            }
            return !0;
          },
        };
      function Pv(e) {
        var t = { nodes: {}, materials: {} };
        return (
          e &&
            e.traverse(function (e) {
              e.name && (t.nodes[e.name] = e),
                e.material &&
                  !t.materials[e.material.name] &&
                  (t.materials[e.material.name] = e.material);
            }),
          t
        );
      }
      function Rv(e, t) {
        var n = e;
        return (
          ((null != t && t.primitive) || !n.__r3f) &&
            (n.__r3f = (0, u.Z)(
              {
                type: "",
                root: null,
                previousAttach: null,
                memoizedProps: {},
                eventCount: 0,
                handlers: {},
                objects: [],
                parent: null,
              },
              t
            )),
          e
        );
      }
      function Lv(e, t) {
        var n = e;
        if (t.includes("-")) {
          var r = t.split("-"),
            i = r.pop();
          return (
            (n = r.reduce(function (e, t) {
              return e[t];
            }, e)),
            { target: n, key: i }
          );
        }
        return { target: n, key: t };
      }
      var Iv = /-\d+$/;
      function Nv(e, t, n) {
        if (Cv.str(n)) {
          if (Iv.test(n)) {
            var r = Lv(e, n.replace(Iv, "")),
              i = r.target,
              a = r.key;
            Array.isArray(i[a]) || (i[a] = []);
          }
          var o = Lv(e, n),
            s = o.target,
            l = o.key;
          (t.__r3f.previousAttach = s[l]), (s[l] = t);
        } else t.__r3f.previousAttach = n(e, t);
      }
      function Ov(e, t, n) {
        var r, i;
        if (Cv.str(n)) {
          var a = Lv(e, n),
            o = a.target,
            s = a.key,
            l = t.__r3f.previousAttach;
          void 0 === l ? delete o[s] : (o[s] = l);
        } else
          null == (r = t.__r3f) ||
            null == r.previousAttach ||
            r.previousAttach(e, t);
        null == (i = t.__r3f) || delete i.previousAttach;
      }
      function Dv(e, t) {
        t.children, t.key, t.ref;
        var n,
          r = s(t, hv),
          a =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
          o = (a.children, a.key, a.ref, s(a, pv)),
          l = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
          c = null != (n = null == e ? void 0 : e.__r3f) ? n : {},
          d = Object.entries(r),
          f = [];
        if (l)
          for (var h = Object.keys(o), p = 0; p < h.length; p++)
            r.hasOwnProperty(h[p]) || d.unshift([h[p], Mv + "remove"]);
        d.forEach(function (t) {
          var n,
            a = (0, i.Z)(t, 2),
            s = a[0],
            l = a[1];
          if (
            (null == (n = e.__r3f) || !n.primitive || "object" !== s) &&
            !Cv.equ(l, o[s])
          ) {
            if (/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(s))
              return f.push([s, l, !0, []]);
            var u = [];
            for (var c in (s.includes("-") && (u = s.split("-")),
            f.push([s, l, !1, u]),
            r)) {
              var d = r[c];
              c.startsWith("".concat(s, "-")) &&
                f.push([c, d, !1, c.split("-")]);
            }
          }
        });
        var v = (0, u.Z)({}, r);
        return (
          c.memoizedProps &&
            c.memoizedProps.args &&
            (v.args = c.memoizedProps.args),
          c.memoizedProps &&
            c.memoizedProps.attach &&
            (v.attach = c.memoizedProps.attach),
          { memoized: v, changes: f }
        );
      }
      function Uv(e, t) {
        var n,
          a,
          o,
          s,
          l = null != (n = e.__r3f) ? n : {},
          u = l.root,
          p =
            null !=
            (a = null == u || null == u.getState ? void 0 : u.getState())
              ? a
              : {},
          v = kv(t) ? t : Dv(e, t),
          m = v.memoized,
          g = v.changes,
          y = l.eventCount;
        e.__r3f && (e.__r3f.memoizedProps = m);
        for (var b = 0; b < g.length; b++) {
          var _ = (0, i.Z)(g[b], 4),
            x = _[0],
            S = _[1],
            w = _[2],
            M = _[3];
          if (gv(e)) {
            var E = "srgb",
              k = "srgb-linear";
            "encoding" === x
              ? ((x = "colorSpace"), (S = 3001 === S ? E : k))
              : "outputEncoding" === x &&
                ((x = "outputColorSpace"), (S = 3001 === S ? E : k));
          }
          var T = e,
            A = T[x];
          if (
            M.length &&
            ((A = M.reduce(function (e, t) {
              return e[t];
            }, e)),
            !A || !A.set)
          ) {
            var C = M.reverse(),
              P =
                ((s = C),
                (0, c.Z)(s) || (0, d.Z)(s) || (0, f.Z)(s) || (0, h.Z)()),
              R = P[0];
            (T = P.slice(1)
              .reverse()
              .reduce(function (e, t) {
                return e[t];
              }, e)),
              (x = R);
          }
          if (S === Mv + "remove")
            if (T.constructor) {
              var L = Ev.get(T.constructor);
              L || ((L = new T.constructor()), Ev.set(T.constructor, L)),
                (S = L[x]);
            } else S = 0;
          if (w)
            S ? (l.handlers[x] = S) : delete l.handlers[x],
              (l.eventCount = Object.keys(l.handlers).length);
          else if (A && A.set && (A.copy || A instanceof Ai)) {
            var I;
            if (Array.isArray(S))
              A.fromArray ? A.fromArray(S) : (I = A).set.apply(I, (0, r.Z)(S));
            else if (
              A.copy &&
              S &&
              S.constructor &&
              A.constructor === S.constructor
            )
              A.copy(S);
            else if (void 0 !== S) {
              var N = A instanceof sa;
              !N && A.setScalar
                ? A.setScalar(S)
                : A instanceof Ai && S instanceof Ai
                ? (A.mask = S.mask)
                : A.set(S),
                yv() || p.linear || !N || A.convertSRGBToLinear();
            }
          } else if (
            ((T[x] = S),
            T[x] instanceof Lr && T[x].format === dt && T[x].type === Qe)
          ) {
            var O = T[x];
            gv(O) && gv(p.gl)
              ? (O.colorSpace = p.gl.outputColorSpace)
              : (O.encoding = p.gl.outputEncoding);
          }
          zv(e);
        }
        if (l.parent && p.internal && e.raycast && y !== l.eventCount) {
          var D = p.internal.interaction.indexOf(e);
          D > -1 && p.internal.interaction.splice(D, 1),
            l.eventCount && p.internal.interaction.push(e);
        }
        return (
          !(1 === g.length && "onUpdate" === g[0][0]) &&
            g.length &&
            null != (o = e.__r3f) &&
            o.parent &&
            Fv(e),
          e
        );
      }
      function zv(e) {
        var t,
          n,
          r =
            null == (t = e.__r3f) || null == (n = t.root) || null == n.getState
              ? void 0
              : n.getState();
        r && 0 === r.internal.frames && r.invalidate();
      }
      function Fv(e) {
        null == e.onUpdate || e.onUpdate(e);
      }
      function Bv(e, t) {
        e.manual ||
          (bv(e)
            ? ((e.left = t.width / -2),
              (e.right = t.width / 2),
              (e.top = t.height / 2),
              (e.bottom = t.height / -2))
            : (e.aspect = t.width / t.height),
          e.updateProjectionMatrix(),
          e.updateMatrixWorld());
      }
      function Zv(e) {
        return (e.eventObject || e.object).uuid + "/" + e.index + e.instanceId;
      }
      function Hv(e, t, n, r) {
        var i = n.get(t);
        i &&
          (n.delete(t),
          0 === n.size && (e.delete(r), i.target.releasePointerCapture(r)));
      }
      function Vv(e) {
        function t(e) {
          return e.filter(function (e) {
            return ["Move", "Over", "Enter", "Out", "Leave"].some(function (t) {
              var n;
              return null == (n = e.__r3f)
                ? void 0
                : n.handlers["onPointer" + t];
            });
          });
        }
        function n(t) {
          var n,
            r = e.getState().internal,
            i = T(r.hovered.values());
          try {
            var a = function () {
              var e = n.value;
              if (
                !t.length ||
                !t.find(function (t) {
                  return (
                    t.object === e.object &&
                    t.index === e.index &&
                    t.instanceId === e.instanceId
                  );
                })
              ) {
                var i = e.eventObject.__r3f,
                  a = null == i ? void 0 : i.handlers;
                if ((r.hovered.delete(Zv(e)), null != i && i.eventCount)) {
                  var o = (0, u.Z)((0, u.Z)({}, e), {}, { intersections: t });
                  null == a.onPointerOut || a.onPointerOut(o),
                    null == a.onPointerLeave || a.onPointerLeave(o);
                }
              }
            };
            for (i.s(); !(n = i.n()).done; ) a();
          } catch (o) {
            i.e(o);
          } finally {
            i.f();
          }
        }
        function i(e, t) {
          for (var n = 0; n < t.length; n++) {
            var r = t[n].__r3f;
            null == r ||
              null == r.handlers.onPointerMissed ||
              r.handlers.onPointerMissed(e);
          }
        }
        return {
          handlePointer: function (a) {
            switch (a) {
              case "onPointerLeave":
              case "onPointerCancel":
                return function () {
                  return n([]);
                };
              case "onLostPointerCapture":
                return function (t) {
                  var r = e.getState().internal;
                  "pointerId" in t &&
                    r.capturedMap.has(t.pointerId) &&
                    requestAnimationFrame(function () {
                      r.capturedMap.has(t.pointerId) &&
                        (r.capturedMap.delete(t.pointerId), n([]));
                    });
                };
            }
            return function (o) {
              var s = e.getState(),
                l = s.onPointerMissed,
                c = s.internal;
              c.lastEvent.current = o;
              var d = "onPointerMove" === a,
                f =
                  "onClick" === a ||
                  "onContextMenu" === a ||
                  "onDoubleClick" === a,
                h = (function (t, n) {
                  for (
                    var r = e.getState(),
                      i = new Set(),
                      a = [],
                      o = n
                        ? n(r.internal.interaction)
                        : r.internal.interaction,
                      s = 0;
                    s < o.length;
                    s++
                  ) {
                    var l = Av(o[s]);
                    l && (l.raycaster.camera = void 0);
                  }
                  r.previousRoot ||
                    null == r.events.compute ||
                    r.events.compute(t, r);
                  var c = o
                    .flatMap(function (e) {
                      var n,
                        r = Av(e);
                      return r &&
                        r.events.enabled &&
                        null !== r.raycaster.camera
                        ? (void 0 === r.raycaster.camera &&
                            (null == r.events.compute ||
                              r.events.compute(
                                t,
                                r,
                                null == (n = r.previousRoot)
                                  ? void 0
                                  : n.getState()
                              ),
                            void 0 === r.raycaster.camera &&
                              (r.raycaster.camera = null)),
                          r.raycaster.camera
                            ? r.raycaster.intersectObject(e, !0)
                            : [])
                        : [];
                    })
                    .sort(function (e, t) {
                      var n = Av(e.object),
                        r = Av(t.object);
                      return (
                        (n && r && r.events.priority - n.events.priority) ||
                        e.distance - t.distance
                      );
                    })
                    .filter(function (e) {
                      var t = Zv(e);
                      return !i.has(t) && (i.add(t), !0);
                    });
                  r.events.filter && (c = r.events.filter(c, r));
                  var d,
                    f = T(c);
                  try {
                    for (f.s(); !(d = f.n()).done; )
                      for (var h = d.value, p = h.object; p; ) {
                        var v;
                        null != (v = p.__r3f) &&
                          v.eventCount &&
                          a.push(
                            (0, u.Z)((0, u.Z)({}, h), {}, { eventObject: p })
                          ),
                          (p = p.parent);
                      }
                  } catch (b) {
                    f.e(b);
                  } finally {
                    f.f();
                  }
                  if (
                    "pointerId" in t &&
                    r.internal.capturedMap.has(t.pointerId)
                  ) {
                    var m,
                      g = T(r.internal.capturedMap.get(t.pointerId).values());
                    try {
                      for (g.s(); !(m = g.n()).done; ) {
                        var y = m.value;
                        i.has(Zv(y.intersection)) || a.push(y.intersection);
                      }
                    } catch (b) {
                      g.e(b);
                    } finally {
                      g.f();
                    }
                  }
                  return a;
                })(o, d ? t : void 0),
                p = f
                  ? (function (t) {
                      var n = e.getState().internal,
                        r = t.offsetX - n.initialClick[0],
                        i = t.offsetY - n.initialClick[1];
                      return Math.round(Math.sqrt(r * r + i * i));
                    })(o)
                  : 0;
              "onPointerDown" === a &&
                ((c.initialClick = [o.offsetX, o.offsetY]),
                (c.initialHits = h.map(function (e) {
                  return e.eventObject;
                }))),
                f && !h.length && p <= 2 && (i(o, c.interaction), l && l(o)),
                d && n(h),
                (function (t, i, a, o) {
                  var s = e.getState();
                  if (t.length) {
                    var l,
                      c = { stopped: !1 },
                      d = T(t);
                    try {
                      var f = function () {
                        var e = l.value,
                          d = Av(e.object) || s,
                          f = d.raycaster,
                          h = d.pointer,
                          p = d.camera,
                          v = d.internal,
                          m = new Zr(h.x, h.y, 0).unproject(p),
                          g = function (t) {
                            var n, r;
                            return (
                              null !=
                                (n =
                                  null == (r = v.capturedMap.get(t))
                                    ? void 0
                                    : r.has(e.eventObject)) && n
                            );
                          },
                          y = function (t) {
                            var n = { intersection: e, target: i.target };
                            v.capturedMap.has(t)
                              ? v.capturedMap.get(t).set(e.eventObject, n)
                              : v.capturedMap.set(
                                  t,
                                  new Map([[e.eventObject, n]])
                                ),
                              i.target.setPointerCapture(t);
                          },
                          b = function (t) {
                            var n = v.capturedMap.get(t);
                            n && Hv(v.capturedMap, e.eventObject, n, t);
                          },
                          _ = {};
                        for (var x in i) {
                          var S = i[x];
                          "function" !== typeof S && (_[x] = S);
                        }
                        var w = (0, u.Z)(
                          (0, u.Z)((0, u.Z)({}, e), _),
                          {},
                          {
                            pointer: h,
                            intersections: t,
                            stopped: c.stopped,
                            delta: a,
                            unprojectedPoint: m,
                            ray: f.ray,
                            camera: p,
                            stopPropagation: function () {
                              var a =
                                "pointerId" in i &&
                                v.capturedMap.get(i.pointerId);
                              if (
                                (!a || a.has(e.eventObject)) &&
                                ((w.stopped = c.stopped = !0),
                                v.hovered.size &&
                                  Array.from(v.hovered.values()).find(function (
                                    t
                                  ) {
                                    return t.eventObject === e.eventObject;
                                  }))
                              ) {
                                var o = t.slice(0, t.indexOf(e));
                                n([].concat((0, r.Z)(o), [e]));
                              }
                            },
                            target: {
                              hasPointerCapture: g,
                              setPointerCapture: y,
                              releasePointerCapture: b,
                            },
                            currentTarget: {
                              hasPointerCapture: g,
                              setPointerCapture: y,
                              releasePointerCapture: b,
                            },
                            nativeEvent: i,
                          }
                        );
                        if ((o(w), !0 === c.stopped)) return "break";
                      };
                      for (d.s(); !(l = d.n()).done && "break" !== f(); );
                    } catch (h) {
                      d.e(h);
                    } finally {
                      d.f();
                    }
                  }
                })(h, o, p, function (e) {
                  var t = e.eventObject,
                    n = t.__r3f,
                    r = null == n ? void 0 : n.handlers;
                  if (null != n && n.eventCount)
                    if (d) {
                      if (
                        r.onPointerOver ||
                        r.onPointerEnter ||
                        r.onPointerOut ||
                        r.onPointerLeave
                      ) {
                        var s = Zv(e),
                          l = c.hovered.get(s);
                        l
                          ? l.stopped && e.stopPropagation()
                          : (c.hovered.set(s, e),
                            null == r.onPointerOver || r.onPointerOver(e),
                            null == r.onPointerEnter || r.onPointerEnter(e));
                      }
                      null == r.onPointerMove || r.onPointerMove(e);
                    } else {
                      var u = r[a];
                      u
                        ? (f && !c.initialHits.includes(t)) ||
                          (i(
                            o,
                            c.interaction.filter(function (e) {
                              return !c.initialHits.includes(e);
                            })
                          ),
                          u(e))
                        : f &&
                          c.initialHits.includes(t) &&
                          i(
                            o,
                            c.interaction.filter(function (e) {
                              return !c.initialHits.includes(e);
                            })
                          );
                    }
                });
            };
          },
        };
      }
      var Gv,
        Wv = function (e) {
          return !(null == e || !e.render);
        },
        jv = a.createContext(null),
        Xv = function (e, t) {
          var n = ev(function (n, i) {
              var o = new Zr(),
                s = new Zr(),
                l = new Zr();
              function c() {
                var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : i().camera,
                  t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : s,
                  n =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : i().size,
                  a = n.width,
                  u = n.height,
                  c = n.top,
                  d = n.left,
                  f = a / u;
                t instanceof Zr ? l.copy(t) : l.set.apply(l, (0, r.Z)(t));
                var h = e.getWorldPosition(o).distanceTo(l);
                if (bv(e))
                  return {
                    width: a / e.zoom,
                    height: u / e.zoom,
                    top: c,
                    left: d,
                    factor: 1,
                    distance: h,
                    aspect: f,
                  };
                var p = (e.fov * Math.PI) / 180,
                  v = 2 * Math.tan(p / 2) * h,
                  m = v * (a / u);
                return {
                  width: m,
                  height: v,
                  top: c,
                  left: d,
                  factor: a / m,
                  distance: h,
                  aspect: f,
                };
              }
              var d = void 0,
                f = function (e) {
                  return n(function (t) {
                    return {
                      performance: (0, u.Z)(
                        (0, u.Z)({}, t.performance),
                        {},
                        { current: e }
                      ),
                    };
                  });
                },
                h = new dr(),
                p = {
                  set: n,
                  get: i,
                  gl: null,
                  camera: null,
                  raycaster: null,
                  events: { priority: 1, enabled: !0, connected: !1 },
                  xr: null,
                  scene: null,
                  invalidate: function () {
                    var t =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : 1;
                    return e(i(), t);
                  },
                  advance: function (e, n) {
                    return t(e, n, i());
                  },
                  legacy: !1,
                  linear: !1,
                  flat: !1,
                  controls: null,
                  clock: new fh(),
                  pointer: h,
                  mouse: h,
                  frameloop: "always",
                  onPointerMissed: void 0,
                  performance: {
                    current: 1,
                    min: 0.5,
                    max: 1,
                    debounce: 200,
                    regress: function () {
                      var e = i();
                      d && clearTimeout(d),
                        e.performance.current !== e.performance.min &&
                          f(e.performance.min),
                        (d = setTimeout(function () {
                          return f(i().performance.max);
                        }, e.performance.debounce));
                    },
                  },
                  size: {
                    width: 0,
                    height: 0,
                    top: 0,
                    left: 0,
                    updateStyle: !1,
                  },
                  viewport: {
                    initialDpr: 0,
                    dpr: 0,
                    width: 0,
                    height: 0,
                    top: 0,
                    left: 0,
                    aspect: 0,
                    distance: 0,
                    factor: 0,
                    getCurrentViewport: c,
                  },
                  setEvents: function (e) {
                    return n(function (t) {
                      return (0,
                      u.Z)((0, u.Z)({}, t), {}, { events: (0, u.Z)((0, u.Z)({}, t.events), e) });
                    });
                  },
                  setSize: function (e, t, r, a, o) {
                    var l = i().camera,
                      d = {
                        width: e,
                        height: t,
                        top: a || 0,
                        left: o || 0,
                        updateStyle: r,
                      };
                    n(function (e) {
                      return {
                        size: d,
                        viewport: (0, u.Z)(
                          (0, u.Z)({}, e.viewport),
                          c(l, s, d)
                        ),
                      };
                    });
                  },
                  setDpr: function (e) {
                    return n(function (t) {
                      var n = Tv(e);
                      return {
                        viewport: (0, u.Z)(
                          (0, u.Z)({}, t.viewport),
                          {},
                          { dpr: n, initialDpr: t.viewport.initialDpr || n }
                        ),
                      };
                    });
                  },
                  setFrameloop: function () {
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : "always",
                      t = i().clock;
                    t.stop(),
                      (t.elapsedTime = 0),
                      "never" !== e && (t.start(), (t.elapsedTime = 0)),
                      n(function () {
                        return { frameloop: e };
                      });
                  },
                  previousRoot: void 0,
                  internal: {
                    active: !1,
                    priority: 0,
                    frames: 0,
                    lastEvent: a.createRef(),
                    interaction: [],
                    hovered: new Map(),
                    subscribers: [],
                    initialClick: [0, 0],
                    initialHits: [],
                    capturedMap: new Map(),
                    subscribe: function (e, t, n) {
                      var r = i().internal;
                      return (
                        (r.priority = r.priority + (t > 0 ? 1 : 0)),
                        r.subscribers.push({ ref: e, priority: t, store: n }),
                        (r.subscribers = r.subscribers.sort(function (e, t) {
                          return e.priority - t.priority;
                        })),
                        function () {
                          var n = i().internal;
                          null != n &&
                            n.subscribers &&
                            ((n.priority = n.priority - (t > 0 ? 1 : 0)),
                            (n.subscribers = n.subscribers.filter(function (t) {
                              return t.ref !== e;
                            })));
                        }
                      );
                    },
                  },
                };
              return p;
            }),
            i = n.getState(),
            o = i.size,
            s = i.viewport.dpr,
            l = i.camera;
          return (
            n.subscribe(function () {
              var e = n.getState(),
                t = e.camera,
                r = e.size,
                i = e.viewport,
                a = e.gl,
                c = e.set;
              if (r !== o || i.dpr !== s) {
                var d;
                (o = r), (s = i.dpr), Bv(t, r), a.setPixelRatio(i.dpr);
                var f =
                  null != (d = r.updateStyle)
                    ? d
                    : "undefined" !== typeof HTMLCanvasElement &&
                      a.domElement instanceof HTMLCanvasElement;
                a.setSize(r.width, r.height, f);
              }
              t !== l &&
                ((l = t),
                c(function (e) {
                  return {
                    viewport: (0, u.Z)(
                      (0, u.Z)({}, e.viewport),
                      e.viewport.getCurrentViewport(t)
                    ),
                  };
                }));
            }),
            n.subscribe(function (t) {
              return e(t);
            }),
            n
          );
        };
      function qv(e, t) {
        var n = { callback: e };
        return (
          t.add(n),
          function () {
            t.delete(n);
          }
        );
      }
      var Yv,
        Kv,
        $v = new Set(),
        Jv = new Set(),
        Qv = new Set();
      function em(e, t) {
        if (e.size) {
          var n,
            r = T(e.values());
          try {
            for (r.s(); !(n = r.n()).done; ) {
              (0, n.value.callback)(t);
            }
          } catch (i) {
            r.e(i);
          } finally {
            r.f();
          }
        }
      }
      function tm(e, t) {
        switch (e) {
          case "before":
            return em($v, t);
          case "after":
            return em(Jv, t);
          case "tail":
            return em(Qv, t);
        }
      }
      function nm(e, t, n) {
        var r = t.clock.getDelta();
        for (
          "never" === t.frameloop &&
            "number" === typeof e &&
            ((r = e - t.clock.elapsedTime),
            (t.clock.oldTime = t.clock.elapsedTime),
            (t.clock.elapsedTime = e)),
            Yv = t.internal.subscribers,
            Gv = 0;
          Gv < Yv.length;
          Gv++
        )
          (Kv = Yv[Gv]).ref.current(Kv.store.getState(), r, n);
        return (
          !t.internal.priority && t.gl.render && t.gl.render(t.scene, t.camera),
          (t.internal.frames = Math.max(0, t.internal.frames - 1)),
          "always" === t.frameloop ? 1 : t.internal.frames
        );
      }
      function rm() {
        var e = a.useContext(jv);
        if (!e)
          throw new Error(
            "R3F: Hooks can only be used within the Canvas component!"
          );
        return e;
      }
      function im() {
        var e =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : function (e) {
                  return e;
                },
          t = arguments.length > 1 ? arguments[1] : void 0;
        return rm()(e, t);
      }
      function am(e, t) {
        return function (n) {
          var r = new n();
          e && e(r);
          for (
            var i = arguments.length, a = new Array(i > 1 ? i - 1 : 0), o = 1;
            o < i;
            o++
          )
            a[o - 1] = arguments[o];
          return Promise.all(
            a.map(function (e) {
              return new Promise(function (n, i) {
                return r.load(
                  e,
                  function (e) {
                    e.scene && Object.assign(e, Pv(e.scene)), n(e);
                  },
                  t,
                  function (t) {
                    return i(
                      new Error(
                        "Could not load ".concat(e, ": ").concat(t.message, ")")
                      )
                    );
                  }
                );
              });
            })
          );
        };
      }
      function om(e, t, n, i) {
        var a = Array.isArray(t) ? t : [t],
          o = uv(am(n, i), [e].concat((0, r.Z)(a)), { equal: Cv.equ });
        return Array.isArray(t) ? o : o[0];
      }
      (om.preload = function (e, t, n) {
        var i = Array.isArray(t) ? t : [t];
        return (function (e, t, n) {
          ov(e, t, !0, n);
        })(am(n), [e].concat((0, r.Z)(i)));
      }),
        (om.clear = function (e, t) {
          var n = Array.isArray(t) ? t : [t];
          return (function (e) {
            if (void 0 === e || 0 === e.length) av.splice(0, av.length);
            else {
              var t = av.find(function (t) {
                return iv(e, t.keys, t.equal);
              });
              if (t) {
                var n = av.indexOf(t);
                -1 !== n && av.splice(n, 1);
              }
            }
          })([e].concat((0, r.Z)(n)));
        });
      var sm = new Map(),
        lm = (function (e) {
          var t,
            n,
            r,
            i = !1;
          function a(o) {
            (n = requestAnimationFrame(a)), (i = !0), (t = 0), tm("before", o);
            var s,
              l = T(e.values());
            try {
              for (l.s(); !(s = l.n()).done; ) {
                var u,
                  c = s.value;
                !(r = c.store.getState()).internal.active ||
                  !("always" === r.frameloop || r.internal.frames > 0) ||
                  (null != (u = r.gl.xr) && u.isPresenting) ||
                  (t += nm(o, r));
              }
            } catch (d) {
              l.e(d);
            } finally {
              l.f();
            }
            if ((tm("after", o), 0 === t))
              return tm("tail", o), (i = !1), cancelAnimationFrame(n);
          }
          return {
            loop: a,
            invalidate: function t(n) {
              var r,
                o =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : 1;
              if (!n)
                return e.forEach(function (e) {
                  return t(e.store.getState());
                }, o);
              (null != (r = n.gl.xr) && r.isPresenting) ||
                !n.internal.active ||
                "never" === n.frameloop ||
                ((n.internal.frames = Math.min(60, n.internal.frames + o)),
                i || ((i = !0), requestAnimationFrame(a)));
            },
            advance: function (t) {
              var n =
                  !(arguments.length > 1 && void 0 !== arguments[1]) ||
                  arguments[1],
                r = arguments.length > 2 ? arguments[2] : void 0,
                i = arguments.length > 3 ? arguments[3] : void 0;
              if ((n && tm("before", t), r)) nm(t, r, i);
              else {
                var a,
                  o = T(e.values());
                try {
                  for (o.s(); !(a = o.n()).done; ) {
                    nm(t, a.value.store.getState());
                  }
                } catch (s) {
                  o.e(s);
                } finally {
                  o.f();
                }
              }
              n && tm("after", t);
            },
          };
        })(sm),
        um = lm.invalidate,
        cm = lm.advance,
        dm = (function (e, t) {
          function n(e, t, n) {
            var i,
              a = t.args,
              o = void 0 === a ? [] : a,
              l = t.attach,
              u = s(t, cv),
              c = "".concat(e[0].toUpperCase()).concat(e.slice(1));
            if ("primitive" === e) {
              if (void 0 === u.object)
                throw new Error(
                  "R3F: Primitives without 'object' are invalid!"
                );
              i = Rv(u.object, { type: e, root: n, attach: l, primitive: !0 });
            } else {
              var d = mv[c];
              if (!d)
                throw new Error(
                  "R3F: ".concat(
                    c,
                    " is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively"
                  )
                );
              if (!Array.isArray(o))
                throw new Error("R3F: The args prop must be an array!");
              i = Rv(A(d, (0, r.Z)(o)), {
                type: e,
                root: n,
                attach: l,
                memoizedProps: { args: o },
              });
            }
            return (
              void 0 === i.__r3f.attach &&
                (i instanceof Oa
                  ? (i.__r3f.attach = "geometry")
                  : i instanceof na && (i.__r3f.attach = "material")),
              "inject" !== c && Uv(i, u),
              i
            );
          }
          function a(e, t) {
            var n,
              r,
              i = !1;
            t &&
              (null != (n = t.__r3f) && n.attach
                ? Nv(e, t, t.__r3f.attach)
                : t.isObject3D && e.isObject3D && (e.add(t), (i = !0)),
              i || null == (r = e.__r3f) || r.objects.push(t),
              t.__r3f || Rv(t, {}),
              (t.__r3f.parent = e),
              Fv(t),
              zv(t));
          }
          function o(e, t, n) {
            var i = !1;
            if (t) {
              var a, o;
              if (null != (a = t.__r3f) && a.attach) Nv(e, t, t.__r3f.attach);
              else if (t.isObject3D && e.isObject3D) {
                (t.parent = e), t.dispatchEvent({ type: "added" });
                var s = e.children.filter(function (e) {
                    return e !== t;
                  }),
                  l = s.indexOf(n);
                (e.children = [].concat(
                  (0, r.Z)(s.slice(0, l)),
                  [t],
                  (0, r.Z)(s.slice(l))
                )),
                  (i = !0);
              }
              i || null == (o = e.__r3f) || o.objects.push(t),
                t.__r3f || Rv(t, {}),
                (t.__r3f.parent = e),
                Fv(t),
                zv(t);
            }
          }
          function l(e, t) {
            var n =
              arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
            e &&
              (0, r.Z)(e).forEach(function (e) {
                return u(t, e, n);
              });
          }
          function u(e, t, n) {
            if (t) {
              var r, i, a;
              if (
                (t.__r3f && (t.__r3f.parent = null),
                null != (r = e.__r3f) &&
                  r.objects &&
                  (e.__r3f.objects = e.__r3f.objects.filter(function (e) {
                    return e !== t;
                  })),
                null != (i = t.__r3f) && i.attach)
              )
                Ov(e, t, t.__r3f.attach);
              else if (t.isObject3D && e.isObject3D) {
                var o;
                e.remove(t),
                  null != (o = t.__r3f) &&
                    o.root &&
                    (function (e, t) {
                      var n = e.getState().internal;
                      (n.interaction = n.interaction.filter(function (e) {
                        return e !== t;
                      })),
                        (n.initialHits = n.initialHits.filter(function (e) {
                          return e !== t;
                        })),
                        n.hovered.forEach(function (e, r) {
                          (e.eventObject !== t && e.object !== t) ||
                            n.hovered.delete(r);
                        }),
                        n.capturedMap.forEach(function (e, r) {
                          Hv(n.capturedMap, t, e, r);
                        });
                    })(t.__r3f.root, t);
              }
              var s,
                u = null == (a = t.__r3f) ? void 0 : a.primitive,
                c = void 0 === n ? null !== t.dispose && !u : n;
              if (!u)
                l(null == (s = t.__r3f) ? void 0 : s.objects, t, c),
                  l(t.children, t, c);
              t.__r3f &&
                (delete t.__r3f.root,
                delete t.__r3f.objects,
                delete t.__r3f.handlers,
                delete t.__r3f.memoizedProps,
                u || delete t.__r3f),
                c &&
                  t.dispose &&
                  "Scene" !== t.type &&
                  (0, rv.unstable_scheduleCallback)(
                    rv.unstable_IdlePriority,
                    function () {
                      try {
                        t.dispose();
                      } catch (e) {}
                    }
                  ),
                zv(e);
            }
          }
          var c = function () {
            return console.warn(
              "Text is not allowed in the R3F tree! This could be stray whitespace or characters."
            );
          };
          return {
            reconciler: nv()({
              createInstance: n,
              removeChild: u,
              appendChild: a,
              appendInitialChild: a,
              insertBefore: o,
              supportsMutation: !0,
              isPrimaryRenderer: !1,
              supportsPersistence: !1,
              supportsHydration: !1,
              noTimeout: -1,
              appendChildToContainer: function (e, t) {
                if (t) {
                  var n = e.getState().scene;
                  n.__r3f && ((n.__r3f.root = e), a(n, t));
                }
              },
              removeChildFromContainer: function (e, t) {
                t && u(e.getState().scene, t);
              },
              insertInContainerBefore: function (e, t, n) {
                if (t && n) {
                  var r = e.getState().scene;
                  r.__r3f && o(r, t, n);
                }
              },
              getRootHostContext: function () {
                return null;
              },
              getChildHostContext: function (e) {
                return e;
              },
              finalizeInitialChildren: function (e) {
                var t,
                  n = null != (t = null == e ? void 0 : e.__r3f) ? t : {};
                return Boolean(n.handlers);
              },
              prepareUpdate: function (e, t, n, r) {
                if (e.__r3f.primitive && r.object && r.object !== e)
                  return [!0];
                var i = r.args,
                  a = void 0 === i ? [] : i,
                  o = (r.children, s(r, dv)),
                  l = n.args,
                  u = void 0 === l ? [] : l,
                  c = (n.children, s(n, fv));
                if (!Array.isArray(a))
                  throw new Error("R3F: the args prop must be an array!");
                if (
                  a.some(function (e, t) {
                    return e !== u[t];
                  })
                )
                  return [!0];
                var d = Dv(e, o, c, !0);
                return d.changes.length ? [!1, d] : null;
              },
              commitUpdate: function (e, t, r, o, s, l) {
                var c = (0, i.Z)(t, 2),
                  d = c[0],
                  f = c[1];
                d
                  ? (function (e, t, r, i) {
                      var o,
                        s = null == (o = e.__r3f) ? void 0 : o.parent;
                      if (s) {
                        var l = n(t, r, e.__r3f.root);
                        if (e.children) {
                          var c,
                            d = T(e.children);
                          try {
                            for (d.s(); !(c = d.n()).done; ) {
                              var f = c.value;
                              f.__r3f && a(l, f);
                            }
                          } catch (h) {
                            d.e(h);
                          } finally {
                            d.f();
                          }
                          e.children = e.children.filter(function (e) {
                            return !e.__r3f;
                          });
                        }
                        e.__r3f.objects.forEach(function (e) {
                          return a(l, e);
                        }),
                          (e.__r3f.objects = []),
                          e.__r3f.autoRemovedBeforeAppend || u(s, e),
                          l.parent && (l.__r3f.autoRemovedBeforeAppend = !0),
                          a(s, l),
                          l.raycast &&
                            l.__r3f.eventCount &&
                            l.__r3f.root
                              .getState()
                              .internal.interaction.push(l),
                          [i, i.alternate].forEach(function (e) {
                            null !== e &&
                              ((e.stateNode = l),
                              e.ref &&
                                ("function" === typeof e.ref
                                  ? e.ref(l)
                                  : (e.ref.current = l)));
                          });
                      }
                    })(e, r, s, l)
                  : Uv(e, f);
              },
              commitMount: function (e, t, n, r) {
                var i,
                  a = null != (i = e.__r3f) ? i : {};
                e.raycast &&
                  a.handlers &&
                  a.eventCount &&
                  e.__r3f.root.getState().internal.interaction.push(e);
              },
              getPublicInstance: function (e) {
                return e;
              },
              prepareForCommit: function () {
                return null;
              },
              preparePortalMount: function (e) {
                return Rv(e.getState().scene);
              },
              resetAfterCommit: function () {},
              shouldSetTextContent: function () {
                return !1;
              },
              clearContainer: function () {
                return !1;
              },
              hideInstance: function (e) {
                var t,
                  n = null != (t = e.__r3f) ? t : {},
                  r = n.attach,
                  i = n.parent;
                r && i && Ov(i, e, r), e.isObject3D && (e.visible = !1), zv(e);
              },
              unhideInstance: function (e, t) {
                var n,
                  r = null != (n = e.__r3f) ? n : {},
                  i = r.attach,
                  a = r.parent;
                i && a && Nv(a, e, i),
                  ((e.isObject3D && null == t.visible) || t.visible) &&
                    (e.visible = !0),
                  zv(e);
              },
              createTextInstance: c,
              hideTextInstance: c,
              unhideTextInstance: c,
              getCurrentEventPriority: function () {
                return t ? t() : $p.DefaultEventPriority;
              },
              beforeActiveInstanceBlur: function () {},
              afterActiveInstanceBlur: function () {},
              detachDeletedInstance: function () {},
              now:
                "undefined" !== typeof performance && Cv.fun(performance.now)
                  ? performance.now
                  : Cv.fun(Date.now)
                  ? Date.now
                  : function () {
                      return 0;
                    },
              scheduleTimeout: Cv.fun(setTimeout) ? setTimeout : void 0,
              cancelTimeout: Cv.fun(clearTimeout) ? clearTimeout : void 0,
            }),
            applyProps: Uv,
          };
        })(0, function () {
          var e,
            t =
              ("undefined" !== typeof self && self) ||
              ("undefined" !== typeof window && window);
          if (!t) return $p.DefaultEventPriority;
          switch (null == (e = t.event) ? void 0 : e.type) {
            case "click":
            case "contextmenu":
            case "dblclick":
            case "pointercancel":
            case "pointerdown":
            case "pointerup":
              return $p.DiscreteEventPriority;
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerenter":
            case "pointerleave":
            case "wheel":
              return $p.ContinuousEventPriority;
            default:
              return $p.DefaultEventPriority;
          }
        }),
        fm = dm.reconciler,
        hm = dm.applyProps,
        pm = { objects: "shallow", strict: !1 },
        vm = function (e, t) {
          var n = "function" === typeof e ? e(t) : e;
          return Wv(n)
            ? n
            : new Jl(
                (0, u.Z)(
                  {
                    powerPreference: "high-performance",
                    canvas: t,
                    antialias: !0,
                    alpha: !0,
                  },
                  e
                )
              );
        };
      function mm(e) {
        var t = sm.get(e),
          n = null == t ? void 0 : t.fiber,
          r = null == t ? void 0 : t.store;
        t && console.warn("R3F.createRoot should only be called once!");
        var i,
          o = "function" === typeof reportError ? reportError : console.error,
          l = r || Xv(um, cm),
          c =
            n ||
            fm.createContainer(
              l,
              $p.ConcurrentRoot,
              null,
              !1,
              null,
              "",
              o,
              null
            );
        t || sm.set(e, { fiber: c, store: l });
        var d,
          f = !1;
        return {
          configure: function () {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {},
              n = t.gl,
              r = t.size,
              a = t.scene,
              o = t.events,
              c = t.onCreated,
              h = t.shadows,
              p = void 0 !== h && h,
              v = t.linear,
              m = void 0 !== v && v,
              g = t.flat,
              y = void 0 !== g && g,
              b = t.legacy,
              _ = void 0 !== b && b,
              x = t.orthographic,
              S = void 0 !== x && x,
              w = t.frameloop,
              M = void 0 === w ? "always" : w,
              E = t.dpr,
              k = void 0 === E ? [1, 2] : E,
              T = t.performance,
              A = t.raycaster,
              C = t.camera,
              P = t.onPointerMissed,
              R = l.getState(),
              L = R.gl;
            R.gl || R.set({ gl: (L = vm(n, e)) });
            var I = R.raycaster;
            I || R.set({ raycaster: (I = new Gh()) });
            var N,
              O = A || {},
              D = O.params,
              U = s(O, vv);
            if (
              (Cv.equ(U, I, pm) || hm(I, (0, u.Z)({}, U)),
              Cv.equ(D, I.params, pm) ||
                hm(I, { params: (0, u.Z)((0, u.Z)({}, I.params), D) }),
              !R.camera || (R.camera === d && !Cv.equ(d, C, pm)))
            ) {
              d = C;
              var z = C instanceof so,
                F = z
                  ? C
                  : S
                  ? new No(0, 0, 0, 0, 0.1, 1e3)
                  : new lo(75, 0, 0.1, 1e3);
              z ||
                ((F.position.z = 5),
                C && hm(F, C),
                R.camera || (null != C && C.rotation) || F.lookAt(0, 0, 0)),
                R.set({ camera: F });
            }
            R.scene ||
              (a instanceof ru ? (N = a) : ((N = new ru()), a && hm(N, a)),
              R.set({ scene: Rv(N) }));
            if (!R.xr) {
              var B = function (e, t) {
                  var n = l.getState();
                  "never" !== n.frameloop && cm(e, !0, n, t);
                },
                W = function () {
                  var e = l.getState();
                  (e.gl.xr.enabled = e.gl.xr.isPresenting),
                    e.gl.xr.setAnimationLoop(e.gl.xr.isPresenting ? B : null),
                    e.gl.xr.isPresenting || um(e);
                },
                j = {
                  connect: function () {
                    var e = l.getState().gl;
                    e.xr.addEventListener("sessionstart", W),
                      e.xr.addEventListener("sessionend", W);
                  },
                  disconnect: function () {
                    var e = l.getState().gl;
                    e.xr.removeEventListener("sessionstart", W),
                      e.xr.removeEventListener("sessionend", W);
                  },
                };
              L.xr && j.connect(), R.set({ xr: j });
            }
            if (L.shadowMap) {
              var X = L.shadowMap.enabled,
                q = L.shadowMap.type;
              if (((L.shadowMap.enabled = !!p), Cv.boo(p)))
                L.shadowMap.type = V;
              else if (Cv.str(p)) {
                var Y,
                  K = { basic: Z, percentage: H, soft: V, variance: G };
                L.shadowMap.type = null != (Y = K[p]) ? Y : V;
              } else Cv.obj(p) && Object.assign(L.shadowMap, p);
              (X === L.shadowMap.enabled && q === L.shadowMap.type) ||
                (L.shadowMap.needsUpdate = !0);
            }
            var $ = yv();
            $ &&
              ("enabled" in $
                ? ($.enabled = !_)
                : "legacyMode" in $ && ($.legacyMode = _));
            hm(L, { outputEncoding: m ? 3e3 : 3001, toneMapping: y ? Ae : Le }),
              R.legacy !== _ &&
                R.set(function () {
                  return { legacy: _ };
                }),
              R.linear !== m &&
                R.set(function () {
                  return { linear: m };
                }),
              R.flat !== y &&
                R.set(function () {
                  return { flat: y };
                }),
              !n || Cv.fun(n) || Wv(n) || Cv.equ(n, L, pm) || hm(L, n),
              o && !R.events.handlers && R.set({ events: o(l) });
            var J = (function (e, t) {
              if (t) return t;
              if (
                "undefined" !== typeof HTMLCanvasElement &&
                e instanceof HTMLCanvasElement &&
                e.parentElement
              ) {
                var n = e.parentElement.getBoundingClientRect();
                return {
                  width: n.width,
                  height: n.height,
                  top: n.top,
                  left: n.left,
                };
              }
              return "undefined" !== typeof OffscreenCanvas &&
                e instanceof OffscreenCanvas
                ? { width: e.width, height: e.height, top: 0, left: 0 }
                : { width: 0, height: 0, top: 0, left: 0 };
            })(e, r);
            return (
              Cv.equ(J, R.size, pm) ||
                R.setSize(J.width, J.height, J.updateStyle, J.top, J.left),
              k && R.viewport.dpr !== Tv(k) && R.setDpr(k),
              R.frameloop !== M && R.setFrameloop(M),
              R.onPointerMissed || R.set({ onPointerMissed: P }),
              T &&
                !Cv.equ(T, R.performance, pm) &&
                R.set(function (e) {
                  return {
                    performance: (0, u.Z)((0, u.Z)({}, e.performance), T),
                  };
                }),
              (i = c),
              (f = !0),
              this
            );
          },
          render: function (t) {
            return (
              f || this.configure(),
              fm.updateContainer(
                a.createElement(gm, {
                  store: l,
                  children: t,
                  onCreated: i,
                  rootElement: e,
                }),
                c,
                null,
                function () {}
              ),
              l
            );
          },
          unmount: function () {
            ym(e);
          },
        };
      }
      function gm(e) {
        var t = e.store,
          n = e.children,
          r = e.onCreated,
          i = e.rootElement;
        return (
          _v(function () {
            var e = t.getState();
            e.set(function (e) {
              return {
                internal: (0, u.Z)(
                  (0, u.Z)({}, e.internal),
                  {},
                  { active: !0 }
                ),
              };
            }),
              r && r(e),
              t.getState().events.connected ||
                null == e.events.connect ||
                e.events.connect(i);
          }, []),
          a.createElement(jv.Provider, { value: t }, n)
        );
      }
      function ym(e, t) {
        var n = sm.get(e),
          r = null == n ? void 0 : n.fiber;
        if (r) {
          var i = null == n ? void 0 : n.store.getState();
          i && (i.internal.active = !1),
            fm.updateContainer(null, r, null, function () {
              i &&
                setTimeout(function () {
                  try {
                    var n, r, a, o;
                    null == i.events.disconnect || i.events.disconnect(),
                      null == (n = i.gl) ||
                        null == (r = n.renderLists) ||
                        null == r.dispose ||
                        r.dispose(),
                      null == (a = i.gl) ||
                        null == a.forceContextLoss ||
                        a.forceContextLoss(),
                      null != (o = i.gl) && o.xr && i.xr.disconnect(),
                      (function (e) {
                        for (var t in (e.dispose &&
                          "Scene" !== e.type &&
                          e.dispose(),
                        e))
                          null == t.dispose || t.dispose(), delete e[t];
                      })(i),
                      sm.delete(e),
                      t && t(e);
                  } catch (s) {}
                }, 500);
            });
        }
      }
      fm.injectIntoDevTools({
        bundleType: 0,
        rendererPackageName: "@react-three/fiber",
        version: a.version,
      });
      a.unstable_act;
      var bm = n(7462),
        _m = n(7494),
        xm = n.n(_m);
      function Sm(e) {
        var t = void 0 === e ? { debounce: 0, scroll: !1, offsetSize: !1 } : e,
          n = t.debounce,
          r = t.scroll,
          o = t.polyfill,
          s = t.offsetSize,
          l =
            o ||
            ("undefined" === typeof window
              ? g(function e() {
                  p(this, e);
                })
              : window.ResizeObserver);
        if (!l)
          throw new Error(
            "This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills"
          );
        var u = (0, a.useState)({
            left: 0,
            top: 0,
            width: 0,
            height: 0,
            bottom: 0,
            right: 0,
            x: 0,
            y: 0,
          }),
          c = (0, i.Z)(u, 2),
          d = c[0],
          f = c[1],
          h = (0, a.useRef)({
            element: null,
            scrollContainers: null,
            resizeObserver: null,
            lastBounds: d,
          }),
          v = n ? ("number" === typeof n ? n : n.scroll) : null,
          m = n ? ("number" === typeof n ? n : n.resize) : null,
          y = (0, a.useRef)(!1);
        (0, a.useEffect)(function () {
          return (
            (y.current = !0),
            function () {
              y.current = !1;
            }
          );
        });
        var b = (0, a.useMemo)(
            function () {
              var e = function () {
                if (h.current.element) {
                  var e = h.current.element.getBoundingClientRect(),
                    t = {
                      left: e.left,
                      top: e.top,
                      width: e.width,
                      height: e.height,
                      bottom: e.bottom,
                      right: e.right,
                      x: e.x,
                      y: e.y,
                    };
                  h.current.element instanceof HTMLElement &&
                    s &&
                    ((t.height = h.current.element.offsetHeight),
                    (t.width = h.current.element.offsetWidth)),
                    Object.freeze(t),
                    y.current &&
                      !Em(h.current.lastBounds, t) &&
                      f((h.current.lastBounds = t));
                }
              };
              return [e, m ? xm()(e, m) : e, v ? xm()(e, v) : e];
            },
            [f, s, v, m]
          ),
          _ = (0, i.Z)(b, 3),
          x = _[0],
          S = _[1],
          w = _[2];
        function M() {
          h.current.scrollContainers &&
            (h.current.scrollContainers.forEach(function (e) {
              return e.removeEventListener("scroll", w, !0);
            }),
            (h.current.scrollContainers = null)),
            h.current.resizeObserver &&
              (h.current.resizeObserver.disconnect(),
              (h.current.resizeObserver = null));
        }
        function E() {
          h.current.element &&
            ((h.current.resizeObserver = new l(w)),
            h.current.resizeObserver.observe(h.current.element),
            r &&
              h.current.scrollContainers &&
              h.current.scrollContainers.forEach(function (e) {
                return e.addEventListener("scroll", w, {
                  capture: !0,
                  passive: !0,
                });
              }));
        }
        var k;
        return (
          (function (e, t) {
            (0, a.useEffect)(
              function () {
                if (t) {
                  var n = e;
                  return (
                    window.addEventListener("scroll", n, {
                      capture: !0,
                      passive: !0,
                    }),
                    function () {
                      window.removeEventListener("scroll", n, !0);
                    }
                  );
                }
              },
              [e, t]
            );
          })(w, Boolean(r)),
          (k = S),
          (0, a.useEffect)(
            function () {
              var e = k;
              return (
                window.addEventListener("resize", e),
                function () {
                  window.removeEventListener("resize", e);
                }
              );
            },
            [k]
          ),
          (0, a.useEffect)(
            function () {
              M(), E();
            },
            [r, w, S]
          ),
          (0, a.useEffect)(function () {
            return M;
          }, []),
          [
            function (e) {
              e &&
                e !== h.current.element &&
                (M(),
                (h.current.element = e),
                (h.current.scrollContainers = wm(e)),
                E());
            },
            d,
            x,
          ]
        );
      }
      function wm(e) {
        var t = [];
        if (!e || e === document.body) return t;
        var n = window.getComputedStyle(e);
        return (
          [n.overflow, n.overflowX, n.overflowY].some(function (e) {
            return "auto" === e || "scroll" === e;
          }) && t.push(e),
          [].concat(t, (0, r.Z)(wm(e.parentElement)))
        );
      }
      var Mm = ["x", "y", "top", "bottom", "left", "right", "width", "height"],
        Em = function (e, t) {
          return Mm.every(function (n) {
            return e[n] === t[n];
          });
        },
        km = Object.defineProperty,
        Tm = Object.defineProperties,
        Am = Object.getOwnPropertyDescriptors,
        Cm = Object.getOwnPropertySymbols,
        Pm = Object.prototype.hasOwnProperty,
        Rm = Object.prototype.propertyIsEnumerable,
        Lm = function (e, t, n) {
          return t in e
            ? km(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: n,
              })
            : (e[t] = n);
        },
        Im = function (e, t) {
          for (var n in t || (t = {})) Pm.call(t, n) && Lm(e, n, t[n]);
          if (Cm) {
            var r,
              i = T(Cm(t));
            try {
              for (i.s(); !(r = i.n()).done; ) {
                n = r.value;
                Rm.call(t, n) && Lm(e, n, t[n]);
              }
            } catch (a) {
              i.e(a);
            } finally {
              i.f();
            }
          }
          return e;
        };
      function Nm(e, t, n) {
        if (e) {
          if (!0 === n(e)) return e;
          for (var r = t ? e.return : e.child; r; ) {
            var i = Nm(r, t, n);
            if (i) return i;
            r = t ? null : r.sibling;
          }
        }
      }
      function Om(e) {
        try {
          return Object.defineProperties(e, {
            _currentRenderer: {
              get: function () {
                return null;
              },
              set: function () {},
            },
            _currentRenderer2: {
              get: function () {
                return null;
              },
              set: function () {},
            },
          });
        } catch (t) {
          return e;
        }
      }
      var Dm = Om(a.createContext(null)),
        Um = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            return p(this, n), t.apply(this, arguments);
          }
          return (
            g(n, [
              {
                key: "render",
                value: function () {
                  return a.createElement(
                    Dm.Provider,
                    { value: this._reactInternals },
                    this.props.children
                  );
                },
              },
            ]),
            n
          );
        })(a.Component),
        zm = a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
        Fm = zm.ReactCurrentOwner,
        Bm = zm.ReactCurrentDispatcher;
      function Zm() {
        var e = a.useContext(Dm);
        if (null === e)
          throw new Error(
            "its-fine: useFiber must be called within a <FiberProvider />!"
          );
        var t = a.useId();
        return a.useMemo(
          function () {
            for (
              var n = 0,
                r = [
                  null == Fm ? void 0 : Fm.current,
                  e,
                  null == e ? void 0 : e.alternate,
                ];
              n < r.length;
              n++
            ) {
              var i = r[n];
              if (i) {
                var a = Nm(i, !1, function (e) {
                  for (var n = e.memoizedState; n; ) {
                    if (n.memoizedState === t) return !0;
                    n = n.next;
                  }
                });
                if (a) return a;
              }
            }
          },
          [e, t]
        );
      }
      function Hm() {
        var e = (function () {
          var e,
            t,
            n = Zm(),
            r = a.useState(function () {
              return new Map();
            }),
            o = (0, i.Z)(r, 1)[0];
          o.clear();
          for (var s = n; s; ) {
            var l = null == (e = s.type) ? void 0 : e._context;
            l &&
              l !== Dm &&
              !o.has(l) &&
              o.set(
                l,
                null == (t = null == Bm ? void 0 : Bm.current)
                  ? void 0
                  : t.readContext(Om(l))
              ),
              (s = s.return);
          }
          return o;
        })();
        return a.useMemo(
          function () {
            return Array.from(e.keys()).reduce(
              function (t, n) {
                return function (r) {
                  return a.createElement(
                    t,
                    null,
                    a.createElement(
                      n.Provider,
                      ((i = Im({}, r)), (o = { value: e.get(n) }), Tm(i, Am(o)))
                    )
                  );
                  var i, o;
                };
              },
              function (e) {
                return a.createElement(Um, Im({}, e));
              }
            );
          },
          [e]
        );
      }
      var Vm = [
          "children",
          "fallback",
          "resize",
          "style",
          "gl",
          "events",
          "eventSource",
          "eventPrefix",
          "shadows",
          "linear",
          "flat",
          "legacy",
          "orthographic",
          "frameloop",
          "dpr",
          "performance",
          "raycaster",
          "camera",
          "onPointerMissed",
          "onCreated",
        ],
        Gm = {
          onClick: ["click", !1],
          onContextMenu: ["contextmenu", !1],
          onDoubleClick: ["dblclick", !1],
          onWheel: ["wheel", !0],
          onPointerDown: ["pointerdown", !0],
          onPointerUp: ["pointerup", !0],
          onPointerLeave: ["pointerleave", !0],
          onPointerMove: ["pointermove", !0],
          onPointerCancel: ["pointercancel", !0],
          onLostPointerCapture: ["lostpointercapture", !0],
        };
      function Wm(e) {
        var t = Vv(e).handlePointer;
        return {
          priority: 1,
          enabled: !0,
          compute: function (e, t, n) {
            t.pointer.set(
              (e.offsetX / t.size.width) * 2 - 1,
              (-e.offsetY / t.size.height) * 2 + 1
            ),
              t.raycaster.setFromCamera(t.pointer, t.camera);
          },
          connected: void 0,
          handlers: Object.keys(Gm).reduce(function (e, n) {
            return (0, u.Z)((0, u.Z)({}, e), {}, (0, l.Z)({}, n, t(n)));
          }, {}),
          update: function () {
            var t,
              n = e.getState(),
              r = n.events,
              i = n.internal;
            null != (t = i.lastEvent) &&
              t.current &&
              r.handlers &&
              r.handlers.onPointerMove(i.lastEvent.current);
          },
          connect: function (t) {
            var n,
              r = e.getState(),
              a = r.set,
              o = r.events;
            null == o.disconnect || o.disconnect(),
              a(function (e) {
                return {
                  events: (0, u.Z)(
                    (0, u.Z)({}, e.events),
                    {},
                    { connected: t }
                  ),
                };
              }),
              Object.entries(null != (n = o.handlers) ? n : []).forEach(
                function (e) {
                  var n = (0, i.Z)(e, 2),
                    r = n[0],
                    a = n[1],
                    o = (0, i.Z)(Gm[r], 2),
                    s = o[0],
                    l = o[1];
                  t.addEventListener(s, a, { passive: l });
                }
              );
          },
          disconnect: function () {
            var t,
              n = e.getState(),
              r = n.set,
              a = n.events;
            a.connected &&
              (Object.entries(null != (t = a.handlers) ? t : []).forEach(
                function (e) {
                  var t = (0, i.Z)(e, 2),
                    n = t[0],
                    r = t[1];
                  if (a && a.connected instanceof HTMLElement) {
                    var o = (0, i.Z)(Gm[n], 1)[0];
                    a.connected.removeEventListener(o, r);
                  }
                }
              ),
              r(function (e) {
                return {
                  events: (0, u.Z)(
                    (0, u.Z)({}, e.events),
                    {},
                    { connected: void 0 }
                  ),
                };
              }));
          },
        };
      }
      var jm = a.forwardRef(function (t, n) {
          var r = t.children,
            o = t.fallback,
            l = t.resize,
            c = t.style,
            d = t.gl,
            f = t.events,
            h = void 0 === f ? Wm : f,
            p = t.eventSource,
            v = t.eventPrefix,
            m = t.shadows,
            g = t.linear,
            y = t.flat,
            b = t.legacy,
            _ = t.orthographic,
            x = t.frameloop,
            S = t.dpr,
            w = t.performance,
            M = t.raycaster,
            E = t.camera,
            k = t.onPointerMissed,
            T = t.onCreated,
            A = s(t, Vm);
          a.useMemo(function () {
            return (t = e), void Object.assign(mv, t);
            var t;
          }, []);
          var C = Hm(),
            P = Sm(
              (0, u.Z)({ scroll: !0, debounce: { scroll: 50, resize: 0 } }, l)
            ),
            R = (0, i.Z)(P, 2),
            L = R[0],
            I = R[1],
            N = a.useRef(null),
            O = a.useRef(null);
          a.useImperativeHandle(n, function () {
            return N.current;
          });
          var D = xv(k),
            U = a.useState(!1),
            z = (0, i.Z)(U, 2),
            F = z[0],
            B = z[1],
            Z = a.useState(!1),
            H = (0, i.Z)(Z, 2),
            V = H[0],
            G = H[1];
          if (F) throw F;
          if (V) throw V;
          var W = a.useRef(null);
          _v(function () {
            var e = N.current;
            I.width > 0 &&
              I.height > 0 &&
              e &&
              (W.current || (W.current = mm(e)),
              W.current.configure({
                gl: d,
                events: h,
                shadows: m,
                linear: g,
                flat: y,
                legacy: b,
                orthographic: _,
                frameloop: x,
                dpr: S,
                performance: w,
                raycaster: M,
                camera: E,
                size: I,
                onPointerMissed: function () {
                  return null == D.current
                    ? void 0
                    : D.current.apply(D, arguments);
                },
                onCreated: function (e) {
                  var t;
                  null == e.events.connect ||
                    e.events.connect(
                      p
                        ? (t = p) && t.hasOwnProperty("current")
                          ? p.current
                          : p
                        : O.current
                    ),
                    v &&
                      e.setEvents({
                        compute: function (e, t) {
                          var n = e[v + "X"],
                            r = e[v + "Y"];
                          t.pointer.set(
                            (n / t.size.width) * 2 - 1,
                            (-r / t.size.height) * 2 + 1
                          ),
                            t.raycaster.setFromCamera(t.pointer, t.camera);
                        },
                      }),
                    null == T || T(e);
                },
              }),
              W.current.render(
                a.createElement(
                  C,
                  null,
                  a.createElement(
                    wv,
                    { set: G },
                    a.createElement(
                      a.Suspense,
                      { fallback: a.createElement(Sv, { set: B }) },
                      r
                    )
                  )
                )
              ));
          }),
            a.useEffect(function () {
              var e = N.current;
              if (e)
                return function () {
                  return ym(e);
                };
            }, []);
          var j = p ? "none" : "auto";
          return a.createElement(
            "div",
            (0, bm.Z)(
              {
                ref: O,
                style: (0, u.Z)(
                  {
                    position: "relative",
                    width: "100%",
                    height: "100%",
                    overflow: "hidden",
                    pointerEvents: j,
                  },
                  c
                ),
              },
              A
            ),
            a.createElement(
              "div",
              { ref: L, style: { width: "100%", height: "100%" } },
              a.createElement(
                "canvas",
                { ref: N, style: { display: "block" } },
                o
              )
            )
          );
        }),
        Xm = a.forwardRef(function (e, t) {
          return a.createElement(
            Um,
            null,
            a.createElement(jm, (0, bm.Z)({}, e, { ref: t }))
          );
        }),
        qm = Object.defineProperty,
        Ym = function (e, t, n) {
          return (
            (function (e, t, n) {
              t in e
                ? qm(e, t, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: n,
                  })
                : (e[t] = n);
            })(e, "symbol" !== typeof t ? t + "" : t, n),
            n
          );
        },
        Km = function (e, t) {
          return ((e % t) + t) % t;
        },
        $m = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r) {
            var i;
            p(this, n),
              (i = t.call(this)),
              Ym(E(i), "object"),
              Ym(E(i), "domElement"),
              Ym(E(i), "enabled", !0),
              Ym(E(i), "target", new Zr()),
              Ym(E(i), "minDistance", 0),
              Ym(E(i), "maxDistance", 1 / 0),
              Ym(E(i), "minZoom", 0),
              Ym(E(i), "maxZoom", 1 / 0),
              Ym(E(i), "minPolarAngle", 0),
              Ym(E(i), "maxPolarAngle", Math.PI),
              Ym(E(i), "minAzimuthAngle", -1 / 0),
              Ym(E(i), "maxAzimuthAngle", 1 / 0),
              Ym(E(i), "enableDamping", !1),
              Ym(E(i), "dampingFactor", 0.05),
              Ym(E(i), "enableZoom", !0),
              Ym(E(i), "zoomSpeed", 1),
              Ym(E(i), "enableRotate", !0),
              Ym(E(i), "rotateSpeed", 1),
              Ym(E(i), "enablePan", !0),
              Ym(E(i), "panSpeed", 1),
              Ym(E(i), "screenSpacePanning", !0),
              Ym(E(i), "keyPanSpeed", 7),
              Ym(E(i), "autoRotate", !1),
              Ym(E(i), "autoRotateSpeed", 2),
              Ym(E(i), "reverseOrbit", !1),
              Ym(E(i), "keys", {
                LEFT: "ArrowLeft",
                UP: "ArrowUp",
                RIGHT: "ArrowRight",
                BOTTOM: "ArrowDown",
              }),
              Ym(E(i), "mouseButtons", {
                LEFT: O.ROTATE,
                MIDDLE: O.DOLLY,
                RIGHT: O.PAN,
              }),
              Ym(E(i), "touches", { ONE: D.ROTATE, TWO: D.DOLLY_PAN }),
              Ym(E(i), "target0"),
              Ym(E(i), "position0"),
              Ym(E(i), "zoom0"),
              Ym(E(i), "_domElementKeyEvents", null),
              Ym(E(i), "getPolarAngle"),
              Ym(E(i), "getAzimuthalAngle"),
              Ym(E(i), "setPolarAngle"),
              Ym(E(i), "setAzimuthalAngle"),
              Ym(E(i), "getDistance"),
              Ym(E(i), "listenToKeyEvents"),
              Ym(E(i), "saveState"),
              Ym(E(i), "reset"),
              Ym(E(i), "update"),
              Ym(E(i), "connect"),
              Ym(E(i), "dispose"),
              (i.object = e),
              (i.domElement = r),
              (i.target0 = i.target.clone()),
              (i.position0 = i.object.position.clone()),
              (i.zoom0 = i.object.zoom),
              (i.getPolarAngle = function () {
                return f.phi;
              }),
              (i.getAzimuthalAngle = function () {
                return f.theta;
              }),
              (i.setPolarAngle = function (e) {
                var t = Km(e, 2 * Math.PI),
                  n = f.phi;
                n < 0 && (n += 2 * Math.PI), t < 0 && (t += 2 * Math.PI);
                var r = Math.abs(t - n);
                2 * Math.PI - r < r &&
                  (t < n ? (t += 2 * Math.PI) : (n += 2 * Math.PI)),
                  (h.phi = t - n),
                  a.update();
              }),
              (i.setAzimuthalAngle = function (e) {
                var t = Km(e, 2 * Math.PI),
                  n = f.theta;
                n < 0 && (n += 2 * Math.PI), t < 0 && (t += 2 * Math.PI);
                var r = Math.abs(t - n);
                2 * Math.PI - r < r &&
                  (t < n ? (t += 2 * Math.PI) : (n += 2 * Math.PI)),
                  (h.theta = t - n),
                  a.update();
              }),
              (i.getDistance = function () {
                return a.object.position.distanceTo(a.target);
              }),
              (i.listenToKeyEvents = function (e) {
                e.addEventListener("keydown", Q), (i._domElementKeyEvents = e);
              }),
              (i.saveState = function () {
                a.target0.copy(a.target),
                  a.position0.copy(a.object.position),
                  (a.zoom0 = a.object.zoom);
              }),
              (i.reset = function () {
                a.target.copy(a.target0),
                  a.object.position.copy(a.position0),
                  (a.object.zoom = a.zoom0),
                  a.object.updateProjectionMatrix(),
                  a.dispatchEvent(o),
                  a.update(),
                  (c = u.NONE);
              }),
              (i.update = (function () {
                var t = new Zr(),
                  n = new Br().setFromUnitVectors(e.up, new Zr(0, 1, 0)),
                  r = n.clone().invert(),
                  i = new Zr(),
                  s = new Br(),
                  l = 2 * Math.PI;
                return function () {
                  var e = a.object.position;
                  t.copy(e).sub(a.target),
                    t.applyQuaternion(n),
                    f.setFromVector3(t),
                    a.autoRotate &&
                      c === u.NONE &&
                      R(((2 * Math.PI) / 60 / 60) * a.autoRotateSpeed),
                    a.enableDamping
                      ? ((f.theta += h.theta * a.dampingFactor),
                        (f.phi += h.phi * a.dampingFactor))
                      : ((f.theta += h.theta), (f.phi += h.phi));
                  var p = a.minAzimuthAngle,
                    y = a.maxAzimuthAngle;
                  return (
                    isFinite(p) &&
                      isFinite(y) &&
                      (p < -Math.PI ? (p += l) : p > Math.PI && (p -= l),
                      y < -Math.PI ? (y += l) : y > Math.PI && (y -= l),
                      (f.theta =
                        p <= y
                          ? Math.max(p, Math.min(y, f.theta))
                          : f.theta > (p + y) / 2
                          ? Math.max(p, f.theta)
                          : Math.min(y, f.theta))),
                    (f.phi = Math.max(
                      a.minPolarAngle,
                      Math.min(a.maxPolarAngle, f.phi)
                    )),
                    f.makeSafe(),
                    (f.radius *= v),
                    (f.radius = Math.max(
                      a.minDistance,
                      Math.min(a.maxDistance, f.radius)
                    )),
                    !0 === a.enableDamping
                      ? a.target.addScaledVector(m, a.dampingFactor)
                      : a.target.add(m),
                    t.setFromSpherical(f),
                    t.applyQuaternion(r),
                    e.copy(a.target).add(t),
                    a.object.lookAt(a.target),
                    !0 === a.enableDamping
                      ? ((h.theta *= 1 - a.dampingFactor),
                        (h.phi *= 1 - a.dampingFactor),
                        m.multiplyScalar(1 - a.dampingFactor))
                      : (h.set(0, 0, 0), m.set(0, 0, 0)),
                    (v = 1),
                    !!(
                      g ||
                      i.distanceToSquared(a.object.position) > d ||
                      8 * (1 - s.dot(a.object.quaternion)) > d
                    ) &&
                      (a.dispatchEvent(o),
                      i.copy(a.object.position),
                      s.copy(a.object.quaternion),
                      (g = !1),
                      !0)
                  );
                };
              })()),
              (i.connect = function (e) {
                e === document &&
                  console.error(
                    'THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'
                  ),
                  (a.domElement = e),
                  (a.domElement.style.touchAction = "none"),
                  a.domElement.addEventListener("contextmenu", ee),
                  a.domElement.addEventListener("pointerdown", q),
                  a.domElement.addEventListener("pointercancel", $),
                  a.domElement.addEventListener("wheel", J);
              }),
              (i.dispose = function () {
                var e, t, n, r, i, o;
                null == (e = a.domElement) ||
                  e.removeEventListener("contextmenu", ee),
                  null == (t = a.domElement) ||
                    t.removeEventListener("pointerdown", q),
                  null == (n = a.domElement) ||
                    n.removeEventListener("pointercancel", $),
                  null == (r = a.domElement) ||
                    r.removeEventListener("wheel", J),
                  null == (i = a.domElement) ||
                    i.ownerDocument.removeEventListener("pointermove", Y),
                  null == (o = a.domElement) ||
                    o.ownerDocument.removeEventListener("pointerup", K),
                  null !== a._domElementKeyEvents &&
                    a._domElementKeyEvents.removeEventListener("keydown", Q);
              });
            var a = E(i),
              o = { type: "change" },
              s = { type: "start" },
              l = { type: "end" },
              u = {
                NONE: -1,
                ROTATE: 0,
                DOLLY: 1,
                PAN: 2,
                TOUCH_ROTATE: 3,
                TOUCH_PAN: 4,
                TOUCH_DOLLY_PAN: 5,
                TOUCH_DOLLY_ROTATE: 6,
              },
              c = u.NONE,
              d = 1e-6,
              f = new Xh(),
              h = new Xh(),
              v = 1,
              m = new Zr(),
              g = !1,
              y = new dr(),
              b = new dr(),
              _ = new dr(),
              x = new dr(),
              S = new dr(),
              w = new dr(),
              M = new dr(),
              k = new dr(),
              T = new dr(),
              A = [],
              C = {};
            function P() {
              return Math.pow(0.95, a.zoomSpeed);
            }
            function R(e) {
              a.reverseOrbit ? (h.theta += e) : (h.theta -= e);
            }
            function L(e) {
              a.reverseOrbit ? (h.phi += e) : (h.phi -= e);
            }
            var I = (function () {
                var e = new Zr();
                return function (t, n) {
                  e.setFromMatrixColumn(n, 0), e.multiplyScalar(-t), m.add(e);
                };
              })(),
              N = (function () {
                var e = new Zr();
                return function (t, n) {
                  !0 === a.screenSpacePanning
                    ? e.setFromMatrixColumn(n, 1)
                    : (e.setFromMatrixColumn(n, 0),
                      e.crossVectors(a.object.up, e)),
                    e.multiplyScalar(t),
                    m.add(e);
                };
              })(),
              U = (function () {
                var e = new Zr();
                return function (t, n) {
                  var r = a.domElement;
                  if (
                    r &&
                    a.object instanceof lo &&
                    a.object.isPerspectiveCamera
                  ) {
                    var i = a.object.position;
                    e.copy(i).sub(a.target);
                    var o = e.length();
                    (o *= Math.tan(((a.object.fov / 2) * Math.PI) / 180)),
                      I((2 * t * o) / r.clientHeight, a.object.matrix),
                      N((2 * n * o) / r.clientHeight, a.object.matrix);
                  } else
                    r && a.object instanceof No && a.object.isOrthographicCamera
                      ? (I(
                          (t * (a.object.right - a.object.left)) /
                            a.object.zoom /
                            r.clientWidth,
                          a.object.matrix
                        ),
                        N(
                          (n * (a.object.top - a.object.bottom)) /
                            a.object.zoom /
                            r.clientHeight,
                          a.object.matrix
                        ))
                      : (console.warn(
                          "WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."
                        ),
                        (a.enablePan = !1));
                };
              })();
            function z(e) {
              a.object instanceof lo && a.object.isPerspectiveCamera
                ? (v /= e)
                : a.object instanceof No && a.object.isOrthographicCamera
                ? ((a.object.zoom = Math.max(
                    a.minZoom,
                    Math.min(a.maxZoom, a.object.zoom * e)
                  )),
                  a.object.updateProjectionMatrix(),
                  (g = !0))
                : (console.warn(
                    "WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."
                  ),
                  (a.enableZoom = !1));
            }
            function F(e) {
              a.object instanceof lo && a.object.isPerspectiveCamera
                ? (v *= e)
                : a.object instanceof No && a.object.isOrthographicCamera
                ? ((a.object.zoom = Math.max(
                    a.minZoom,
                    Math.min(a.maxZoom, a.object.zoom / e)
                  )),
                  a.object.updateProjectionMatrix(),
                  (g = !0))
                : (console.warn(
                    "WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."
                  ),
                  (a.enableZoom = !1));
            }
            function B(e) {
              y.set(e.clientX, e.clientY);
            }
            function Z(e) {
              x.set(e.clientX, e.clientY);
            }
            function H() {
              if (1 == A.length) y.set(A[0].pageX, A[0].pageY);
              else {
                var e = 0.5 * (A[0].pageX + A[1].pageX),
                  t = 0.5 * (A[0].pageY + A[1].pageY);
                y.set(e, t);
              }
            }
            function V() {
              if (1 == A.length) x.set(A[0].pageX, A[0].pageY);
              else {
                var e = 0.5 * (A[0].pageX + A[1].pageX),
                  t = 0.5 * (A[0].pageY + A[1].pageY);
                x.set(e, t);
              }
            }
            function G() {
              var e = A[0].pageX - A[1].pageX,
                t = A[0].pageY - A[1].pageY,
                n = Math.sqrt(e * e + t * t);
              M.set(0, n);
            }
            function W(e) {
              if (1 == A.length) b.set(e.pageX, e.pageY);
              else {
                var t = re(e),
                  n = 0.5 * (e.pageX + t.x),
                  r = 0.5 * (e.pageY + t.y);
                b.set(n, r);
              }
              _.subVectors(b, y).multiplyScalar(a.rotateSpeed);
              var i = a.domElement;
              i &&
                (R((2 * Math.PI * _.x) / i.clientHeight),
                L((2 * Math.PI * _.y) / i.clientHeight)),
                y.copy(b);
            }
            function j(e) {
              if (1 == A.length) S.set(e.pageX, e.pageY);
              else {
                var t = re(e),
                  n = 0.5 * (e.pageX + t.x),
                  r = 0.5 * (e.pageY + t.y);
                S.set(n, r);
              }
              w.subVectors(S, x).multiplyScalar(a.panSpeed),
                U(w.x, w.y),
                x.copy(S);
            }
            function X(e) {
              var t = re(e),
                n = e.pageX - t.x,
                r = e.pageY - t.y,
                i = Math.sqrt(n * n + r * r);
              k.set(0, i),
                T.set(0, Math.pow(k.y / M.y, a.zoomSpeed)),
                z(T.y),
                M.copy(k);
            }
            function q(e) {
              var t, n;
              !1 !== a.enabled &&
                (0 === A.length &&
                  (null == (t = a.domElement) ||
                    t.ownerDocument.addEventListener("pointermove", Y),
                  null == (n = a.domElement) ||
                    n.ownerDocument.addEventListener("pointerup", K)),
                (function (e) {
                  A.push(e);
                })(e),
                "touch" === e.pointerType
                  ? (function (e) {
                      switch ((ne(e), A.length)) {
                        case 1:
                          switch (a.touches.ONE) {
                            case D.ROTATE:
                              if (!1 === a.enableRotate) return;
                              H(), (c = u.TOUCH_ROTATE);
                              break;
                            case D.PAN:
                              if (!1 === a.enablePan) return;
                              V(), (c = u.TOUCH_PAN);
                              break;
                            default:
                              c = u.NONE;
                          }
                          break;
                        case 2:
                          switch (a.touches.TWO) {
                            case D.DOLLY_PAN:
                              if (!1 === a.enableZoom && !1 === a.enablePan)
                                return;
                              a.enableZoom && G(),
                                a.enablePan && V(),
                                (c = u.TOUCH_DOLLY_PAN);
                              break;
                            case D.DOLLY_ROTATE:
                              if (!1 === a.enableZoom && !1 === a.enableRotate)
                                return;
                              a.enableZoom && G(),
                                a.enableRotate && H(),
                                (c = u.TOUCH_DOLLY_ROTATE);
                              break;
                            default:
                              c = u.NONE;
                          }
                          break;
                        default:
                          c = u.NONE;
                      }
                      c !== u.NONE && a.dispatchEvent(s);
                    })(e)
                  : (function (e) {
                      var t;
                      switch (e.button) {
                        case 0:
                          t = a.mouseButtons.LEFT;
                          break;
                        case 1:
                          t = a.mouseButtons.MIDDLE;
                          break;
                        case 2:
                          t = a.mouseButtons.RIGHT;
                          break;
                        default:
                          t = -1;
                      }
                      switch (t) {
                        case O.DOLLY:
                          if (!1 === a.enableZoom) return;
                          !(function (e) {
                            M.set(e.clientX, e.clientY);
                          })(e),
                            (c = u.DOLLY);
                          break;
                        case O.ROTATE:
                          if (e.ctrlKey || e.metaKey || e.shiftKey) {
                            if (!1 === a.enablePan) return;
                            Z(e), (c = u.PAN);
                          } else {
                            if (!1 === a.enableRotate) return;
                            B(e), (c = u.ROTATE);
                          }
                          break;
                        case O.PAN:
                          if (e.ctrlKey || e.metaKey || e.shiftKey) {
                            if (!1 === a.enableRotate) return;
                            B(e), (c = u.ROTATE);
                          } else {
                            if (!1 === a.enablePan) return;
                            Z(e), (c = u.PAN);
                          }
                          break;
                        default:
                          c = u.NONE;
                      }
                      c !== u.NONE && a.dispatchEvent(s);
                    })(e));
            }
            function Y(e) {
              !1 !== a.enabled &&
                ("touch" === e.pointerType
                  ? (function (e) {
                      switch ((ne(e), c)) {
                        case u.TOUCH_ROTATE:
                          if (!1 === a.enableRotate) return;
                          W(e), a.update();
                          break;
                        case u.TOUCH_PAN:
                          if (!1 === a.enablePan) return;
                          j(e), a.update();
                          break;
                        case u.TOUCH_DOLLY_PAN:
                          if (!1 === a.enableZoom && !1 === a.enablePan) return;
                          !(function (e) {
                            a.enableZoom && X(e), a.enablePan && j(e);
                          })(e),
                            a.update();
                          break;
                        case u.TOUCH_DOLLY_ROTATE:
                          if (!1 === a.enableZoom && !1 === a.enableRotate)
                            return;
                          !(function (e) {
                            a.enableZoom && X(e), a.enableRotate && W(e);
                          })(e),
                            a.update();
                          break;
                        default:
                          c = u.NONE;
                      }
                    })(e)
                  : (function (e) {
                      if (!1 === a.enabled) return;
                      switch (c) {
                        case u.ROTATE:
                          if (!1 === a.enableRotate) return;
                          !(function (e) {
                            b.set(e.clientX, e.clientY),
                              _.subVectors(b, y).multiplyScalar(a.rotateSpeed);
                            var t = a.domElement;
                            t &&
                              (R((2 * Math.PI * _.x) / t.clientHeight),
                              L((2 * Math.PI * _.y) / t.clientHeight)),
                              y.copy(b),
                              a.update();
                          })(e);
                          break;
                        case u.DOLLY:
                          if (!1 === a.enableZoom) return;
                          !(function (e) {
                            k.set(e.clientX, e.clientY),
                              T.subVectors(k, M),
                              T.y > 0 ? z(P()) : T.y < 0 && F(P()),
                              M.copy(k),
                              a.update();
                          })(e);
                          break;
                        case u.PAN:
                          if (!1 === a.enablePan) return;
                          !(function (e) {
                            S.set(e.clientX, e.clientY),
                              w.subVectors(S, x).multiplyScalar(a.panSpeed),
                              U(w.x, w.y),
                              x.copy(S),
                              a.update();
                          })(e);
                      }
                    })(e));
            }
            function K(e) {
              var t, n, r;
              te(e),
                0 === A.length &&
                  (null == (t = a.domElement) ||
                    t.releasePointerCapture(e.pointerId),
                  null == (n = a.domElement) ||
                    n.ownerDocument.removeEventListener("pointermove", Y),
                  null == (r = a.domElement) ||
                    r.ownerDocument.removeEventListener("pointerup", K)),
                a.dispatchEvent(l),
                (c = u.NONE);
            }
            function $(e) {
              te(e);
            }
            function J(e) {
              !1 === a.enabled ||
                !1 === a.enableZoom ||
                (c !== u.NONE && c !== u.ROTATE) ||
                (e.preventDefault(),
                a.dispatchEvent(s),
                (function (e) {
                  e.deltaY < 0 ? F(P()) : e.deltaY > 0 && z(P()), a.update();
                })(e),
                a.dispatchEvent(l));
            }
            function Q(e) {
              !1 !== a.enabled &&
                !1 !== a.enablePan &&
                (function (e) {
                  var t = !1;
                  switch (e.code) {
                    case a.keys.UP:
                      U(0, a.keyPanSpeed), (t = !0);
                      break;
                    case a.keys.BOTTOM:
                      U(0, -a.keyPanSpeed), (t = !0);
                      break;
                    case a.keys.LEFT:
                      U(a.keyPanSpeed, 0), (t = !0);
                      break;
                    case a.keys.RIGHT:
                      U(-a.keyPanSpeed, 0), (t = !0);
                  }
                  t && (e.preventDefault(), a.update());
                })(e);
            }
            function ee(e) {
              !1 !== a.enabled && e.preventDefault();
            }
            function te(e) {
              delete C[e.pointerId];
              for (var t = 0; t < A.length; t++)
                if (A[t].pointerId == e.pointerId) return void A.splice(t, 1);
            }
            function ne(e) {
              var t = C[e.pointerId];
              void 0 === t && ((t = new dr()), (C[e.pointerId] = t)),
                t.set(e.pageX, e.pageY);
            }
            function re(e) {
              var t = e.pointerId === A[0].pointerId ? A[1] : A[0];
              return C[t.pointerId];
            }
            return void 0 !== r && i.connect(r), i.update(), i;
          }
          return g(n);
        })(Kn),
        Jm = [
          "makeDefault",
          "camera",
          "regress",
          "domElement",
          "enableDamping",
          "onChange",
          "onStart",
          "onEnd",
        ],
        Qm = a.forwardRef(function (e, t) {
          var n = e.makeDefault,
            r = e.camera,
            i = e.regress,
            o = e.domElement,
            l = e.enableDamping,
            u = void 0 === l || l,
            c = e.onChange,
            d = e.onStart,
            f = e.onEnd,
            h = s(e, Jm),
            p = im(function (e) {
              return e.invalidate;
            }),
            v = im(function (e) {
              return e.camera;
            }),
            m = im(function (e) {
              return e.gl;
            }),
            g = im(function (e) {
              return e.events;
            }),
            y = im(function (e) {
              return e.setEvents;
            }),
            b = im(function (e) {
              return e.set;
            }),
            _ = im(function (e) {
              return e.get;
            }),
            x = im(function (e) {
              return e.performance;
            }),
            S = r || v,
            w = o || g.connected || m.domElement,
            M = a.useMemo(
              function () {
                return new $m(S);
              },
              [S]
            );
          return (
            (function (e) {
              var t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : 0,
                n = rm(),
                r = n.getState().internal.subscribe,
                i = xv(e);
              _v(
                function () {
                  return r(i, t, n);
                },
                [t, r, n]
              );
            })(function () {
              M.enabled && M.update();
            }, -1),
            a.useEffect(
              function () {
                return (
                  M.connect(w),
                  function () {
                    M.dispose();
                  }
                );
              },
              [w, i, M, p]
            ),
            a.useEffect(
              function () {
                var e = function (e) {
                    p(), i && x.regress(), c && c(e);
                  },
                  t = function (e) {
                    d && d(e);
                  },
                  n = function (e) {
                    f && f(e);
                  };
                return (
                  M.addEventListener("change", e),
                  M.addEventListener("start", t),
                  M.addEventListener("end", n),
                  function () {
                    M.removeEventListener("start", t),
                      M.removeEventListener("end", n),
                      M.removeEventListener("change", e);
                  }
                );
              },
              [c, d, f, M, p, y]
            ),
            a.useEffect(
              function () {
                if (n) {
                  var e = _().controls;
                  return (
                    b({ controls: M }),
                    function () {
                      return b({ controls: e });
                    }
                  );
                }
              },
              [n, M]
            ),
            a.createElement(
              "primitive",
              (0, bm.Z)({ ref: t, object: M, enableDamping: u }, h)
            )
          );
        }),
        eg = /^[og]\s*(.+)?/,
        tg = /^mtllib /,
        ng = /^usemtl /,
        rg = /^usemap /,
        ig = /\s+/,
        ag = new Zr(),
        og = new Zr(),
        sg = new Zr(),
        lg = new Zr(),
        ug = new Zr(),
        cg = new sa();
      function dg() {
        var e = {
          objects: [],
          object: {},
          vertices: [],
          normals: [],
          colors: [],
          uvs: [],
          materials: {},
          materialLibraries: [],
          startObject: function (e, t) {
            if (this.object && !1 === this.object.fromDeclaration)
              return (
                (this.object.name = e),
                void (this.object.fromDeclaration = !1 !== t)
              );
            var n =
              this.object && "function" === typeof this.object.currentMaterial
                ? this.object.currentMaterial()
                : void 0;
            if (
              (this.object &&
                "function" === typeof this.object._finalize &&
                this.object._finalize(!0),
              (this.object = {
                name: e || "",
                fromDeclaration: !1 !== t,
                geometry: {
                  vertices: [],
                  normals: [],
                  colors: [],
                  uvs: [],
                  hasUVIndices: !1,
                },
                materials: [],
                smooth: !0,
                startMaterial: function (e, t) {
                  var n = this._finalize(!1);
                  n &&
                    (n.inherited || n.groupCount <= 0) &&
                    this.materials.splice(n.index, 1);
                  var r = {
                    index: this.materials.length,
                    name: e || "",
                    mtllib:
                      Array.isArray(t) && t.length > 0 ? t[t.length - 1] : "",
                    smooth: void 0 !== n ? n.smooth : this.smooth,
                    groupStart: void 0 !== n ? n.groupEnd : 0,
                    groupEnd: -1,
                    groupCount: -1,
                    inherited: !1,
                    clone: function (e) {
                      var t = {
                        index: "number" === typeof e ? e : this.index,
                        name: this.name,
                        mtllib: this.mtllib,
                        smooth: this.smooth,
                        groupStart: 0,
                        groupEnd: -1,
                        groupCount: -1,
                        inherited: !1,
                      };
                      return (t.clone = this.clone.bind(t)), t;
                    },
                  };
                  return this.materials.push(r), r;
                },
                currentMaterial: function () {
                  if (this.materials.length > 0)
                    return this.materials[this.materials.length - 1];
                },
                _finalize: function (e) {
                  var t = this.currentMaterial();
                  if (
                    (t &&
                      -1 === t.groupEnd &&
                      ((t.groupEnd = this.geometry.vertices.length / 3),
                      (t.groupCount = t.groupEnd - t.groupStart),
                      (t.inherited = !1)),
                    e && this.materials.length > 1)
                  )
                    for (var n = this.materials.length - 1; n >= 0; n--)
                      this.materials[n].groupCount <= 0 &&
                        this.materials.splice(n, 1);
                  return (
                    e &&
                      0 === this.materials.length &&
                      this.materials.push({ name: "", smooth: this.smooth }),
                    t
                  );
                },
              }),
              n && n.name && "function" === typeof n.clone)
            ) {
              var r = n.clone(0);
              (r.inherited = !0), this.object.materials.push(r);
            }
            this.objects.push(this.object);
          },
          finalize: function () {
            this.object &&
              "function" === typeof this.object._finalize &&
              this.object._finalize(!0);
          },
          parseVertexIndex: function (e, t) {
            var n = parseInt(e, 10);
            return 3 * (n >= 0 ? n - 1 : n + t / 3);
          },
          parseNormalIndex: function (e, t) {
            var n = parseInt(e, 10);
            return 3 * (n >= 0 ? n - 1 : n + t / 3);
          },
          parseUVIndex: function (e, t) {
            var n = parseInt(e, 10);
            return 2 * (n >= 0 ? n - 1 : n + t / 2);
          },
          addVertex: function (e, t, n) {
            var r = this.vertices,
              i = this.object.geometry.vertices;
            i.push(r[e + 0], r[e + 1], r[e + 2]),
              i.push(r[t + 0], r[t + 1], r[t + 2]),
              i.push(r[n + 0], r[n + 1], r[n + 2]);
          },
          addVertexPoint: function (e) {
            var t = this.vertices;
            this.object.geometry.vertices.push(t[e + 0], t[e + 1], t[e + 2]);
          },
          addVertexLine: function (e) {
            var t = this.vertices;
            this.object.geometry.vertices.push(t[e + 0], t[e + 1], t[e + 2]);
          },
          addNormal: function (e, t, n) {
            var r = this.normals,
              i = this.object.geometry.normals;
            i.push(r[e + 0], r[e + 1], r[e + 2]),
              i.push(r[t + 0], r[t + 1], r[t + 2]),
              i.push(r[n + 0], r[n + 1], r[n + 2]);
          },
          addFaceNormal: function (e, t, n) {
            var r = this.vertices,
              i = this.object.geometry.normals;
            ag.fromArray(r, e),
              og.fromArray(r, t),
              sg.fromArray(r, n),
              ug.subVectors(sg, og),
              lg.subVectors(ag, og),
              ug.cross(lg),
              ug.normalize(),
              i.push(ug.x, ug.y, ug.z),
              i.push(ug.x, ug.y, ug.z),
              i.push(ug.x, ug.y, ug.z);
          },
          addColor: function (e, t, n) {
            var r = this.colors,
              i = this.object.geometry.colors;
            void 0 !== r[e] && i.push(r[e + 0], r[e + 1], r[e + 2]),
              void 0 !== r[t] && i.push(r[t + 0], r[t + 1], r[t + 2]),
              void 0 !== r[n] && i.push(r[n + 0], r[n + 1], r[n + 2]);
          },
          addUV: function (e, t, n) {
            var r = this.uvs,
              i = this.object.geometry.uvs;
            i.push(r[e + 0], r[e + 1]),
              i.push(r[t + 0], r[t + 1]),
              i.push(r[n + 0], r[n + 1]);
          },
          addDefaultUV: function () {
            var e = this.object.geometry.uvs;
            e.push(0, 0), e.push(0, 0), e.push(0, 0);
          },
          addUVLine: function (e) {
            var t = this.uvs;
            this.object.geometry.uvs.push(t[e + 0], t[e + 1]);
          },
          addFace: function (e, t, n, r, i, a, o, s, l) {
            var u = this.vertices.length,
              c = this.parseVertexIndex(e, u),
              d = this.parseVertexIndex(t, u),
              f = this.parseVertexIndex(n, u);
            if (
              (this.addVertex(c, d, f),
              this.addColor(c, d, f),
              void 0 !== o && "" !== o)
            ) {
              var h = this.normals.length;
              (c = this.parseNormalIndex(o, h)),
                (d = this.parseNormalIndex(s, h)),
                (f = this.parseNormalIndex(l, h)),
                this.addNormal(c, d, f);
            } else this.addFaceNormal(c, d, f);
            if (void 0 !== r && "" !== r) {
              var p = this.uvs.length;
              (c = this.parseUVIndex(r, p)),
                (d = this.parseUVIndex(i, p)),
                (f = this.parseUVIndex(a, p)),
                this.addUV(c, d, f),
                (this.object.geometry.hasUVIndices = !0);
            } else this.addDefaultUV();
          },
          addPointGeometry: function (e) {
            this.object.geometry.type = "Points";
            for (
              var t = this.vertices.length, n = 0, r = e.length;
              n < r;
              n++
            ) {
              var i = this.parseVertexIndex(e[n], t);
              this.addVertexPoint(i), this.addColor(i);
            }
          },
          addLineGeometry: function (e, t) {
            this.object.geometry.type = "Line";
            for (
              var n = this.vertices.length,
                r = this.uvs.length,
                i = 0,
                a = e.length;
              i < a;
              i++
            )
              this.addVertexLine(this.parseVertexIndex(e[i], n));
            for (var o = 0, s = t.length; o < s; o++)
              this.addUVLine(this.parseUVIndex(t[o], r));
          },
        };
        return e.startObject("", !1), e;
      }
      var fg = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return p(this, n), ((r = t.call(this, e)).materials = null), r;
          }
          return (
            g(n, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = this,
                    a = new wf(this.manager);
                  a.setPath(this.path),
                    a.setRequestHeader(this.requestHeader),
                    a.setWithCredentials(this.withCredentials),
                    a.load(
                      e,
                      function (n) {
                        try {
                          t(i.parse(n));
                        } catch (a) {
                          r ? r(a) : console.error(a), i.manager.itemError(e);
                        }
                      },
                      n,
                      r
                    );
                },
              },
              {
                key: "setMaterials",
                value: function (e) {
                  return (this.materials = e), this;
                },
              },
              {
                key: "parse",
                value: function (e) {
                  var t = new dg();
                  -1 !== e.indexOf("\r\n") && (e = e.replace(/\r\n/g, "\n")),
                    -1 !== e.indexOf("\\\n") && (e = e.replace(/\\\n/g, ""));
                  for (
                    var n = e.split("\n"), r = [], i = 0, a = n.length;
                    i < a;
                    i++
                  ) {
                    var o = n[i].trimStart();
                    if (0 !== o.length) {
                      var s = o.charAt(0);
                      if ("#" !== s)
                        if ("v" === s) {
                          var l = o.split(ig);
                          switch (l[0]) {
                            case "v":
                              t.vertices.push(
                                parseFloat(l[1]),
                                parseFloat(l[2]),
                                parseFloat(l[3])
                              ),
                                l.length >= 7
                                  ? (cg
                                      .setRGB(
                                        parseFloat(l[4]),
                                        parseFloat(l[5]),
                                        parseFloat(l[6])
                                      )
                                      .convertSRGBToLinear(),
                                    t.colors.push(cg.r, cg.g, cg.b))
                                  : t.colors.push(void 0, void 0, void 0);
                              break;
                            case "vn":
                              t.normals.push(
                                parseFloat(l[1]),
                                parseFloat(l[2]),
                                parseFloat(l[3])
                              );
                              break;
                            case "vt":
                              t.uvs.push(parseFloat(l[1]), parseFloat(l[2]));
                          }
                        } else if ("f" === s) {
                          for (
                            var u = o.slice(1).trim().split(ig),
                              c = [],
                              d = 0,
                              f = u.length;
                            d < f;
                            d++
                          ) {
                            var h = u[d];
                            if (h.length > 0) {
                              var p = h.split("/");
                              c.push(p);
                            }
                          }
                          for (
                            var v = c[0], m = 1, g = c.length - 1;
                            m < g;
                            m++
                          ) {
                            var y = c[m],
                              b = c[m + 1];
                            t.addFace(
                              v[0],
                              y[0],
                              b[0],
                              v[1],
                              y[1],
                              b[1],
                              v[2],
                              y[2],
                              b[2]
                            );
                          }
                        } else if ("l" === s) {
                          var _ = o.substring(1).trim().split(" "),
                            x = [],
                            S = [];
                          if (-1 === o.indexOf("/")) x = _;
                          else
                            for (var w = 0, M = _.length; w < M; w++) {
                              var E = _[w].split("/");
                              "" !== E[0] && x.push(E[0]),
                                "" !== E[1] && S.push(E[1]);
                            }
                          t.addLineGeometry(x, S);
                        } else if ("p" === s) {
                          var k = o.slice(1).trim().split(" ");
                          t.addPointGeometry(k);
                        } else if (null !== (r = eg.exec(o))) {
                          var T = (" " + r[0].slice(1).trim()).slice(1);
                          t.startObject(T);
                        } else if (ng.test(o))
                          t.object.startMaterial(
                            o.substring(7).trim(),
                            t.materialLibraries
                          );
                        else if (tg.test(o))
                          t.materialLibraries.push(o.substring(7).trim());
                        else if (rg.test(o))
                          console.warn(
                            'THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.'
                          );
                        else if ("s" === s) {
                          if ((r = o.split(" ")).length > 1) {
                            var A = r[1].trim().toLowerCase();
                            t.object.smooth = "0" !== A && "off" !== A;
                          } else t.object.smooth = !0;
                          var C = t.object.currentMaterial();
                          C && (C.smooth = t.object.smooth);
                        } else {
                          if ("\0" === o) continue;
                          console.warn(
                            'THREE.OBJLoader: Unexpected line: "' + o + '"'
                          );
                        }
                    }
                  }
                  t.finalize();
                  var P = new Wl();
                  if (
                    ((P.materialLibraries = [].concat(t.materialLibraries)),
                    !0 ===
                      !(
                        1 === t.objects.length &&
                        0 === t.objects[0].geometry.vertices.length
                      ))
                  )
                    for (var R = 0, L = t.objects.length; R < L; R++) {
                      var I = t.objects[R],
                        N = I.geometry,
                        O = I.materials,
                        D = "Line" === N.type,
                        U = "Points" === N.type,
                        z = !1;
                      if (0 !== N.vertices.length) {
                        var F = new Oa();
                        F.setAttribute("position", new ka(N.vertices, 3)),
                          N.normals.length > 0 &&
                            F.setAttribute("normal", new ka(N.normals, 3)),
                          N.colors.length > 0 &&
                            ((z = !0),
                            F.setAttribute("color", new ka(N.colors, 3))),
                          !0 === N.hasUVIndices &&
                            F.setAttribute("uv", new ka(N.uvs, 2));
                        for (var B = [], Z = 0, H = O.length; Z < H; Z++) {
                          var V = O[Z],
                            G = V.name + "_" + V.smooth + "_" + z,
                            W = t.materials[G];
                          if (null !== this.materials)
                            if (
                              ((W = this.materials.create(V.name)),
                              !D || !W || W instanceof ju)
                            ) {
                              if (U && W && !(W instanceof rc)) {
                                var j = new rc({
                                  size: 10,
                                  sizeAttenuation: !1,
                                });
                                na.prototype.copy.call(j, W),
                                  j.color.copy(W.color),
                                  (j.map = W.map),
                                  (W = j);
                              }
                            } else {
                              var X = new ju();
                              na.prototype.copy.call(X, W),
                                X.color.copy(W.color),
                                (W = X);
                            }
                          void 0 === W &&
                            (((W = D
                              ? new ju()
                              : U
                              ? new rc({ size: 1, sizeAttenuation: !1 })
                              : new Hd()).name = V.name),
                            (W.flatShading = !V.smooth),
                            (W.vertexColors = z),
                            (t.materials[G] = W)),
                            B.push(W);
                        }
                        var q = void 0;
                        if (B.length > 1) {
                          for (var Y = 0, K = O.length; Y < K; Y++) {
                            var $ = O[Y];
                            F.addGroup($.groupStart, $.groupCount, Y);
                          }
                          q = D
                            ? new tc(F, B)
                            : U
                            ? new lc(F, B)
                            : new Qa(F, B);
                        } else
                          q = D
                            ? new tc(F, B[0])
                            : U
                            ? new lc(F, B[0])
                            : new Qa(F, B[0]);
                        (q.name = I.name), P.add(q);
                      }
                    }
                  else if (t.vertices.length > 0) {
                    var J = new rc({ size: 1, sizeAttenuation: !1 }),
                      Q = new Oa();
                    Q.setAttribute("position", new ka(t.vertices, 3)),
                      t.colors.length > 0 &&
                        void 0 !== t.colors[0] &&
                        (Q.setAttribute("color", new ka(t.colors, 3)),
                        (J.vertexColors = !0));
                    var ee = new lc(Q, J);
                    P.add(ee);
                  }
                  return P;
                },
              },
            ]),
            n
          );
        })(_f),
        hg = n(184);
      function pg(e) {
        var t = null,
          n = e.texture ? e.texture : "Cat_color_1",
          r = om(fg, "Toon_Cat_Thin.obj").children[0].geometry;
        return (
          "" !== n && (t = om(Cf, "textures/".concat(n, ".png"))),
          (0, hg.jsxs)("mesh", {
            scale: 5,
            children: [
              (0, hg.jsx)(
                "bufferGeometry",
                (0, u.Z)({ attach: "geometry" }, r)
              ),
              (0, hg.jsx)("meshStandardMaterial", { map: t || null }),
            ],
          })
        );
      }
      var vg = function (e, t) {
          return void 0 === e && (e = t), Array.isArray(e) ? e : [e, e];
        },
        mg = function (e, t) {
          return [e[0] + t[0], e[1] + t[1]];
        },
        gg = function (e, t) {
          return [e[0] - t[0], e[1] - t[1]];
        },
        yg = function (e, t) {
          (e[0] += t[0]), (e[1] += t[1]);
        };
      function bg(e, t, n) {
        return 0 === t || Math.abs(t) === 1 / 0
          ? Math.pow(e, 5 * n)
          : (e * t * n) / (t + n * e);
      }
      function _g(e, t, n) {
        var r =
          arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0.15;
        return 0 === r
          ? (function (e, t, n) {
              return Math.max(t, Math.min(e, n));
            })(e, t, n)
          : e < t
          ? -bg(t - e, n - t, r) + t
          : e > n
          ? +bg(e - n, n - t, r) + n
          : e;
      }
      function xg(e) {
        var t = (function (e, t) {
          if ("object" !== typeof e || null === e) return e;
          var n = e[Symbol.toPrimitive];
          if (void 0 !== n) {
            var r = n.call(e, t || "default");
            if ("object" !== typeof r) return r;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === t ? String : Number)(e);
        })(e, "string");
        return "symbol" === typeof t ? t : String(t);
      }
      function Sg(e, t, n) {
        return (
          (t = xg(t)) in e
            ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = n),
          e
        );
      }
      function wg(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
          var r = Object.getOwnPropertySymbols(e);
          t &&
            (r = r.filter(function (t) {
              return Object.getOwnPropertyDescriptor(e, t).enumerable;
            })),
            n.push.apply(n, r);
        }
        return n;
      }
      function Mg(e) {
        for (var t = 1; t < arguments.length; t++) {
          var n = null != arguments[t] ? arguments[t] : {};
          t % 2
            ? wg(Object(n), !0).forEach(function (t) {
                Sg(e, t, n[t]);
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
            : wg(Object(n)).forEach(function (t) {
                Object.defineProperty(
                  e,
                  t,
                  Object.getOwnPropertyDescriptor(n, t)
                );
              });
        }
        return e;
      }
      var Eg = {
        pointer: { start: "down", change: "move", end: "up" },
        mouse: { start: "down", change: "move", end: "up" },
        touch: { start: "start", change: "move", end: "end" },
        gesture: { start: "start", change: "change", end: "end" },
      };
      function kg(e) {
        return e ? e[0].toUpperCase() + e.slice(1) : "";
      }
      var Tg = ["enter", "leave"];
      function Ag(e) {
        var t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "",
          n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
          r = Eg[e],
          i = (r && r[t]) || t;
        return (
          "on" +
          kg(e) +
          kg(i) +
          ((function () {
            var e = arguments.length > 1 ? arguments[1] : void 0;
            return (
              arguments.length > 0 &&
              void 0 !== arguments[0] &&
              arguments[0] &&
              !Tg.includes(e)
            );
          })(n, i)
            ? "Capture"
            : "")
        );
      }
      var Cg = ["gotpointercapture", "lostpointercapture"];
      function Pg(e) {
        var t = e.substring(2).toLowerCase(),
          n = !!~t.indexOf("passive");
        n && (t = t.replace("passive", ""));
        var r = Cg.includes(t) ? "capturecapture" : "capture",
          i = !!~t.indexOf(r);
        return (
          i && (t = t.replace("capture", "")),
          { device: t, capture: i, passive: n }
        );
      }
      function Rg(e) {
        return "touches" in e;
      }
      function Lg(e) {
        return Rg(e) ? "touch" : "pointerType" in e ? e.pointerType : "mouse";
      }
      function Ig(e) {
        return Rg(e)
          ? (function (e) {
              return "touchend" === e.type || "touchcancel" === e.type
                ? e.changedTouches
                : e.targetTouches;
            })(e)[0]
          : e;
      }
      function Ng(e) {
        return (function (e) {
          return Array.from(e.touches).filter(function (t) {
            var n, r;
            return (
              t.target === e.currentTarget ||
              (null === (n = e.currentTarget) ||
              void 0 === n ||
              null === (r = n.contains) ||
              void 0 === r
                ? void 0
                : r.call(n, t.target))
            );
          });
        })(e).map(function (e) {
          return e.identifier;
        });
      }
      function Og(e) {
        var t = Ig(e);
        return Rg(e) ? t.identifier : t.pointerId;
      }
      function Dg(e) {
        var t = Ig(e);
        return [t.clientX, t.clientY];
      }
      function Ug(e) {
        if ("function" === typeof e) {
          for (
            var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1;
            r < t;
            r++
          )
            n[r - 1] = arguments[r];
          return e.apply(void 0, n);
        }
        return e;
      }
      function zg() {}
      function Fg() {
        for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
          t[n] = arguments[n];
        return 0 === t.length
          ? zg
          : 1 === t.length
          ? t[0]
          : function () {
              for (var e, n = 0, r = t; n < r.length; n++) {
                e = r[n].apply(this, arguments) || e;
              }
              return e;
            };
      }
      function Bg(e, t) {
        return Object.assign({}, t, e || {});
      }
      var Zg = (function () {
        function e(t, n, r) {
          p(this, e),
            (this.ctrl = t),
            (this.args = n),
            (this.key = r),
            this.state ||
              ((this.state = {}),
              this.computeValues([0, 0]),
              this.computeInitial(),
              this.init && this.init(),
              this.reset());
        }
        return (
          g(e, [
            {
              key: "state",
              get: function () {
                return this.ctrl.state[this.key];
              },
              set: function (e) {
                this.ctrl.state[this.key] = e;
              },
            },
            {
              key: "shared",
              get: function () {
                return this.ctrl.state.shared;
              },
            },
            {
              key: "eventStore",
              get: function () {
                return this.ctrl.gestureEventStores[this.key];
              },
            },
            {
              key: "timeoutStore",
              get: function () {
                return this.ctrl.gestureTimeoutStores[this.key];
              },
            },
            {
              key: "config",
              get: function () {
                return this.ctrl.config[this.key];
              },
            },
            {
              key: "sharedConfig",
              get: function () {
                return this.ctrl.config.shared;
              },
            },
            {
              key: "handler",
              get: function () {
                return this.ctrl.handlers[this.key];
              },
            },
            {
              key: "reset",
              value: function () {
                var e = this.state,
                  t = this.shared,
                  n = this.ingKey,
                  r = this.args;
                (t[n] = e._active = e.active = e._blocked = e._force = !1),
                  (e._step = [!1, !1]),
                  (e.intentional = !1),
                  (e._movement = [0, 0]),
                  (e._distance = [0, 0]),
                  (e._direction = [0, 0]),
                  (e._delta = [0, 0]),
                  (e._bounds = [
                    [-1 / 0, 1 / 0],
                    [-1 / 0, 1 / 0],
                  ]),
                  (e.args = r),
                  (e.axis = void 0),
                  (e.memo = void 0),
                  (e.elapsedTime = e.timeDelta = 0),
                  (e.direction = [0, 0]),
                  (e.distance = [0, 0]),
                  (e.overflow = [0, 0]),
                  (e._movementBound = [!1, !1]),
                  (e.velocity = [0, 0]),
                  (e.movement = [0, 0]),
                  (e.delta = [0, 0]),
                  (e.timeStamp = 0);
              },
            },
            {
              key: "start",
              value: function (e) {
                var t = this.state,
                  n = this.config;
                t._active ||
                  (this.reset(),
                  this.computeInitial(),
                  (t._active = !0),
                  (t.target = e.target),
                  (t.currentTarget = e.currentTarget),
                  (t.lastOffset = n.from ? Ug(n.from, t) : t.offset),
                  (t.offset = t.lastOffset),
                  (t.startTime = t.timeStamp = e.timeStamp));
              },
            },
            {
              key: "computeValues",
              value: function (e) {
                var t = this.state;
                (t._values = e), (t.values = this.config.transform(e));
              },
            },
            {
              key: "computeInitial",
              value: function () {
                var e = this.state;
                (e._initial = e._values), (e.initial = e.values);
              },
            },
            {
              key: "compute",
              value: function (e) {
                var t = this.state,
                  n = this.config,
                  r = this.shared;
                t.args = this.args;
                var a = 0;
                if (
                  (e &&
                    ((t.event = e),
                    n.preventDefault &&
                      e.cancelable &&
                      t.event.preventDefault(),
                    (t.type = e.type),
                    (r.touches =
                      this.ctrl.pointerIds.size || this.ctrl.touchIds.size),
                    (r.locked = !!document.pointerLockElement),
                    Object.assign(
                      r,
                      (function (e) {
                        var t = {};
                        if (
                          ("buttons" in e && (t.buttons = e.buttons),
                          "shiftKey" in e)
                        ) {
                          var n = e.shiftKey,
                            r = e.altKey,
                            i = e.metaKey,
                            a = e.ctrlKey;
                          Object.assign(t, {
                            shiftKey: n,
                            altKey: r,
                            metaKey: i,
                            ctrlKey: a,
                          });
                        }
                        return t;
                      })(e)
                    ),
                    (r.down = r.pressed = r.buttons % 2 === 1 || r.touches > 0),
                    (a = e.timeStamp - t.timeStamp),
                    (t.timeStamp = e.timeStamp),
                    (t.elapsedTime = t.timeStamp - t.startTime)),
                  t._active)
                ) {
                  var o = t._delta.map(Math.abs);
                  yg(t._distance, o);
                }
                this.axisIntent && this.axisIntent(e);
                var s = (0, i.Z)(t._movement, 2),
                  l = s[0],
                  u = s[1],
                  c = (0, i.Z)(n.threshold, 2),
                  d = c[0],
                  f = c[1],
                  h = t._step,
                  p = t.values;
                if (
                  (n.hasCustomTransform
                    ? (!1 === h[0] && (h[0] = Math.abs(l) >= d && p[0]),
                      !1 === h[1] && (h[1] = Math.abs(u) >= f && p[1]))
                    : (!1 === h[0] &&
                        (h[0] = Math.abs(l) >= d && Math.sign(l) * d),
                      !1 === h[1] &&
                        (h[1] = Math.abs(u) >= f && Math.sign(u) * f)),
                  (t.intentional = !1 !== h[0] || !1 !== h[1]),
                  t.intentional)
                ) {
                  var v = [0, 0];
                  if (n.hasCustomTransform) {
                    var m = (0, i.Z)(p, 2),
                      g = m[0],
                      y = m[1];
                    (v[0] = !1 !== h[0] ? g - h[0] : 0),
                      (v[1] = !1 !== h[1] ? y - h[1] : 0);
                  } else
                    (v[0] = !1 !== h[0] ? l - h[0] : 0),
                      (v[1] = !1 !== h[1] ? u - h[1] : 0);
                  this.restrictToAxis && !t._blocked && this.restrictToAxis(v);
                  var b = t.offset,
                    _ = (t._active && !t._blocked) || t.active;
                  _ &&
                    ((t.first = t._active && !t.active),
                    (t.last = !t._active && t.active),
                    (t.active = r[this.ingKey] = t._active),
                    e &&
                      (t.first &&
                        ("bounds" in n && (t._bounds = Ug(n.bounds, t)),
                        this.setup && this.setup()),
                      (t.movement = v),
                      this.computeOffset()));
                  var x = (0, i.Z)(t.offset, 2),
                    S = x[0],
                    w = x[1],
                    M = (0, i.Z)(t._bounds, 2),
                    E = (0, i.Z)(M[0], 2),
                    k = E[0],
                    T = E[1],
                    A = (0, i.Z)(M[1], 2),
                    C = A[0],
                    P = A[1];
                  (t.overflow = [
                    S < k ? -1 : S > T ? 1 : 0,
                    w < C ? -1 : w > P ? 1 : 0,
                  ]),
                    (t._movementBound[0] =
                      !!t.overflow[0] &&
                      (!1 === t._movementBound[0]
                        ? t._movement[0]
                        : t._movementBound[0])),
                    (t._movementBound[1] =
                      !!t.overflow[1] &&
                      (!1 === t._movementBound[1]
                        ? t._movement[1]
                        : t._movementBound[1]));
                  var R = (t._active && n.rubberband) || [0, 0];
                  if (
                    ((t.offset = (function (e, t, n) {
                      var r = (0, i.Z)(t, 2),
                        a = r[0],
                        o = r[1],
                        s = (0, i.Z)(n, 2),
                        l = s[0],
                        u = s[1],
                        c = (0, i.Z)(e, 2),
                        d = (0, i.Z)(c[0], 2),
                        f = d[0],
                        h = d[1],
                        p = (0, i.Z)(c[1], 2),
                        v = p[0],
                        m = p[1];
                      return [_g(a, f, h, l), _g(o, v, m, u)];
                    })(t._bounds, t.offset, R)),
                    (t.delta = gg(t.offset, b)),
                    this.computeMovement(),
                    _ && (!t.last || a > 32))
                  ) {
                    t.delta = gg(t.offset, b);
                    var L = t.delta.map(Math.abs);
                    yg(t.distance, L),
                      (t.direction = t.delta.map(Math.sign)),
                      (t._direction = t._delta.map(Math.sign)),
                      !t.first &&
                        a > 0 &&
                        ((t.velocity = [L[0] / a, L[1] / a]),
                        (t.timeDelta = a));
                  }
                }
              },
            },
            {
              key: "emit",
              value: function () {
                var e = this.state,
                  t = this.shared,
                  n = this.config;
                if (
                  (e._active || this.clean(),
                  (!e._blocked && e.intentional) ||
                    e._force ||
                    n.triggerAllEvents)
                ) {
                  var r = this.handler(
                    Mg(
                      Mg(Mg({}, t), e),
                      {},
                      (0, l.Z)({}, this.aliasKey, e.values)
                    )
                  );
                  void 0 !== r && (e.memo = r);
                }
              },
            },
            {
              key: "clean",
              value: function () {
                this.eventStore.clean(), this.timeoutStore.clean();
              },
            },
          ]),
          e
        );
      })();
      var Hg = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e;
            p(this, n);
            for (var r = arguments.length, i = new Array(r), a = 0; a < r; a++)
              i[a] = arguments[a];
            return (
              Sg(E((e = t.call.apply(t, [this].concat(i)))), "aliasKey", "xy"),
              e
            );
          }
          return (
            g(n, [
              {
                key: "reset",
                value: function () {
                  L(_(n.prototype), "reset", this).call(this),
                    (this.state.axis = void 0);
                },
              },
              {
                key: "init",
                value: function () {
                  (this.state.offset = [0, 0]),
                    (this.state.lastOffset = [0, 0]);
                },
              },
              {
                key: "computeOffset",
                value: function () {
                  this.state.offset = mg(
                    this.state.lastOffset,
                    this.state.movement
                  );
                },
              },
              {
                key: "computeMovement",
                value: function () {
                  this.state.movement = gg(
                    this.state.offset,
                    this.state.lastOffset
                  );
                },
              },
              {
                key: "axisIntent",
                value: function (e) {
                  var t = this.state,
                    n = this.config;
                  if (!t.axis && e) {
                    var r =
                      "object" === typeof n.axisThreshold
                        ? n.axisThreshold[Lg(e)]
                        : n.axisThreshold;
                    t.axis = (function (e, t) {
                      var n = (0, i.Z)(e, 2),
                        r = n[0],
                        a = n[1],
                        o = Math.abs(r),
                        s = Math.abs(a);
                      return o > s && o > t
                        ? "x"
                        : s > o && s > t
                        ? "y"
                        : void 0;
                    })(t._movement, r);
                  }
                  t._blocked =
                    ((n.lockDirection || !!n.axis) && !t.axis) ||
                    (!!n.axis && n.axis !== t.axis);
                },
              },
              {
                key: "restrictToAxis",
                value: function (e) {
                  if (this.config.axis || this.config.lockDirection)
                    switch (this.state.axis) {
                      case "x":
                        e[1] = 0;
                        break;
                      case "y":
                        e[0] = 0;
                    }
                },
              },
            ]),
            n
          );
        })(Zg),
        Vg = function (e) {
          return e;
        },
        Gg = {
          enabled: function () {
            return (
              !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0]
            );
          },
          eventOptions: function (e, t, n) {
            return Mg(Mg({}, n.shared.eventOptions), e);
          },
          preventDefault: function () {
            return (
              arguments.length > 0 && void 0 !== arguments[0] && arguments[0]
            );
          },
          triggerAllEvents: function () {
            return (
              arguments.length > 0 && void 0 !== arguments[0] && arguments[0]
            );
          },
          rubberband: function () {
            var e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : 0;
            switch (e) {
              case !0:
                return [0.15, 0.15];
              case !1:
                return [0, 0];
              default:
                return vg(e);
            }
          },
          from: function (e) {
            return "function" === typeof e ? e : null != e ? vg(e) : void 0;
          },
          transform: function (e, t, n) {
            var r = e || n.shared.transform;
            return (this.hasCustomTransform = !!r), r || Vg;
          },
          threshold: function (e) {
            return vg(e, 0);
          },
        };
      var Wg = Mg(
          Mg({}, Gg),
          {},
          {
            axis: function (e, t, n) {
              var r = n.axis;
              if (((this.lockDirection = "lock" === r), !this.lockDirection))
                return r;
            },
            axisThreshold: function () {
              return arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : 0;
            },
            bounds: function () {
              var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {};
              if ("function" === typeof e)
                return function (t) {
                  return Wg.bounds(e(t));
                };
              if ("current" in e)
                return function () {
                  return e.current;
                };
              if ("function" === typeof HTMLElement && e instanceof HTMLElement)
                return e;
              var t = e.left,
                n = void 0 === t ? -1 / 0 : t,
                r = e.right,
                i = void 0 === r ? 1 / 0 : r,
                a = e.top,
                o = void 0 === a ? -1 / 0 : a,
                s = e.bottom;
              return [
                [n, i],
                [o, void 0 === s ? 1 / 0 : s],
              ];
            },
          }
        ),
        jg = {
          ArrowRight: function (e) {
            return [
              e *
                (arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1),
              0,
            ];
          },
          ArrowLeft: function (e) {
            return [
              -1 *
                e *
                (arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1),
              0,
            ];
          },
          ArrowUp: function (e) {
            return [
              0,
              -1 *
                e *
                (arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1),
            ];
          },
          ArrowDown: function (e) {
            return [
              0,
              e *
                (arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1),
            ];
          },
        },
        Xg = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e;
            p(this, n);
            for (var r = arguments.length, i = new Array(r), a = 0; a < r; a++)
              i[a] = arguments[a];
            return (
              Sg(
                E((e = t.call.apply(t, [this].concat(i)))),
                "ingKey",
                "dragging"
              ),
              e
            );
          }
          return (
            g(n, [
              {
                key: "reset",
                value: function () {
                  L(_(n.prototype), "reset", this).call(this);
                  var e = this.state;
                  (e._pointerId = void 0),
                    (e._pointerActive = !1),
                    (e._keyboardActive = !1),
                    (e._preventScroll = !1),
                    (e._delayed = !1),
                    (e.swipe = [0, 0]),
                    (e.tap = !1),
                    (e.canceled = !1),
                    (e.cancel = this.cancel.bind(this));
                },
              },
              {
                key: "setup",
                value: function () {
                  var e = this.state;
                  if (e._bounds instanceof HTMLElement) {
                    var t = e._bounds.getBoundingClientRect(),
                      n = e.currentTarget.getBoundingClientRect(),
                      r = {
                        left: t.left - n.left + e.offset[0],
                        right: t.right - n.right + e.offset[0],
                        top: t.top - n.top + e.offset[1],
                        bottom: t.bottom - n.bottom + e.offset[1],
                      };
                    e._bounds = Wg.bounds(r);
                  }
                },
              },
              {
                key: "cancel",
                value: function () {
                  var e = this,
                    t = this.state;
                  t.canceled ||
                    ((t.canceled = !0),
                    (t._active = !1),
                    setTimeout(function () {
                      e.compute(), e.emit();
                    }, 0));
                },
              },
              {
                key: "setActive",
                value: function () {
                  this.state._active =
                    this.state._pointerActive || this.state._keyboardActive;
                },
              },
              {
                key: "clean",
                value: function () {
                  this.pointerClean(),
                    (this.state._pointerActive = !1),
                    (this.state._keyboardActive = !1),
                    L(_(n.prototype), "clean", this).call(this);
                },
              },
              {
                key: "pointerDown",
                value: function (e) {
                  var t = this.config,
                    n = this.state;
                  if (
                    null == e.buttons ||
                    (Array.isArray(t.pointerButtons)
                      ? t.pointerButtons.includes(e.buttons)
                      : -1 === t.pointerButtons ||
                        t.pointerButtons === e.buttons)
                  ) {
                    var r = this.ctrl.setEventIds(e);
                    t.pointerCapture && e.target.setPointerCapture(e.pointerId),
                      (r && r.size > 1 && n._pointerActive) ||
                        (this.start(e),
                        this.setupPointer(e),
                        (n._pointerId = Og(e)),
                        (n._pointerActive = !0),
                        this.computeValues(Dg(e)),
                        this.computeInitial(),
                        t.preventScrollAxis && "mouse" !== Lg(e)
                          ? ((n._active = !1), this.setupScrollPrevention(e))
                          : t.delay > 0
                          ? (this.setupDelayTrigger(e),
                            t.triggerAllEvents &&
                              (this.compute(e), this.emit()))
                          : this.startPointerDrag(e));
                  }
                },
              },
              {
                key: "startPointerDrag",
                value: function (e) {
                  var t = this.state;
                  (t._active = !0),
                    (t._preventScroll = !0),
                    (t._delayed = !1),
                    this.compute(e),
                    this.emit();
                },
              },
              {
                key: "pointerMove",
                value: function (e) {
                  var t = this.state,
                    n = this.config;
                  if (t._pointerActive) {
                    var r = Og(e);
                    if (void 0 === t._pointerId || r === t._pointerId) {
                      var i = Dg(e);
                      return (
                        document.pointerLockElement === e.target
                          ? (t._delta = [e.movementX, e.movementY])
                          : ((t._delta = gg(i, t._values)),
                            this.computeValues(i)),
                        yg(t._movement, t._delta),
                        this.compute(e),
                        t._delayed && t.intentional
                          ? (this.timeoutStore.remove("dragDelay"),
                            (t.active = !1),
                            void this.startPointerDrag(e))
                          : n.preventScrollAxis && !t._preventScroll
                          ? t.axis
                            ? t.axis === n.preventScrollAxis ||
                              "xy" === n.preventScrollAxis
                              ? ((t._active = !1), void this.clean())
                              : (this.timeoutStore.remove("startPointerDrag"),
                                void this.startPointerDrag(e))
                            : void 0
                          : void this.emit()
                      );
                    }
                  }
                },
              },
              {
                key: "pointerUp",
                value: function (e) {
                  this.ctrl.setEventIds(e);
                  try {
                    this.config.pointerCapture &&
                      e.target.hasPointerCapture(e.pointerId) &&
                      e.target.releasePointerCapture(e.pointerId);
                  } catch (w) {
                    0;
                  }
                  var t = this.state,
                    n = this.config;
                  if (t._active && t._pointerActive) {
                    var r = Og(e);
                    if (void 0 === t._pointerId || r === t._pointerId) {
                      (this.state._pointerActive = !1),
                        this.setActive(),
                        this.compute(e);
                      var a = (0, i.Z)(t._distance, 2),
                        o = a[0],
                        s = a[1];
                      if (
                        ((t.tap = o <= n.tapsThreshold && s <= n.tapsThreshold),
                        t.tap && n.filterTaps)
                      )
                        t._force = !0;
                      else {
                        var l = (0, i.Z)(t._delta, 2),
                          u = l[0],
                          c = l[1],
                          d = (0, i.Z)(t._movement, 2),
                          f = d[0],
                          h = d[1],
                          p = (0, i.Z)(n.swipe.velocity, 2),
                          v = p[0],
                          m = p[1],
                          g = (0, i.Z)(n.swipe.distance, 2),
                          y = g[0],
                          b = g[1],
                          _ = n.swipe.duration;
                        if (t.elapsedTime < _) {
                          var x = Math.abs(u / t.timeDelta),
                            S = Math.abs(c / t.timeDelta);
                          x > v &&
                            Math.abs(f) > y &&
                            (t.swipe[0] = Math.sign(u)),
                            S > m &&
                              Math.abs(h) > b &&
                              (t.swipe[1] = Math.sign(c));
                        }
                      }
                      this.emit();
                    }
                  }
                },
              },
              {
                key: "pointerClick",
                value: function (e) {
                  !this.state.tap &&
                    e.detail > 0 &&
                    (e.preventDefault(), e.stopPropagation());
                },
              },
              {
                key: "setupPointer",
                value: function (e) {
                  var t = this.config,
                    n = t.device;
                  t.pointerLock && e.currentTarget.requestPointerLock(),
                    t.pointerCapture ||
                      (this.eventStore.add(
                        this.sharedConfig.window,
                        n,
                        "change",
                        this.pointerMove.bind(this)
                      ),
                      this.eventStore.add(
                        this.sharedConfig.window,
                        n,
                        "end",
                        this.pointerUp.bind(this)
                      ),
                      this.eventStore.add(
                        this.sharedConfig.window,
                        n,
                        "cancel",
                        this.pointerUp.bind(this)
                      ));
                },
              },
              {
                key: "pointerClean",
                value: function () {
                  this.config.pointerLock &&
                    document.pointerLockElement === this.state.currentTarget &&
                    document.exitPointerLock();
                },
              },
              {
                key: "preventScroll",
                value: function (e) {
                  this.state._preventScroll &&
                    e.cancelable &&
                    e.preventDefault();
                },
              },
              {
                key: "setupScrollPrevention",
                value: function (e) {
                  (this.state._preventScroll = !1),
                    (function (e) {
                      "persist" in e &&
                        "function" === typeof e.persist &&
                        e.persist();
                    })(e);
                  var t = this.eventStore.add(
                    this.sharedConfig.window,
                    "touch",
                    "change",
                    this.preventScroll.bind(this),
                    { passive: !1 }
                  );
                  this.eventStore.add(
                    this.sharedConfig.window,
                    "touch",
                    "end",
                    t
                  ),
                    this.eventStore.add(
                      this.sharedConfig.window,
                      "touch",
                      "cancel",
                      t
                    ),
                    this.timeoutStore.add(
                      "startPointerDrag",
                      this.startPointerDrag.bind(this),
                      this.config.preventScrollDelay,
                      e
                    );
                },
              },
              {
                key: "setupDelayTrigger",
                value: function (e) {
                  var t = this;
                  (this.state._delayed = !0),
                    this.timeoutStore.add(
                      "dragDelay",
                      function () {
                        (t.state._step = [0, 0]), t.startPointerDrag(e);
                      },
                      this.config.delay
                    );
                },
              },
              {
                key: "keyDown",
                value: function (e) {
                  var t = jg[e.key];
                  if (t) {
                    var n = this.state,
                      r = e.shiftKey ? 10 : e.altKey ? 0.1 : 1;
                    this.start(e),
                      (n._delta = t(this.config.keyboardDisplacement, r)),
                      (n._keyboardActive = !0),
                      yg(n._movement, n._delta),
                      this.compute(e),
                      this.emit();
                  }
                },
              },
              {
                key: "keyUp",
                value: function (e) {
                  e.key in jg &&
                    ((this.state._keyboardActive = !1),
                    this.setActive(),
                    this.compute(e),
                    this.emit());
                },
              },
              {
                key: "bind",
                value: function (e) {
                  var t = this.config.device;
                  e(t, "start", this.pointerDown.bind(this)),
                    this.config.pointerCapture &&
                      (e(t, "change", this.pointerMove.bind(this)),
                      e(t, "end", this.pointerUp.bind(this)),
                      e(t, "cancel", this.pointerUp.bind(this)),
                      e("lostPointerCapture", "", this.pointerUp.bind(this))),
                    this.config.keys &&
                      (e("key", "down", this.keyDown.bind(this)),
                      e("key", "up", this.keyUp.bind(this))),
                    this.config.filterTaps &&
                      e("click", "", this.pointerClick.bind(this), {
                        capture: !0,
                        passive: !1,
                      });
                },
              },
            ]),
            n
          );
        })(Hg);
      var qg =
        "undefined" !== typeof window &&
        window.document &&
        window.document.createElement;
      function Yg() {
        return (
          (qg && "ontouchstart" in window) ||
          (qg && window.navigator.maxTouchPoints > 1)
        );
      }
      var Kg = {
          isBrowser: qg,
          gesture: (function () {
            try {
              return "constructor" in GestureEvent;
            } catch (e) {
              return !1;
            }
          })(),
          touch: Yg(),
          touchscreen: Yg(),
          pointer: qg && "onpointerdown" in window,
          pointerLock: qg && "exitPointerLock" in window.document,
        },
        $g = { mouse: 0, touch: 0, pen: 8 },
        Jg = Mg(
          Mg({}, Wg),
          {},
          {
            device: function (e, t, n) {
              var r = n.pointer,
                i = void 0 === r ? {} : r,
                a = i.touch,
                o = void 0 !== a && a,
                s = i.lock,
                l = void 0 !== s && s,
                u = i.mouse,
                c = void 0 !== u && u;
              return (
                (this.pointerLock = l && Kg.pointerLock),
                Kg.touch && o
                  ? "touch"
                  : this.pointerLock
                  ? "mouse"
                  : Kg.pointer && !c
                  ? "pointer"
                  : Kg.touch
                  ? "touch"
                  : "mouse"
              );
            },
            preventScrollAxis: function (e, t, n) {
              var r = n.preventScroll;
              if (
                ((this.preventScrollDelay =
                  "number" === typeof r
                    ? r
                    : r || (void 0 === r && e)
                    ? 250
                    : void 0),
                Kg.touchscreen && !1 !== r)
              )
                return e || (void 0 !== r ? "y" : void 0);
            },
            pointerCapture: function (e, t, n) {
              var r = n.pointer,
                i = void 0 === r ? {} : r,
                a = i.capture,
                o = void 0 === a || a,
                s = i.buttons,
                l = void 0 === s ? 1 : s,
                u = i.keys,
                c = void 0 === u || u;
              return (
                (this.pointerButtons = l),
                (this.keys = c),
                !this.pointerLock && "pointer" === this.device && o
              );
            },
            threshold: function (e, t, n) {
              var r = n.filterTaps,
                i = void 0 !== r && r,
                a = n.tapsThreshold,
                o = void 0 === a ? 3 : a,
                s = n.axis,
                l = vg(e, i ? o : (void 0 === s ? void 0 : s) ? 1 : 0);
              return (this.filterTaps = i), (this.tapsThreshold = o), l;
            },
            swipe: function () {
              var e =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                t = e.velocity,
                n = void 0 === t ? 0.5 : t,
                r = e.distance,
                i = void 0 === r ? 50 : r,
                a = e.duration,
                o = void 0 === a ? 250 : a;
              return {
                velocity: this.transform(vg(n)),
                distance: this.transform(vg(i)),
                duration: o,
              };
            },
            delay: function () {
              var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0;
              switch (e) {
                case !0:
                  return 180;
                case !1:
                  return 0;
                default:
                  return e;
              }
            },
            axisThreshold: function (e) {
              return e ? Mg(Mg({}, $g), e) : $g;
            },
            keyboardDisplacement: function () {
              return arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : 10;
            },
          }
        );
      Mg(
        Mg({}, Gg),
        {},
        {
          device: function (e, t, n) {
            var r = n.shared,
              i = n.pointer,
              a = (void 0 === i ? {} : i).touch,
              o = void 0 !== a && a;
            if (r.target && !Kg.touch && Kg.gesture) return "gesture";
            if (Kg.touch && o) return "touch";
            if (Kg.touchscreen) {
              if (Kg.pointer) return "pointer";
              if (Kg.touch) return "touch";
            }
          },
          bounds: function (e, t, n) {
            var r = n.scaleBounds,
              i = void 0 === r ? {} : r,
              a = n.angleBounds,
              o = void 0 === a ? {} : a,
              s = function (e) {
                var t = Bg(Ug(i, e), { min: -1 / 0, max: 1 / 0 });
                return [t.min, t.max];
              },
              l = function (e) {
                var t = Bg(Ug(o, e), { min: -1 / 0, max: 1 / 0 });
                return [t.min, t.max];
              };
            return "function" !== typeof i && "function" !== typeof o
              ? [s(), l()]
              : function (e) {
                  return [s(e), l(e)];
                };
          },
          threshold: function (e, t, n) {
            this.lockDirection = "lock" === n.axis;
            var r = vg(e, this.lockDirection ? [0.1, 3] : 0);
            return r;
          },
          modifierKey: function (e) {
            return void 0 === e ? "ctrlKey" : e;
          },
          pinchOnWheel: function () {
            return (
              !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0]
            );
          },
        }
      ),
        Mg(
          Mg({}, Wg),
          {},
          {
            mouseOnly: function () {
              return (
                !(arguments.length > 0 && void 0 !== arguments[0]) ||
                arguments[0]
              );
            },
          }
        ),
        Mg(
          Mg({}, Wg),
          {},
          {
            mouseOnly: function () {
              return (
                !(arguments.length > 0 && void 0 !== arguments[0]) ||
                arguments[0]
              );
            },
          }
        );
      var Qg = new Map(),
        ey = new Map();
      var ty = { key: "drag", engine: Xg, resolver: Jg };
      function ny(e, t) {
        if (null == e) return {};
        var n,
          r,
          i = (function (e, t) {
            if (null == e) return {};
            var n,
              r,
              i = {},
              a = Object.keys(e);
            for (r = 0; r < a.length; r++)
              (n = a[r]), t.indexOf(n) >= 0 || (i[n] = e[n]);
            return i;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var a = Object.getOwnPropertySymbols(e);
          for (r = 0; r < a.length; r++)
            (n = a[r]),
              t.indexOf(n) >= 0 ||
                (Object.prototype.propertyIsEnumerable.call(e, n) &&
                  (i[n] = e[n]));
        }
        return i;
      }
      var ry = {
          target: function (e) {
            if (e)
              return function () {
                return "current" in e ? e.current : e;
              };
          },
          enabled: function () {
            return (
              !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0]
            );
          },
          window: (function (e) {
            function t() {
              return e.apply(this, arguments);
            }
            return (
              (t.toString = function () {
                return e.toString();
              }),
              t
            );
          })(function () {
            return arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : Kg.isBrowser
              ? window
              : void 0;
          }),
          eventOptions: function () {
            var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {},
              t = e.passive,
              n = void 0 === t || t,
              r = e.capture;
            return { passive: n, capture: void 0 !== r && r };
          },
          transform: function (e) {
            return e;
          },
        },
        iy = ["target", "eventOptions", "window", "enabled", "transform"];
      function ay() {
        for (
          var e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t = arguments.length > 1 ? arguments[1] : void 0,
            n = {},
            r = 0,
            a = Object.entries(t);
          r < a.length;
          r++
        ) {
          var o = (0, i.Z)(a[r], 2),
            s = o[0],
            l = o[1];
          switch (typeof l) {
            case "function":
              n[s] = l.call(n, e[s], s, e);
              break;
            case "object":
              n[s] = ay(e[s], l);
              break;
            case "boolean":
              l && (n[s] = e[s]);
          }
        }
        return n;
      }
      var oy = (function () {
          function e(t, n) {
            p(this, e),
              Sg(this, "_listeners", new Set()),
              (this._ctrl = t),
              (this._gestureKey = n);
          }
          return (
            g(e, [
              {
                key: "add",
                value: function (e, t, n, r, i) {
                  var a = this._listeners,
                    o = (function (e) {
                      var t =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : "",
                        n = Eg[e];
                      return e + ((n && n[t]) || t);
                    })(t, n),
                    s = Mg(
                      Mg(
                        {},
                        this._gestureKey
                          ? this._ctrl.config[this._gestureKey].eventOptions
                          : {}
                      ),
                      i
                    );
                  e.addEventListener(o, r, s);
                  var l = function t() {
                    e.removeEventListener(o, r, s), a.delete(t);
                  };
                  return a.add(l), l;
                },
              },
              {
                key: "clean",
                value: function () {
                  this._listeners.forEach(function (e) {
                    return e();
                  }),
                    this._listeners.clear();
                },
              },
            ]),
            e
          );
        })(),
        sy = (function () {
          function e() {
            p(this, e), Sg(this, "_timeouts", new Map());
          }
          return (
            g(e, [
              {
                key: "add",
                value: function (e, t) {
                  var n,
                    r =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : 140;
                  this.remove(e);
                  for (
                    var i = arguments.length,
                      a = new Array(i > 3 ? i - 3 : 0),
                      o = 3;
                    o < i;
                    o++
                  )
                    a[o - 3] = arguments[o];
                  this._timeouts.set(
                    e,
                    (n = window).setTimeout.apply(n, [t, r].concat(a))
                  );
                },
              },
              {
                key: "remove",
                value: function (e) {
                  var t = this._timeouts.get(e);
                  t && window.clearTimeout(t);
                },
              },
              {
                key: "clean",
                value: function () {
                  this._timeouts.forEach(function (e) {
                    window.clearTimeout(e);
                  }),
                    this._timeouts.clear();
                },
              },
            ]),
            e
          );
        })(),
        ly = (function () {
          function e(t) {
            p(this, e),
              Sg(this, "gestures", new Set()),
              Sg(this, "_targetEventStore", new oy(this)),
              Sg(this, "gestureEventStores", {}),
              Sg(this, "gestureTimeoutStores", {}),
              Sg(this, "handlers", {}),
              Sg(this, "config", {}),
              Sg(this, "pointerIds", new Set()),
              Sg(this, "touchIds", new Set()),
              Sg(this, "state", {
                shared: { shiftKey: !1, metaKey: !1, ctrlKey: !1, altKey: !1 },
              }),
              (function (e, t) {
                t.drag && uy(e, "drag");
                t.wheel && uy(e, "wheel");
                t.scroll && uy(e, "scroll");
                t.move && uy(e, "move");
                t.pinch && uy(e, "pinch");
                t.hover && uy(e, "hover");
              })(this, t);
          }
          return (
            g(e, [
              {
                key: "setEventIds",
                value: function (e) {
                  return Rg(e)
                    ? ((this.touchIds = new Set(Ng(e))), this.touchIds)
                    : "pointerId" in e
                    ? ("pointerup" === e.type || "pointercancel" === e.type
                        ? this.pointerIds.delete(e.pointerId)
                        : "pointerdown" === e.type &&
                          this.pointerIds.add(e.pointerId),
                      this.pointerIds)
                    : void 0;
                },
              },
              {
                key: "applyHandlers",
                value: function (e, t) {
                  (this.handlers = e), (this.nativeHandlers = t);
                },
              },
              {
                key: "applyConfig",
                value: function (e, t) {
                  this.config = (function (e, t) {
                    var n =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : {},
                      r = e,
                      i = r.target,
                      a = r.eventOptions,
                      o = r.window,
                      s = r.enabled,
                      l = r.transform,
                      u = ny(r, iy);
                    if (
                      ((n.shared = ay(
                        {
                          target: i,
                          eventOptions: a,
                          window: o,
                          enabled: s,
                          transform: l,
                        },
                        ry
                      )),
                      t)
                    ) {
                      var c = ey.get(t);
                      n[t] = ay(Mg({ shared: n.shared }, u), c);
                    } else
                      for (var d in u) {
                        var f = ey.get(d);
                        f && (n[d] = ay(Mg({ shared: n.shared }, u[d]), f));
                      }
                    return n;
                  })(e, t, this.config);
                },
              },
              {
                key: "clean",
                value: function () {
                  this._targetEventStore.clean();
                  var e,
                    t = T(this.gestures);
                  try {
                    for (t.s(); !(e = t.n()).done; ) {
                      var n = e.value;
                      this.gestureEventStores[n].clean(),
                        this.gestureTimeoutStores[n].clean();
                    }
                  } catch (r) {
                    t.e(r);
                  } finally {
                    t.f();
                  }
                },
              },
              {
                key: "effect",
                value: function () {
                  var e = this;
                  return (
                    this.config.shared.target && this.bind(),
                    function () {
                      return e._targetEventStore.clean();
                    }
                  );
                },
              },
              {
                key: "bind",
                value: function () {
                  for (
                    var e = this, t = arguments.length, n = new Array(t), i = 0;
                    i < t;
                    i++
                  )
                    n[i] = arguments[i];
                  var a,
                    o = this.config.shared,
                    s = {};
                  if (!o.target || (a = o.target())) {
                    if (o.enabled) {
                      var l,
                        u = T(this.gestures);
                      try {
                        for (u.s(); !(l = u.n()).done; ) {
                          var c = l.value,
                            d = this.config[c],
                            f = cy(s, d.eventOptions, !!a);
                          if (d.enabled) new (Qg.get(c))(this, n, c).bind(f);
                        }
                      } catch (S) {
                        u.e(S);
                      } finally {
                        u.f();
                      }
                      var h = cy(s, o.eventOptions, !!a),
                        p = function (t) {
                          h(
                            t,
                            "",
                            function (r) {
                              return e.nativeHandlers[t](
                                Mg(
                                  Mg({}, e.state.shared),
                                  {},
                                  { event: r, args: n }
                                )
                              );
                            },
                            void 0,
                            !0
                          );
                        };
                      for (var v in this.nativeHandlers) p(v);
                    }
                    for (var m in s) s[m] = Fg.apply(void 0, (0, r.Z)(s[m]));
                    if (!a) return s;
                    for (var g in s) {
                      var y = Pg(g),
                        b = y.device,
                        _ = y.capture,
                        x = y.passive;
                      this._targetEventStore.add(a, b, "", s[g], {
                        capture: _,
                        passive: x,
                      });
                    }
                  }
                },
              },
            ]),
            e
          );
        })();
      function uy(e, t) {
        e.gestures.add(t),
          (e.gestureEventStores[t] = new oy(e, t)),
          (e.gestureTimeoutStores[t] = new sy());
      }
      var cy = function (e, t, n) {
        return function (r, i, a) {
          var o,
            s,
            l =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : {},
            u = arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
            c = null !== (o = l.capture) && void 0 !== o ? o : t.capture,
            d = null !== (s = l.passive) && void 0 !== s ? s : t.passive,
            f = u ? r : Ag(r, i, c);
          n && d && (f += "Passive"), (e[f] = e[f] || []), e[f].push(a);
        };
      };
      function dy(e) {
        var t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          n = arguments.length > 2 ? arguments[2] : void 0,
          r = arguments.length > 3 ? arguments[3] : void 0,
          i = a.useMemo(function () {
            return new ly(e);
          }, []);
        if (
          (i.applyHandlers(e, r),
          i.applyConfig(t, n),
          a.useEffect(i.effect.bind(i)),
          a.useEffect(function () {
            return i.clean.bind(i);
          }, []),
          void 0 === t.target)
        )
          return i.bind.bind(i);
      }
      function fy(e, t) {
        var n;
        return (
          (n = ty),
          Qg.set(n.key, n.engine),
          ey.set(n.key, n.resolver),
          dy({ drag: e }, t || {}, "drag")
        );
      }
      var hy = Cy(),
        py = function (e) {
          return Ey(e, hy);
        },
        vy = Cy();
      py.write = function (e) {
        return Ey(e, vy);
      };
      var my = Cy();
      py.onStart = function (e) {
        return Ey(e, my);
      };
      var gy = Cy();
      py.onFrame = function (e) {
        return Ey(e, gy);
      };
      var yy = Cy();
      py.onFinish = function (e) {
        return Ey(e, yy);
      };
      var by = [];
      py.setTimeout = function (e, t) {
        var n = py.now() + t,
          r = {
            time: n,
            handler: e,
            cancel: function e() {
              var t = by.findIndex(function (t) {
                return t.cancel == e;
              });
              ~t && by.splice(t, 1), (wy -= ~t ? 1 : 0);
            },
          };
        return by.splice(_y(n), 0, r), (wy += 1), ky(), r;
      };
      var _y = function (e) {
        return ~(
          ~by.findIndex(function (t) {
            return t.time > e;
          }) || ~by.length
        );
      };
      (py.cancel = function (e) {
        my.delete(e), gy.delete(e), yy.delete(e), hy.delete(e), vy.delete(e);
      }),
        (py.sync = function (e) {
          (My = !0), py.batchedUpdates(e), (My = !1);
        }),
        (py.throttle = function (e) {
          var t;
          function n() {
            try {
              e.apply(void 0, (0, r.Z)(t));
            } finally {
              t = null;
            }
          }
          function i() {
            for (var e = arguments.length, r = new Array(e), i = 0; i < e; i++)
              r[i] = arguments[i];
            (t = r), py.onStart(n);
          }
          return (
            (i.handler = e),
            (i.cancel = function () {
              my.delete(n), (t = null);
            }),
            i
          );
        });
      var xy =
        "undefined" != typeof window
          ? window.requestAnimationFrame
          : function () {};
      (py.use = function (e) {
        return (xy = e);
      }),
        (py.now =
          "undefined" != typeof performance
            ? function () {
                return performance.now();
              }
            : Date.now),
        (py.batchedUpdates = function (e) {
          return e();
        }),
        (py.catch = console.error),
        (py.frameLoop = "always"),
        (py.advance = function () {
          "demand" !== py.frameLoop
            ? console.warn(
                "Cannot call the manual advancement of rafz whilst frameLoop is not set as demand"
              )
            : Ay();
        });
      var Sy = -1,
        wy = 0,
        My = !1;
      function Ey(e, t) {
        My ? (t.delete(e), e(0)) : (t.add(e), ky());
      }
      function ky() {
        Sy < 0 && ((Sy = 0), "demand" !== py.frameLoop && xy(Ty));
      }
      function Ty() {
        ~Sy && (xy(Ty), py.batchedUpdates(Ay));
      }
      function Ay() {
        var e = Sy;
        Sy = py.now();
        var t = _y(Sy);
        t &&
          (Py(by.splice(0, t), function (e) {
            return e.handler();
          }),
          (wy -= t)),
          wy
            ? (my.flush(),
              hy.flush(e ? Math.min(64, Sy - e) : 16.667),
              gy.flush(),
              vy.flush(),
              yy.flush())
            : (Sy = -1);
      }
      function Cy() {
        var e = new Set(),
          t = e;
        return {
          add: function (n) {
            (wy += t != e || e.has(n) ? 0 : 1), e.add(n);
          },
          delete: function (n) {
            return (wy -= t == e && e.has(n) ? 1 : 0), e.delete(n);
          },
          flush: function (n) {
            t.size &&
              ((e = new Set()),
              (wy -= t.size),
              Py(t, function (t) {
                return t(n) && e.add(t);
              }),
              (wy += e.size),
              (t = e));
          },
        };
      }
      function Py(e, t) {
        e.forEach(function (e) {
          try {
            t(e);
          } catch (n) {
            py.catch(n);
          }
        });
      }
      function Ry() {}
      var Ly = {
        arr: Array.isArray,
        obj: function (e) {
          return !!e && "Object" === e.constructor.name;
        },
        fun: function (e) {
          return "function" === typeof e;
        },
        str: function (e) {
          return "string" === typeof e;
        },
        num: function (e) {
          return "number" === typeof e;
        },
        und: function (e) {
          return void 0 === e;
        },
      };
      function Iy(e, t) {
        if (Ly.arr(e)) {
          if (!Ly.arr(t) || e.length !== t.length) return !1;
          for (var n = 0; n < e.length; n++) if (e[n] !== t[n]) return !1;
          return !0;
        }
        return e === t;
      }
      var Ny = function (e, t) {
        return e.forEach(t);
      };
      function Oy(e, t, n) {
        if (Ly.arr(e))
          for (var r = 0; r < e.length; r++) t.call(n, e[r], "".concat(r));
        else for (var i in e) e.hasOwnProperty(i) && t.call(n, e[i], i);
      }
      var Dy = function (e) {
        return Ly.und(e) ? [] : Ly.arr(e) ? e : [e];
      };
      function Uy(e, t) {
        if (e.size) {
          var n = Array.from(e);
          e.clear(), Ny(n, t);
        }
      }
      var zy,
        Fy,
        By = function (e) {
          for (
            var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1;
            r < t;
            r++
          )
            n[r - 1] = arguments[r];
          return Uy(e, function (e) {
            return e.apply(void 0, n);
          });
        },
        Zy = function () {
          return (
            "undefined" === typeof window ||
            !window.navigator ||
            /ServerSideRendering|^Deno\//.test(window.navigator.userAgent)
          );
        },
        Hy = null,
        Vy = !1,
        Gy = Ry,
        Wy = function (e) {
          e.to && (Fy = e.to),
            e.now && (py.now = e.now),
            void 0 !== e.colors && (Hy = e.colors),
            null != e.skipAnimation && (Vy = e.skipAnimation),
            e.createStringInterpolator && (zy = e.createStringInterpolator),
            e.requestAnimationFrame && py.use(e.requestAnimationFrame),
            e.batchedUpdates && (py.batchedUpdates = e.batchedUpdates),
            e.willAdvance && (Gy = e.willAdvance),
            e.frameLoop && (py.frameLoop = e.frameLoop);
        },
        jy = Object.freeze({
          __proto__: null,
          get createStringInterpolator() {
            return zy;
          },
          get to() {
            return Fy;
          },
          get colors() {
            return Hy;
          },
          get skipAnimation() {
            return Vy;
          },
          get willAdvance() {
            return Gy;
          },
          assign: Wy,
        }),
        Xy = new Set(),
        qy = [],
        Yy = [],
        Ky = 0,
        $y = {
          get idle() {
            return !Xy.size && !qy.length;
          },
          start: function (e) {
            Ky > e.priority ? (Xy.add(e), py.onStart(Jy)) : (Qy(e), py(tb));
          },
          advance: tb,
          sort: function (e) {
            if (Ky)
              py.onFrame(function () {
                return $y.sort(e);
              });
            else {
              var t = qy.indexOf(e);
              ~t && (qy.splice(t, 1), eb(e));
            }
          },
          clear: function () {
            (qy = []), Xy.clear();
          },
        };
      function Jy() {
        Xy.forEach(Qy), Xy.clear(), py(tb);
      }
      function Qy(e) {
        qy.includes(e) || eb(e);
      }
      function eb(e) {
        qy.splice(
          (function (e, t) {
            var n = e.findIndex(t);
            return n < 0 ? e.length : n;
          })(qy, function (t) {
            return t.priority > e.priority;
          }),
          0,
          e
        );
      }
      function tb(e) {
        for (var t = Yy, n = 0; n < qy.length; n++) {
          var r = qy[n];
          (Ky = r.priority),
            r.idle || (Gy(r), r.advance(e), r.idle || t.push(r));
        }
        return (Ky = 0), ((Yy = qy).length = 0), (qy = t).length > 0;
      }
      var nb = "[-+]?\\d*\\.?\\d+",
        rb = nb + "%";
      function ib() {
        for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
          t[n] = arguments[n];
        return "\\(\\s*(" + t.join(")\\s*,\\s*(") + ")\\s*\\)";
      }
      var ab = new RegExp("rgb" + ib(nb, nb, nb)),
        ob = new RegExp("rgba" + ib(nb, nb, nb, nb)),
        sb = new RegExp("hsl" + ib(nb, rb, rb)),
        lb = new RegExp("hsla" + ib(nb, rb, rb, nb)),
        ub = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        cb =
          /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        db = /^#([0-9a-fA-F]{6})$/,
        fb = /^#([0-9a-fA-F]{8})$/;
      function hb(e, t, n) {
        return (
          n < 0 && (n += 1),
          n > 1 && (n -= 1),
          n < 1 / 6
            ? e + 6 * (t - e) * n
            : n < 0.5
            ? t
            : n < 2 / 3
            ? e + (t - e) * (2 / 3 - n) * 6
            : e
        );
      }
      function pb(e, t, n) {
        var r = n < 0.5 ? n * (1 + t) : n + t - n * t,
          i = 2 * n - r,
          a = hb(i, r, e + 1 / 3),
          o = hb(i, r, e),
          s = hb(i, r, e - 1 / 3);
        return (
          (Math.round(255 * a) << 24) |
          (Math.round(255 * o) << 16) |
          (Math.round(255 * s) << 8)
        );
      }
      function vb(e) {
        var t = parseInt(e, 10);
        return t < 0 ? 0 : t > 255 ? 255 : t;
      }
      function mb(e) {
        return (((parseFloat(e) % 360) + 360) % 360) / 360;
      }
      function gb(e) {
        var t = parseFloat(e);
        return t < 0 ? 0 : t > 1 ? 255 : Math.round(255 * t);
      }
      function yb(e) {
        var t = parseFloat(e);
        return t < 0 ? 0 : t > 100 ? 1 : t / 100;
      }
      function bb(e) {
        var t = (function (e) {
          var t;
          return "number" === typeof e
            ? e >>> 0 === e && e >= 0 && e <= 4294967295
              ? e
              : null
            : (t = db.exec(e))
            ? parseInt(t[1] + "ff", 16) >>> 0
            : Hy && void 0 !== Hy[e]
            ? Hy[e]
            : (t = ab.exec(e))
            ? ((vb(t[1]) << 24) | (vb(t[2]) << 16) | (vb(t[3]) << 8) | 255) >>>
              0
            : (t = ob.exec(e))
            ? ((vb(t[1]) << 24) |
                (vb(t[2]) << 16) |
                (vb(t[3]) << 8) |
                gb(t[4])) >>>
              0
            : (t = ub.exec(e))
            ? parseInt(t[1] + t[1] + t[2] + t[2] + t[3] + t[3] + "ff", 16) >>> 0
            : (t = fb.exec(e))
            ? parseInt(t[1], 16) >>> 0
            : (t = cb.exec(e))
            ? parseInt(
                t[1] + t[1] + t[2] + t[2] + t[3] + t[3] + t[4] + t[4],
                16
              ) >>> 0
            : (t = sb.exec(e))
            ? (255 | pb(mb(t[1]), yb(t[2]), yb(t[3]))) >>> 0
            : (t = lb.exec(e))
            ? (pb(mb(t[1]), yb(t[2]), yb(t[3])) | gb(t[4])) >>> 0
            : null;
        })(e);
        if (null === t) return e;
        var n = (16711680 & (t = t || 0)) >>> 16,
          r = (65280 & t) >>> 8,
          i = (255 & t) / 255;
        return "rgba("
          .concat((4278190080 & t) >>> 24, ", ")
          .concat(n, ", ")
          .concat(r, ", ")
          .concat(i, ")");
      }
      var _b = function e(t, n, r) {
        if (Ly.fun(t)) return t;
        if (Ly.arr(t)) return e({ range: t, output: n, extrapolate: r });
        if (Ly.str(t.output[0])) return zy(t);
        var i = t,
          a = i.output,
          o = i.range || [0, 1],
          s = i.extrapolateLeft || i.extrapolate || "extend",
          l = i.extrapolateRight || i.extrapolate || "extend",
          u =
            i.easing ||
            function (e) {
              return e;
            };
        return function (e) {
          var t = (function (e, t) {
            for (var n = 1; n < t.length - 1 && !(t[n] >= e); ++n);
            return n - 1;
          })(e, o);
          return (function (e, t, n, r, i, a, o, s, l) {
            var u = l ? l(e) : e;
            if (u < t) {
              if ("identity" === o) return u;
              "clamp" === o && (u = t);
            }
            if (u > n) {
              if ("identity" === s) return u;
              "clamp" === s && (u = n);
            }
            if (r === i) return r;
            if (t === n) return e <= t ? r : i;
            t === -1 / 0
              ? (u = -u)
              : n === 1 / 0
              ? (u -= t)
              : (u = (u - t) / (n - t));
            (u = a(u)),
              r === -1 / 0
                ? (u = -u)
                : i === 1 / 0
                ? (u += r)
                : (u = u * (i - r) + r);
            return u;
          })(e, o[t], o[t + 1], a[t], a[t + 1], u, s, l, i.map);
        };
      };
      var xb = 1.70158,
        Sb = 1.525 * xb,
        wb = xb + 1,
        Mb = (2 * Math.PI) / 3,
        Eb = (2 * Math.PI) / 4.5,
        kb = function (e) {
          var t = 7.5625,
            n = 2.75;
          return e < 1 / n
            ? t * e * e
            : e < 2 / n
            ? t * (e -= 1.5 / n) * e + 0.75
            : e < 2.5 / n
            ? t * (e -= 2.25 / n) * e + 0.9375
            : t * (e -= 2.625 / n) * e + 0.984375;
        },
        Tb = {
          linear: function (e) {
            return e;
          },
          easeInQuad: function (e) {
            return e * e;
          },
          easeOutQuad: function (e) {
            return 1 - (1 - e) * (1 - e);
          },
          easeInOutQuad: function (e) {
            return e < 0.5 ? 2 * e * e : 1 - Math.pow(-2 * e + 2, 2) / 2;
          },
          easeInCubic: function (e) {
            return e * e * e;
          },
          easeOutCubic: function (e) {
            return 1 - Math.pow(1 - e, 3);
          },
          easeInOutCubic: function (e) {
            return e < 0.5 ? 4 * e * e * e : 1 - Math.pow(-2 * e + 2, 3) / 2;
          },
          easeInQuart: function (e) {
            return e * e * e * e;
          },
          easeOutQuart: function (e) {
            return 1 - Math.pow(1 - e, 4);
          },
          easeInOutQuart: function (e) {
            return e < 0.5
              ? 8 * e * e * e * e
              : 1 - Math.pow(-2 * e + 2, 4) / 2;
          },
          easeInQuint: function (e) {
            return e * e * e * e * e;
          },
          easeOutQuint: function (e) {
            return 1 - Math.pow(1 - e, 5);
          },
          easeInOutQuint: function (e) {
            return e < 0.5
              ? 16 * e * e * e * e * e
              : 1 - Math.pow(-2 * e + 2, 5) / 2;
          },
          easeInSine: function (e) {
            return 1 - Math.cos((e * Math.PI) / 2);
          },
          easeOutSine: function (e) {
            return Math.sin((e * Math.PI) / 2);
          },
          easeInOutSine: function (e) {
            return -(Math.cos(Math.PI * e) - 1) / 2;
          },
          easeInExpo: function (e) {
            return 0 === e ? 0 : Math.pow(2, 10 * e - 10);
          },
          easeOutExpo: function (e) {
            return 1 === e ? 1 : 1 - Math.pow(2, -10 * e);
          },
          easeInOutExpo: function (e) {
            return 0 === e
              ? 0
              : 1 === e
              ? 1
              : e < 0.5
              ? Math.pow(2, 20 * e - 10) / 2
              : (2 - Math.pow(2, -20 * e + 10)) / 2;
          },
          easeInCirc: function (e) {
            return 1 - Math.sqrt(1 - Math.pow(e, 2));
          },
          easeOutCirc: function (e) {
            return Math.sqrt(1 - Math.pow(e - 1, 2));
          },
          easeInOutCirc: function (e) {
            return e < 0.5
              ? (1 - Math.sqrt(1 - Math.pow(2 * e, 2))) / 2
              : (Math.sqrt(1 - Math.pow(-2 * e + 2, 2)) + 1) / 2;
          },
          easeInBack: function (e) {
            return wb * e * e * e - xb * e * e;
          },
          easeOutBack: function (e) {
            return 1 + wb * Math.pow(e - 1, 3) + xb * Math.pow(e - 1, 2);
          },
          easeInOutBack: function (e) {
            return e < 0.5
              ? (Math.pow(2 * e, 2) * (7.189819 * e - Sb)) / 2
              : (Math.pow(2 * e - 2, 2) * ((Sb + 1) * (2 * e - 2) + Sb) + 2) /
                  2;
          },
          easeInElastic: function (e) {
            return 0 === e
              ? 0
              : 1 === e
              ? 1
              : -Math.pow(2, 10 * e - 10) * Math.sin((10 * e - 10.75) * Mb);
          },
          easeOutElastic: function (e) {
            return 0 === e
              ? 0
              : 1 === e
              ? 1
              : Math.pow(2, -10 * e) * Math.sin((10 * e - 0.75) * Mb) + 1;
          },
          easeInOutElastic: function (e) {
            return 0 === e
              ? 0
              : 1 === e
              ? 1
              : e < 0.5
              ? (-Math.pow(2, 20 * e - 10) * Math.sin((20 * e - 11.125) * Eb)) /
                2
              : (Math.pow(2, -20 * e + 10) * Math.sin((20 * e - 11.125) * Eb)) /
                  2 +
                1;
          },
          easeInBounce: function (e) {
            return 1 - kb(1 - e);
          },
          easeOutBounce: kb,
          easeInOutBounce: function (e) {
            return e < 0.5 ? (1 - kb(1 - 2 * e)) / 2 : (1 + kb(2 * e - 1)) / 2;
          },
          steps: function (e) {
            var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : "end";
            return function (n) {
              var r,
                i,
                a,
                o =
                  (n = "end" === t ? Math.min(n, 0.999) : Math.max(n, 0.001)) *
                  e,
                s = "end" === t ? Math.floor(o) : Math.ceil(o);
              return (r = 0), (i = 1), (a = s / e), Math.min(Math.max(a, r), i);
            };
          },
        };
      function Ab() {
        return (
          (Ab = Object.assign
            ? Object.assign.bind()
            : function (e) {
                for (var t = 1; t < arguments.length; t++) {
                  var n = arguments[t];
                  for (var r in n)
                    Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
                return e;
              }),
          Ab.apply(this, arguments)
        );
      }
      var Cb = Symbol.for("FluidValue.get"),
        Pb = Symbol.for("FluidValue.observers"),
        Rb = function (e) {
          return Boolean(e && e[Cb]);
        },
        Lb = function (e) {
          return e && e[Cb] ? e[Cb]() : e;
        },
        Ib = function (e) {
          return e[Pb] || null;
        };
      function Nb(e, t) {
        var n = e[Pb];
        n &&
          n.forEach(function (e) {
            !(function (e, t) {
              e.eventObserved ? e.eventObserved(t) : e(t);
            })(e, t);
          });
      }
      var Ob = g(function e(t) {
          if (
            (p(this, e),
            (this[Cb] = void 0),
            (this[Pb] = void 0),
            !t && !(t = this.get))
          )
            throw Error("Unknown getter");
          Db(this, t);
        }),
        Db = function (e, t) {
          return Bb(e, Cb, t);
        };
      function Ub(e, t) {
        if (e[Cb]) {
          var n = e[Pb];
          n || Bb(e, Pb, (n = new Set())),
            n.has(t) ||
              (n.add(t), e.observerAdded && e.observerAdded(n.size, t));
        }
        return t;
      }
      function zb(e, t) {
        var n = e[Pb];
        if (n && n.has(t)) {
          var r = n.size - 1;
          r ? n.delete(t) : (e[Pb] = null),
            e.observerRemoved && e.observerRemoved(r, t);
        }
      }
      var Fb,
        Bb = function (e, t, n) {
          return Object.defineProperty(e, t, {
            value: n,
            writable: !0,
            configurable: !0,
          });
        },
        Zb = /[+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
        Hb =
          /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\((-?\d+%?[,\s]+){2,3}\s*[\d\.]+%?\))/gi,
        Vb = new RegExp("(".concat(Zb.source, ")(%|[a-z]+)"), "i"),
        Gb = /rgba\(([0-9\.-]+), ([0-9\.-]+), ([0-9\.-]+), ([0-9\.-]+)\)/gi,
        Wb = /var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/,
        jb = function e(t) {
          var n = Xb(t),
            r = (0, i.Z)(n, 2),
            a = r[0],
            o = r[1];
          if (!a || Zy()) return t;
          var s = window
            .getComputedStyle(document.documentElement)
            .getPropertyValue(a);
          if (s) return s.trim();
          if (o && o.startsWith("--")) {
            var l = window
              .getComputedStyle(document.documentElement)
              .getPropertyValue(o);
            return l || t;
          }
          return o && Wb.test(o) ? e(o) : o || t;
        },
        Xb = function (e) {
          var t = Wb.exec(e);
          if (!t) return [,];
          var n = (0, i.Z)(t, 3);
          return [n[1], n[2]];
        },
        qb = function (e, t, n, r, i) {
          return "rgba("
            .concat(Math.round(t), ", ")
            .concat(Math.round(n), ", ")
            .concat(Math.round(r), ", ")
            .concat(i, ")");
        },
        Yb = function (e) {
          Fb ||
            (Fb = Hy
              ? new RegExp(
                  "(".concat(Object.keys(Hy).join("|"), ")(?!\\w)"),
                  "g"
                )
              : /^\b$/);
          var t = e.output.map(function (e) {
              return Lb(e).replace(Wb, jb).replace(Hb, bb).replace(Fb, bb);
            }),
            n = t.map(function (e) {
              return e.match(Zb).map(Number);
            }),
            r = n[0].map(function (e, t) {
              return n.map(function (e) {
                if (!(t in e))
                  throw Error('The arity of each "output" value must be equal');
                return e[t];
              });
            }),
            i = r.map(function (t) {
              return _b(Ab({}, e, { output: t }));
            });
          return function (e) {
            var n,
              r =
                !Vb.test(t[0]) &&
                (null ==
                (n = t.find(function (e) {
                  return Vb.test(e);
                }))
                  ? void 0
                  : n.replace(Zb, "")),
              a = 0;
            return t[0]
              .replace(Zb, function () {
                return "".concat(i[a++](e)).concat(r || "");
              })
              .replace(Gb, qb);
          };
        },
        Kb = "react-spring: ",
        $b = function (e) {
          var t = e,
            n = !1;
          if ("function" != typeof t)
            throw new TypeError(
              "".concat(Kb, "once requires a function parameter")
            );
          return function () {
            n || (t.apply(void 0, arguments), (n = !0));
          };
        },
        Jb = $b(console.warn);
      var Qb = $b(console.warn);
      function e_(e) {
        return (
          Ly.str(e) &&
          ("#" == e[0] ||
            /\d/.test(e) ||
            (!Zy() && Wb.test(e)) ||
            e in (Hy || {}))
        );
      }
      new WeakMap();
      new Set(), new WeakMap(), new WeakMap(), new WeakMap();
      var t_ = Zy() ? a.useEffect : a.useLayoutEffect,
        n_ = function () {
          var e = (0, a.useRef)(!1);
          return (
            t_(function () {
              return (
                (e.current = !0),
                function () {
                  e.current = !1;
                }
              );
            }, []),
            e
          );
        };
      function r_() {
        var e = (0, a.useState)()[1],
          t = n_();
        return function () {
          t.current && e(Math.random());
        };
      }
      var i_ = function (e) {
          return (0, a.useEffect)(e, a_);
        },
        a_ = [];
      function o_(e) {
        var t = (0, a.useRef)();
        return (
          (0, a.useEffect)(function () {
            t.current = e;
          }),
          t.current
        );
      }
      var s_ = Symbol.for("Animated:node"),
        l_ = function (e) {
          return e && e[s_];
        },
        u_ = function (e, t) {
          return (
            (n = e),
            (r = s_),
            (i = t),
            Object.defineProperty(n, r, {
              value: i,
              writable: !0,
              configurable: !0,
            })
          );
          var n, r, i;
        },
        c_ = function (e) {
          return e && e[s_] && e[s_].getPayload();
        },
        d_ = (function () {
          function e() {
            p(this, e), (this.payload = void 0), u_(this, this);
          }
          return (
            g(e, [
              {
                key: "getPayload",
                value: function () {
                  return this.payload || [];
                },
              },
            ]),
            e
          );
        })(),
        f_ = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return (
              p(this, n),
              ((r = t.call(this)).done = !0),
              (r.elapsedTime = void 0),
              (r.lastPosition = void 0),
              (r.lastVelocity = void 0),
              (r.v0 = void 0),
              (r.durationProgress = 0),
              (r._value = e),
              Ly.num(r._value) && (r.lastPosition = r._value),
              r
            );
          }
          return (
            g(
              n,
              [
                {
                  key: "getPayload",
                  value: function () {
                    return [this];
                  },
                },
                {
                  key: "getValue",
                  value: function () {
                    return this._value;
                  },
                },
                {
                  key: "setValue",
                  value: function (e, t) {
                    return (
                      Ly.num(e) &&
                        ((this.lastPosition = e),
                        t &&
                          ((e = Math.round(e / t) * t),
                          this.done && (this.lastPosition = e))),
                      this._value !== e && ((this._value = e), !0)
                    );
                  },
                },
                {
                  key: "reset",
                  value: function () {
                    var e = this.done;
                    (this.done = !1),
                      Ly.num(this._value) &&
                        ((this.elapsedTime = 0),
                        (this.durationProgress = 0),
                        (this.lastPosition = this._value),
                        e && (this.lastVelocity = null),
                        (this.v0 = null));
                  },
                },
              ],
              [
                {
                  key: "create",
                  value: function (e) {
                    return new n(e);
                  },
                },
              ]
            ),
            n
          );
        })(d_),
        h_ = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return (
              p(this, n),
              ((r = t.call(this, 0))._string = null),
              (r._toString = void 0),
              (r._toString = _b({ output: [e, e] })),
              r
            );
          }
          return (
            g(
              n,
              [
                {
                  key: "getValue",
                  value: function () {
                    var e = this._string;
                    return null == e
                      ? (this._string = this._toString(this._value))
                      : e;
                  },
                },
                {
                  key: "setValue",
                  value: function (e) {
                    if (Ly.str(e)) {
                      if (e == this._string) return !1;
                      (this._string = e), (this._value = 1);
                    } else {
                      if (!L(_(n.prototype), "setValue", this).call(this, e))
                        return !1;
                      this._string = null;
                    }
                    return !0;
                  },
                },
                {
                  key: "reset",
                  value: function (e) {
                    e &&
                      (this._toString = _b({ output: [this.getValue(), e] })),
                      (this._value = 0),
                      L(_(n.prototype), "reset", this).call(this);
                  },
                },
              ],
              [
                {
                  key: "create",
                  value: function (e) {
                    return new n(e);
                  },
                },
              ]
            ),
            n
          );
        })(f_),
        p_ = { dependencies: null },
        v_ = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            var r;
            return (
              p(this, n), ((r = t.call(this)).source = e), r.setValue(e), r
            );
          }
          return (
            g(n, [
              {
                key: "getValue",
                value: function (e) {
                  var t = {};
                  return (
                    Oy(this.source, function (n, r) {
                      var i;
                      (i = n) && i[s_] === i
                        ? (t[r] = n.getValue(e))
                        : Rb(n)
                        ? (t[r] = Lb(n))
                        : e || (t[r] = n);
                    }),
                    t
                  );
                },
              },
              {
                key: "setValue",
                value: function (e) {
                  (this.source = e), (this.payload = this._makePayload(e));
                },
              },
              {
                key: "reset",
                value: function () {
                  this.payload &&
                    Ny(this.payload, function (e) {
                      return e.reset();
                    });
                },
              },
              {
                key: "_makePayload",
                value: function (e) {
                  if (e) {
                    var t = new Set();
                    return Oy(e, this._addToPayload, t), Array.from(t);
                  }
                },
              },
              {
                key: "_addToPayload",
                value: function (e) {
                  var t = this;
                  p_.dependencies && Rb(e) && p_.dependencies.add(e);
                  var n = c_(e);
                  n &&
                    Ny(n, function (e) {
                      return t.add(e);
                    });
                },
              },
            ]),
            n
          );
        })(d_),
        m_ = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e) {
            return p(this, n), t.call(this, e);
          }
          return (
            g(
              n,
              [
                {
                  key: "getValue",
                  value: function () {
                    return this.source.map(function (e) {
                      return e.getValue();
                    });
                  },
                },
                {
                  key: "setValue",
                  value: function (e) {
                    var t = this.getPayload();
                    return e.length == t.length
                      ? t
                          .map(function (t, n) {
                            return t.setValue(e[n]);
                          })
                          .some(Boolean)
                      : (L(_(n.prototype), "setValue", this).call(
                          this,
                          e.map(g_)
                        ),
                        !0);
                  },
                },
              ],
              [
                {
                  key: "create",
                  value: function (e) {
                    return new n(e);
                  },
                },
              ]
            ),
            n
          );
        })(v_);
      function g_(e) {
        return (e_(e) ? h_ : f_).create(e);
      }
      function y_(e) {
        var t = l_(e);
        return t ? t.constructor : Ly.arr(e) ? m_ : e_(e) ? h_ : f_;
      }
      function b_() {
        return (
          (b_ = Object.assign
            ? Object.assign.bind()
            : function (e) {
                for (var t = 1; t < arguments.length; t++) {
                  var n = arguments[t];
                  for (var r in n)
                    Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
                return e;
              }),
          b_.apply(this, arguments)
        );
      }
      var __ = function (e, t) {
          var n = !Ly.fun(e) || (e.prototype && e.prototype.isReactComponent);
          return (0, a.forwardRef)(function (r, o) {
            var s = (0, a.useRef)(null),
              l =
                n &&
                (0, a.useCallback)(
                  function (e) {
                    s.current = (function (e, t) {
                      e && (Ly.fun(e) ? e(t) : (e.current = t));
                      return t;
                    })(o, e);
                  },
                  [o]
                ),
              u = (function (e, t) {
                var n = new Set();
                (p_.dependencies = n),
                  e.style &&
                    (e = b_({}, e, { style: t.createAnimatedStyle(e.style) }));
                return (e = new v_(e)), (p_.dependencies = null), [e, n];
              })(r, t),
              c = (0, i.Z)(u, 2),
              d = c[0],
              f = c[1],
              h = r_(),
              p = function () {
                var e = s.current;
                (n && !e) ||
                  (!1 === (!!e && t.applyAnimatedValues(e, d.getValue(!0))) &&
                    h());
              },
              v = new x_(p, f),
              m = (0, a.useRef)();
            t_(function () {
              return (
                (m.current = v),
                Ny(f, function (e) {
                  return Ub(e, v);
                }),
                function () {
                  m.current &&
                    (Ny(m.current.deps, function (e) {
                      return zb(e, m.current);
                    }),
                    py.cancel(m.current.update));
                }
              );
            }),
              (0, a.useEffect)(p, []),
              i_(function () {
                return function () {
                  var e = m.current;
                  Ny(e.deps, function (t) {
                    return zb(t, e);
                  });
                };
              });
            var g = t.getComponentProps(d.getValue());
            return a.createElement(e, b_({}, g, { ref: l }));
          });
        },
        x_ = (function () {
          function e(t, n) {
            p(this, e), (this.update = t), (this.deps = n);
          }
          return (
            g(e, [
              {
                key: "eventObserved",
                value: function (e) {
                  "change" == e.type && py.write(this.update);
                },
              },
            ]),
            e
          );
        })();
      var S_ = Symbol.for("AnimatedComponent"),
        w_ = function (e) {
          return Ly.str(e)
            ? e
            : e && Ly.str(e.displayName)
            ? e.displayName
            : (Ly.fun(e) && e.name) || null;
        };
      function M_() {
        return (
          (M_ = Object.assign
            ? Object.assign.bind()
            : function (e) {
                for (var t = 1; t < arguments.length; t++) {
                  var n = arguments[t];
                  for (var r in n)
                    Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
                return e;
              }),
          M_.apply(this, arguments)
        );
      }
      function E_(e) {
        for (
          var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1;
          r < t;
          r++
        )
          n[r - 1] = arguments[r];
        return Ly.fun(e) ? e.apply(void 0, n) : e;
      }
      var k_ = function (e, t) {
          return (
            !0 === e || !!(t && e && (Ly.fun(e) ? e(t) : Dy(e).includes(t)))
          );
        },
        T_ = function (e, t) {
          return Ly.obj(e) ? t && e[t] : e;
        },
        A_ = function (e, t) {
          return !0 === e.default ? e[t] : e.default ? e.default[t] : void 0;
        },
        C_ = function (e) {
          return e;
        },
        P_ = function (e) {
          var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : C_,
            n = R_;
          e.default &&
            !0 !== e.default &&
            ((e = e.default), (n = Object.keys(e)));
          var r,
            i = {},
            a = T(n);
          try {
            for (a.s(); !(r = a.n()).done; ) {
              var o = r.value,
                s = t(e[o], o);
              Ly.und(s) || (i[o] = s);
            }
          } catch (l) {
            a.e(l);
          } finally {
            a.f();
          }
          return i;
        },
        R_ = [
          "config",
          "onProps",
          "onStart",
          "onChange",
          "onPause",
          "onResume",
          "onRest",
        ],
        L_ = {
          config: 1,
          from: 1,
          to: 1,
          ref: 1,
          loop: 1,
          reset: 1,
          pause: 1,
          cancel: 1,
          reverse: 1,
          immediate: 1,
          default: 1,
          delay: 1,
          onProps: 1,
          onStart: 1,
          onChange: 1,
          onPause: 1,
          onResume: 1,
          onRest: 1,
          onResolve: 1,
          items: 1,
          trail: 1,
          sort: 1,
          expires: 1,
          initial: 1,
          enter: 1,
          update: 1,
          leave: 1,
          children: 1,
          onDestroyed: 1,
          keys: 1,
          callId: 1,
          parentId: 1,
        };
      function I_(e) {
        var t = (function (e) {
          var t = {},
            n = 0;
          if (
            (Oy(e, function (e, r) {
              L_[r] || ((t[r] = e), n++);
            }),
            n)
          )
            return t;
        })(e);
        if (t) {
          var n = { to: t };
          return (
            Oy(e, function (e, r) {
              return r in t || (n[r] = e);
            }),
            n
          );
        }
        return M_({}, e);
      }
      function N_(e) {
        return (
          (e = Lb(e)),
          Ly.arr(e)
            ? e.map(N_)
            : e_(e)
            ? jy.createStringInterpolator({ range: [0, 1], output: [e, e] })(1)
            : e
        );
      }
      function O_(e) {
        for (var t in e) return !0;
        return !1;
      }
      function D_(e) {
        return Ly.fun(e) || (Ly.arr(e) && Ly.obj(e[0]));
      }
      function U_(e, t) {
        var n;
        null == (n = e.ref) || n.delete(e), null == t || t.delete(e);
      }
      function z_(e, t) {
        var n;
        t &&
          e.ref !== t &&
          (null == (n = e.ref) || n.delete(e), t.add(e), (e.ref = t));
      }
      var F_ = M_(
          {},
          { tension: 170, friction: 26 },
          { mass: 1, damping: 1, easing: Tb.linear, clamp: !1 }
        ),
        B_ = g(function e() {
          p(this, e),
            (this.tension = void 0),
            (this.friction = void 0),
            (this.frequency = void 0),
            (this.damping = void 0),
            (this.mass = void 0),
            (this.velocity = 0),
            (this.restVelocity = void 0),
            (this.precision = void 0),
            (this.progress = void 0),
            (this.duration = void 0),
            (this.easing = void 0),
            (this.clamp = void 0),
            (this.bounce = void 0),
            (this.decay = void 0),
            (this.round = void 0),
            Object.assign(this, F_);
        });
      function Z_(e, t) {
        if (Ly.und(t.decay)) {
          var n = !Ly.und(t.tension) || !Ly.und(t.friction);
          (!n && Ly.und(t.frequency) && Ly.und(t.damping) && Ly.und(t.mass)) ||
            ((e.duration = void 0), (e.decay = void 0)),
            n && (e.frequency = void 0);
        } else e.duration = void 0;
      }
      var H_ = [],
        V_ = g(function e() {
          p(this, e),
            (this.changed = !1),
            (this.values = H_),
            (this.toValues = null),
            (this.fromValues = H_),
            (this.to = void 0),
            (this.from = void 0),
            (this.config = new B_()),
            (this.immediate = !1);
        });
      function G_(e, t) {
        var n = t.key,
          r = t.props,
          i = t.defaultProps,
          a = t.state,
          o = t.actions;
        return new Promise(function (t, s) {
          var l,
            u,
            c,
            d = k_(
              null != (l = r.cancel) ? l : null == i ? void 0 : i.cancel,
              n
            );
          if (d) v();
          else {
            Ly.und(r.pause) || (a.paused = k_(r.pause, n));
            var f = null == i ? void 0 : i.pause;
            !0 !== f && (f = a.paused || k_(f, n)),
              (u = E_(r.delay || 0, n)),
              f ? (a.resumeQueue.add(p), o.pause()) : (o.resume(), p());
          }
          function h() {
            a.resumeQueue.add(p),
              a.timeouts.delete(c),
              c.cancel(),
              (u = c.time - py.now());
          }
          function p() {
            u > 0 && !jy.skipAnimation
              ? ((a.delayed = !0),
                (c = py.setTimeout(v, u)),
                a.pauseQueue.add(h),
                a.timeouts.add(c))
              : v();
          }
          function v() {
            a.delayed && (a.delayed = !1),
              a.pauseQueue.delete(h),
              a.timeouts.delete(c),
              e <= (a.cancelId || 0) && (d = !0);
            try {
              o.start(M_({}, r, { callId: e, cancel: d }), t);
            } catch (n) {
              s(n);
            }
          }
        });
      }
      var W_ = function (e, t) {
          return 1 == t.length
            ? t[0]
            : t.some(function (e) {
                return e.cancelled;
              })
            ? q_(e.get())
            : t.every(function (e) {
                return e.noop;
              })
            ? j_(e.get())
            : X_(
                e.get(),
                t.every(function (e) {
                  return e.finished;
                })
              );
        },
        j_ = function (e) {
          return { value: e, noop: !0, finished: !0, cancelled: !1 };
        },
        X_ = function (e, t) {
          return {
            value: e,
            finished: t,
            cancelled:
              arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
          };
        },
        q_ = function (e) {
          return { value: e, cancelled: !0, finished: !1 };
        };
      function Y_(e, t, n, r) {
        var i = t.callId,
          a = t.parentId,
          o = t.onRest,
          s = n.asyncTo,
          l = n.promise;
        return a || e !== s || t.reset
          ? (n.promise = R(
              I().mark(function u() {
                var c, d, f, h, p, v, m, g;
                return I().wrap(
                  function (u) {
                    for (;;)
                      switch ((u.prev = u.next)) {
                        case 0:
                          if (
                            ((n.asyncId = i),
                            (n.asyncTo = e),
                            (c = P_(t, function (e, t) {
                              return "onRest" === t ? void 0 : e;
                            })),
                            (h = new Promise(function (e, t) {
                              return (d = e), (f = t);
                            })),
                            (p = function (e) {
                              var t =
                                (i <= (n.cancelId || 0) && q_(r)) ||
                                (i !== n.asyncId && X_(r, !1));
                              if (t) throw ((e.result = t), f(e), e);
                            }),
                            (v = function (e, t) {
                              var a = new $_(),
                                o = new J_();
                              return R(
                                I().mark(function s() {
                                  var l, u;
                                  return I().wrap(function (s) {
                                    for (;;)
                                      switch ((s.prev = s.next)) {
                                        case 0:
                                          if (!jy.skipAnimation) {
                                            s.next = 5;
                                            break;
                                          }
                                          throw (
                                            (K_(n),
                                            (o.result = X_(r, !1)),
                                            f(o),
                                            o)
                                          );
                                        case 5:
                                          return (
                                            p(a),
                                            ((l = Ly.obj(e)
                                              ? M_({}, e)
                                              : M_({}, t, { to: e })).parentId =
                                              i),
                                            Oy(c, function (e, t) {
                                              Ly.und(l[t]) && (l[t] = e);
                                            }),
                                            (s.next = 11),
                                            r.start(l)
                                          );
                                        case 11:
                                          if (((u = s.sent), p(a), !n.paused)) {
                                            s.next = 16;
                                            break;
                                          }
                                          return (
                                            (s.next = 16),
                                            new Promise(function (e) {
                                              n.resumeQueue.add(e);
                                            })
                                          );
                                        case 16:
                                          return s.abrupt("return", u);
                                        case 17:
                                        case "end":
                                          return s.stop();
                                      }
                                  }, s);
                                })
                              )();
                            }),
                            !jy.skipAnimation)
                          ) {
                            u.next = 9;
                            break;
                          }
                          return K_(n), u.abrupt("return", X_(r, !1));
                        case 9:
                          return (
                            (u.prev = 9),
                            (g = Ly.arr(e)
                              ? (function () {
                                  var e = R(
                                    I().mark(function e(t) {
                                      var n, r, i;
                                      return I().wrap(
                                        function (e) {
                                          for (;;)
                                            switch ((e.prev = e.next)) {
                                              case 0:
                                                (n = T(t)), (e.prev = 1), n.s();
                                              case 3:
                                                if ((r = n.n()).done) {
                                                  e.next = 9;
                                                  break;
                                                }
                                                return (
                                                  (i = r.value),
                                                  (e.next = 7),
                                                  v(i)
                                                );
                                              case 7:
                                                e.next = 3;
                                                break;
                                              case 9:
                                                e.next = 14;
                                                break;
                                              case 11:
                                                (e.prev = 11),
                                                  (e.t0 = e.catch(1)),
                                                  n.e(e.t0);
                                              case 14:
                                                return (
                                                  (e.prev = 14),
                                                  n.f(),
                                                  e.finish(14)
                                                );
                                              case 17:
                                              case "end":
                                                return e.stop();
                                            }
                                        },
                                        e,
                                        null,
                                        [[1, 11, 14, 17]]
                                      );
                                    })
                                  );
                                  return function (t) {
                                    return e.apply(this, arguments);
                                  };
                                })()(e)
                              : Promise.resolve(e(v, r.stop.bind(r)))),
                            (u.next = 13),
                            Promise.all([g.then(d), h])
                          );
                        case 13:
                          (m = X_(r.get(), !0, !1)), (u.next = 27);
                          break;
                        case 16:
                          if (
                            ((u.prev = 16),
                            (u.t0 = u.catch(9)),
                            !(u.t0 instanceof $_))
                          ) {
                            u.next = 22;
                            break;
                          }
                          (m = u.t0.result), (u.next = 27);
                          break;
                        case 22:
                          if (!(u.t0 instanceof J_)) {
                            u.next = 26;
                            break;
                          }
                          (m = u.t0.result), (u.next = 27);
                          break;
                        case 26:
                          throw u.t0;
                        case 27:
                          return (
                            (u.prev = 27),
                            i == n.asyncId &&
                              ((n.asyncId = a),
                              (n.asyncTo = a ? s : void 0),
                              (n.promise = a ? l : void 0)),
                            u.finish(27)
                          );
                        case 30:
                          return (
                            Ly.fun(o) &&
                              py.batchedUpdates(function () {
                                o(m, r, r.item);
                              }),
                            u.abrupt("return", m)
                          );
                        case 32:
                        case "end":
                          return u.stop();
                      }
                  },
                  u,
                  null,
                  [[9, 16, 27, 30]]
                );
              })
            )())
          : l;
      }
      function K_(e, t) {
        Uy(e.timeouts, function (e) {
          return e.cancel();
        }),
          e.pauseQueue.clear(),
          e.resumeQueue.clear(),
          (e.asyncId = e.asyncTo = e.promise = void 0),
          t && (e.cancelId = t);
      }
      var $_ = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e;
            return (
              p(this, n),
              ((e = t.call(
                this,
                "An async animation has been interrupted. You see this error because you forgot to use `await` or `.catch(...)` on its returned promise."
              )).result = void 0),
              e
            );
          }
          return g(n);
        })(C(Error)),
        J_ = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e;
            return (
              p(this, n),
              ((e = t.call(this, "SkipAnimationSignal")).result = void 0),
              e
            );
          }
          return g(n);
        })(C(Error)),
        Q_ = function (e) {
          return e instanceof tx;
        },
        ex = 1,
        tx = (function (e) {
          b(n, e);
          var t = k(n);
          function n() {
            var e;
            p(this, n);
            for (var r = arguments.length, i = new Array(r), a = 0; a < r; a++)
              i[a] = arguments[a];
            return (
              ((e = t.call.apply(t, [this].concat(i))).id = ex++),
              (e.key = void 0),
              (e._priority = 0),
              e
            );
          }
          return (
            g(n, [
              {
                key: "priority",
                get: function () {
                  return this._priority;
                },
                set: function (e) {
                  this._priority != e &&
                    ((this._priority = e), this._onPriorityChange(e));
                },
              },
              {
                key: "get",
                value: function () {
                  var e = l_(this);
                  return e && e.getValue();
                },
              },
              {
                key: "to",
                value: function () {
                  for (
                    var e = arguments.length, t = new Array(e), n = 0;
                    n < e;
                    n++
                  )
                    t[n] = arguments[n];
                  return jy.to(this, t);
                },
              },
              {
                key: "interpolate",
                value: function () {
                  Jb(
                    "".concat(
                      Kb,
                      'The "interpolate" function is deprecated in v9 (use "to" instead)'
                    )
                  );
                  for (
                    var e = arguments.length, t = new Array(e), n = 0;
                    n < e;
                    n++
                  )
                    t[n] = arguments[n];
                  return jy.to(this, t);
                },
              },
              {
                key: "toJSON",
                value: function () {
                  return this.get();
                },
              },
              {
                key: "observerAdded",
                value: function (e) {
                  1 == e && this._attach();
                },
              },
              {
                key: "observerRemoved",
                value: function (e) {
                  0 == e && this._detach();
                },
              },
              { key: "_attach", value: function () {} },
              { key: "_detach", value: function () {} },
              {
                key: "_onChange",
                value: function (e) {
                  Nb(this, {
                    type: "change",
                    parent: this,
                    value: e,
                    idle:
                      arguments.length > 1 &&
                      void 0 !== arguments[1] &&
                      arguments[1],
                  });
                },
              },
              {
                key: "_onPriorityChange",
                value: function (e) {
                  this.idle || $y.sort(this),
                    Nb(this, { type: "priority", parent: this, priority: e });
                },
              },
            ]),
            n
          );
        })(Ob),
        nx = Symbol.for("SpringPhase"),
        rx = function (e) {
          return (1 & e[nx]) > 0;
        },
        ix = function (e) {
          return (2 & e[nx]) > 0;
        },
        ax = function (e) {
          return (4 & e[nx]) > 0;
        },
        ox = function (e, t) {
          return t ? (e[nx] |= 3) : (e[nx] &= -3);
        },
        sx = function (e, t) {
          return t ? (e[nx] |= 4) : (e[nx] &= -5);
        },
        lx = (function (e) {
          b(n, e);
          var t = k(n);
          function n(e, r) {
            var i;
            if (
              (p(this, n),
              ((i = t.call(this)).key = void 0),
              (i.animation = new V_()),
              (i.queue = void 0),
              (i.defaultProps = {}),
              (i._state = {
                paused: !1,
                delayed: !1,
                pauseQueue: new Set(),
                resumeQueue: new Set(),
                timeouts: new Set(),
              }),
              (i._pendingCalls = new Set()),
              (i._lastCallId = 0),
              (i._lastToId = 0),
              (i._memoizedDuration = 0),
              !Ly.und(e) || !Ly.und(r))
            ) {
              var a = Ly.obj(e) ? M_({}, e) : M_({}, r, { from: e });
              Ly.und(a.default) && (a.default = !0), i.start(a);
            }
            return i;
          }
          return (
            g(n, [
              {
                key: "idle",
                get: function () {
                  return !(ix(this) || this._state.asyncTo) || ax(this);
                },
              },
              {
                key: "goal",
                get: function () {
                  return Lb(this.animation.to);
                },
              },
              {
                key: "velocity",
                get: function () {
                  var e = l_(this);
                  return e instanceof f_
                    ? e.lastVelocity || 0
                    : e.getPayload().map(function (e) {
                        return e.lastVelocity || 0;
                      });
                },
              },
              {
                key: "hasAnimated",
                get: function () {
                  return rx(this);
                },
              },
              {
                key: "isAnimating",
                get: function () {
                  return ix(this);
                },
              },
              {
                key: "isPaused",
                get: function () {
                  return ax(this);
                },
              },
              {
                key: "isDelayed",
                get: function () {
                  return this._state.delayed;
                },
              },
              {
                key: "advance",
                value: function (e) {
                  var t = this,
                    n = !0,
                    r = !1,
                    i = this.animation,
                    a = i.config,
                    o = i.toValues,
                    s = c_(i.to);
                  !s && Rb(i.to) && (o = Dy(Lb(i.to))),
                    i.values.forEach(function (l, u) {
                      if (!l.done) {
                        var c =
                            l.constructor == h_
                              ? 1
                              : s
                              ? s[u].lastPosition
                              : o[u],
                          d = i.immediate,
                          f = c;
                        if (!d) {
                          if (((f = l.lastPosition), a.tension <= 0))
                            return void (l.done = !0);
                          var h,
                            p = (l.elapsedTime += e),
                            v = i.fromValues[u],
                            m =
                              null != l.v0
                                ? l.v0
                                : (l.v0 = Ly.arr(a.velocity)
                                    ? a.velocity[u]
                                    : a.velocity),
                            g =
                              a.precision ||
                              (v == c
                                ? 0.005
                                : Math.min(1, 0.001 * Math.abs(c - v)));
                          if (Ly.und(a.duration))
                            if (a.decay) {
                              var y = !0 === a.decay ? 0.998 : a.decay,
                                b = Math.exp(-(1 - y) * p);
                              (f = v + (m / (1 - y)) * (1 - b)),
                                (d = Math.abs(l.lastPosition - f) <= g),
                                (h = m * b);
                            } else {
                              h = null == l.lastVelocity ? m : l.lastVelocity;
                              for (
                                var _ = a.restVelocity || g / 10,
                                  x = a.clamp ? 0 : a.bounce,
                                  S = !Ly.und(x),
                                  w = v == c ? l.v0 > 0 : v < c,
                                  M = Math.ceil(e / 1),
                                  E = 0;
                                E < M &&
                                (Math.abs(h) > _ ||
                                  !(d = Math.abs(c - f) <= g));
                                ++E
                              ) {
                                S &&
                                  (f == c || f > c == w) &&
                                  ((h = -h * x), (f = c)),
                                  (f +=
                                    1 *
                                    (h +=
                                      1 *
                                      ((1e-6 * -a.tension * (f - c) +
                                        0.001 * -a.friction * h) /
                                        a.mass)));
                              }
                            }
                          else {
                            var k = 1;
                            a.duration > 0 &&
                              (t._memoizedDuration !== a.duration &&
                                ((t._memoizedDuration = a.duration),
                                l.durationProgress > 0 &&
                                  ((l.elapsedTime =
                                    a.duration * l.durationProgress),
                                  (p = l.elapsedTime += e))),
                              (k =
                                (k =
                                  (a.progress || 0) + p / t._memoizedDuration) >
                                1
                                  ? 1
                                  : k < 0
                                  ? 0
                                  : k),
                              (l.durationProgress = k)),
                              (h =
                                ((f = v + a.easing(k) * (c - v)) -
                                  l.lastPosition) /
                                e),
                              (d = 1 == k);
                          }
                          (l.lastVelocity = h),
                            Number.isNaN(f) &&
                              (console.warn("Got NaN while animating:", t),
                              (d = !0));
                        }
                        s && !s[u].done && (d = !1),
                          d ? (l.done = !0) : (n = !1),
                          l.setValue(f, a.round) && (r = !0);
                      }
                    });
                  var l = l_(this),
                    u = l.getValue();
                  if (n) {
                    var c = Lb(i.to);
                    (u === c && !r) || a.decay
                      ? r && a.decay && this._onChange(u)
                      : (l.setValue(c), this._onChange(c)),
                      this._stop();
                  } else r && this._onChange(u);
                },
              },
              {
                key: "set",
                value: function (e) {
                  var t = this;
                  return (
                    py.batchedUpdates(function () {
                      t._stop(), t._focus(e), t._set(e);
                    }),
                    this
                  );
                },
              },
              {
                key: "pause",
                value: function () {
                  this._update({ pause: !0 });
                },
              },
              {
                key: "resume",
                value: function () {
                  this._update({ pause: !1 });
                },
              },
              {
                key: "finish",
                value: function () {
                  var e = this;
                  if (ix(this)) {
                    var t = this.animation,
                      n = t.to,
                      r = t.config;
                    py.batchedUpdates(function () {
                      e._onStart(), r.decay || e._set(n, !1), e._stop();
                    });
                  }
                  return this;
                },
              },
              {
                key: "update",
                value: function (e) {
                  return (this.queue || (this.queue = [])).push(e), this;
                },
              },
              {
                key: "start",
                value: function (e, t) {
                  var n,
                    r = this;
                  return (
                    Ly.und(e)
                      ? ((n = this.queue || []), (this.queue = []))
                      : (n = [Ly.obj(e) ? e : M_({}, t, { to: e })]),
                    Promise.all(
                      n.map(function (e) {
                        return r._update(e);
                      })
                    ).then(function (e) {
                      return W_(r, e);
                    })
                  );
                },
              },
              {
                key: "stop",
                value: function (e) {
                  var t = this,
                    n = this.animation.to;
                  return (
                    this._focus(this.get()),
                    K_(this._state, e && this._lastCallId),
                    py.batchedUpdates(function () {
                      return t._stop(n, e);
                    }),
                    this
                  );
                },
              },
              {
                key: "reset",
                value: function () {
                  this._update({ reset: !0 });
                },
              },
              {
                key: "eventObserved",
                value: function (e) {
                  "change" == e.type
                    ? this._start()
                    : "priority" == e.type && (this.priority = e.priority + 1);
                },
              },
              {
                key: "_prepareNode",
                value: function (e) {
                  var t = this.key || "",
                    n = e.to,
                    r = e.from;
                  (null == (n = Ly.obj(n) ? n[t] : n) || D_(n)) && (n = void 0),
                    null == (r = Ly.obj(r) ? r[t] : r) && (r = void 0);
                  var i = { to: n, from: r };
                  if (!rx(this)) {
                    if (e.reverse) {
                      var a = [r, n];
                      (n = a[0]), (r = a[1]);
                    }
                    (r = Lb(r)),
                      Ly.und(r) ? l_(this) || this._set(n) : this._set(r);
                  }
                  return i;
                },
              },
              {
                key: "_update",
                value: function (e, t) {
                  var n = this,
                    r = M_({}, e),
                    i = this.key,
                    a = this.defaultProps;
                  r.default &&
                    Object.assign(
                      a,
                      P_(r, function (e, t) {
                        return /^on/.test(t) ? T_(e, i) : e;
                      })
                    ),
                    vx(this, r, "onProps"),
                    mx(this, "onProps", r, this);
                  var o = this._prepareNode(r);
                  if (Object.isFrozen(this))
                    throw Error(
                      "Cannot animate a `SpringValue` object that is frozen. Did you forget to pass your component to `animated(...)` before animating its props?"
                    );
                  var s = this._state;
                  return G_(++this._lastCallId, {
                    key: i,
                    props: r,
                    defaultProps: a,
                    state: s,
                    actions: {
                      pause: function () {
                        ax(n) ||
                          (sx(n, !0),
                          By(s.pauseQueue),
                          mx(n, "onPause", X_(n, ux(n, n.animation.to)), n));
                      },
                      resume: function () {
                        ax(n) &&
                          (sx(n, !1),
                          ix(n) && n._resume(),
                          By(s.resumeQueue),
                          mx(n, "onResume", X_(n, ux(n, n.animation.to)), n));
                      },
                      start: this._merge.bind(this, o),
                    },
                  }).then(function (e) {
                    if (r.loop && e.finished && (!t || !e.noop)) {
                      var i = cx(r);
                      if (i) return n._update(i, !0);
                    }
                    return e;
                  });
                },
              },
              {
                key: "_merge",
                value: function (e, t, n) {
                  var r = this;
                  if (t.cancel) return this.stop(!0), n(q_(this));
                  var i = !Ly.und(e.to),
                    a = !Ly.und(e.from);
                  if (i || a) {
                    if (!(t.callId > this._lastToId)) return n(q_(this));
                    this._lastToId = t.callId;
                  }
                  var o = this.key,
                    s = this.defaultProps,
                    l = this.animation,
                    u = l.to,
                    c = l.from,
                    d = e.to,
                    f = void 0 === d ? u : d,
                    h = e.from,
                    p = void 0 === h ? c : h;
                  if (
                    (!a || i || (t.default && !Ly.und(f)) || (f = p), t.reverse)
                  ) {
                    var v = [p, f];
                    (f = v[0]), (p = v[1]);
                  }
                  var m = !Iy(p, c);
                  m && (l.from = p), (p = Lb(p));
                  var g = !Iy(f, u);
                  g && this._focus(f);
                  var y = D_(t.to),
                    b = l.config,
                    _ = b.decay,
                    x = b.velocity;
                  (i || a) && (b.velocity = 0),
                    t.config &&
                      !y &&
                      (function (e, t, n) {
                        for (var r in (n &&
                          (Z_((n = M_({}, n)), t), (t = M_({}, n, t))),
                        Z_(e, t),
                        Object.assign(e, t),
                        F_))
                          null == e[r] && (e[r] = F_[r]);
                        var i = e.mass,
                          a = e.frequency,
                          o = e.damping;
                        Ly.und(a) ||
                          (a < 0.01 && (a = 0.01),
                          o < 0 && (o = 0),
                          (e.tension = Math.pow((2 * Math.PI) / a, 2) * i),
                          (e.friction = (4 * Math.PI * o * i) / a));
                      })(
                        b,
                        E_(t.config, o),
                        t.config !== s.config ? E_(s.config, o) : void 0
                      );
                  var S = l_(this);
                  if (!S || Ly.und(f)) return n(X_(this, !0));
                  var w = Ly.und(t.reset)
                      ? a && !t.default
                      : !Ly.und(p) && k_(t.reset, o),
                    M = w ? p : this.get(),
                    E = N_(f),
                    k = Ly.num(E) || Ly.arr(E) || e_(E),
                    T = !y && (!k || k_(s.immediate || t.immediate, o));
                  if (g) {
                    var A = y_(f);
                    if (A !== S.constructor) {
                      if (!T)
                        throw Error(
                          "Cannot animate between "
                            .concat(S.constructor.name, " and ")
                            .concat(A.name, ', as the "to" prop suggests')
                        );
                      S = this._set(E);
                    }
                  }
                  var C = S.constructor,
                    P = Rb(f),
                    R = !1;
                  if (!P) {
                    var L = w || (!rx(this) && m);
                    (g || L) && (P = !(R = Iy(N_(M), E))),
                      ((Iy(l.immediate, T) || T) &&
                        Iy(b.decay, _) &&
                        Iy(b.velocity, x)) ||
                        (P = !0);
                  }
                  if (
                    (R &&
                      ix(this) &&
                      (l.changed && !w ? (P = !0) : P || this._stop(u)),
                    !y &&
                      ((P || Rb(u)) &&
                        ((l.values = S.getPayload()),
                        (l.toValues = Rb(f) ? null : C == h_ ? [1] : Dy(E))),
                      l.immediate != T &&
                        ((l.immediate = T), T || w || this._set(u)),
                      P))
                  ) {
                    var I = l.onRest;
                    Ny(px, function (e) {
                      return vx(r, t, e);
                    });
                    var N = X_(this, ux(this, u));
                    By(this._pendingCalls, N),
                      this._pendingCalls.add(n),
                      l.changed &&
                        py.batchedUpdates(function () {
                          (l.changed = !w),
                            null == I || I(N, r),
                            w
                              ? E_(s.onRest, N)
                              : null == l.onStart || l.onStart(N, r);
                        });
                  }
                  w && this._set(M),
                    y
                      ? n(Y_(t.to, t, this._state, this))
                      : P
                      ? this._start()
                      : ix(this) && !g
                      ? this._pendingCalls.add(n)
                      : n(j_(M));
                },
              },
              {
                key: "_focus",
                value: function (e) {
                  var t = this.animation;
                  e !== t.to &&
                    (Ib(this) && this._detach(),
                    (t.to = e),
                    Ib(this) && this._attach());
                },
              },
              {
                key: "_attach",
                value: function () {
                  var e = 0,
                    t = this.animation.to;
                  Rb(t) && (Ub(t, this), Q_(t) && (e = t.priority + 1)),
                    (this.priority = e);
                },
              },
              {
                key: "_detach",
                value: function () {
                  var e = this.animation.to;
                  Rb(e) && zb(e, this);
                },
              },
              {
                key: "_set",
                value: function (e) {
                  var t = this,
                    n =
                      !(arguments.length > 1 && void 0 !== arguments[1]) ||
                      arguments[1],
                    r = Lb(e);
                  if (!Ly.und(r)) {
                    var i = l_(this);
                    if (!i || !Iy(r, i.getValue())) {
                      var a = y_(r);
                      i && i.constructor == a
                        ? i.setValue(r)
                        : u_(this, a.create(r)),
                        i &&
                          py.batchedUpdates(function () {
                            t._onChange(r, n);
                          });
                    }
                  }
                  return l_(this);
                },
              },
              {
                key: "_onStart",
                value: function () {
                  var e = this.animation;
                  e.changed ||
                    ((e.changed = !0),
                    mx(this, "onStart", X_(this, ux(this, e.to)), this));
                },
              },
              {
                key: "_onChange",
                value: function (e, t) {
                  t || (this._onStart(), E_(this.animation.onChange, e, this)),
                    E_(this.defaultProps.onChange, e, this),
                    L(_(n.prototype), "_onChange", this).call(this, e, t);
                },
              },
              {
                key: "_start",
                value: function () {
                  var e = this.animation;
                  l_(this).reset(Lb(e.to)),
                    e.immediate ||
                      (e.fromValues = e.values.map(function (e) {
                        return e.lastPosition;
                      })),
                    ix(this) || (ox(this, !0), ax(this) || this._resume());
                },
              },
              {
                key: "_resume",
                value: function () {
                  jy.skipAnimation ? this.finish() : $y.start(this);
                },
              },
              {
                key: "_stop",
                value: function (e, t) {
                  if (ix(this)) {
                    ox(this, !1);
                    var n = this.animation;
                    Ny(n.values, function (e) {
                      e.done = !0;
                    }),
                      n.toValues &&
                        (n.onChange = n.onPause = n.onResume = void 0),
                      Nb(this, { type: "idle", parent: this });
                    var r = t
                      ? q_(this.get())
                      : X_(this.get(), ux(this, null != e ? e : n.to));
                    By(this._pendingCalls, r),
                      n.changed &&
                        ((n.changed = !1), mx(this, "onRest", r, this));
                  }
                },
              },
            ]),
            n
          );
        })(tx);
      function ux(e, t) {
        var n = N_(t);
        return Iy(N_(e.get()), n);
      }
      function cx(e) {
        var t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : e.loop,
          n =
            arguments.length > 2 && void 0 !== arguments[2]
              ? arguments[2]
              : e.to,
          r = E_(t);
        if (r) {
          var i = !0 !== r && I_(r),
            a = (i || e).reverse,
            o = !i || i.reset;
          return dx(
            M_(
              {},
              e,
              {
                loop: t,
                default: !1,
                pause: void 0,
                to: !a || D_(n) ? n : void 0,
                from: o ? e.from : void 0,
                reset: o,
              },
              i
            )
          );
        }
      }
      function dx(e) {
        var t = (e = I_(e)),
          n = t.to,
          r = t.from,
          i = new Set();
        return (
          Ly.obj(n) && hx(n, i),
          Ly.obj(r) && hx(r, i),
          (e.keys = i.size ? Array.from(i) : null),
          e
        );
      }
      function fx(e) {
        var t = dx(e);
        return Ly.und(t.default) && (t.default = P_(t)), t;
      }
      function hx(e, t) {
        Oy(e, function (e, n) {
          return null != e && t.add(n);
        });
      }
      var px = ["onStart", "onRest", "onChange", "onPause", "onResume"];
      function vx(e, t, n) {
        e.animation[n] = t[n] !== A_(t, n) ? T_(t[n], e.key) : void 0;
      }
      function mx(e, t) {
        for (
          var n,
            r,
            i,
            a,
            o,
            s,
            l = arguments.length,
            u = new Array(l > 2 ? l - 2 : 0),
            c = 2;
          c < l;
          c++
        )
          u[c - 2] = arguments[c];
        null == (i = (a = e.animation)[t]) ||
          (n = i).call.apply(n, [a].concat(u)),
          null == (o = (s = e.defaultProps)[t]) ||
            (r = o).call.apply(r, [s].concat(u));
      }
      var gx = ["onStart", "onChange", "onRest"],
        yx = 1,
        bx = (function () {
          function e(t, n) {
            p(this, e),
              (this.id = yx++),
              (this.springs = {}),
              (this.queue = []),
              (this.ref = void 0),
              (this._flush = void 0),
              (this._initialProps = void 0),
              (this._lastAsyncId = 0),
              (this._active = new Set()),
              (this._changed = new Set()),
              (this._started = !1),
              (this._item = void 0),
              (this._state = {
                paused: !1,
                pauseQueue: new Set(),
                resumeQueue: new Set(),
                timeouts: new Set(),
              }),
              (this._events = {
                onStart: new Map(),
                onChange: new Map(),
                onRest: new Map(),
              }),
              (this._onFrame = this._onFrame.bind(this)),
              n && (this._flush = n),
              t && this.start(M_({ default: !0 }, t));
          }
          return (
            g(e, [
              {
                key: "idle",
                get: function () {
                  return (
                    !this._state.asyncTo &&
                    Object.values(this.springs).every(function (e) {
                      return e.idle && !e.isDelayed && !e.isPaused;
                    })
                  );
                },
              },
              {
                key: "item",
                get: function () {
                  return this._item;
                },
                set: function (e) {
                  this._item = e;
                },
              },
              {
                key: "get",
                value: function () {
                  var e = {};
                  return (
                    this.each(function (t, n) {
                      return (e[n] = t.get());
                    }),
                    e
                  );
                },
              },
              {
                key: "set",
                value: function (e) {
                  for (var t in e) {
                    var n = e[t];
                    Ly.und(n) || this.springs[t].set(n);
                  }
                },
              },
              {
                key: "update",
                value: function (e) {
                  return e && this.queue.push(dx(e)), this;
                },
              },
              {
                key: "start",
                value: function (e) {
                  var t = this.queue;
                  return (
                    e ? (t = Dy(e).map(dx)) : (this.queue = []),
                    this._flush
                      ? this._flush(this, t)
                      : (Tx(this, t), _x(this, t))
                  );
                },
              },
              {
                key: "stop",
                value: function (e, t) {
                  if ((e !== !!e && (t = e), t)) {
                    var n = this.springs;
                    Ny(Dy(t), function (t) {
                      return n[t].stop(!!e);
                    });
                  } else
                    K_(this._state, this._lastAsyncId),
                      this.each(function (t) {
                        return t.stop(!!e);
                      });
                  return this;
                },
              },
              {
                key: "pause",
                value: function (e) {
                  if (Ly.und(e)) this.start({ pause: !0 });
                  else {
                    var t = this.springs;
                    Ny(Dy(e), function (e) {
                      return t[e].pause();
                    });
                  }
                  return this;
                },
              },
              {
                key: "resume",
                value: function (e) {
                  if (Ly.und(e)) this.start({ pause: !1 });
                  else {
                    var t = this.springs;
                    Ny(Dy(e), function (e) {
                      return t[e].resume();
                    });
                  }
                  return this;
                },
              },
              {
                key: "each",
                value: function (e) {
                  Oy(this.springs, e);
                },
              },
              {
                key: "_onFrame",
                value: function () {
                  var e = this,
                    t = this._events,
                    n = t.onStart,
                    r = t.onChange,
                    a = t.onRest,
                    o = this._active.size > 0,
                    s = this._changed.size > 0;
                  ((o && !this._started) || (s && !this._started)) &&
                    ((this._started = !0),
                    Uy(n, function (t) {
                      var n = (0, i.Z)(t, 2),
                        r = n[0],
                        a = n[1];
                      (a.value = e.get()), r(a, e, e._item);
                    }));
                  var l = !o && this._started,
                    u = s || (l && a.size) ? this.get() : null;
                  s &&
                    r.size &&
                    Uy(r, function (t) {
                      var n = (0, i.Z)(t, 2),
                        r = n[0],
                        a = n[1];
                      (a.value = u), r(a, e, e._item);
                    }),
                    l &&
                      ((this._started = !1),
                      Uy(a, function (t) {
                        var n = (0, i.Z)(t, 2),
                          r = n[0],
                          a = n[1];
                        (a.value = u), r(a, e, e._item);
                      }));
                },
              },
              {
                key: "eventObserved",
                value: function (e) {
                  if ("change" == e.type)
                    this._changed.add(e.parent),
                      e.idle || this._active.add(e.parent);
                  else {
                    if ("idle" != e.type) return;
                    this._active.delete(e.parent);
                  }
                  py.onFrame(this._onFrame);
                },
              },
            ]),
            e
          );
        })();
      function _x(e, t) {
        return Promise.all(
          t.map(function (t) {
            return xx(e, t);
          })
        ).then(function (t) {
          return W_(e, t);
        });
      }
      function xx(e, t, n) {
        return Sx.apply(this, arguments);
      }
      function Sx() {
        return (
          (Sx = R(
            I().mark(function e(t, n, r) {
              var i, a, o, s, l, u, c, d, f, h, p, v, m;
              return I().wrap(function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      if (
                        ((i = n.keys),
                        (a = n.to),
                        (o = n.from),
                        (s = n.loop),
                        (l = n.onRest),
                        (u = n.onResolve),
                        (c = Ly.obj(n.default) && n.default),
                        s && (n.loop = !1),
                        !1 === a && (n.to = null),
                        !1 === o && (n.from = null),
                        (d = Ly.arr(a) || Ly.fun(a) ? a : void 0)
                          ? ((n.to = void 0),
                            (n.onRest = void 0),
                            c && (c.onRest = void 0))
                          : Ny(gx, function (e) {
                              var r = n[e];
                              if (Ly.fun(r)) {
                                var i = t._events[e];
                                (n[e] = function (e) {
                                  var t = e.finished,
                                    n = e.cancelled,
                                    a = i.get(r);
                                  a
                                    ? (t || (a.finished = !1),
                                      n && (a.cancelled = !0))
                                    : i.set(r, {
                                        value: null,
                                        finished: t || !1,
                                        cancelled: n || !1,
                                      });
                                }),
                                  c && (c[e] = n[e]);
                              }
                            }),
                        (f = t._state),
                        n.pause === !f.paused
                          ? ((f.paused = n.pause),
                            By(n.pause ? f.pauseQueue : f.resumeQueue))
                          : f.paused && (n.pause = !0),
                        (h = (i || Object.keys(t.springs)).map(function (e) {
                          return t.springs[e].start(n);
                        })),
                        (p = !0 === n.cancel || !0 === A_(n, "cancel")),
                        (d || (p && f.asyncId)) &&
                          h.push(
                            G_(++t._lastAsyncId, {
                              props: n,
                              state: f,
                              actions: {
                                pause: Ry,
                                resume: Ry,
                                start: function (e, n) {
                                  p
                                    ? (K_(f, t._lastAsyncId), n(q_(t)))
                                    : ((e.onRest = l), n(Y_(d, e, f, t)));
                                },
                              },
                            })
                          ),
                        !f.paused)
                      ) {
                        e.next = 15;
                        break;
                      }
                      return (
                        (e.next = 15),
                        new Promise(function (e) {
                          f.resumeQueue.add(e);
                        })
                      );
                    case 15:
                      return (
                        (e.t0 = W_), (e.t1 = t), (e.next = 19), Promise.all(h)
                      );
                    case 19:
                      if (
                        ((e.t2 = e.sent),
                        (v = (0, e.t0)(e.t1, e.t2)),
                        !s || !v.finished || (r && v.noop))
                      ) {
                        e.next = 26;
                        break;
                      }
                      if (!(m = cx(n, s, a))) {
                        e.next = 26;
                        break;
                      }
                      return Tx(t, [m]), e.abrupt("return", xx(t, m, !0));
                    case 26:
                      return (
                        u &&
                          py.batchedUpdates(function () {
                            return u(v, t, t.item);
                          }),
                        e.abrupt("return", v)
                      );
                    case 28:
                    case "end":
                      return e.stop();
                  }
              }, e);
            })
          )),
          Sx.apply(this, arguments)
        );
      }
      function wx(e, t) {
        var n = M_({}, e.springs);
        return (
          t &&
            Ny(Dy(t), function (e) {
              Ly.und(e.keys) && (e = dx(e)),
                Ly.obj(e.to) || (e = M_({}, e, { to: void 0 })),
                kx(n, e, function (e) {
                  return Ex(e);
                });
            }),
          Mx(e, n),
          n
        );
      }
      function Mx(e, t) {
        Oy(t, function (t, n) {
          e.springs[n] || ((e.springs[n] = t), Ub(t, e));
        });
      }
      function Ex(e, t) {
        var n = new lx();
        return (n.key = e), t && Ub(n, t), n;
      }
      function kx(e, t, n) {
        t.keys &&
          Ny(t.keys, function (r) {
            (e[r] || (e[r] = n(r)))._prepareNode(t);
          });
      }
      function Tx(e, t) {
        Ny(t, function (t) {
          kx(e.springs, t, function (t) {
            return Ex(t, e);
          });
        });
      }
      function Ax(e, t) {
        if (null == e) return {};
        var n,
          r,
          i = {},
          a = Object.keys(e);
        for (r = 0; r < a.length; r++)
          (n = a[r]), t.indexOf(n) >= 0 || (i[n] = e[n]);
        return i;
      }
      var Cx,
        Px,
        Rx = ["children"],
        Lx = function (e) {
          var t = e.children,
            n = Ax(e, Rx),
            r = (0, a.useContext)(Ix),
            o = n.pause || !!r.pause,
            s = n.immediate || !!r.immediate;
          n = (function (e, t) {
            var n = (0, a.useState)(function () {
                return { inputs: t, result: e() };
              }),
              r = (0, i.Z)(n, 1)[0],
              o = (0, a.useRef)(),
              s = o.current,
              l = s;
            if (l) {
              var u = Boolean(
                t &&
                  l.inputs &&
                  (function (e, t) {
                    if (e.length !== t.length) return !1;
                    for (var n = 0; n < e.length; n++)
                      if (e[n] !== t[n]) return !1;
                    return !0;
                  })(t, l.inputs)
              );
              u || (l = { inputs: t, result: e() });
            } else l = r;
            return (
              (0, a.useEffect)(
                function () {
                  (o.current = l), s == r && (r.inputs = r.result = void 0);
                },
                [l]
              ),
              l.result
            );
          })(
            function () {
              return { pause: o, immediate: s };
            },
            [o, s]
          );
          var l = Ix.Provider;
          return a.createElement(l, { value: n }, t);
        },
        Ix =
          ((Cx = Lx),
          (Px = {}),
          Object.assign(Cx, a.createContext(Px)),
          (Cx.Provider._context = Cx),
          (Cx.Consumer._context = Cx),
          Cx);
      (Lx.Provider = Ix.Provider), (Lx.Consumer = Ix.Consumer);
      var Nx = function () {
        var e = [],
          t = function (t) {
            Qb(
              "".concat(
                Kb,
                'Directly calling start instead of using the api object is deprecated in v9 (use ".start" instead), this will be removed in later 0.X.0 versions'
              )
            );
            var r = [];
            return (
              Ny(e, function (e, i) {
                if (Ly.und(t)) r.push(e.start());
                else {
                  var a = n(t, e, i);
                  a && r.push(e.start(a));
                }
              }),
              r
            );
          };
        (t.current = e),
          (t.add = function (t) {
            e.includes(t) || e.push(t);
          }),
          (t.delete = function (t) {
            var n = e.indexOf(t);
            ~n && e.splice(n, 1);
          }),
          (t.pause = function () {
            var t = arguments;
            return (
              Ny(e, function (e) {
                return e.pause.apply(e, (0, r.Z)(t));
              }),
              this
            );
          }),
          (t.resume = function () {
            var t = arguments;
            return (
              Ny(e, function (e) {
                return e.resume.apply(e, (0, r.Z)(t));
              }),
              this
            );
          }),
          (t.set = function (t) {
            Ny(e, function (e) {
              return e.set(t);
            });
          }),
          (t.start = function (t) {
            var n = this,
              r = [];
            return (
              Ny(e, function (e, i) {
                if (Ly.und(t)) r.push(e.start());
                else {
                  var a = n._getProps(t, e, i);
                  a && r.push(e.start(a));
                }
              }),
              r
            );
          }),
          (t.stop = function () {
            var t = arguments;
            return (
              Ny(e, function (e) {
                return e.stop.apply(e, (0, r.Z)(t));
              }),
              this
            );
          }),
          (t.update = function (t) {
            var n = this;
            return (
              Ny(e, function (e, r) {
                return e.update(n._getProps(t, e, r));
              }),
              this
            );
          });
        var n = function (e, t, n) {
          return Ly.fun(e) ? e(n, t) : e;
        };
        return (t._getProps = n), t;
      };
      function Ox(e, t, n) {
        var i = arguments,
          o = Ly.fun(t) && t;
        o && !n && (n = []);
        var s = (0, a.useMemo)(function () {
            return o || 3 == i.length ? Nx() : void 0;
          }, []),
          l = (0, a.useRef)(0),
          u = r_(),
          c = (0, a.useMemo)(function () {
            return {
              ctrls: [],
              queue: [],
              flush: function (e, t) {
                var n = wx(e, t);
                return l.current > 0 &&
                  !c.queue.length &&
                  !Object.keys(n).some(function (t) {
                    return !e.springs[t];
                  })
                  ? _x(e, t)
                  : new Promise(function (r) {
                      Mx(e, n),
                        c.queue.push(function () {
                          r(_x(e, t));
                        }),
                        u();
                    });
              },
            };
          }, []),
          d = (0, a.useRef)((0, r.Z)(c.ctrls)),
          f = [],
          h = o_(e) || 0;
        function p(e, n) {
          for (var r = e; r < n; r++) {
            var i = d.current[r] || (d.current[r] = new bx(null, c.flush)),
              a = o ? o(r, i) : t[r];
            a && (f[r] = fx(a));
          }
        }
        (0, a.useMemo)(
          function () {
            Ny(d.current.slice(e, h), function (e) {
              U_(e, s), e.stop(!0);
            }),
              (d.current.length = e),
              p(h, e);
          },
          [e]
        ),
          (0, a.useMemo)(function () {
            p(0, Math.min(h, e));
          }, n);
        var v = d.current.map(function (e, t) {
            return wx(e, f[t]);
          }),
          m = (0, a.useContext)(Lx),
          g = o_(m),
          y = m !== g && O_(m);
        t_(function () {
          l.current++, (c.ctrls = d.current);
          var e = c.queue;
          e.length &&
            ((c.queue = []),
            Ny(e, function (e) {
              return e();
            })),
            Ny(d.current, function (e, t) {
              null == s || s.add(e), y && e.start({ default: m });
              var n = f[t];
              n && (z_(e, n.ref), e.ref ? e.queue.push(n) : e.start(n));
            });
        }),
          i_(function () {
            return function () {
              Ny(c.ctrls, function (e) {
                return e.stop(!0);
              });
            };
          });
        var b = v.map(function (e) {
          return M_({}, e);
        });
        return s ? [b, s] : b;
      }
      function Dx(e, t) {
        var n = Ly.fun(e),
          r = Ox(1, n ? e : [e], n ? t || [] : t),
          a = (0, i.Z)(r, 2),
          o = (0, i.Z)(a[0], 1)[0],
          s = a[1];
        return n || 2 == arguments.length ? [o, s] : o;
      }
      var Ux;
      !(function (e) {
        (e.MOUNT = "mount"),
          (e.ENTER = "enter"),
          (e.UPDATE = "update"),
          (e.LEAVE = "leave");
      })(Ux || (Ux = {}));
      var zx = (function (e) {
        b(n, e);
        var t = k(n);
        function n(e, i) {
          var a;
          p(this, n),
            ((a = t.call(this)).key = void 0),
            (a.idle = !0),
            (a.calc = void 0),
            (a._active = new Set()),
            (a.source = e),
            (a.calc = _b.apply(void 0, (0, r.Z)(i)));
          var o = a._get(),
            s = y_(o);
          return u_(E(a), s.create(o)), a;
        }
        return (
          g(n, [
            {
              key: "advance",
              value: function (e) {
                var t = this._get();
                Iy(t, this.get()) ||
                  (l_(this).setValue(t), this._onChange(t, this.idle)),
                  !this.idle && Bx(this._active) && Zx(this);
              },
            },
            {
              key: "_get",
              value: function () {
                var e = Ly.arr(this.source)
                  ? this.source.map(Lb)
                  : Dy(Lb(this.source));
                return this.calc.apply(this, (0, r.Z)(e));
              },
            },
            {
              key: "_start",
              value: function () {
                var e = this;
                this.idle &&
                  !Bx(this._active) &&
                  ((this.idle = !1),
                  Ny(c_(this), function (e) {
                    e.done = !1;
                  }),
                  jy.skipAnimation
                    ? (py.batchedUpdates(function () {
                        return e.advance();
                      }),
                      Zx(this))
                    : $y.start(this));
              },
            },
            {
              key: "_attach",
              value: function () {
                var e = this,
                  t = 1;
                Ny(Dy(this.source), function (n) {
                  Rb(n) && Ub(n, e),
                    Q_(n) &&
                      (n.idle || e._active.add(n),
                      (t = Math.max(t, n.priority + 1)));
                }),
                  (this.priority = t),
                  this._start();
              },
            },
            {
              key: "_detach",
              value: function () {
                var e = this;
                Ny(Dy(this.source), function (t) {
                  Rb(t) && zb(t, e);
                }),
                  this._active.clear(),
                  Zx(this);
              },
            },
            {
              key: "eventObserved",
              value: function (e) {
                "change" == e.type
                  ? e.idle
                    ? this.advance()
                    : (this._active.add(e.parent), this._start())
                  : "idle" == e.type
                  ? this._active.delete(e.parent)
                  : "priority" == e.type &&
                    (this.priority = Dy(this.source).reduce(function (e, t) {
                      return Math.max(e, (Q_(t) ? t.priority : 0) + 1);
                    }, 0));
              },
            },
          ]),
          n
        );
      })(tx);
      function Fx(e) {
        return !1 !== e.idle;
      }
      function Bx(e) {
        return !e.size || Array.from(e).every(Fx);
      }
      function Zx(e) {
        e.idle ||
          ((e.idle = !0),
          Ny(c_(e), function (e) {
            e.done = !0;
          }),
          Nb(e, { type: "idle", parent: e }));
      }
      jy.assign({
        createStringInterpolator: Yb,
        to: function (e, t) {
          return new zx(e, t);
        },
      });
      $y.advance;
      var Hx = ["primitive"].concat(
        Object.keys(e)
          .filter(function (e) {
            return /^[A-Z]/.test(e);
          })
          .map(function (e) {
            return e[0].toLowerCase() + e.slice(1);
          })
      );
      jy.assign({
        createStringInterpolator: Yb,
        colors: {
          transparent: 0,
          aliceblue: 4042850303,
          antiquewhite: 4209760255,
          aqua: 16777215,
          aquamarine: 2147472639,
          azure: 4043309055,
          beige: 4126530815,
          bisque: 4293182719,
          black: 255,
          blanchedalmond: 4293643775,
          blue: 65535,
          blueviolet: 2318131967,
          brown: 2771004159,
          burlywood: 3736635391,
          burntsienna: 3934150143,
          cadetblue: 1604231423,
          chartreuse: 2147418367,
          chocolate: 3530104575,
          coral: 4286533887,
          cornflowerblue: 1687547391,
          cornsilk: 4294499583,
          crimson: 3692313855,
          cyan: 16777215,
          darkblue: 35839,
          darkcyan: 9145343,
          darkgoldenrod: 3095792639,
          darkgray: 2846468607,
          darkgreen: 6553855,
          darkgrey: 2846468607,
          darkkhaki: 3182914559,
          darkmagenta: 2332068863,
          darkolivegreen: 1433087999,
          darkorange: 4287365375,
          darkorchid: 2570243327,
          darkred: 2332033279,
          darksalmon: 3918953215,
          darkseagreen: 2411499519,
          darkslateblue: 1211993087,
          darkslategray: 793726975,
          darkslategrey: 793726975,
          darkturquoise: 13554175,
          darkviolet: 2483082239,
          deeppink: 4279538687,
          deepskyblue: 12582911,
          dimgray: 1768516095,
          dimgrey: 1768516095,
          dodgerblue: 512819199,
          firebrick: 2988581631,
          floralwhite: 4294635775,
          forestgreen: 579543807,
          fuchsia: 4278255615,
          gainsboro: 3705462015,
          ghostwhite: 4177068031,
          gold: 4292280575,
          goldenrod: 3668254975,
          gray: 2155905279,
          green: 8388863,
          greenyellow: 2919182335,
          grey: 2155905279,
          honeydew: 4043305215,
          hotpink: 4285117695,
          indianred: 3445382399,
          indigo: 1258324735,
          ivory: 4294963455,
          khaki: 4041641215,
          lavender: 3873897215,
          lavenderblush: 4293981695,
          lawngreen: 2096890111,
          lemonchiffon: 4294626815,
          lightblue: 2916673279,
          lightcoral: 4034953471,
          lightcyan: 3774873599,
          lightgoldenrodyellow: 4210742015,
          lightgray: 3553874943,
          lightgreen: 2431553791,
          lightgrey: 3553874943,
          lightpink: 4290167295,
          lightsalmon: 4288707327,
          lightseagreen: 548580095,
          lightskyblue: 2278488831,
          lightslategray: 2005441023,
          lightslategrey: 2005441023,
          lightsteelblue: 2965692159,
          lightyellow: 4294959359,
          lime: 16711935,
          limegreen: 852308735,
          linen: 4210091775,
          magenta: 4278255615,
          maroon: 2147483903,
          mediumaquamarine: 1724754687,
          mediumblue: 52735,
          mediumorchid: 3126187007,
          mediumpurple: 2473647103,
          mediumseagreen: 1018393087,
          mediumslateblue: 2070474495,
          mediumspringgreen: 16423679,
          mediumturquoise: 1221709055,
          mediumvioletred: 3340076543,
          midnightblue: 421097727,
          mintcream: 4127193855,
          mistyrose: 4293190143,
          moccasin: 4293178879,
          navajowhite: 4292783615,
          navy: 33023,
          oldlace: 4260751103,
          olive: 2155872511,
          olivedrab: 1804477439,
          orange: 4289003775,
          orangered: 4282712319,
          orchid: 3664828159,
          palegoldenrod: 4008225535,
          palegreen: 2566625535,
          paleturquoise: 2951671551,
          palevioletred: 3681588223,
          papayawhip: 4293907967,
          peachpuff: 4292524543,
          peru: 3448061951,
          pink: 4290825215,
          plum: 3718307327,
          powderblue: 2967529215,
          purple: 2147516671,
          rebeccapurple: 1714657791,
          red: 4278190335,
          rosybrown: 3163525119,
          royalblue: 1097458175,
          saddlebrown: 2336560127,
          salmon: 4202722047,
          sandybrown: 4104413439,
          seagreen: 780883967,
          seashell: 4294307583,
          sienna: 2689740287,
          silver: 3233857791,
          skyblue: 2278484991,
          slateblue: 1784335871,
          slategray: 1887473919,
          slategrey: 1887473919,
          snow: 4294638335,
          springgreen: 16744447,
          steelblue: 1182971135,
          tan: 3535047935,
          teal: 8421631,
          thistle: 3636451583,
          tomato: 4284696575,
          turquoise: 1088475391,
          violet: 4001558271,
          wheat: 4125012991,
          white: 4294967295,
          whitesmoke: 4126537215,
          yellow: 4294902015,
          yellowgreen: 2597139199,
        },
        frameLoop: "demand",
      }),
        qv(function () {
          py.advance();
        }, $v);
      var Vx = (function (e) {
          var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {},
            n = t.applyAnimatedValues,
            r =
              void 0 === n
                ? function () {
                    return !1;
                  }
                : n,
            i = t.createAnimatedStyle,
            a =
              void 0 === i
                ? function (e) {
                    return new v_(e);
                  }
                : i,
            o = t.getComponentProps,
            s = {
              applyAnimatedValues: r,
              createAnimatedStyle: a,
              getComponentProps:
                void 0 === o
                  ? function (e) {
                      return e;
                    }
                  : o,
            },
            l = function e(t) {
              var n = w_(t) || "Anonymous";
              return (
                ((t = Ly.str(t)
                  ? e[t] || (e[t] = __(t, s))
                  : t[S_] || (t[S_] = __(t, s))).displayName =
                  "Animated(".concat(n, ")")),
                t
              );
            };
          return (
            Oy(e, function (t, n) {
              Ly.arr(e) && (n = w_(t)), (l[n] = l(t));
            }),
            { animated: l }
          );
        })(Hx, { applyAnimatedValues: hm }),
        Gx = Vx.animated;
      function Wx(e) {
        var t = (0, a.useState)([3, 1, 0]),
          n = (0, i.Z)(t, 2),
          r = n[0],
          o = n[1],
          s = new Zr(),
          l = (0, a.useState)(!1),
          c = (0, i.Z)(l, 2),
          d =
            (c[0],
            c[1],
            Dx(function () {
              return { position: r, scale: 1, rotation: [0, 0, 0] };
            })),
          f = (0, i.Z)(d, 2),
          h = f[0],
          p = f[1],
          v = fy(
            function (t) {
              var n = t.active,
                a = (0, i.Z)(t.movement, 2),
                l = (a[0], a[1], t.timeStamp),
                u = t.event;
              return (
                n && (u.ray.intersectPlane(e.floorPlane, s), o([s.x, 1, s.z])),
                e.setIsDragging(n),
                p.start({ position: r }),
                l
              );
            },
            { delay: !0 }
          );
        return (0, hg.jsx)(
          Gx.mesh,
          (0, u.Z)(
            (0, u.Z)((0, u.Z)({}, h), v()),
            {},
            { castShadow: !0, children: e.children }
          )
        );
      }
      function jx(e) {
        var t = e.setIsDragging,
          n = e.floorPlane,
          r = (0, a.useRef)(),
          o = (0, a.useState)(!1),
          s = (0, i.Z)(o, 2),
          l = s[0],
          u = s[1];
        return (0, hg.jsx)(Wx, {
          setIsDragging: t,
          floorPlane: n,
          children: (0, hg.jsxs)("mesh", {
            onPointerOver: function (e) {
              return u(!0);
            },
            onPointerOut: function (e) {
              return u(!1);
            },
            children: [
              (0, hg.jsx)("sphereGeometry", {
                args: [0.3, 64, 32],
                ref: r,
                attach: "geometry",
              }),
              l
                ? (0, hg.jsx)("meshStandardMaterial", { color: "hotpink" })
                : (0, hg.jsx)("meshNormalMaterial", { attach: "material" }),
            ],
          }),
        });
      }
      n(8457);
      var Xx = n(8182),
        qx = n(4419),
        Yx = n(4923),
        Kx = n(551),
        $x = n(5878),
        Jx = n(1217);
      function Qx(e) {
        return (0, Jx.Z)("MuiBottomNavigation", e);
      }
      (0, $x.Z)("MuiBottomNavigation", ["root"]);
      var eS = [
          "children",
          "className",
          "component",
          "onChange",
          "showLabels",
          "value",
        ],
        tS = (0, Yx.ZP)("div", {
          name: "MuiBottomNavigation",
          slot: "Root",
          overridesResolver: function (e, t) {
            return t.root;
          },
        })(function (e) {
          var t = e.theme;
          return {
            display: "flex",
            justifyContent: "center",
            height: 56,
            backgroundColor: (t.vars || t).palette.background.paper,
          };
        }),
        nS = a.forwardRef(function (e, t) {
          var n = (0, Kx.Z)({ props: e, name: "MuiBottomNavigation" }),
            r = n.children,
            i = n.className,
            s = n.component,
            l = void 0 === s ? "div" : s,
            u = n.onChange,
            c = n.showLabels,
            d = void 0 !== c && c,
            f = n.value,
            h = (0, o.Z)(n, eS),
            p = (0, bm.Z)({}, n, { component: l, showLabels: d }),
            v = (function (e) {
              var t = e.classes;
              return (0, qx.Z)({ root: ["root"] }, Qx, t);
            })(p);
          return (0, hg.jsx)(
            tS,
            (0, bm.Z)(
              { as: l, className: (0, Xx.Z)(v.root, i), ref: t, ownerState: p },
              h,
              {
                children: a.Children.map(r, function (e, t) {
                  if (!a.isValidElement(e)) return null;
                  var n = void 0 === e.props.value ? t : e.props.value;
                  return a.cloneElement(e, {
                    selected: n === f,
                    showLabel:
                      void 0 !== e.props.showLabel ? e.props.showLabel : d,
                    value: n,
                    onChange: u,
                  });
                }),
              }
            )
          );
        }),
        rS = n(2071),
        iS = n(9683),
        aS = n(3031);
      function oS(e, t) {
        return (
          t || (t = e.slice(0)),
          Object.freeze(
            Object.defineProperties(e, { raw: { value: Object.freeze(t) } })
          )
        );
      }
      function sS(e, t) {
        (e.prototype = Object.create(t.prototype)),
          (e.prototype.constructor = e),
          y(e, t);
      }
      var lS = a.createContext(null);
      function uS(e, t) {
        var n = Object.create(null);
        return (
          e &&
            a.Children.map(e, function (e) {
              return e;
            }).forEach(function (e) {
              n[e.key] = (function (e) {
                return t && (0, a.isValidElement)(e) ? t(e) : e;
              })(e);
            }),
          n
        );
      }
      function cS(e, t, n) {
        return null != n[t] ? n[t] : e.props[t];
      }
      function dS(e, t, n) {
        var r = uS(e.children),
          i = (function (e, t) {
            function n(n) {
              return n in t ? t[n] : e[n];
            }
            (e = e || {}), (t = t || {});
            var r,
              i = Object.create(null),
              a = [];
            for (var o in e)
              o in t ? a.length && ((i[o] = a), (a = [])) : a.push(o);
            var s = {};
            for (var l in t) {
              if (i[l])
                for (r = 0; r < i[l].length; r++) {
                  var u = i[l][r];
                  s[i[l][r]] = n(u);
                }
              s[l] = n(l);
            }
            for (r = 0; r < a.length; r++) s[a[r]] = n(a[r]);
            return s;
          })(t, r);
        return (
          Object.keys(i).forEach(function (o) {
            var s = i[o];
            if ((0, a.isValidElement)(s)) {
              var l = o in t,
                u = o in r,
                c = t[o],
                d = (0, a.isValidElement)(c) && !c.props.in;
              !u || (l && !d)
                ? u || !l || d
                  ? u &&
                    l &&
                    (0, a.isValidElement)(c) &&
                    (i[o] = (0, a.cloneElement)(s, {
                      onExited: n.bind(null, s),
                      in: c.props.in,
                      exit: cS(s, "exit", e),
                      enter: cS(s, "enter", e),
                    }))
                  : (i[o] = (0, a.cloneElement)(s, { in: !1 }))
                : (i[o] = (0, a.cloneElement)(s, {
                    onExited: n.bind(null, s),
                    in: !0,
                    exit: cS(s, "exit", e),
                    enter: cS(s, "enter", e),
                  }));
            }
          }),
          i
        );
      }
      var fS =
          Object.values ||
          function (e) {
            return Object.keys(e).map(function (t) {
              return e[t];
            });
          },
        hS = (function (e) {
          function t(t, n) {
            var r,
              i = (r = e.call(this, t, n) || this).handleExited.bind(E(r));
            return (
              (r.state = {
                contextValue: { isMounting: !0 },
                handleExited: i,
                firstRender: !0,
              }),
              r
            );
          }
          sS(t, e);
          var n = t.prototype;
          return (
            (n.componentDidMount = function () {
              (this.mounted = !0),
                this.setState({ contextValue: { isMounting: !1 } });
            }),
            (n.componentWillUnmount = function () {
              this.mounted = !1;
            }),
            (t.getDerivedStateFromProps = function (e, t) {
              var n,
                r,
                i = t.children,
                o = t.handleExited;
              return {
                children: t.firstRender
                  ? ((n = e),
                    (r = o),
                    uS(n.children, function (e) {
                      return (0,
                      a.cloneElement)(e, { onExited: r.bind(null, e), in: !0, appear: cS(e, "appear", n), enter: cS(e, "enter", n), exit: cS(e, "exit", n) });
                    }))
                  : dS(e, i, o),
                firstRender: !1,
              };
            }),
            (n.handleExited = function (e, t) {
              var n = uS(this.props.children);
              e.key in n ||
                (e.props.onExited && e.props.onExited(t),
                this.mounted &&
                  this.setState(function (t) {
                    var n = (0, bm.Z)({}, t.children);
                    return delete n[e.key], { children: n };
                  }));
            }),
            (n.render = function () {
              var e = this.props,
                t = e.component,
                n = e.childFactory,
                r = (0, o.Z)(e, ["component", "childFactory"]),
                i = this.state.contextValue,
                s = fS(this.state.children).map(n);
              return (
                delete r.appear,
                delete r.enter,
                delete r.exit,
                null === t
                  ? a.createElement(lS.Provider, { value: i }, s)
                  : a.createElement(
                      lS.Provider,
                      { value: i },
                      a.createElement(t, r, s)
                    )
              );
            }),
            t
          );
        })(a.Component);
      (hS.propTypes = {}),
        (hS.defaultProps = {
          component: "div",
          childFactory: function (e) {
            return e;
          },
        });
      var pS = hS,
        vS = n(2564),
        mS = n(5438),
        gS = n(2561),
        yS = n(9140),
        bS =
          (n(3361),
          n(2110),
          (0, vS.w)(function (e, t) {
            var n = e.styles,
              r = (0, yS.O)([n], void 0, a.useContext(vS.T));
            if (!vS.i) {
              for (var i, o = r.name, s = r.styles, l = r.next; void 0 !== l; )
                (o += " " + l.name), (s += l.styles), (l = l.next);
              var u = !0 === t.compat,
                c = t.insert("", { name: o, styles: s }, t.sheet, u);
              return u
                ? null
                : a.createElement(
                    "style",
                    (((i = {})["data-emotion"] = t.key + "-global " + o),
                    (i.dangerouslySetInnerHTML = { __html: c }),
                    (i.nonce = t.sheet.nonce),
                    i)
                  );
            }
            var d = a.useRef();
            return (
              (0, gS.j)(
                function () {
                  var e = t.key + "-global",
                    n = new t.sheet.constructor({
                      key: e,
                      nonce: t.sheet.nonce,
                      container: t.sheet.container,
                      speedy: t.sheet.isSpeedy,
                    }),
                    i = !1,
                    a = document.querySelector(
                      'style[data-emotion="' + e + " " + r.name + '"]'
                    );
                  return (
                    t.sheet.tags.length && (n.before = t.sheet.tags[0]),
                    null !== a &&
                      ((i = !0),
                      a.setAttribute("data-emotion", e),
                      n.hydrate([a])),
                    (d.current = [n, i]),
                    function () {
                      n.flush();
                    }
                  );
                },
                [t]
              ),
              (0, gS.j)(
                function () {
                  var e = d.current,
                    n = e[0];
                  if (e[1]) e[1] = !1;
                  else {
                    if (
                      (void 0 !== r.next && (0, mS.My)(t, r.next, !0),
                      n.tags.length)
                    ) {
                      var i = n.tags[n.tags.length - 1].nextElementSibling;
                      (n.before = i), n.flush();
                    }
                    t.insert("", r, n, !1);
                  }
                },
                [t, r.name]
              ),
              null
            );
          }));
      function _S() {
        for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
          t[n] = arguments[n];
        return (0, yS.O)(t);
      }
      var xS = function () {
        var e = _S.apply(void 0, arguments),
          t = "animation-" + e.name;
        return {
          name: t,
          styles: "@keyframes " + t + "{" + e.styles + "}",
          anim: 1,
          toString: function () {
            return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
          },
        };
      };
      var SS = function (e) {
        var t = e.className,
          n = e.classes,
          r = e.pulsate,
          o = void 0 !== r && r,
          s = e.rippleX,
          l = e.rippleY,
          u = e.rippleSize,
          c = e.in,
          d = e.onExited,
          f = e.timeout,
          h = a.useState(!1),
          p = (0, i.Z)(h, 2),
          v = p[0],
          m = p[1],
          g = (0, Xx.Z)(t, n.ripple, n.rippleVisible, o && n.ripplePulsate),
          y = { width: u, height: u, top: -u / 2 + l, left: -u / 2 + s },
          b = (0, Xx.Z)(n.child, v && n.childLeaving, o && n.childPulsate);
        return (
          c || v || m(!0),
          a.useEffect(
            function () {
              if (!c && null != d) {
                var e = setTimeout(d, f);
                return function () {
                  clearTimeout(e);
                };
              }
            },
            [d, c, f]
          ),
          (0, hg.jsx)("span", {
            className: g,
            style: y,
            children: (0, hg.jsx)("span", { className: b }),
          })
        );
      };
      var wS,
        MS,
        ES,
        kS,
        TS,
        AS,
        CS,
        PS,
        RS = (0, $x.Z)("MuiTouchRipple", [
          "root",
          "ripple",
          "rippleVisible",
          "ripplePulsate",
          "child",
          "childLeaving",
          "childPulsate",
        ]),
        LS = ["center", "classes", "className"],
        IS = xS(
          TS ||
            (TS =
              wS ||
              (wS = oS([
                "\n  0% {\n    transform: scale(0);\n    opacity: 0.1;\n  }\n\n  100% {\n    transform: scale(1);\n    opacity: 0.3;\n  }\n",
              ])))
        ),
        NS = xS(
          AS ||
            (AS =
              MS ||
              (MS = oS([
                "\n  0% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0;\n  }\n",
              ])))
        ),
        OS = xS(
          CS ||
            (CS =
              ES ||
              (ES = oS([
                "\n  0% {\n    transform: scale(1);\n  }\n\n  50% {\n    transform: scale(0.92);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n",
              ])))
        ),
        DS = (0, Yx.ZP)("span", { name: "MuiTouchRipple", slot: "Root" })({
          overflow: "hidden",
          pointerEvents: "none",
          position: "absolute",
          zIndex: 0,
          top: 0,
          right: 0,
          bottom: 0,
          left: 0,
          borderRadius: "inherit",
        }),
        US = (0, Yx.ZP)(SS, { name: "MuiTouchRipple", slot: "Ripple" })(
          PS ||
            (PS =
              kS ||
              (kS = oS([
                "\n  opacity: 0;\n  position: absolute;\n\n  &.",
                " {\n    opacity: 0.3;\n    transform: scale(1);\n    animation-name: ",
                ";\n    animation-duration: ",
                "ms;\n    animation-timing-function: ",
                ";\n  }\n\n  &.",
                " {\n    animation-duration: ",
                "ms;\n  }\n\n  & .",
                " {\n    opacity: 1;\n    display: block;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background-color: currentColor;\n  }\n\n  & .",
                " {\n    opacity: 0;\n    animation-name: ",
                ";\n    animation-duration: ",
                "ms;\n    animation-timing-function: ",
                ";\n  }\n\n  & .",
                " {\n    position: absolute;\n    /* @noflip */\n    left: 0px;\n    top: 0;\n    animation-name: ",
                ";\n    animation-duration: 2500ms;\n    animation-timing-function: ",
                ";\n    animation-iteration-count: infinite;\n    animation-delay: 200ms;\n  }\n",
              ]))),
          RS.rippleVisible,
          IS,
          550,
          function (e) {
            return e.theme.transitions.easing.easeInOut;
          },
          RS.ripplePulsate,
          function (e) {
            return e.theme.transitions.duration.shorter;
          },
          RS.child,
          RS.childLeaving,
          NS,
          550,
          function (e) {
            return e.theme.transitions.easing.easeInOut;
          },
          RS.childPulsate,
          OS,
          function (e) {
            return e.theme.transitions.easing.easeInOut;
          }
        ),
        zS = a.forwardRef(function (e, t) {
          var n = (0, Kx.Z)({ props: e, name: "MuiTouchRipple" }),
            s = n.center,
            l = void 0 !== s && s,
            u = n.classes,
            c = void 0 === u ? {} : u,
            d = n.className,
            f = (0, o.Z)(n, LS),
            h = a.useState([]),
            p = (0, i.Z)(h, 2),
            v = p[0],
            m = p[1],
            g = a.useRef(0),
            y = a.useRef(null);
          a.useEffect(
            function () {
              y.current && (y.current(), (y.current = null));
            },
            [v]
          );
          var b = a.useRef(!1),
            _ = a.useRef(null),
            x = a.useRef(null),
            S = a.useRef(null);
          a.useEffect(function () {
            return function () {
              clearTimeout(_.current);
            };
          }, []);
          var w = a.useCallback(
              function (e) {
                var t = e.pulsate,
                  n = e.rippleX,
                  i = e.rippleY,
                  a = e.rippleSize,
                  o = e.cb;
                m(function (e) {
                  return [].concat((0, r.Z)(e), [
                    (0, hg.jsx)(
                      US,
                      {
                        classes: {
                          ripple: (0, Xx.Z)(c.ripple, RS.ripple),
                          rippleVisible: (0, Xx.Z)(
                            c.rippleVisible,
                            RS.rippleVisible
                          ),
                          ripplePulsate: (0, Xx.Z)(
                            c.ripplePulsate,
                            RS.ripplePulsate
                          ),
                          child: (0, Xx.Z)(c.child, RS.child),
                          childLeaving: (0, Xx.Z)(
                            c.childLeaving,
                            RS.childLeaving
                          ),
                          childPulsate: (0, Xx.Z)(
                            c.childPulsate,
                            RS.childPulsate
                          ),
                        },
                        timeout: 550,
                        pulsate: t,
                        rippleX: n,
                        rippleY: i,
                        rippleSize: a,
                      },
                      g.current
                    ),
                  ]);
                }),
                  (g.current += 1),
                  (y.current = o);
              },
              [c]
            ),
            M = a.useCallback(
              function () {
                var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : {},
                  t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {},
                  n =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : function () {},
                  r = t.pulsate,
                  i = void 0 !== r && r,
                  a = t.center,
                  o = void 0 === a ? l || t.pulsate : a,
                  s = t.fakeElement,
                  u = void 0 !== s && s;
                if ("mousedown" === (null == e ? void 0 : e.type) && b.current)
                  b.current = !1;
                else {
                  "touchstart" === (null == e ? void 0 : e.type) &&
                    (b.current = !0);
                  var c,
                    d,
                    f,
                    h = u ? null : S.current,
                    p = h
                      ? h.getBoundingClientRect()
                      : { width: 0, height: 0, left: 0, top: 0 };
                  if (
                    o ||
                    void 0 === e ||
                    (0 === e.clientX && 0 === e.clientY) ||
                    (!e.clientX && !e.touches)
                  )
                    (c = Math.round(p.width / 2)),
                      (d = Math.round(p.height / 2));
                  else {
                    var v =
                        e.touches && e.touches.length > 0 ? e.touches[0] : e,
                      m = v.clientX,
                      g = v.clientY;
                    (c = Math.round(m - p.left)), (d = Math.round(g - p.top));
                  }
                  if (o)
                    (f = Math.sqrt(
                      (2 * Math.pow(p.width, 2) + Math.pow(p.height, 2)) / 3
                    )) %
                      2 ===
                      0 && (f += 1);
                  else {
                    var y =
                        2 * Math.max(Math.abs((h ? h.clientWidth : 0) - c), c) +
                        2,
                      M =
                        2 *
                          Math.max(Math.abs((h ? h.clientHeight : 0) - d), d) +
                        2;
                    f = Math.sqrt(Math.pow(y, 2) + Math.pow(M, 2));
                  }
                  null != e && e.touches
                    ? null === x.current &&
                      ((x.current = function () {
                        w({
                          pulsate: i,
                          rippleX: c,
                          rippleY: d,
                          rippleSize: f,
                          cb: n,
                        });
                      }),
                      (_.current = setTimeout(function () {
                        x.current && (x.current(), (x.current = null));
                      }, 80)))
                    : w({
                        pulsate: i,
                        rippleX: c,
                        rippleY: d,
                        rippleSize: f,
                        cb: n,
                      });
                }
              },
              [l, w]
            ),
            E = a.useCallback(
              function () {
                M({}, { pulsate: !0 });
              },
              [M]
            ),
            k = a.useCallback(function (e, t) {
              if (
                (clearTimeout(_.current),
                "touchend" === (null == e ? void 0 : e.type) && x.current)
              )
                return (
                  x.current(),
                  (x.current = null),
                  void (_.current = setTimeout(function () {
                    k(e, t);
                  }))
                );
              (x.current = null),
                m(function (e) {
                  return e.length > 0 ? e.slice(1) : e;
                }),
                (y.current = t);
            }, []);
          return (
            a.useImperativeHandle(
              t,
              function () {
                return { pulsate: E, start: M, stop: k };
              },
              [E, M, k]
            ),
            (0, hg.jsx)(
              DS,
              (0, bm.Z)(
                { className: (0, Xx.Z)(RS.root, c.root, d), ref: S },
                f,
                {
                  children: (0, hg.jsx)(pS, {
                    component: null,
                    exit: !0,
                    children: v,
                  }),
                }
              )
            )
          );
        }),
        FS = zS;
      function BS(e) {
        return (0, Jx.Z)("MuiButtonBase", e);
      }
      var ZS,
        HS = (0, $x.Z)("MuiButtonBase", ["root", "disabled", "focusVisible"]),
        VS = [
          "action",
          "centerRipple",
          "children",
          "className",
          "component",
          "disabled",
          "disableRipple",
          "disableTouchRipple",
          "focusRipple",
          "focusVisibleClassName",
          "LinkComponent",
          "onBlur",
          "onClick",
          "onContextMenu",
          "onDragLeave",
          "onFocus",
          "onFocusVisible",
          "onKeyDown",
          "onKeyUp",
          "onMouseDown",
          "onMouseLeave",
          "onMouseUp",
          "onTouchEnd",
          "onTouchMove",
          "onTouchStart",
          "tabIndex",
          "TouchRippleProps",
          "touchRippleRef",
          "type",
        ],
        GS = (0, Yx.ZP)("button", {
          name: "MuiButtonBase",
          slot: "Root",
          overridesResolver: function (e, t) {
            return t.root;
          },
        })(
          ((ZS = {
            display: "inline-flex",
            alignItems: "center",
            justifyContent: "center",
            position: "relative",
            boxSizing: "border-box",
            WebkitTapHighlightColor: "transparent",
            backgroundColor: "transparent",
            outline: 0,
            border: 0,
            margin: 0,
            borderRadius: 0,
            padding: 0,
            cursor: "pointer",
            userSelect: "none",
            verticalAlign: "middle",
            MozAppearance: "none",
            WebkitAppearance: "none",
            textDecoration: "none",
            color: "inherit",
            "&::-moz-focus-inner": { borderStyle: "none" },
          }),
          (0, l.Z)(ZS, "&.".concat(HS.disabled), {
            pointerEvents: "none",
            cursor: "default",
          }),
          (0, l.Z)(ZS, "@media print", { colorAdjust: "exact" }),
          ZS)
        ),
        WS = a.forwardRef(function (e, t) {
          var n = (0, Kx.Z)({ props: e, name: "MuiButtonBase" }),
            r = n.action,
            s = n.centerRipple,
            l = void 0 !== s && s,
            u = n.children,
            c = n.className,
            d = n.component,
            f = void 0 === d ? "button" : d,
            h = n.disabled,
            p = void 0 !== h && h,
            v = n.disableRipple,
            m = void 0 !== v && v,
            g = n.disableTouchRipple,
            y = void 0 !== g && g,
            b = n.focusRipple,
            _ = void 0 !== b && b,
            x = n.LinkComponent,
            S = void 0 === x ? "a" : x,
            w = n.onBlur,
            M = n.onClick,
            E = n.onContextMenu,
            k = n.onDragLeave,
            T = n.onFocus,
            A = n.onFocusVisible,
            C = n.onKeyDown,
            P = n.onKeyUp,
            R = n.onMouseDown,
            L = n.onMouseLeave,
            I = n.onMouseUp,
            N = n.onTouchEnd,
            O = n.onTouchMove,
            D = n.onTouchStart,
            U = n.tabIndex,
            z = void 0 === U ? 0 : U,
            F = n.TouchRippleProps,
            B = n.touchRippleRef,
            Z = n.type,
            H = (0, o.Z)(n, VS),
            V = a.useRef(null),
            G = a.useRef(null),
            W = (0, rS.Z)(G, B),
            j = (0, aS.Z)(),
            X = j.isFocusVisibleRef,
            q = j.onFocus,
            Y = j.onBlur,
            K = j.ref,
            $ = a.useState(!1),
            J = (0, i.Z)($, 2),
            Q = J[0],
            ee = J[1];
          p && Q && ee(!1),
            a.useImperativeHandle(
              r,
              function () {
                return {
                  focusVisible: function () {
                    ee(!0), V.current.focus();
                  },
                };
              },
              []
            );
          var te = a.useState(!1),
            ne = (0, i.Z)(te, 2),
            re = ne[0],
            ie = ne[1];
          a.useEffect(function () {
            ie(!0);
          }, []);
          var ae = re && !m && !p;
          function oe(e, t) {
            var n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : y;
            return (0, iS.Z)(function (r) {
              return t && t(r), !n && G.current && G.current[e](r), !0;
            });
          }
          a.useEffect(
            function () {
              Q && _ && !m && re && G.current.pulsate();
            },
            [m, _, Q, re]
          );
          var se = oe("start", R),
            le = oe("stop", E),
            ue = oe("stop", k),
            ce = oe("stop", I),
            de = oe("stop", function (e) {
              Q && e.preventDefault(), L && L(e);
            }),
            fe = oe("start", D),
            he = oe("stop", N),
            pe = oe("stop", O),
            ve = oe(
              "stop",
              function (e) {
                Y(e), !1 === X.current && ee(!1), w && w(e);
              },
              !1
            ),
            me = (0, iS.Z)(function (e) {
              V.current || (V.current = e.currentTarget),
                q(e),
                !0 === X.current && (ee(!0), A && A(e)),
                T && T(e);
            }),
            ge = function () {
              var e = V.current;
              return f && "button" !== f && !("A" === e.tagName && e.href);
            },
            ye = a.useRef(!1),
            be = (0, iS.Z)(function (e) {
              _ &&
                !ye.current &&
                Q &&
                G.current &&
                " " === e.key &&
                ((ye.current = !0),
                G.current.stop(e, function () {
                  G.current.start(e);
                })),
                e.target === e.currentTarget &&
                  ge() &&
                  " " === e.key &&
                  e.preventDefault(),
                C && C(e),
                e.target === e.currentTarget &&
                  ge() &&
                  "Enter" === e.key &&
                  !p &&
                  (e.preventDefault(), M && M(e));
            }),
            _e = (0, iS.Z)(function (e) {
              _ &&
                " " === e.key &&
                G.current &&
                Q &&
                !e.defaultPrevented &&
                ((ye.current = !1),
                G.current.stop(e, function () {
                  G.current.pulsate(e);
                })),
                P && P(e),
                M &&
                  e.target === e.currentTarget &&
                  ge() &&
                  " " === e.key &&
                  !e.defaultPrevented &&
                  M(e);
            }),
            xe = f;
          "button" === xe && (H.href || H.to) && (xe = S);
          var Se = {};
          "button" === xe
            ? ((Se.type = void 0 === Z ? "button" : Z), (Se.disabled = p))
            : (H.href || H.to || (Se.role = "button"),
              p && (Se["aria-disabled"] = p));
          var we = (0, rS.Z)(t, K, V);
          var Me = (0, bm.Z)({}, n, {
              centerRipple: l,
              component: f,
              disabled: p,
              disableRipple: m,
              disableTouchRipple: y,
              focusRipple: _,
              tabIndex: z,
              focusVisible: Q,
            }),
            Ee = (function (e) {
              var t = e.disabled,
                n = e.focusVisible,
                r = e.focusVisibleClassName,
                i = e.classes,
                a = { root: ["root", t && "disabled", n && "focusVisible"] },
                o = (0, qx.Z)(a, BS, i);
              return n && r && (o.root += " ".concat(r)), o;
            })(Me);
          return (0,
          hg.jsxs)(GS, (0, bm.Z)({ as: xe, className: (0, Xx.Z)(Ee.root, c), ownerState: Me, onBlur: ve, onClick: M, onContextMenu: le, onFocus: me, onKeyDown: be, onKeyUp: _e, onMouseDown: se, onMouseLeave: de, onMouseUp: ce, onDragLeave: ue, onTouchEnd: he, onTouchMove: pe, onTouchStart: fe, ref: we, tabIndex: p ? -1 : z, type: Z }, Se, H, { children: [u, ae ? (0, hg.jsx)(FS, (0, bm.Z)({ ref: W, center: l }, F)) : null] }));
        }),
        jS = WS;
      function XS(e) {
        return (0, Jx.Z)("MuiBottomNavigationAction", e);
      }
      var qS = (0, $x.Z)("MuiBottomNavigationAction", [
          "root",
          "iconOnly",
          "selected",
          "label",
        ]),
        YS = [
          "className",
          "icon",
          "label",
          "onChange",
          "onClick",
          "selected",
          "showLabel",
          "value",
        ],
        KS = (0, Yx.ZP)(jS, {
          name: "MuiBottomNavigationAction",
          slot: "Root",
          overridesResolver: function (e, t) {
            var n = e.ownerState;
            return [t.root, !n.showLabel && !n.selected && t.iconOnly];
          },
        })(function (e) {
          var t = e.theme,
            n = e.ownerState;
          return (0,
          bm.Z)({ transition: t.transitions.create(["color", "padding-top"], { duration: t.transitions.duration.short }), padding: "0px 12px", minWidth: 80, maxWidth: 168, color: (t.vars || t).palette.text.secondary, flexDirection: "column", flex: "1" }, !n.showLabel && !n.selected && { paddingTop: 14 }, !n.showLabel && !n.selected && !n.label && { paddingTop: 0 }, (0, l.Z)({}, "&.".concat(qS.selected), { color: (t.vars || t).palette.primary.main }));
        }),
        $S = (0, Yx.ZP)("span", {
          name: "MuiBottomNavigationAction",
          slot: "Label",
          overridesResolver: function (e, t) {
            return t.label;
          },
        })(function (e) {
          var t = e.theme,
            n = e.ownerState;
          return (0,
          bm.Z)({ fontFamily: t.typography.fontFamily, fontSize: t.typography.pxToRem(12), opacity: 1, transition: "font-size 0.2s, opacity 0.2s", transitionDelay: "0.1s" }, !n.showLabel && !n.selected && { opacity: 0, transitionDelay: "0s" }, (0, l.Z)({}, "&.".concat(qS.selected), { fontSize: t.typography.pxToRem(14) }));
        }),
        JS = a.forwardRef(function (e, t) {
          var n = (0, Kx.Z)({ props: e, name: "MuiBottomNavigationAction" }),
            r = n.className,
            i = n.icon,
            a = n.label,
            s = n.onChange,
            l = n.onClick,
            u = n.value,
            c = (0, o.Z)(n, YS),
            d = n,
            f = (function (e) {
              var t = e.classes,
                n = e.showLabel,
                r = e.selected,
                i = {
                  root: ["root", !n && !r && "iconOnly", r && "selected"],
                  label: ["label", !n && !r && "iconOnly", r && "selected"],
                };
              return (0, qx.Z)(i, XS, t);
            })(d);
          return (0, hg.jsxs)(
            KS,
            (0, bm.Z)(
              {
                ref: t,
                className: (0, Xx.Z)(f.root, r),
                focusRipple: !0,
                onClick: function (e) {
                  s && s(e, u), l && l(e);
                },
                ownerState: d,
              },
              c,
              {
                children: [
                  i,
                  (0, hg.jsx)($S, {
                    className: f.label,
                    ownerState: d,
                    children: a,
                  }),
                ],
              }
            )
          );
        }),
        QS = n(5936),
        ew = n(5130),
        tw = n(5418);
      function nw(e) {
        var t = e.setIsDragging,
          n = e.floorPlane,
          r = (0, a.useState)(!1),
          o = (0, i.Z)(r, 2),
          s = o[0],
          l = o[1],
          u = (0, a.useRef)();
        return (0, hg.jsx)(Wx, {
          setIsDragging: t,
          floorPlane: n,
          children: (0, hg.jsxs)("mesh", {
            rotation: [-Math.PI / 1.2, 0, 0],
            onPointerOver: function (e) {
              return l(!0);
            },
            onPointerOut: function (e) {
              return l(!1);
            },
            children: [
              (0, hg.jsx)("boxGeometry", { args: [1, 1, 1], ref: u }),
              s
                ? (0, hg.jsx)("meshStandardMaterial", {
                    color: "hotpink",
                    side: "double",
                  })
                : (0, hg.jsx)("meshNormalMaterial", { attach: "material" }),
            ],
          }),
        });
      }
      function rw(e) {
        return "string" === typeof e;
      }
      var iw = n(2065),
        aw = n(9103),
        ow = n(162);
      var sw = a.createContext({});
      function lw(e) {
        return (0, Jx.Z)("MuiListItem", e);
      }
      var uw = (0, $x.Z)("MuiListItem", [
        "root",
        "container",
        "focusVisible",
        "dense",
        "alignItemsFlexStart",
        "disabled",
        "divider",
        "gutters",
        "padding",
        "button",
        "secondaryAction",
        "selected",
      ]);
      var cw = (0, $x.Z)("MuiListItemButton", [
        "root",
        "focusVisible",
        "dense",
        "alignItemsFlexStart",
        "disabled",
        "divider",
        "gutters",
        "selected",
      ]);
      function dw(e) {
        return (0, Jx.Z)("MuiListItemSecondaryAction", e);
      }
      (0, $x.Z)("MuiListItemSecondaryAction", ["root", "disableGutters"]);
      var fw = ["className"],
        hw = (0, Yx.ZP)("div", {
          name: "MuiListItemSecondaryAction",
          slot: "Root",
          overridesResolver: function (e, t) {
            var n = e.ownerState;
            return [t.root, n.disableGutters && t.disableGutters];
          },
        })(function (e) {
          var t = e.ownerState;
          return (0,
          bm.Z)({ position: "absolute", right: 16, top: "50%", transform: "translateY(-50%)" }, t.disableGutters && { right: 0 });
        }),
        pw = a.forwardRef(function (e, t) {
          var n = (0, Kx.Z)({ props: e, name: "MuiListItemSecondaryAction" }),
            r = n.className,
            i = (0, o.Z)(n, fw),
            s = a.useContext(sw),
            l = (0, bm.Z)({}, n, { disableGutters: s.disableGutters }),
            u = (function (e) {
              var t = e.disableGutters,
                n = e.classes,
                r = { root: ["root", t && "disableGutters"] };
              return (0, qx.Z)(r, dw, n);
            })(l);
          return (0,
          hg.jsx)(hw, (0, bm.Z)({ className: (0, Xx.Z)(u.root, r), ownerState: l, ref: t }, i));
        });
      pw.muiName = "ListItemSecondaryAction";
      var vw = pw,
        mw = ["className"],
        gw = [
          "alignItems",
          "autoFocus",
          "button",
          "children",
          "className",
          "component",
          "components",
          "componentsProps",
          "ContainerComponent",
          "ContainerProps",
          "dense",
          "disabled",
          "disableGutters",
          "disablePadding",
          "divider",
          "focusVisibleClassName",
          "secondaryAction",
          "selected",
          "slotProps",
          "slots",
        ],
        yw = (0, Yx.ZP)("div", {
          name: "MuiListItem",
          slot: "Root",
          overridesResolver: function (e, t) {
            var n = e.ownerState;
            return [
              t.root,
              n.dense && t.dense,
              "flex-start" === n.alignItems && t.alignItemsFlexStart,
              n.divider && t.divider,
              !n.disableGutters && t.gutters,
              !n.disablePadding && t.padding,
              n.button && t.button,
              n.hasSecondaryAction && t.secondaryAction,
            ];
          },
        })(function (e) {
          var t,
            n = e.theme,
            r = e.ownerState;
          return (0,
          bm.Z)({ display: "flex", justifyContent: "flex-start", alignItems: "center", position: "relative", textDecoration: "none", width: "100%", boxSizing: "border-box", textAlign: "left" }, !r.disablePadding && (0, bm.Z)({ paddingTop: 8, paddingBottom: 8 }, r.dense && { paddingTop: 4, paddingBottom: 4 }, !r.disableGutters && { paddingLeft: 16, paddingRight: 16 }, !!r.secondaryAction && { paddingRight: 48 }), !!r.secondaryAction && (0, l.Z)({}, "& > .".concat(cw.root), { paddingRight: 48 }), ((t = {}), (0, l.Z)(t, "&.".concat(uw.focusVisible), { backgroundColor: (n.vars || n).palette.action.focus }), (0, l.Z)(t, "&.".concat(uw.selected), (0, l.Z)({ backgroundColor: n.vars ? "rgba(".concat(n.vars.palette.primary.mainChannel, " / ").concat(n.vars.palette.action.selectedOpacity, ")") : (0, iw.Fq)(n.palette.primary.main, n.palette.action.selectedOpacity) }, "&.".concat(uw.focusVisible), { backgroundColor: n.vars ? "rgba(".concat(n.vars.palette.primary.mainChannel, " / calc(").concat(n.vars.palette.action.selectedOpacity, " + ").concat(n.vars.palette.action.focusOpacity, "))") : (0, iw.Fq)(n.palette.primary.main, n.palette.action.selectedOpacity + n.palette.action.focusOpacity) })), (0, l.Z)(t, "&.".concat(uw.disabled), { opacity: (n.vars || n).palette.action.disabledOpacity }), t), "flex-start" === r.alignItems && { alignItems: "flex-start" }, r.divider && { borderBottom: "1px solid ".concat((n.vars || n).palette.divider), backgroundClip: "padding-box" }, r.button && (0, l.Z)({ transition: n.transitions.create("background-color", { duration: n.transitions.duration.shortest }), "&:hover": { textDecoration: "none", backgroundColor: (n.vars || n).palette.action.hover, "@media (hover: none)": { backgroundColor: "transparent" } } }, "&.".concat(uw.selected, ":hover"), { backgroundColor: n.vars ? "rgba(".concat(n.vars.palette.primary.mainChannel, " / calc(").concat(n.vars.palette.action.selectedOpacity, " + ").concat(n.vars.palette.action.hoverOpacity, "))") : (0, iw.Fq)(n.palette.primary.main, n.palette.action.selectedOpacity + n.palette.action.hoverOpacity), "@media (hover: none)": { backgroundColor: n.vars ? "rgba(".concat(n.vars.palette.primary.mainChannel, " / ").concat(n.vars.palette.action.selectedOpacity, ")") : (0, iw.Fq)(n.palette.primary.main, n.palette.action.selectedOpacity) } }), r.hasSecondaryAction && { paddingRight: 48 });
        }),
        bw = (0, Yx.ZP)("li", {
          name: "MuiListItem",
          slot: "Container",
          overridesResolver: function (e, t) {
            return t.container;
          },
        })({ position: "relative" }),
        _w = a.forwardRef(function (e, t) {
          var n = (0, Kx.Z)({ props: e, name: "MuiListItem" }),
            r = n.alignItems,
            i = void 0 === r ? "center" : r,
            s = n.autoFocus,
            l = void 0 !== s && s,
            u = n.button,
            c = void 0 !== u && u,
            d = n.children,
            f = n.className,
            h = n.component,
            p = n.components,
            v = void 0 === p ? {} : p,
            m = n.componentsProps,
            g = void 0 === m ? {} : m,
            y = n.ContainerComponent,
            b = void 0 === y ? "li" : y,
            _ = n.ContainerProps,
            x = (void 0 === _ ? {} : _).className,
            S = n.dense,
            w = void 0 !== S && S,
            M = n.disabled,
            E = void 0 !== M && M,
            k = n.disableGutters,
            T = void 0 !== k && k,
            A = n.disablePadding,
            C = void 0 !== A && A,
            P = n.divider,
            R = void 0 !== P && P,
            L = n.focusVisibleClassName,
            I = n.secondaryAction,
            N = n.selected,
            O = void 0 !== N && N,
            D = n.slotProps,
            U = void 0 === D ? {} : D,
            z = n.slots,
            F = void 0 === z ? {} : z,
            B = (0, o.Z)(n.ContainerProps, mw),
            Z = (0, o.Z)(n, gw),
            H = a.useContext(sw),
            V = a.useMemo(
              function () {
                return {
                  dense: w || H.dense || !1,
                  alignItems: i,
                  disableGutters: T,
                };
              },
              [i, H.dense, w, T]
            ),
            G = a.useRef(null);
          (0, ow.Z)(
            function () {
              l && G.current && G.current.focus();
            },
            [l]
          );
          var W = a.Children.toArray(d),
            j =
              W.length &&
              (0, aw.Z)(W[W.length - 1], ["ListItemSecondaryAction"]),
            X = (0, bm.Z)({}, n, {
              alignItems: i,
              autoFocus: l,
              button: c,
              dense: V.dense,
              disabled: E,
              disableGutters: T,
              disablePadding: C,
              divider: R,
              hasSecondaryAction: j,
              selected: O,
            }),
            q = (function (e) {
              var t = e.alignItems,
                n = e.button,
                r = e.classes,
                i = e.dense,
                a = e.disabled,
                o = {
                  root: [
                    "root",
                    i && "dense",
                    !e.disableGutters && "gutters",
                    !e.disablePadding && "padding",
                    e.divider && "divider",
                    a && "disabled",
                    n && "button",
                    "flex-start" === t && "alignItemsFlexStart",
                    e.hasSecondaryAction && "secondaryAction",
                    e.selected && "selected",
                  ],
                  container: ["container"],
                };
              return (0, qx.Z)(o, lw, r);
            })(X),
            Y = (0, rS.Z)(G, t),
            K = F.root || v.Root || yw,
            $ = U.root || g.root || {},
            J = (0, bm.Z)(
              { className: (0, Xx.Z)(q.root, $.className, f), disabled: E },
              Z
            ),
            Q = h || "li";
          return (
            c &&
              ((J.component = h || "div"),
              (J.focusVisibleClassName = (0, Xx.Z)(uw.focusVisible, L)),
              (Q = jS)),
            j
              ? ((Q = J.component || h ? Q : "div"),
                "li" === b &&
                  ("li" === Q
                    ? (Q = "div")
                    : "li" === J.component && (J.component = "div")),
                (0, hg.jsx)(sw.Provider, {
                  value: V,
                  children: (0, hg.jsxs)(
                    bw,
                    (0, bm.Z)(
                      {
                        as: b,
                        className: (0, Xx.Z)(q.container, x),
                        ref: Y,
                        ownerState: X,
                      },
                      B,
                      {
                        children: [
                          (0, hg.jsx)(
                            K,
                            (0, bm.Z)(
                              {},
                              $,
                              !rw(K) && {
                                as: Q,
                                ownerState: (0, bm.Z)({}, X, $.ownerState),
                              },
                              J,
                              { children: W }
                            )
                          ),
                          W.pop(),
                        ],
                      }
                    )
                  ),
                }))
              : (0, hg.jsx)(sw.Provider, {
                  value: V,
                  children: (0, hg.jsxs)(
                    K,
                    (0, bm.Z)(
                      {},
                      $,
                      { as: Q, ref: Y },
                      !rw(K) && { ownerState: (0, bm.Z)({}, X, $.ownerState) },
                      J,
                      { children: [W, I && (0, hg.jsx)(vw, { children: I })] }
                    )
                  ),
                })
          );
        }),
        xw = _w;
      function Sw(e) {
        return (0, Jx.Z)("MuiList", e);
      }
      (0, $x.Z)("MuiList", ["root", "padding", "dense", "subheader"]);
      var ww = [
          "children",
          "className",
          "component",
          "dense",
          "disablePadding",
          "subheader",
        ],
        Mw = (0, Yx.ZP)("ul", {
          name: "MuiList",
          slot: "Root",
          overridesResolver: function (e, t) {
            var n = e.ownerState;
            return [
              t.root,
              !n.disablePadding && t.padding,
              n.dense && t.dense,
              n.subheader && t.subheader,
            ];
          },
        })(function (e) {
          var t = e.ownerState;
          return (0,
          bm.Z)({ listStyle: "none", margin: 0, padding: 0, position: "relative" }, !t.disablePadding && { paddingTop: 8, paddingBottom: 8 }, t.subheader && { paddingTop: 0 });
        }),
        Ew = a.forwardRef(function (e, t) {
          var n = (0, Kx.Z)({ props: e, name: "MuiList" }),
            r = n.children,
            i = n.className,
            s = n.component,
            l = void 0 === s ? "ul" : s,
            u = n.dense,
            c = void 0 !== u && u,
            d = n.disablePadding,
            f = void 0 !== d && d,
            h = n.subheader,
            p = (0, o.Z)(n, ww),
            v = a.useMemo(
              function () {
                return { dense: c };
              },
              [c]
            ),
            m = (0, bm.Z)({}, n, { component: l, dense: c, disablePadding: f }),
            g = (function (e) {
              var t = e.classes,
                n = {
                  root: [
                    "root",
                    !e.disablePadding && "padding",
                    e.dense && "dense",
                    e.subheader && "subheader",
                  ],
                };
              return (0, qx.Z)(n, Sw, t);
            })(m);
          return (0,
          hg.jsx)(sw.Provider, { value: v, children: (0, hg.jsxs)(Mw, (0, bm.Z)({ as: l, className: (0, Xx.Z)(g.root, i), ref: t, ownerState: m }, p, { children: [h, r] })) });
        }),
        kw = Ew,
        Tw = n(4036);
      function Aw(e) {
        return (0, Jx.Z)("MuiIconButton", e);
      }
      var Cw = (0, $x.Z)("MuiIconButton", [
          "root",
          "disabled",
          "colorInherit",
          "colorPrimary",
          "colorSecondary",
          "colorError",
          "colorInfo",
          "colorSuccess",
          "colorWarning",
          "edgeStart",
          "edgeEnd",
          "sizeSmall",
          "sizeMedium",
          "sizeLarge",
        ]),
        Pw = [
          "edge",
          "children",
          "className",
          "color",
          "disabled",
          "disableFocusRipple",
          "size",
        ],
        Rw = (0, Yx.ZP)(jS, {
          name: "MuiIconButton",
          slot: "Root",
          overridesResolver: function (e, t) {
            var n = e.ownerState;
            return [
              t.root,
              "default" !== n.color && t["color".concat((0, Tw.Z)(n.color))],
              n.edge && t["edge".concat((0, Tw.Z)(n.edge))],
              t["size".concat((0, Tw.Z)(n.size))],
            ];
          },
        })(
          function (e) {
            var t = e.theme,
              n = e.ownerState;
            return (0, bm.Z)(
              {
                textAlign: "center",
                flex: "0 0 auto",
                fontSize: t.typography.pxToRem(24),
                padding: 8,
                borderRadius: "50%",
                overflow: "visible",
                color: (t.vars || t).palette.action.active,
                transition: t.transitions.create("background-color", {
                  duration: t.transitions.duration.shortest,
                }),
              },
              !n.disableRipple && {
                "&:hover": {
                  backgroundColor: t.vars
                    ? "rgba("
                        .concat(t.vars.palette.action.activeChannel, " / ")
                        .concat(t.vars.palette.action.hoverOpacity, ")")
                    : (0, iw.Fq)(
                        t.palette.action.active,
                        t.palette.action.hoverOpacity
                      ),
                  "@media (hover: none)": { backgroundColor: "transparent" },
                },
              },
              "start" === n.edge && {
                marginLeft: "small" === n.size ? -3 : -12,
              },
              "end" === n.edge && { marginRight: "small" === n.size ? -3 : -12 }
            );
          },
          function (e) {
            var t,
              n = e.theme,
              r = e.ownerState,
              i = null == (t = (n.vars || n).palette) ? void 0 : t[r.color];
            return (0, bm.Z)(
              {},
              "inherit" === r.color && { color: "inherit" },
              "inherit" !== r.color &&
                "default" !== r.color &&
                (0, bm.Z)(
                  { color: null == i ? void 0 : i.main },
                  !r.disableRipple && {
                    "&:hover": (0, bm.Z)(
                      {},
                      i && {
                        backgroundColor: n.vars
                          ? "rgba("
                              .concat(i.mainChannel, " / ")
                              .concat(n.vars.palette.action.hoverOpacity, ")")
                          : (0, iw.Fq)(i.main, n.palette.action.hoverOpacity),
                      },
                      {
                        "@media (hover: none)": {
                          backgroundColor: "transparent",
                        },
                      }
                    ),
                  }
                ),
              "small" === r.size && {
                padding: 5,
                fontSize: n.typography.pxToRem(18),
              },
              "large" === r.size && {
                padding: 12,
                fontSize: n.typography.pxToRem(28),
              },
              (0, l.Z)({}, "&.".concat(Cw.disabled), {
                backgroundColor: "transparent",
                color: (n.vars || n).palette.action.disabled,
              })
            );
          }
        ),
        Lw = a.forwardRef(function (e, t) {
          var n = (0, Kx.Z)({ props: e, name: "MuiIconButton" }),
            r = n.edge,
            i = void 0 !== r && r,
            a = n.children,
            s = n.className,
            l = n.color,
            u = void 0 === l ? "default" : l,
            c = n.disabled,
            d = void 0 !== c && c,
            f = n.disableFocusRipple,
            h = void 0 !== f && f,
            p = n.size,
            v = void 0 === p ? "medium" : p,
            m = (0, o.Z)(n, Pw),
            g = (0, bm.Z)({}, n, {
              edge: i,
              color: u,
              disabled: d,
              disableFocusRipple: h,
              size: v,
            }),
            y = (function (e) {
              var t = e.classes,
                n = e.disabled,
                r = e.color,
                i = e.edge,
                a = e.size,
                o = {
                  root: [
                    "root",
                    n && "disabled",
                    "default" !== r && "color".concat((0, Tw.Z)(r)),
                    i && "edge".concat((0, Tw.Z)(i)),
                    "size".concat((0, Tw.Z)(a)),
                  ],
                };
              return (0, qx.Z)(o, Aw, t);
            })(g);
          return (0,
          hg.jsx)(Rw, (0, bm.Z)({ className: (0, Xx.Z)(y.root, s), centerRipple: !0, focusRipple: !h, disabled: d, ref: t, ownerState: g }, m, { children: a }));
        }),
        Iw = n(1184),
        Nw = n(2466),
        Ow = n(7416),
        Dw = ["sx"];
      function Uw(e) {
        var t,
          n = e.sx,
          i = (function (e) {
            var t,
              n,
              r = { systemProps: {}, otherProps: {} },
              i =
                null !=
                (t =
                  null == e || null == (n = e.theme)
                    ? void 0
                    : n.unstable_sxConfig)
                  ? t
                  : Ow.Z;
            return (
              Object.keys(e).forEach(function (t) {
                i[t] ? (r.systemProps[t] = e[t]) : (r.otherProps[t] = e[t]);
              }),
              r
            );
          })((0, o.Z)(e, Dw)),
          a = i.systemProps,
          s = i.otherProps;
        return (
          (t = Array.isArray(n)
            ? [a].concat((0, r.Z)(n))
            : "function" === typeof n
            ? function () {
                var e = n.apply(void 0, arguments);
                return (0, Nw.P)(e) ? (0, bm.Z)({}, a, e) : a;
              }
            : (0, bm.Z)({}, a, n)),
          (0, bm.Z)({}, s, { sx: t })
        );
      }
      var zw = n(3459),
        Fw = n(4591),
        Bw = n(988);
      function Zw() {
        var e = (0, zw.Z)(Fw.Z);
        return e[Bw.Z] || e;
      }
      var Hw = a.createContext();
      function Vw(e) {
        return (0, Jx.Z)("MuiGrid", e);
      }
      var Gw = ["auto", !0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
        Ww = (0, $x.Z)(
          "MuiGrid",
          ["root", "container", "item", "zeroMinWidth"].concat(
            (0, r.Z)(
              [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(function (e) {
                return "spacing-xs-".concat(e);
              })
            ),
            (0, r.Z)(
              ["column-reverse", "column", "row-reverse", "row"].map(function (
                e
              ) {
                return "direction-xs-".concat(e);
              })
            ),
            (0, r.Z)(
              ["nowrap", "wrap-reverse", "wrap"].map(function (e) {
                return "wrap-xs-".concat(e);
              })
            ),
            (0, r.Z)(
              Gw.map(function (e) {
                return "grid-xs-".concat(e);
              })
            ),
            (0, r.Z)(
              Gw.map(function (e) {
                return "grid-sm-".concat(e);
              })
            ),
            (0, r.Z)(
              Gw.map(function (e) {
                return "grid-md-".concat(e);
              })
            ),
            (0, r.Z)(
              Gw.map(function (e) {
                return "grid-lg-".concat(e);
              })
            ),
            (0, r.Z)(
              Gw.map(function (e) {
                return "grid-xl-".concat(e);
              })
            )
          )
        ),
        jw = [
          "className",
          "columns",
          "columnSpacing",
          "component",
          "container",
          "direction",
          "item",
          "rowSpacing",
          "spacing",
          "wrap",
          "zeroMinWidth",
        ];
      function Xw(e) {
        var t = parseFloat(e);
        return "".concat(t).concat(String(e).replace(String(t), "") || "px");
      }
      function qw(e) {
        var t = e.breakpoints,
          n = e.values,
          r = "";
        Object.keys(n).forEach(function (e) {
          "" === r && 0 !== n[e] && (r = e);
        });
        var i = Object.keys(t).sort(function (e, n) {
          return t[e] - t[n];
        });
        return i.slice(0, i.indexOf(r));
      }
      var Yw = (0, Yx.ZP)("div", {
        name: "MuiGrid",
        slot: "Root",
        overridesResolver: function (e, t) {
          var n = e.ownerState,
            i = n.container,
            a = n.direction,
            o = n.item,
            s = n.spacing,
            l = n.wrap,
            u = n.zeroMinWidth,
            c = n.breakpoints,
            d = [];
          i &&
            (d = (function (e, t) {
              var n =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : {};
              if (!e || e <= 0) return [];
              if (
                ("string" === typeof e && !Number.isNaN(Number(e))) ||
                "number" === typeof e
              )
                return [n["spacing-xs-".concat(String(e))]];
              var r = [];
              return (
                t.forEach(function (t) {
                  var i = e[t];
                  Number(i) > 0 &&
                    r.push(n["spacing-".concat(t, "-").concat(String(i))]);
                }),
                r
              );
            })(s, c, t));
          var f = [];
          return (
            c.forEach(function (e) {
              var r = n[e];
              r && f.push(t["grid-".concat(e, "-").concat(String(r))]);
            }),
            [t.root, i && t.container, o && t.item, u && t.zeroMinWidth].concat(
              (0, r.Z)(d),
              [
                "row" !== a && t["direction-xs-".concat(String(a))],
                "wrap" !== l && t["wrap-xs-".concat(String(l))],
              ],
              f
            )
          );
        },
      })(
        function (e) {
          var t = e.ownerState;
          return (0, bm.Z)(
            { boxSizing: "border-box" },
            t.container && { display: "flex", flexWrap: "wrap", width: "100%" },
            t.item && { margin: 0 },
            t.zeroMinWidth && { minWidth: 0 },
            "wrap" !== t.wrap && { flexWrap: t.wrap }
          );
        },
        function (e) {
          var t = e.theme,
            n = e.ownerState,
            r = (0, Iw.P$)({
              values: n.direction,
              breakpoints: t.breakpoints.values,
            });
          return (0, Iw.k9)({ theme: t }, r, function (e) {
            var t = { flexDirection: e };
            return (
              0 === e.indexOf("column") &&
                (t["& > .".concat(Ww.item)] = { maxWidth: "none" }),
              t
            );
          });
        },
        function (e) {
          var t = e.theme,
            n = e.ownerState,
            r = n.container,
            i = n.rowSpacing,
            a = {};
          if (r && 0 !== i) {
            var o,
              s = (0, Iw.P$)({ values: i, breakpoints: t.breakpoints.values });
            "object" === typeof s &&
              (o = qw({ breakpoints: t.breakpoints.values, values: s })),
              (a = (0, Iw.k9)({ theme: t }, s, function (e, n) {
                var r,
                  i = t.spacing(e);
                return "0px" !== i
                  ? (0, l.Z)(
                      { marginTop: "-".concat(Xw(i)) },
                      "& > .".concat(Ww.item),
                      { paddingTop: Xw(i) }
                    )
                  : null != (r = o) && r.includes(n)
                  ? {}
                  : (0, l.Z)({ marginTop: 0 }, "& > .".concat(Ww.item), {
                      paddingTop: 0,
                    });
              }));
          }
          return a;
        },
        function (e) {
          var t = e.theme,
            n = e.ownerState,
            r = n.container,
            i = n.columnSpacing,
            a = {};
          if (r && 0 !== i) {
            var o,
              s = (0, Iw.P$)({ values: i, breakpoints: t.breakpoints.values });
            "object" === typeof s &&
              (o = qw({ breakpoints: t.breakpoints.values, values: s })),
              (a = (0, Iw.k9)({ theme: t }, s, function (e, n) {
                var r,
                  i = t.spacing(e);
                return "0px" !== i
                  ? (0, l.Z)(
                      {
                        width: "calc(100% + ".concat(Xw(i), ")"),
                        marginLeft: "-".concat(Xw(i)),
                      },
                      "& > .".concat(Ww.item),
                      { paddingLeft: Xw(i) }
                    )
                  : null != (r = o) && r.includes(n)
                  ? {}
                  : (0, l.Z)(
                      { width: "100%", marginLeft: 0 },
                      "& > .".concat(Ww.item),
                      { paddingLeft: 0 }
                    );
              }));
          }
          return a;
        },
        function (e) {
          var t,
            n = e.theme,
            r = e.ownerState;
          return n.breakpoints.keys.reduce(function (e, i) {
            var a = {};
            if ((r[i] && (t = r[i]), !t)) return e;
            if (!0 === t) a = { flexBasis: 0, flexGrow: 1, maxWidth: "100%" };
            else if ("auto" === t)
              a = {
                flexBasis: "auto",
                flexGrow: 0,
                flexShrink: 0,
                maxWidth: "none",
                width: "auto",
              };
            else {
              var o = (0, Iw.P$)({
                  values: r.columns,
                  breakpoints: n.breakpoints.values,
                }),
                s = "object" === typeof o ? o[i] : o;
              if (void 0 === s || null === s) return e;
              var l = "".concat(Math.round((t / s) * 1e8) / 1e6, "%"),
                u = {};
              if (r.container && r.item && 0 !== r.columnSpacing) {
                var c = n.spacing(r.columnSpacing);
                if ("0px" !== c) {
                  var d = "calc(".concat(l, " + ").concat(Xw(c), ")");
                  u = { flexBasis: d, maxWidth: d };
                }
              }
              a = (0, bm.Z)({ flexBasis: l, flexGrow: 0, maxWidth: l }, u);
            }
            return (
              0 === n.breakpoints.values[i]
                ? Object.assign(e, a)
                : (e[n.breakpoints.up(i)] = a),
              e
            );
          }, {});
        }
      );
      var Kw = function (e) {
          var t = e.classes,
            n = e.container,
            i = e.direction,
            a = e.item,
            o = e.spacing,
            s = e.wrap,
            l = e.zeroMinWidth,
            u = e.breakpoints,
            c = [];
          n &&
            (c = (function (e, t) {
              if (!e || e <= 0) return [];
              if (
                ("string" === typeof e && !Number.isNaN(Number(e))) ||
                "number" === typeof e
              )
                return ["spacing-xs-".concat(String(e))];
              var n = [];
              return (
                t.forEach(function (t) {
                  var r = e[t];
                  if (Number(r) > 0) {
                    var i = "spacing-".concat(t, "-").concat(String(r));
                    n.push(i);
                  }
                }),
                n
              );
            })(o, u));
          var d = [];
          u.forEach(function (t) {
            var n = e[t];
            n && d.push("grid-".concat(t, "-").concat(String(n)));
          });
          var f = {
            root: [
              "root",
              n && "container",
              a && "item",
              l && "zeroMinWidth",
            ].concat(
              (0, r.Z)(c),
              [
                "row" !== i && "direction-xs-".concat(String(i)),
                "wrap" !== s && "wrap-xs-".concat(String(s)),
              ],
              d
            ),
          };
          return (0, qx.Z)(f, Vw, t);
        },
        $w = a.forwardRef(function (e, t) {
          var n = (0, Kx.Z)({ props: e, name: "MuiGrid" }),
            r = Zw().breakpoints,
            i = Uw(n),
            s = i.className,
            l = i.columns,
            u = i.columnSpacing,
            c = i.component,
            d = void 0 === c ? "div" : c,
            f = i.container,
            h = void 0 !== f && f,
            p = i.direction,
            v = void 0 === p ? "row" : p,
            m = i.item,
            g = void 0 !== m && m,
            y = i.rowSpacing,
            b = i.spacing,
            _ = void 0 === b ? 0 : b,
            x = i.wrap,
            S = void 0 === x ? "wrap" : x,
            w = i.zeroMinWidth,
            M = void 0 !== w && w,
            E = (0, o.Z)(i, jw),
            k = y || _,
            T = u || _,
            A = a.useContext(Hw),
            C = h ? l || 12 : A,
            P = {},
            R = (0, bm.Z)({}, E);
          r.keys.forEach(function (e) {
            null != E[e] && ((P[e] = E[e]), delete R[e]);
          });
          var L = (0, bm.Z)(
              {},
              i,
              {
                columns: C,
                container: h,
                direction: v,
                item: g,
                rowSpacing: k,
                columnSpacing: T,
                wrap: S,
                zeroMinWidth: M,
                spacing: _,
              },
              P,
              { breakpoints: r.keys }
            ),
            I = Kw(L);
          return (0,
          hg.jsx)(Hw.Provider, { value: C, children: (0, hg.jsx)(Yw, (0, bm.Z)({ ownerState: L, className: (0, Xx.Z)(I.root, s), as: d, ref: t }, R)) });
        }),
        Jw = $w;
      function Qw(e) {
        return (0, Jx.Z)("MuiTypography", e);
      }
      (0, $x.Z)("MuiTypography", [
        "root",
        "h1",
        "h2",
        "h3",
        "h4",
        "h5",
        "h6",
        "subtitle1",
        "subtitle2",
        "body1",
        "body2",
        "inherit",
        "button",
        "caption",
        "overline",
        "alignLeft",
        "alignRight",
        "alignCenter",
        "alignJustify",
        "noWrap",
        "gutterBottom",
        "paragraph",
      ]);
      var eM = [
          "align",
          "className",
          "component",
          "gutterBottom",
          "noWrap",
          "paragraph",
          "variant",
          "variantMapping",
        ],
        tM = (0, Yx.ZP)("span", {
          name: "MuiTypography",
          slot: "Root",
          overridesResolver: function (e, t) {
            var n = e.ownerState;
            return [
              t.root,
              n.variant && t[n.variant],
              "inherit" !== n.align && t["align".concat((0, Tw.Z)(n.align))],
              n.noWrap && t.noWrap,
              n.gutterBottom && t.gutterBottom,
              n.paragraph && t.paragraph,
            ];
          },
        })(function (e) {
          var t = e.theme,
            n = e.ownerState;
          return (0,
          bm.Z)({ margin: 0 }, n.variant && t.typography[n.variant], "inherit" !== n.align && { textAlign: n.align }, n.noWrap && { overflow: "hidden", textOverflow: "ellipsis", whiteSpace: "nowrap" }, n.gutterBottom && { marginBottom: "0.35em" }, n.paragraph && { marginBottom: 16 });
        }),
        nM = {
          h1: "h1",
          h2: "h2",
          h3: "h3",
          h4: "h4",
          h5: "h5",
          h6: "h6",
          subtitle1: "h6",
          subtitle2: "h6",
          body1: "p",
          body2: "p",
          inherit: "p",
        },
        rM = {
          primary: "primary.main",
          textPrimary: "text.primary",
          secondary: "secondary.main",
          textSecondary: "text.secondary",
          error: "error.main",
        },
        iM = a.forwardRef(function (e, t) {
          var n = (0, Kx.Z)({ props: e, name: "MuiTypography" }),
            r = (function (e) {
              return rM[e] || e;
            })(n.color),
            i = Uw((0, bm.Z)({}, n, { color: r })),
            a = i.align,
            s = void 0 === a ? "inherit" : a,
            l = i.className,
            u = i.component,
            c = i.gutterBottom,
            d = void 0 !== c && c,
            f = i.noWrap,
            h = void 0 !== f && f,
            p = i.paragraph,
            v = void 0 !== p && p,
            m = i.variant,
            g = void 0 === m ? "body1" : m,
            y = i.variantMapping,
            b = void 0 === y ? nM : y,
            _ = (0, o.Z)(i, eM),
            x = (0, bm.Z)({}, i, {
              align: s,
              color: r,
              className: l,
              component: u,
              gutterBottom: d,
              noWrap: h,
              paragraph: v,
              variant: g,
              variantMapping: b,
            }),
            S = u || (v ? "p" : b[g] || nM[g]) || "span",
            w = (function (e) {
              var t = e.align,
                n = e.gutterBottom,
                r = e.noWrap,
                i = e.paragraph,
                a = e.variant,
                o = e.classes,
                s = {
                  root: [
                    "root",
                    a,
                    "inherit" !== e.align && "align".concat((0, Tw.Z)(t)),
                    n && "gutterBottom",
                    r && "noWrap",
                    i && "paragraph",
                  ],
                };
              return (0, qx.Z)(s, Qw, o);
            })(x);
          return (0,
          hg.jsx)(tM, (0, bm.Z)({ as: S, ref: t, ownerState: x, className: (0, Xx.Z)(w.root, l) }, _));
        });
      function aM(e) {
        return (0, Jx.Z)("MuiListItemText", e);
      }
      var oM = (0, $x.Z)("MuiListItemText", [
          "root",
          "multiline",
          "dense",
          "inset",
          "primary",
          "secondary",
        ]),
        sM = [
          "children",
          "className",
          "disableTypography",
          "inset",
          "primary",
          "primaryTypographyProps",
          "secondary",
          "secondaryTypographyProps",
        ],
        lM = (0, Yx.ZP)("div", {
          name: "MuiListItemText",
          slot: "Root",
          overridesResolver: function (e, t) {
            var n = e.ownerState;
            return [
              (0, l.Z)({}, "& .".concat(oM.primary), t.primary),
              (0, l.Z)({}, "& .".concat(oM.secondary), t.secondary),
              t.root,
              n.inset && t.inset,
              n.primary && n.secondary && t.multiline,
              n.dense && t.dense,
            ];
          },
        })(function (e) {
          var t = e.ownerState;
          return (0,
          bm.Z)({ flex: "1 1 auto", minWidth: 0, marginTop: 4, marginBottom: 4 }, t.primary && t.secondary && { marginTop: 6, marginBottom: 6 }, t.inset && { paddingLeft: 56 });
        }),
        uM = a.forwardRef(function (e, t) {
          var n = (0, Kx.Z)({ props: e, name: "MuiListItemText" }),
            r = n.children,
            i = n.className,
            s = n.disableTypography,
            l = void 0 !== s && s,
            u = n.inset,
            c = void 0 !== u && u,
            d = n.primary,
            f = n.primaryTypographyProps,
            h = n.secondary,
            p = n.secondaryTypographyProps,
            v = (0, o.Z)(n, sM),
            m = a.useContext(sw).dense,
            g = null != d ? d : r,
            y = h,
            b = (0, bm.Z)({}, n, {
              disableTypography: l,
              inset: c,
              primary: !!g,
              secondary: !!y,
              dense: m,
            }),
            _ = (function (e) {
              var t = e.classes,
                n = e.inset,
                r = e.primary,
                i = e.secondary,
                a = {
                  root: [
                    "root",
                    n && "inset",
                    e.dense && "dense",
                    r && i && "multiline",
                  ],
                  primary: ["primary"],
                  secondary: ["secondary"],
                };
              return (0, qx.Z)(a, aM, t);
            })(b);
          return (
            null == g ||
              g.type === iM ||
              l ||
              (g = (0, hg.jsx)(
                iM,
                (0, bm.Z)(
                  {
                    variant: m ? "body2" : "body1",
                    className: _.primary,
                    component: null != f && f.variant ? void 0 : "span",
                    display: "block",
                  },
                  f,
                  { children: g }
                )
              )),
            null == y ||
              y.type === iM ||
              l ||
              (y = (0, hg.jsx)(
                iM,
                (0, bm.Z)(
                  {
                    variant: "body2",
                    className: _.secondary,
                    color: "text.secondary",
                    display: "block",
                  },
                  p,
                  { children: y }
                )
              )),
            (0, hg.jsxs)(
              lM,
              (0, bm.Z)(
                { className: (0, Xx.Z)(_.root, i), ownerState: b, ref: t },
                v,
                { children: [g, y] }
              )
            )
          );
        }),
        cM = n(7247);
      function dM(e) {
        return null != e && !(Array.isArray(e) && 0 === e.length);
      }
      function fM(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
        return (
          e &&
          ((dM(e.value) && "" !== e.value) ||
            (t && dM(e.defaultValue) && "" !== e.defaultValue))
        );
      }
      var hM = a.createContext(void 0);
      function pM(e) {
        return (0, Jx.Z)("MuiFormControl", e);
      }
      (0, $x.Z)("MuiFormControl", [
        "root",
        "marginNone",
        "marginNormal",
        "marginDense",
        "fullWidth",
        "disabled",
      ]);
      var vM = [
          "children",
          "className",
          "color",
          "component",
          "disabled",
          "error",
          "focused",
          "fullWidth",
          "hiddenLabel",
          "margin",
          "required",
          "size",
          "variant",
        ],
        mM = (0, Yx.ZP)("div", {
          name: "MuiFormControl",
          slot: "Root",
          overridesResolver: function (e, t) {
            var n = e.ownerState;
            return (0, bm.Z)(
              {},
              t.root,
              t["margin".concat((0, Tw.Z)(n.margin))],
              n.fullWidth && t.fullWidth
            );
          },
        })(function (e) {
          var t = e.ownerState;
          return (0,
          bm.Z)({ display: "inline-flex", flexDirection: "column", position: "relative", minWidth: 0, padding: 0, margin: 0, border: 0, verticalAlign: "top" }, "normal" === t.margin && { marginTop: 16, marginBottom: 8 }, "dense" === t.margin && { marginTop: 8, marginBottom: 4 }, t.fullWidth && { width: "100%" });
        }),
        gM = a.forwardRef(function (e, t) {
          var n = (0, Kx.Z)({ props: e, name: "MuiFormControl" }),
            r = n.children,
            s = n.className,
            l = n.color,
            u = void 0 === l ? "primary" : l,
            c = n.component,
            d = void 0 === c ? "div" : c,
            f = n.disabled,
            h = void 0 !== f && f,
            p = n.error,
            v = void 0 !== p && p,
            m = n.focused,
            g = n.fullWidth,
            y = void 0 !== g && g,
            b = n.hiddenLabel,
            _ = void 0 !== b && b,
            x = n.margin,
            S = void 0 === x ? "none" : x,
            w = n.required,
            M = void 0 !== w && w,
            E = n.size,
            k = void 0 === E ? "medium" : E,
            T = n.variant,
            A = void 0 === T ? "outlined" : T,
            C = (0, o.Z)(n, vM),
            P = (0, bm.Z)({}, n, {
              color: u,
              component: d,
              disabled: h,
              error: v,
              fullWidth: y,
              hiddenLabel: _,
              margin: S,
              required: M,
              size: k,
              variant: A,
            }),
            R = (function (e) {
              var t = e.classes,
                n = e.margin,
                r = e.fullWidth,
                i = {
                  root: [
                    "root",
                    "none" !== n && "margin".concat((0, Tw.Z)(n)),
                    r && "fullWidth",
                  ],
                };
              return (0, qx.Z)(i, pM, t);
            })(P),
            L = a.useState(function () {
              var e = !1;
              return (
                r &&
                  a.Children.forEach(r, function (t) {
                    if ((0, aw.Z)(t, ["Input", "Select"])) {
                      var n = (0, aw.Z)(t, ["Select"]) ? t.props.input : t;
                      n && n.props.startAdornment && (e = !0);
                    }
                  }),
                e
              );
            }),
            I = (0, i.Z)(L, 2),
            N = I[0],
            O = I[1],
            D = a.useState(function () {
              var e = !1;
              return (
                r &&
                  a.Children.forEach(r, function (t) {
                    (0, aw.Z)(t, ["Input", "Select"]) &&
                      (fM(t.props, !0) || fM(t.props.inputProps, !0)) &&
                      (e = !0);
                  }),
                e
              );
            }),
            U = (0, i.Z)(D, 2),
            z = U[0],
            F = U[1],
            B = a.useState(!1),
            Z = (0, i.Z)(B, 2),
            H = Z[0],
            V = Z[1];
          h && H && V(!1);
          var G,
            W = void 0 === m || h ? H : m,
            j = a.useMemo(
              function () {
                return {
                  adornedStart: N,
                  setAdornedStart: O,
                  color: u,
                  disabled: h,
                  error: v,
                  filled: z,
                  focused: W,
                  fullWidth: y,
                  hiddenLabel: _,
                  size: k,
                  onBlur: function () {
                    V(!1);
                  },
                  onEmpty: function () {
                    F(!1);
                  },
                  onFilled: function () {
                    F(!0);
                  },
                  onFocus: function () {
                    V(!0);
                  },
                  registerEffect: G,
                  required: M,
                  variant: A,
                };
              },
              [N, u, h, v, z, W, y, _, G, M, k, A]
            );
          return (0,
          hg.jsx)(hM.Provider, { value: j, children: (0, hg.jsx)(mM, (0, bm.Z)({ as: d, ownerState: P, className: (0, Xx.Z)(R.root, s), ref: t }, C, { children: r })) });
        });
      function yM(e) {
        var t = e.props,
          n = e.states,
          r = e.muiFormControl;
        return n.reduce(function (e, n) {
          return (
            (e[n] = t[n]), r && "undefined" === typeof t[n] && (e[n] = r[n]), e
          );
        }, {});
      }
      function bM() {
        return a.useContext(hM);
      }
      function _M(e) {
        return (0, Jx.Z)("MuiFormLabel", e);
      }
      var xM = (0, $x.Z)("MuiFormLabel", [
          "root",
          "colorSecondary",
          "focused",
          "disabled",
          "error",
          "filled",
          "required",
          "asterisk",
        ]),
        SM = [
          "children",
          "className",
          "color",
          "component",
          "disabled",
          "error",
          "filled",
          "focused",
          "required",
        ],
        wM = (0, Yx.ZP)("label", {
          name: "MuiFormLabel",
          slot: "Root",
          overridesResolver: function (e, t) {
            var n = e.ownerState;
            return (0, bm.Z)(
              {},
              t.root,
              "secondary" === n.color && t.colorSecondary,
              n.filled && t.filled
            );
          },
        })(function (e) {
          var t,
            n = e.theme,
            r = e.ownerState;
          return (0,
          bm.Z)({ color: (n.vars || n).palette.text.secondary }, n.typography.body1, ((t = { lineHeight: "1.4375em", padding: 0, position: "relative" }), (0, l.Z)(t, "&.".concat(xM.focused), { color: (n.vars || n).palette[r.color].main }), (0, l.Z)(t, "&.".concat(xM.disabled), { color: (n.vars || n).palette.text.disabled }), (0, l.Z)(t, "&.".concat(xM.error), { color: (n.vars || n).palette.error.main }), t));
        }),
        MM = (0, Yx.ZP)("span", {
          name: "MuiFormLabel",
          slot: "Asterisk",
          overridesResolver: function (e, t) {
            return t.asterisk;
          },
        })(function (e) {
          var t = e.theme;
          return (0,
          l.Z)({}, "&.".concat(xM.error), { color: (t.vars || t).palette.error.main });
        }),
        EM = a.forwardRef(function (e, t) {
          var n = (0, Kx.Z)({ props: e, name: "MuiFormLabel" }),
            r = n.children,
            i = n.className,
            a = n.component,
            s = void 0 === a ? "label" : a,
            l = (0, o.Z)(n, SM),
            u = yM({
              props: n,
              muiFormControl: bM(),
              states: [
                "color",
                "required",
                "focused",
                "disabled",
                "error",
                "filled",
              ],
            }),
            c = (0, bm.Z)({}, n, {
              color: u.color || "primary",
              component: s,
              disabled: u.disabled,
              error: u.error,
              filled: u.filled,
              focused: u.focused,
              required: u.required,
            }),
            d = (function (e) {
              var t = e.classes,
                n = e.color,
                r = e.focused,
                i = e.disabled,
                a = e.error,
                o = e.filled,
                s = e.required,
                l = {
                  root: [
                    "root",
                    "color".concat((0, Tw.Z)(n)),
                    i && "disabled",
                    a && "error",
                    o && "filled",
                    r && "focused",
                    s && "required",
                  ],
                  asterisk: ["asterisk", a && "error"],
                };
              return (0, qx.Z)(l, _M, t);
            })(c);
          return (0,
          hg.jsxs)(wM, (0, bm.Z)({ as: s, ownerState: c, className: (0, Xx.Z)(d.root, i), ref: t }, l, { children: [r, u.required && (0, hg.jsxs)(MM, { ownerState: c, "aria-hidden": !0, className: d.asterisk, children: ["\u2009", "*"] })] }));
        });
      function kM(e) {
        return (0, Jx.Z)("MuiInputLabel", e);
      }
      (0, $x.Z)("MuiInputLabel", [
        "root",
        "focused",
        "disabled",
        "error",
        "required",
        "asterisk",
        "formControl",
        "sizeSmall",
        "shrink",
        "animated",
        "standard",
        "filled",
        "outlined",
      ]);
      var TM = ["disableAnimation", "margin", "shrink", "variant", "className"],
        AM = (0, Yx.ZP)(EM, {
          shouldForwardProp: function (e) {
            return (0, Yx.FO)(e) || "classes" === e;
          },
          name: "MuiInputLabel",
          slot: "Root",
          overridesResolver: function (e, t) {
            var n = e.ownerState;
            return [
              (0, l.Z)({}, "& .".concat(xM.asterisk), t.asterisk),
              t.root,
              n.formControl && t.formControl,
              "small" === n.size && t.sizeSmall,
              n.shrink && t.shrink,
              !n.disableAnimation && t.animated,
              t[n.variant],
            ];
          },
        })(function (e) {
          var t = e.theme,
            n = e.ownerState;
          return (0,
          bm.Z)({ display: "block", transformOrigin: "top left", whiteSpace: "nowrap", overflow: "hidden", textOverflow: "ellipsis", maxWidth: "100%" }, n.formControl && { position: "absolute", left: 0, top: 0, transform: "translate(0, 20px) scale(1)" }, "small" === n.size && { transform: "translate(0, 17px) scale(1)" }, n.shrink && { transform: "translate(0, -1.5px) scale(0.75)", transformOrigin: "top left", maxWidth: "133%" }, !n.disableAnimation && { transition: t.transitions.create(["color", "transform", "max-width"], { duration: t.transitions.duration.shorter, easing: t.transitions.easing.easeOut }) }, "filled" === n.variant && (0, bm.Z)({ zIndex: 1, pointerEvents: "none", transform: "translate(12px, 16px) scale(1)", maxWidth: "calc(100% - 24px)" }, "small" === n.size && { transform: "translate(12px, 13px) scale(1)" }, n.shrink && (0, bm.Z)({ userSelect: "none", pointerEvents: "auto", transform: "translate(12px, 7px) scale(0.75)", maxWidth: "calc(133% - 24px)" }, "small" === n.size && { transform: "translate(12px, 4px) scale(0.75)" })), "outlined" === n.variant && (0, bm.Z)({ zIndex: 1, pointerEvents: "none", transform: "translate(14px, 16px) scale(1)", maxWidth: "calc(100% - 24px)" }, "small" === n.size && { transform: "translate(14px, 9px) scale(1)" }, n.shrink && { userSelect: "none", pointerEvents: "auto", maxWidth: "calc(133% - 32px)", transform: "translate(14px, -9px) scale(0.75)" }));
        }),
        CM = a.forwardRef(function (e, t) {
          var n = (0, Kx.Z)({ name: "MuiInputLabel", props: e }),
            r = n.disableAnimation,
            i = void 0 !== r && r,
            a = n.shrink,
            s = n.className,
            l = (0, o.Z)(n, TM),
            u = bM(),
            c = a;
          "undefined" === typeof c &&
            u &&
            (c = u.filled || u.focused || u.adornedStart);
          var d = yM({
              props: n,
              muiFormControl: u,
              states: ["size", "variant", "required"],
            }),
            f = (0, bm.Z)({}, n, {
              disableAnimation: i,
              formControl: u,
              shrink: c,
              size: d.size,
              variant: d.variant,
              required: d.required,
            }),
            h = (function (e) {
              var t = e.classes,
                n = e.formControl,
                r = e.size,
                i = e.shrink,
                a = {
                  root: [
                    "root",
                    n && "formControl",
                    !e.disableAnimation && "animated",
                    i && "shrink",
                    "small" === r && "sizeSmall",
                    e.variant,
                  ],
                  asterisk: [e.required && "asterisk"],
                },
                o = (0, qx.Z)(a, kM, t);
              return (0, bm.Z)({}, t, o);
            })(f);
          return (0,
          hg.jsx)(AM, (0, bm.Z)({ "data-shrink": c, ownerState: f, ref: t, className: (0, Xx.Z)(h.root, s) }, l, { classes: h }));
        }),
        PM = n(6189),
        RM = n(8301);
      function LM(e) {
        var t = e.documentElement.clientWidth;
        return Math.abs(window.innerWidth - t);
      }
      var IM = LM,
        NM = [
          "actions",
          "autoFocus",
          "autoFocusItem",
          "children",
          "className",
          "disabledItemsFocusable",
          "disableListWrap",
          "onKeyDown",
          "variant",
        ];
      function OM(e, t, n) {
        return e === t
          ? e.firstChild
          : t && t.nextElementSibling
          ? t.nextElementSibling
          : n
          ? null
          : e.firstChild;
      }
      function DM(e, t, n) {
        return e === t
          ? n
            ? e.firstChild
            : e.lastChild
          : t && t.previousElementSibling
          ? t.previousElementSibling
          : n
          ? null
          : e.lastChild;
      }
      function UM(e, t) {
        if (void 0 === t) return !0;
        var n = e.innerText;
        return (
          void 0 === n && (n = e.textContent),
          0 !== (n = n.trim().toLowerCase()).length &&
            (t.repeating
              ? n[0] === t.keys[0]
              : 0 === n.indexOf(t.keys.join("")))
        );
      }
      function zM(e, t, n, r, i, a) {
        for (var o = !1, s = i(e, t, !!t && n); s; ) {
          if (s === e.firstChild) {
            if (o) return !1;
            o = !0;
          }
          var l =
            !r && (s.disabled || "true" === s.getAttribute("aria-disabled"));
          if (s.hasAttribute("tabindex") && UM(s, a) && !l)
            return s.focus(), !0;
          s = i(e, s, n);
        }
        return !1;
      }
      var FM = a.forwardRef(function (e, t) {
          var n = e.actions,
            r = e.autoFocus,
            i = void 0 !== r && r,
            s = e.autoFocusItem,
            l = void 0 !== s && s,
            u = e.children,
            c = e.className,
            d = e.disabledItemsFocusable,
            f = void 0 !== d && d,
            h = e.disableListWrap,
            p = void 0 !== h && h,
            v = e.onKeyDown,
            m = e.variant,
            g = void 0 === m ? "selectedMenu" : m,
            y = (0, o.Z)(e, NM),
            b = a.useRef(null),
            _ = a.useRef({
              keys: [],
              repeating: !0,
              previousKeyMatched: !0,
              lastTime: null,
            });
          (0, ow.Z)(
            function () {
              i && b.current.focus();
            },
            [i]
          ),
            a.useImperativeHandle(
              n,
              function () {
                return {
                  adjustStyleForScrollbar: function (e, t) {
                    var n = !b.current.style.width;
                    if (e.clientHeight < b.current.clientHeight && n) {
                      var r = "".concat(IM((0, RM.Z)(e)), "px");
                      (b.current.style[
                        "rtl" === t.direction ? "paddingLeft" : "paddingRight"
                      ] = r),
                        (b.current.style.width = "calc(100% + ".concat(r, ")"));
                    }
                    return b.current;
                  },
                };
              },
              []
            );
          var x = (0, rS.Z)(b, t),
            S = -1;
          a.Children.forEach(u, function (e, t) {
            a.isValidElement(e)
              ? (e.props.disabled ||
                  ((("selectedMenu" === g && e.props.selected) || -1 === S) &&
                    (S = t)),
                S === t &&
                  (e.props.disabled ||
                    e.props.muiSkipListHighlight ||
                    e.type.muiSkipListHighlight) &&
                  (S += 1) >= u.length &&
                  (S = -1))
              : S === t && (S += 1) >= u.length && (S = -1);
          });
          var w = a.Children.map(u, function (e, t) {
            if (t === S) {
              var n = {};
              return (
                l && (n.autoFocus = !0),
                void 0 === e.props.tabIndex &&
                  "selectedMenu" === g &&
                  (n.tabIndex = 0),
                a.cloneElement(e, n)
              );
            }
            return e;
          });
          return (0, hg.jsx)(
            kw,
            (0, bm.Z)(
              {
                role: "menu",
                ref: x,
                className: c,
                onKeyDown: function (e) {
                  var t = b.current,
                    n = e.key,
                    r = (0, RM.Z)(t).activeElement;
                  if ("ArrowDown" === n) e.preventDefault(), zM(t, r, p, f, OM);
                  else if ("ArrowUp" === n)
                    e.preventDefault(), zM(t, r, p, f, DM);
                  else if ("Home" === n)
                    e.preventDefault(), zM(t, null, p, f, OM);
                  else if ("End" === n)
                    e.preventDefault(), zM(t, null, p, f, DM);
                  else if (1 === n.length) {
                    var i = _.current,
                      a = n.toLowerCase(),
                      o = performance.now();
                    i.keys.length > 0 &&
                      (o - i.lastTime > 500
                        ? ((i.keys = []),
                          (i.repeating = !0),
                          (i.previousKeyMatched = !0))
                        : i.repeating && a !== i.keys[0] && (i.repeating = !1)),
                      (i.lastTime = o),
                      i.keys.push(a);
                    var s = r && !i.repeating && UM(r, i);
                    i.previousKeyMatched && (s || zM(t, r, !1, f, OM, i))
                      ? e.preventDefault()
                      : (i.previousKeyMatched = !1);
                  }
                  v && v(e);
                },
                tabIndex: i ? 0 : -1,
              },
              y,
              { children: w }
            )
          );
        }),
        BM = n(7563);
      function ZM(e) {
        if (void 0 === e) return {};
        var t = {};
        return (
          Object.keys(e)
            .filter(function (t) {
              return !(t.match(/^on[A-Z]/) && "function" === typeof e[t]);
            })
            .forEach(function (n) {
              t[n] = e[n];
            }),
          t
        );
      }
      function HM(e) {
        var t = e.getSlotProps,
          n = e.additionalProps,
          r = e.externalSlotProps,
          i = e.externalForwardedProps,
          a = e.className;
        if (!t) {
          var o = (0, Xx.Z)(
              null == i ? void 0 : i.className,
              null == r ? void 0 : r.className,
              a,
              null == n ? void 0 : n.className
            ),
            s = (0, bm.Z)(
              {},
              null == n ? void 0 : n.style,
              null == i ? void 0 : i.style,
              null == r ? void 0 : r.style
            ),
            l = (0, bm.Z)({}, n, i, r);
          return (
            o.length > 0 && (l.className = o),
            Object.keys(s).length > 0 && (l.style = s),
            { props: l, internalRef: void 0 }
          );
        }
        var u = (function (e) {
            var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : [];
            if (void 0 === e) return {};
            var n = {};
            return (
              Object.keys(e)
                .filter(function (n) {
                  return (
                    n.match(/^on[A-Z]/) &&
                    "function" === typeof e[n] &&
                    !t.includes(n)
                  );
                })
                .forEach(function (t) {
                  n[t] = e[t];
                }),
              n
            );
          })((0, bm.Z)({}, i, r)),
          c = ZM(r),
          d = ZM(i),
          f = t(u),
          h = (0, Xx.Z)(
            null == f ? void 0 : f.className,
            null == n ? void 0 : n.className,
            a,
            null == i ? void 0 : i.className,
            null == r ? void 0 : r.className
          ),
          p = (0, bm.Z)(
            {},
            null == f ? void 0 : f.style,
            null == n ? void 0 : n.style,
            null == i ? void 0 : i.style,
            null == r ? void 0 : r.style
          ),
          v = (0, bm.Z)({}, f, n, d, c);
        return (
          h.length > 0 && (v.className = h),
          Object.keys(p).length > 0 && (v.style = p),
          { props: v, internalRef: f.ref }
        );
      }
      function VM(e, t) {
        return "function" === typeof e ? e(t) : e;
      }
      var GM = ["elementType", "externalSlotProps", "ownerState"];
      function WM(e) {
        var t,
          n = e.elementType,
          r = e.externalSlotProps,
          i = e.ownerState,
          a = (0, o.Z)(e, GM),
          s = VM(r, i),
          l = HM((0, bm.Z)({}, a, { externalSlotProps: s })),
          u = l.props,
          c = l.internalRef,
          d = (0, BM.Z)(
            c,
            null == s ? void 0 : s.ref,
            null == (t = e.additionalProps) ? void 0 : t.ref
          ),
          f = (function (e, t, n) {
            return void 0 === e || rw(e)
              ? t
              : (0, bm.Z)({}, t, {
                  ownerState: (0, bm.Z)({}, t.ownerState, n),
                });
          })(n, (0, bm.Z)({}, u, { ref: d }), i);
        return f;
      }
      var jM = n(3199),
        XM = n(7602),
        qM = n(4164),
        YM = !1,
        KM = "unmounted",
        $M = "exited",
        JM = "entering",
        QM = "entered",
        eE = "exiting",
        tE = (function (e) {
          function t(t, n) {
            var r;
            r = e.call(this, t, n) || this;
            var i,
              a = n && !n.isMounting ? t.enter : t.appear;
            return (
              (r.appearStatus = null),
              t.in
                ? a
                  ? ((i = $M), (r.appearStatus = JM))
                  : (i = QM)
                : (i = t.unmountOnExit || t.mountOnEnter ? KM : $M),
              (r.state = { status: i }),
              (r.nextCallback = null),
              r
            );
          }
          sS(t, e),
            (t.getDerivedStateFromProps = function (e, t) {
              return e.in && t.status === KM ? { status: $M } : null;
            });
          var n = t.prototype;
          return (
            (n.componentDidMount = function () {
              this.updateStatus(!0, this.appearStatus);
            }),
            (n.componentDidUpdate = function (e) {
              var t = null;
              if (e !== this.props) {
                var n = this.state.status;
                this.props.in
                  ? n !== JM && n !== QM && (t = JM)
                  : (n !== JM && n !== QM) || (t = eE);
              }
              this.updateStatus(!1, t);
            }),
            (n.componentWillUnmount = function () {
              this.cancelNextCallback();
            }),
            (n.getTimeouts = function () {
              var e,
                t,
                n,
                r = this.props.timeout;
              return (
                (e = t = n = r),
                null != r &&
                  "number" !== typeof r &&
                  ((e = r.exit),
                  (t = r.enter),
                  (n = void 0 !== r.appear ? r.appear : t)),
                { exit: e, enter: t, appear: n }
              );
            }),
            (n.updateStatus = function (e, t) {
              if ((void 0 === e && (e = !1), null !== t))
                if ((this.cancelNextCallback(), t === JM)) {
                  if (this.props.unmountOnExit || this.props.mountOnEnter) {
                    var n = this.props.nodeRef
                      ? this.props.nodeRef.current
                      : qM.findDOMNode(this);
                    n &&
                      (function (e) {
                        e.scrollTop;
                      })(n);
                  }
                  this.performEnter(e);
                } else this.performExit();
              else
                this.props.unmountOnExit &&
                  this.state.status === $M &&
                  this.setState({ status: KM });
            }),
            (n.performEnter = function (e) {
              var t = this,
                n = this.props.enter,
                r = this.context ? this.context.isMounting : e,
                i = this.props.nodeRef ? [r] : [qM.findDOMNode(this), r],
                a = i[0],
                o = i[1],
                s = this.getTimeouts(),
                l = r ? s.appear : s.enter;
              (!e && !n) || YM
                ? this.safeSetState({ status: QM }, function () {
                    t.props.onEntered(a);
                  })
                : (this.props.onEnter(a, o),
                  this.safeSetState({ status: JM }, function () {
                    t.props.onEntering(a, o),
                      t.onTransitionEnd(l, function () {
                        t.safeSetState({ status: QM }, function () {
                          t.props.onEntered(a, o);
                        });
                      });
                  }));
            }),
            (n.performExit = function () {
              var e = this,
                t = this.props.exit,
                n = this.getTimeouts(),
                r = this.props.nodeRef ? void 0 : qM.findDOMNode(this);
              t && !YM
                ? (this.props.onExit(r),
                  this.safeSetState({ status: eE }, function () {
                    e.props.onExiting(r),
                      e.onTransitionEnd(n.exit, function () {
                        e.safeSetState({ status: $M }, function () {
                          e.props.onExited(r);
                        });
                      });
                  }))
                : this.safeSetState({ status: $M }, function () {
                    e.props.onExited(r);
                  });
            }),
            (n.cancelNextCallback = function () {
              null !== this.nextCallback &&
                (this.nextCallback.cancel(), (this.nextCallback = null));
            }),
            (n.safeSetState = function (e, t) {
              (t = this.setNextCallback(t)), this.setState(e, t);
            }),
            (n.setNextCallback = function (e) {
              var t = this,
                n = !0;
              return (
                (this.nextCallback = function (r) {
                  n && ((n = !1), (t.nextCallback = null), e(r));
                }),
                (this.nextCallback.cancel = function () {
                  n = !1;
                }),
                this.nextCallback
              );
            }),
            (n.onTransitionEnd = function (e, t) {
              this.setNextCallback(t);
              var n = this.props.nodeRef
                  ? this.props.nodeRef.current
                  : qM.findDOMNode(this),
                r = null == e && !this.props.addEndListener;
              if (n && !r) {
                if (this.props.addEndListener) {
                  var i = this.props.nodeRef
                      ? [this.nextCallback]
                      : [n, this.nextCallback],
                    a = i[0],
                    o = i[1];
                  this.props.addEndListener(a, o);
                }
                null != e && setTimeout(this.nextCallback, e);
              } else setTimeout(this.nextCallback, 0);
            }),
            (n.render = function () {
              var e = this.state.status;
              if (e === KM) return null;
              var t = this.props,
                n = t.children,
                r =
                  (t.in,
                  t.mountOnEnter,
                  t.unmountOnExit,
                  t.appear,
                  t.enter,
                  t.exit,
                  t.timeout,
                  t.addEndListener,
                  t.onEnter,
                  t.onEntering,
                  t.onEntered,
                  t.onExit,
                  t.onExiting,
                  t.onExited,
                  t.nodeRef,
                  (0, o.Z)(t, [
                    "children",
                    "in",
                    "mountOnEnter",
                    "unmountOnExit",
                    "appear",
                    "enter",
                    "exit",
                    "timeout",
                    "addEndListener",
                    "onEnter",
                    "onEntering",
                    "onEntered",
                    "onExit",
                    "onExiting",
                    "onExited",
                    "nodeRef",
                  ]));
              return a.createElement(
                lS.Provider,
                { value: null },
                "function" === typeof n
                  ? n(e, r)
                  : a.cloneElement(a.Children.only(n), r)
              );
            }),
            t
          );
        })(a.Component);
      function nE() {}
      (tE.contextType = lS),
        (tE.propTypes = {}),
        (tE.defaultProps = {
          in: !1,
          mountOnEnter: !1,
          unmountOnExit: !1,
          appear: !1,
          enter: !0,
          exit: !0,
          onEnter: nE,
          onEntering: nE,
          onEntered: nE,
          onExit: nE,
          onExiting: nE,
          onExited: nE,
        }),
        (tE.UNMOUNTED = KM),
        (tE.EXITED = $M),
        (tE.ENTERING = JM),
        (tE.ENTERED = QM),
        (tE.EXITING = eE);
      var rE = tE,
        iE = function (e) {
          return e.scrollTop;
        };
      function aE(e, t) {
        var n,
          r,
          i = e.timeout,
          a = e.easing,
          o = e.style,
          s = void 0 === o ? {} : o;
        return {
          duration:
            null != (n = s.transitionDuration)
              ? n
              : "number" === typeof i
              ? i
              : i[t.mode] || 0,
          easing:
            null != (r = s.transitionTimingFunction)
              ? r
              : "object" === typeof a
              ? a[t.mode]
              : a,
          delay: s.transitionDelay,
        };
      }
      var oE = [
        "addEndListener",
        "appear",
        "children",
        "easing",
        "in",
        "onEnter",
        "onEntered",
        "onEntering",
        "onExit",
        "onExited",
        "onExiting",
        "style",
        "timeout",
        "TransitionComponent",
      ];
      function sE(e) {
        return "scale(".concat(e, ", ").concat(Math.pow(e, 2), ")");
      }
      var lE = {
          entering: { opacity: 1, transform: sE(1) },
          entered: { opacity: 1, transform: "none" },
        },
        uE =
          "undefined" !== typeof navigator &&
          /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) &&
          /(os |version\/)15(.|_)4/i.test(navigator.userAgent),
        cE = a.forwardRef(function (e, t) {
          var n = e.addEndListener,
            r = e.appear,
            i = void 0 === r || r,
            s = e.children,
            l = e.easing,
            u = e.in,
            c = e.onEnter,
            d = e.onEntered,
            f = e.onEntering,
            h = e.onExit,
            p = e.onExited,
            v = e.onExiting,
            m = e.style,
            g = e.timeout,
            y = void 0 === g ? "auto" : g,
            b = e.TransitionComponent,
            _ = void 0 === b ? rE : b,
            x = (0, o.Z)(e, oE),
            S = a.useRef(),
            w = a.useRef(),
            M = Zw(),
            E = a.useRef(null),
            k = (0, rS.Z)(E, s.ref, t),
            T = function (e) {
              return function (t) {
                if (e) {
                  var n = E.current;
                  void 0 === t ? e(n) : e(n, t);
                }
              };
            },
            A = T(f),
            C = T(function (e, t) {
              iE(e);
              var n,
                r = aE({ style: m, timeout: y, easing: l }, { mode: "enter" }),
                i = r.duration,
                a = r.delay,
                o = r.easing;
              "auto" === y
                ? ((n = M.transitions.getAutoHeightDuration(e.clientHeight)),
                  (w.current = n))
                : (n = i),
                (e.style.transition = [
                  M.transitions.create("opacity", { duration: n, delay: a }),
                  M.transitions.create("transform", {
                    duration: uE ? n : 0.666 * n,
                    delay: a,
                    easing: o,
                  }),
                ].join(",")),
                c && c(e, t);
            }),
            P = T(d),
            R = T(v),
            L = T(function (e) {
              var t,
                n = aE({ style: m, timeout: y, easing: l }, { mode: "exit" }),
                r = n.duration,
                i = n.delay,
                a = n.easing;
              "auto" === y
                ? ((t = M.transitions.getAutoHeightDuration(e.clientHeight)),
                  (w.current = t))
                : (t = r),
                (e.style.transition = [
                  M.transitions.create("opacity", { duration: t, delay: i }),
                  M.transitions.create("transform", {
                    duration: uE ? t : 0.666 * t,
                    delay: uE ? i : i || 0.333 * t,
                    easing: a,
                  }),
                ].join(",")),
                (e.style.opacity = 0),
                (e.style.transform = sE(0.75)),
                h && h(e);
            }),
            I = T(p);
          return (
            a.useEffect(function () {
              return function () {
                clearTimeout(S.current);
              };
            }, []),
            (0, hg.jsx)(
              _,
              (0, bm.Z)(
                {
                  appear: i,
                  in: u,
                  nodeRef: E,
                  onEnter: C,
                  onEntered: P,
                  onEntering: A,
                  onExit: L,
                  onExited: I,
                  onExiting: R,
                  addEndListener: function (e) {
                    "auto" === y && (S.current = setTimeout(e, w.current || 0)),
                      n && n(E.current, e);
                  },
                  timeout: "auto" === y ? null : y,
                },
                x,
                {
                  children: function (e, t) {
                    return a.cloneElement(
                      s,
                      (0, bm.Z)(
                        {
                          style: (0, bm.Z)(
                            {
                              opacity: 0,
                              transform: sE(0.75),
                              visibility:
                                "exited" !== e || u ? void 0 : "hidden",
                            },
                            lE[e],
                            m,
                            s.props.style
                          ),
                          ref: k,
                        },
                        t
                      )
                    );
                  },
                }
              )
            )
          );
        });
      cE.muiSupportAuto = !0;
      var dE = cE,
        fE = n(9723),
        hE = n(8956),
        pE = n(8949),
        vE = n(5721),
        mE = n(2971);
      var gE = a.forwardRef(function (e, t) {
          var n = e.children,
            r = e.container,
            o = e.disablePortal,
            s = void 0 !== o && o,
            l = a.useState(null),
            u = (0, i.Z)(l, 2),
            c = u[0],
            d = u[1],
            f = (0, BM.Z)(a.isValidElement(n) ? n.ref : null, t);
          if (
            ((0, vE.Z)(
              function () {
                s ||
                  d(
                    (function (e) {
                      return "function" === typeof e ? e() : e;
                    })(r) || document.body
                  );
              },
              [r, s]
            ),
            (0, vE.Z)(
              function () {
                if (c && !s)
                  return (
                    (0, mE.Z)(t, c),
                    function () {
                      (0, mE.Z)(t, null);
                    }
                  );
              },
              [t, c, s]
            ),
            s)
          ) {
            if (a.isValidElement(n)) {
              var h = { ref: f };
              return a.cloneElement(n, h);
            }
            return (0, hg.jsx)(a.Fragment, { children: n });
          }
          return (0,
          hg.jsx)(a.Fragment, { children: c ? qM.createPortal(n, c) : c });
        }),
        yE = n(7979);
      function bE(e, t) {
        t
          ? e.setAttribute("aria-hidden", "true")
          : e.removeAttribute("aria-hidden");
      }
      function _E(e) {
        return parseInt((0, yE.Z)(e).getComputedStyle(e).paddingRight, 10) || 0;
      }
      function xE(e, t, n, i, a) {
        var o = [t, n].concat((0, r.Z)(i));
        [].forEach.call(e.children, function (e) {
          var t = -1 === o.indexOf(e),
            n = !(function (e) {
              var t =
                  -1 !==
                  [
                    "TEMPLATE",
                    "SCRIPT",
                    "STYLE",
                    "LINK",
                    "MAP",
                    "META",
                    "NOSCRIPT",
                    "PICTURE",
                    "COL",
                    "COLGROUP",
                    "PARAM",
                    "SLOT",
                    "SOURCE",
                    "TRACK",
                  ].indexOf(e.tagName),
                n =
                  "INPUT" === e.tagName && "hidden" === e.getAttribute("type");
              return t || n;
            })(e);
          t && n && bE(e, a);
        });
      }
      function SE(e, t) {
        var n = -1;
        return (
          e.some(function (e, r) {
            return !!t(e) && ((n = r), !0);
          }),
          n
        );
      }
      function wE(e, t) {
        var n = [],
          r = e.container;
        if (!t.disableScrollLock) {
          if (
            (function (e) {
              var t = (0, fE.Z)(e);
              return t.body === e
                ? (0, yE.Z)(e).innerWidth > t.documentElement.clientWidth
                : e.scrollHeight > e.clientHeight;
            })(r)
          ) {
            var i = LM((0, fE.Z)(r));
            n.push({
              value: r.style.paddingRight,
              property: "padding-right",
              el: r,
            }),
              (r.style.paddingRight = "".concat(_E(r) + i, "px"));
            var a = (0, fE.Z)(r).querySelectorAll(".mui-fixed");
            [].forEach.call(a, function (e) {
              n.push({
                value: e.style.paddingRight,
                property: "padding-right",
                el: e,
              }),
                (e.style.paddingRight = "".concat(_E(e) + i, "px"));
            });
          }
          var o;
          if (r.parentNode instanceof DocumentFragment) o = (0, fE.Z)(r).body;
          else {
            var s = r.parentElement,
              l = (0, yE.Z)(r);
            o =
              "HTML" === (null == s ? void 0 : s.nodeName) &&
              "scroll" === l.getComputedStyle(s).overflowY
                ? s
                : r;
          }
          n.push(
            { value: o.style.overflow, property: "overflow", el: o },
            { value: o.style.overflowX, property: "overflow-x", el: o },
            { value: o.style.overflowY, property: "overflow-y", el: o }
          ),
            (o.style.overflow = "hidden");
        }
        return function () {
          n.forEach(function (e) {
            var t = e.value,
              n = e.el,
              r = e.property;
            t ? n.style.setProperty(r, t) : n.style.removeProperty(r);
          });
        };
      }
      var ME = (function () {
          function e() {
            p(this, e),
              (this.containers = void 0),
              (this.modals = void 0),
              (this.modals = []),
              (this.containers = []);
          }
          return (
            g(e, [
              {
                key: "add",
                value: function (e, t) {
                  var n = this.modals.indexOf(e);
                  if (-1 !== n) return n;
                  (n = this.modals.length),
                    this.modals.push(e),
                    e.modalRef && bE(e.modalRef, !1);
                  var r = (function (e) {
                    var t = [];
                    return (
                      [].forEach.call(e.children, function (e) {
                        "true" === e.getAttribute("aria-hidden") && t.push(e);
                      }),
                      t
                    );
                  })(t);
                  xE(t, e.mount, e.modalRef, r, !0);
                  var i = SE(this.containers, function (e) {
                    return e.container === t;
                  });
                  return -1 !== i
                    ? (this.containers[i].modals.push(e), n)
                    : (this.containers.push({
                        modals: [e],
                        container: t,
                        restore: null,
                        hiddenSiblings: r,
                      }),
                      n);
                },
              },
              {
                key: "mount",
                value: function (e, t) {
                  var n = SE(this.containers, function (t) {
                      return -1 !== t.modals.indexOf(e);
                    }),
                    r = this.containers[n];
                  r.restore || (r.restore = wE(r, t));
                },
              },
              {
                key: "remove",
                value: function (e) {
                  var t =
                      !(arguments.length > 1 && void 0 !== arguments[1]) ||
                      arguments[1],
                    n = this.modals.indexOf(e);
                  if (-1 === n) return n;
                  var r = SE(this.containers, function (t) {
                      return -1 !== t.modals.indexOf(e);
                    }),
                    i = this.containers[r];
                  if (
                    (i.modals.splice(i.modals.indexOf(e), 1),
                    this.modals.splice(n, 1),
                    0 === i.modals.length)
                  )
                    i.restore && i.restore(),
                      e.modalRef && bE(e.modalRef, t),
                      xE(
                        i.container,
                        e.mount,
                        e.modalRef,
                        i.hiddenSiblings,
                        !1
                      ),
                      this.containers.splice(r, 1);
                  else {
                    var a = i.modals[i.modals.length - 1];
                    a.modalRef && bE(a.modalRef, !1);
                  }
                  return n;
                },
              },
              {
                key: "isTopModal",
                value: function (e) {
                  return (
                    this.modals.length > 0 &&
                    this.modals[this.modals.length - 1] === e
                  );
                },
              },
            ]),
            e
          );
        })(),
        EE = [
          "input",
          "select",
          "textarea",
          "a[href]",
          "button",
          "[tabindex]",
          "audio[controls]",
          "video[controls]",
          '[contenteditable]:not([contenteditable="false"])',
        ].join(",");
      function kE(e) {
        var t = [],
          n = [];
        return (
          Array.from(e.querySelectorAll(EE)).forEach(function (e, r) {
            var i = (function (e) {
              var t = parseInt(e.getAttribute("tabindex") || "", 10);
              return Number.isNaN(t)
                ? "true" === e.contentEditable ||
                  (("AUDIO" === e.nodeName ||
                    "VIDEO" === e.nodeName ||
                    "DETAILS" === e.nodeName) &&
                    null === e.getAttribute("tabindex"))
                  ? 0
                  : e.tabIndex
                : t;
            })(e);
            -1 !== i &&
              (function (e) {
                return !(
                  e.disabled ||
                  ("INPUT" === e.tagName && "hidden" === e.type) ||
                  (function (e) {
                    if ("INPUT" !== e.tagName || "radio" !== e.type) return !1;
                    if (!e.name) return !1;
                    var t = function (t) {
                        return e.ownerDocument.querySelector(
                          'input[type="radio"]'.concat(t)
                        );
                      },
                      n = t('[name="'.concat(e.name, '"]:checked'));
                    return (
                      n || (n = t('[name="'.concat(e.name, '"]'))), n !== e
                    );
                  })(e)
                );
              })(e) &&
              (0 === i
                ? t.push(e)
                : n.push({ documentOrder: r, tabIndex: i, node: e }));
          }),
          n
            .sort(function (e, t) {
              return e.tabIndex === t.tabIndex
                ? e.documentOrder - t.documentOrder
                : e.tabIndex - t.tabIndex;
            })
            .map(function (e) {
              return e.node;
            })
            .concat(t)
        );
      }
      function TE() {
        return !0;
      }
      var AE = function (e) {
        var t = e.children,
          n = e.disableAutoFocus,
          r = void 0 !== n && n,
          i = e.disableEnforceFocus,
          o = void 0 !== i && i,
          s = e.disableRestoreFocus,
          l = void 0 !== s && s,
          u = e.getTabbable,
          c = void 0 === u ? kE : u,
          d = e.isEnabled,
          f = void 0 === d ? TE : d,
          h = e.open,
          p = a.useRef(!1),
          v = a.useRef(null),
          m = a.useRef(null),
          g = a.useRef(null),
          y = a.useRef(null),
          b = a.useRef(!1),
          _ = a.useRef(null),
          x = (0, BM.Z)(t.ref, _),
          S = a.useRef(null);
        a.useEffect(
          function () {
            h && _.current && (b.current = !r);
          },
          [r, h]
        ),
          a.useEffect(
            function () {
              if (h && _.current) {
                var e = (0, fE.Z)(_.current);
                return (
                  _.current.contains(e.activeElement) ||
                    (_.current.hasAttribute("tabIndex") ||
                      _.current.setAttribute("tabIndex", "-1"),
                    b.current && _.current.focus()),
                  function () {
                    l ||
                      (g.current &&
                        g.current.focus &&
                        ((p.current = !0), g.current.focus()),
                      (g.current = null));
                  }
                );
              }
            },
            [h]
          ),
          a.useEffect(
            function () {
              if (h && _.current) {
                var e = (0, fE.Z)(_.current),
                  t = function (t) {
                    var n = _.current;
                    if (null !== n)
                      if (e.hasFocus() && !o && f() && !p.current) {
                        if (!n.contains(e.activeElement)) {
                          if (
                            (t && y.current !== t.target) ||
                            e.activeElement !== y.current
                          )
                            y.current = null;
                          else if (null !== y.current) return;
                          if (!b.current) return;
                          var r = [];
                          if (
                            ((e.activeElement !== v.current &&
                              e.activeElement !== m.current) ||
                              (r = c(_.current)),
                            r.length > 0)
                          ) {
                            var i,
                              a,
                              s = Boolean(
                                (null == (i = S.current)
                                  ? void 0
                                  : i.shiftKey) &&
                                  "Tab" ===
                                    (null == (a = S.current) ? void 0 : a.key)
                              ),
                              l = r[0],
                              u = r[r.length - 1];
                            "string" !== typeof l &&
                              "string" !== typeof u &&
                              (s ? u.focus() : l.focus());
                          } else n.focus();
                        }
                      } else p.current = !1;
                  },
                  n = function (t) {
                    (S.current = t),
                      !o &&
                        f() &&
                        "Tab" === t.key &&
                        e.activeElement === _.current &&
                        t.shiftKey &&
                        ((p.current = !0), m.current && m.current.focus());
                  };
                e.addEventListener("focusin", t),
                  e.addEventListener("keydown", n, !0);
                var r = setInterval(function () {
                  e.activeElement &&
                    "BODY" === e.activeElement.tagName &&
                    t(null);
                }, 50);
                return function () {
                  clearInterval(r),
                    e.removeEventListener("focusin", t),
                    e.removeEventListener("keydown", n, !0);
                };
              }
            },
            [r, o, l, f, h, c]
          );
        var w = function (e) {
          null === g.current && (g.current = e.relatedTarget), (b.current = !0);
        };
        return (0, hg.jsxs)(a.Fragment, {
          children: [
            (0, hg.jsx)("div", {
              tabIndex: h ? 0 : -1,
              onFocus: w,
              ref: v,
              "data-testid": "sentinelStart",
            }),
            a.cloneElement(t, {
              ref: x,
              onFocus: function (e) {
                null === g.current && (g.current = e.relatedTarget),
                  (b.current = !0),
                  (y.current = e.target);
                var n = t.props.onFocus;
                n && n(e);
              },
            }),
            (0, hg.jsx)("div", {
              tabIndex: h ? 0 : -1,
              onFocus: w,
              ref: m,
              "data-testid": "sentinelEnd",
            }),
          ],
        });
      };
      function CE(e) {
        return (0, Jx.Z)("MuiModal", e);
      }
      (0, $x.Z)("MuiModal", ["root", "hidden", "backdrop"]);
      var PE = { disableDefaultClasses: !1 },
        RE = a.createContext(PE);
      var LE = [
          "children",
          "closeAfterTransition",
          "container",
          "disableAutoFocus",
          "disableEnforceFocus",
          "disableEscapeKeyDown",
          "disablePortal",
          "disableRestoreFocus",
          "disableScrollLock",
          "hideBackdrop",
          "keepMounted",
          "manager",
          "onBackdropClick",
          "onClose",
          "onKeyDown",
          "open",
          "onTransitionEnter",
          "onTransitionExited",
          "slotProps",
          "slots",
        ],
        IE = function (e) {
          var t = e.open,
            n = e.exited,
            r = { root: ["root", !t && n && "hidden"], backdrop: ["backdrop"] };
          return (0, qx.Z)(
            r,
            (function (e) {
              var t = a.useContext(RE).disableDefaultClasses;
              return function (n) {
                return t ? "" : e(n);
              };
            })(CE)
          );
        };
      var NE = new ME(),
        OE = a.forwardRef(function (e, t) {
          var n,
            r,
            s = e.children,
            l = e.closeAfterTransition,
            u = void 0 !== l && l,
            c = e.container,
            d = e.disableAutoFocus,
            f = void 0 !== d && d,
            h = e.disableEnforceFocus,
            p = void 0 !== h && h,
            v = e.disableEscapeKeyDown,
            m = void 0 !== v && v,
            g = e.disablePortal,
            y = void 0 !== g && g,
            b = e.disableRestoreFocus,
            _ = void 0 !== b && b,
            x = e.disableScrollLock,
            S = void 0 !== x && x,
            w = e.hideBackdrop,
            M = void 0 !== w && w,
            E = e.keepMounted,
            k = void 0 !== E && E,
            T = e.manager,
            A = void 0 === T ? NE : T,
            C = e.onBackdropClick,
            P = e.onClose,
            R = e.onKeyDown,
            L = e.open,
            I = e.onTransitionEnter,
            N = e.onTransitionExited,
            O = e.slotProps,
            D = void 0 === O ? {} : O,
            U = e.slots,
            z = void 0 === U ? {} : U,
            F = (0, o.Z)(e, LE),
            B = A,
            Z = a.useState(!L),
            H = (0, i.Z)(Z, 2),
            V = H[0],
            G = H[1],
            W = a.useRef({}),
            j = a.useRef(null),
            X = a.useRef(null),
            q = (0, BM.Z)(X, t),
            Y = (function (e) {
              return !!e && e.props.hasOwnProperty("in");
            })(s),
            K = null == (n = e["aria-hidden"]) || n,
            $ = function () {
              return (
                (W.current.modalRef = X.current),
                (W.current.mountNode = j.current),
                W.current
              );
            },
            J = function () {
              B.mount($(), { disableScrollLock: S }),
                X.current && (X.current.scrollTop = 0);
            },
            Q = (0, hE.Z)(function () {
              var e =
                (function (e) {
                  return "function" === typeof e ? e() : e;
                })(c) || (0, fE.Z)(j.current).body;
              B.add($(), e), X.current && J();
            }),
            ee = a.useCallback(
              function () {
                return B.isTopModal($());
              },
              [B]
            ),
            te = (0, hE.Z)(function (e) {
              (j.current = e),
                e && X.current && (L && ee() ? J() : bE(X.current, K));
            }),
            ne = a.useCallback(
              function () {
                B.remove($(), K);
              },
              [B, K]
            );
          a.useEffect(
            function () {
              return function () {
                ne();
              };
            },
            [ne]
          ),
            a.useEffect(
              function () {
                L ? Q() : (Y && u) || ne();
              },
              [L, ne, Y, u, Q]
            );
          var re = (0, bm.Z)({}, e, {
              closeAfterTransition: u,
              disableAutoFocus: f,
              disableEnforceFocus: p,
              disableEscapeKeyDown: m,
              disablePortal: y,
              disableRestoreFocus: _,
              disableScrollLock: S,
              exited: V,
              hideBackdrop: M,
              keepMounted: k,
            }),
            ie = IE(re),
            ae = {};
          void 0 === s.props.tabIndex && (ae.tabIndex = "-1"),
            Y &&
              ((ae.onEnter = (0, pE.Z)(function () {
                G(!1), I && I();
              }, s.props.onEnter)),
              (ae.onExited = (0, pE.Z)(function () {
                G(!0), N && N(), u && ne();
              }, s.props.onExited)));
          var oe = null != (r = z.root) ? r : "div",
            se = WM({
              elementType: oe,
              externalSlotProps: D.root,
              externalForwardedProps: F,
              additionalProps: {
                ref: q,
                role: "presentation",
                onKeyDown: function (e) {
                  R && R(e),
                    "Escape" === e.key &&
                      ee() &&
                      (m || (e.stopPropagation(), P && P(e, "escapeKeyDown")));
                },
              },
              className: ie.root,
              ownerState: re,
            }),
            le = z.backdrop,
            ue = WM({
              elementType: le,
              externalSlotProps: D.backdrop,
              additionalProps: {
                "aria-hidden": !0,
                onClick: function (e) {
                  e.target === e.currentTarget &&
                    (C && C(e), P && P(e, "backdropClick"));
                },
                open: L,
              },
              className: ie.backdrop,
              ownerState: re,
            });
          return k || L || (Y && !V)
            ? (0, hg.jsx)(gE, {
                ref: te,
                container: c,
                disablePortal: y,
                children: (0, hg.jsxs)(
                  oe,
                  (0, bm.Z)({}, se, {
                    children: [
                      !M && le ? (0, hg.jsx)(le, (0, bm.Z)({}, ue)) : null,
                      (0, hg.jsx)(AE, {
                        disableEnforceFocus: p,
                        disableAutoFocus: f,
                        disableRestoreFocus: _,
                        isEnabled: ee,
                        open: L,
                        children: a.cloneElement(s, ae),
                      }),
                    ],
                  })
                ),
              })
            : null;
        }),
        DE = [
          "addEndListener",
          "appear",
          "children",
          "easing",
          "in",
          "onEnter",
          "onEntered",
          "onEntering",
          "onExit",
          "onExited",
          "onExiting",
          "style",
          "timeout",
          "TransitionComponent",
        ],
        UE = { entering: { opacity: 1 }, entered: { opacity: 1 } },
        zE = a.forwardRef(function (e, t) {
          var n = Zw(),
            r = {
              enter: n.transitions.duration.enteringScreen,
              exit: n.transitions.duration.leavingScreen,
            },
            i = e.addEndListener,
            s = e.appear,
            l = void 0 === s || s,
            u = e.children,
            c = e.easing,
            d = e.in,
            f = e.onEnter,
            h = e.onEntered,
            p = e.onEntering,
            v = e.onExit,
            m = e.onExited,
            g = e.onExiting,
            y = e.style,
            b = e.timeout,
            _ = void 0 === b ? r : b,
            x = e.TransitionComponent,
            S = void 0 === x ? rE : x,
            w = (0, o.Z)(e, DE),
            M = a.useRef(null),
            E = (0, rS.Z)(M, u.ref, t),
            k = function (e) {
              return function (t) {
                if (e) {
                  var n = M.current;
                  void 0 === t ? e(n) : e(n, t);
                }
              };
            },
            T = k(p),
            A = k(function (e, t) {
              iE(e);
              var r = aE(
                { style: y, timeout: _, easing: c },
                { mode: "enter" }
              );
              (e.style.webkitTransition = n.transitions.create("opacity", r)),
                (e.style.transition = n.transitions.create("opacity", r)),
                f && f(e, t);
            }),
            C = k(h),
            P = k(g),
            R = k(function (e) {
              var t = aE({ style: y, timeout: _, easing: c }, { mode: "exit" });
              (e.style.webkitTransition = n.transitions.create("opacity", t)),
                (e.style.transition = n.transitions.create("opacity", t)),
                v && v(e);
            }),
            L = k(m);
          return (0, hg.jsx)(
            S,
            (0, bm.Z)(
              {
                appear: l,
                in: d,
                nodeRef: M,
                onEnter: A,
                onEntered: C,
                onEntering: T,
                onExit: R,
                onExited: L,
                onExiting: P,
                addEndListener: function (e) {
                  i && i(M.current, e);
                },
                timeout: _,
              },
              w,
              {
                children: function (e, t) {
                  return a.cloneElement(
                    u,
                    (0, bm.Z)(
                      {
                        style: (0, bm.Z)(
                          {
                            opacity: 0,
                            visibility: "exited" !== e || d ? void 0 : "hidden",
                          },
                          UE[e],
                          y,
                          u.props.style
                        ),
                        ref: E,
                      },
                      t
                    )
                  );
                },
              }
            )
          );
        }),
        FE = zE;
      function BE(e) {
        return (0, Jx.Z)("MuiBackdrop", e);
      }
      (0, $x.Z)("MuiBackdrop", ["root", "invisible"]);
      var ZE = [
          "children",
          "className",
          "component",
          "components",
          "componentsProps",
          "invisible",
          "open",
          "slotProps",
          "slots",
          "TransitionComponent",
          "transitionDuration",
        ],
        HE = (0, Yx.ZP)("div", {
          name: "MuiBackdrop",
          slot: "Root",
          overridesResolver: function (e, t) {
            var n = e.ownerState;
            return [t.root, n.invisible && t.invisible];
          },
        })(function (e) {
          var t = e.ownerState;
          return (0,
          bm.Z)({ position: "fixed", display: "flex", alignItems: "center", justifyContent: "center", right: 0, bottom: 0, top: 0, left: 0, backgroundColor: "rgba(0, 0, 0, 0.5)", WebkitTapHighlightColor: "transparent" }, t.invisible && { backgroundColor: "transparent" });
        }),
        VE = a.forwardRef(function (e, t) {
          var n,
            r,
            i,
            a = (0, Kx.Z)({ props: e, name: "MuiBackdrop" }),
            s = a.children,
            l = a.className,
            u = a.component,
            c = void 0 === u ? "div" : u,
            d = a.components,
            f = void 0 === d ? {} : d,
            h = a.componentsProps,
            p = void 0 === h ? {} : h,
            v = a.invisible,
            m = void 0 !== v && v,
            g = a.open,
            y = a.slotProps,
            b = void 0 === y ? {} : y,
            _ = a.slots,
            x = void 0 === _ ? {} : _,
            S = a.TransitionComponent,
            w = void 0 === S ? FE : S,
            M = a.transitionDuration,
            E = (0, o.Z)(a, ZE),
            k = (0, bm.Z)({}, a, { component: c, invisible: m }),
            T = (function (e) {
              var t = e.classes,
                n = { root: ["root", e.invisible && "invisible"] };
              return (0, qx.Z)(n, BE, t);
            })(k),
            A = null != (n = b.root) ? n : p.root;
          return (0,
          hg.jsx)(w, (0, bm.Z)({ in: g, timeout: M }, E, { children: (0, hg.jsx)(HE, (0, bm.Z)({ "aria-hidden": !0 }, A, { as: null != (r = null != (i = x.root) ? i : f.Root) ? r : c, className: (0, Xx.Z)(T.root, l, null == A ? void 0 : A.className), ownerState: (0, bm.Z)({}, k, null == A ? void 0 : A.ownerState), classes: T, ref: t, children: s })) }));
        }),
        GE = [
          "BackdropComponent",
          "BackdropProps",
          "classes",
          "className",
          "closeAfterTransition",
          "children",
          "container",
          "component",
          "components",
          "componentsProps",
          "disableAutoFocus",
          "disableEnforceFocus",
          "disableEscapeKeyDown",
          "disablePortal",
          "disableRestoreFocus",
          "disableScrollLock",
          "hideBackdrop",
          "keepMounted",
          "onBackdropClick",
          "onClose",
          "open",
          "slotProps",
          "slots",
          "theme",
        ],
        WE = (0, Yx.ZP)("div", {
          name: "MuiModal",
          slot: "Root",
          overridesResolver: function (e, t) {
            var n = e.ownerState;
            return [t.root, !n.open && n.exited && t.hidden];
          },
        })(function (e) {
          var t = e.theme,
            n = e.ownerState;
          return (0,
          bm.Z)({ position: "fixed", zIndex: (t.vars || t).zIndex.modal, right: 0, bottom: 0, top: 0, left: 0 }, !n.open && n.exited && { visibility: "hidden" });
        }),
        jE = (0, Yx.ZP)(VE, {
          name: "MuiModal",
          slot: "Backdrop",
          overridesResolver: function (e, t) {
            return t.backdrop;
          },
        })({ zIndex: -1 }),
        XE = a.forwardRef(function (e, t) {
          var n,
            r,
            s,
            l,
            u,
            c,
            d = (0, Kx.Z)({ name: "MuiModal", props: e }),
            f = d.BackdropComponent,
            h = void 0 === f ? jE : f,
            p = d.BackdropProps,
            v = d.classes,
            m = d.className,
            g = d.closeAfterTransition,
            y = void 0 !== g && g,
            b = d.children,
            _ = d.container,
            x = d.component,
            S = d.components,
            w = void 0 === S ? {} : S,
            M = d.componentsProps,
            E = void 0 === M ? {} : M,
            k = d.disableAutoFocus,
            T = void 0 !== k && k,
            A = d.disableEnforceFocus,
            C = void 0 !== A && A,
            P = d.disableEscapeKeyDown,
            R = void 0 !== P && P,
            L = d.disablePortal,
            I = void 0 !== L && L,
            N = d.disableRestoreFocus,
            O = void 0 !== N && N,
            D = d.disableScrollLock,
            U = void 0 !== D && D,
            z = d.hideBackdrop,
            F = void 0 !== z && z,
            B = d.keepMounted,
            Z = void 0 !== B && B,
            H = d.onBackdropClick,
            V = d.onClose,
            G = d.open,
            W = d.slotProps,
            j = d.slots,
            X = d.theme,
            q = (0, o.Z)(d, GE),
            Y = a.useState(!0),
            K = (0, i.Z)(Y, 2),
            $ = K[0],
            J = K[1],
            Q = {
              container: _,
              closeAfterTransition: y,
              disableAutoFocus: T,
              disableEnforceFocus: C,
              disableEscapeKeyDown: R,
              disablePortal: I,
              disableRestoreFocus: O,
              disableScrollLock: U,
              hideBackdrop: F,
              keepMounted: Z,
              onBackdropClick: H,
              onClose: V,
              open: G,
            },
            ee = (0, bm.Z)({}, d, Q, { exited: $ }),
            te =
              null !=
              (n = null != (r = null == j ? void 0 : j.root) ? r : w.Root)
                ? n
                : WE,
            ne =
              null !=
              (s =
                null != (l = null == j ? void 0 : j.backdrop) ? l : w.Backdrop)
                ? s
                : h,
            re = null != (u = null == W ? void 0 : W.root) ? u : E.root,
            ie = null != (c = null == W ? void 0 : W.backdrop) ? c : E.backdrop;
          return (0, hg.jsx)(
            OE,
            (0, bm.Z)(
              {
                slots: { root: te, backdrop: ne },
                slotProps: {
                  root: function () {
                    return (0, bm.Z)(
                      {},
                      VM(re, ee),
                      !rw(te) && { as: x, theme: X },
                      {
                        className: (0, Xx.Z)(
                          m,
                          null == re ? void 0 : re.className,
                          null == v ? void 0 : v.root,
                          !ee.open &&
                            ee.exited &&
                            (null == v ? void 0 : v.hidden)
                        ),
                      }
                    );
                  },
                  backdrop: function () {
                    return (0, bm.Z)({}, p, VM(ie, ee), {
                      className: (0, Xx.Z)(
                        null == ie ? void 0 : ie.className,
                        null == p ? void 0 : p.className,
                        null == v ? void 0 : v.backdrop
                      ),
                    });
                  },
                },
                onTransitionEnter: function () {
                  return J(!1);
                },
                onTransitionExited: function () {
                  return J(!0);
                },
                ref: t,
              },
              q,
              Q,
              { children: b }
            )
          );
        }),
        qE = function (e) {
          return (
            (e < 1 ? 5.11916 * Math.pow(e, 2) : 4.5 * Math.log(e + 1) + 2) / 100
          ).toFixed(2);
        };
      function YE(e) {
        return (0, Jx.Z)("MuiPaper", e);
      }
      (0, $x.Z)("MuiPaper", [
        "root",
        "rounded",
        "outlined",
        "elevation",
        "elevation0",
        "elevation1",
        "elevation2",
        "elevation3",
        "elevation4",
        "elevation5",
        "elevation6",
        "elevation7",
        "elevation8",
        "elevation9",
        "elevation10",
        "elevation11",
        "elevation12",
        "elevation13",
        "elevation14",
        "elevation15",
        "elevation16",
        "elevation17",
        "elevation18",
        "elevation19",
        "elevation20",
        "elevation21",
        "elevation22",
        "elevation23",
        "elevation24",
      ]);
      var KE = ["className", "component", "elevation", "square", "variant"],
        $E = (0, Yx.ZP)("div", {
          name: "MuiPaper",
          slot: "Root",
          overridesResolver: function (e, t) {
            var n = e.ownerState;
            return [
              t.root,
              t[n.variant],
              !n.square && t.rounded,
              "elevation" === n.variant && t["elevation".concat(n.elevation)],
            ];
          },
        })(function (e) {
          var t,
            n = e.theme,
            r = e.ownerState;
          return (0,
          bm.Z)({ backgroundColor: (n.vars || n).palette.background.paper, color: (n.vars || n).palette.text.primary, transition: n.transitions.create("box-shadow") }, !r.square && { borderRadius: n.shape.borderRadius }, "outlined" === r.variant && { border: "1px solid ".concat((n.vars || n).palette.divider) }, "elevation" === r.variant && (0, bm.Z)({ boxShadow: (n.vars || n).shadows[r.elevation] }, !n.vars && "dark" === n.palette.mode && { backgroundImage: "linear-gradient(".concat((0, iw.Fq)("#fff", qE(r.elevation)), ", ").concat((0, iw.Fq)("#fff", qE(r.elevation)), ")") }, n.vars && { backgroundImage: null == (t = n.vars.overlays) ? void 0 : t[r.elevation] }));
        }),
        JE = a.forwardRef(function (e, t) {
          var n = (0, Kx.Z)({ props: e, name: "MuiPaper" }),
            r = n.className,
            i = n.component,
            a = void 0 === i ? "div" : i,
            s = n.elevation,
            l = void 0 === s ? 1 : s,
            u = n.square,
            c = void 0 !== u && u,
            d = n.variant,
            f = void 0 === d ? "elevation" : d,
            h = (0, o.Z)(n, KE),
            p = (0, bm.Z)({}, n, {
              component: a,
              elevation: l,
              square: c,
              variant: f,
            }),
            v = (function (e) {
              var t = e.square,
                n = e.elevation,
                r = e.variant,
                i = e.classes,
                a = {
                  root: [
                    "root",
                    r,
                    !t && "rounded",
                    "elevation" === r && "elevation".concat(n),
                  ],
                };
              return (0, qx.Z)(a, YE, i);
            })(p);
          return (0,
          hg.jsx)($E, (0, bm.Z)({ as: a, ownerState: p, className: (0, Xx.Z)(v.root, r), ref: t }, h));
        });
      function QE(e) {
        return (0, Jx.Z)("MuiPopover", e);
      }
      (0, $x.Z)("MuiPopover", ["root", "paper"]);
      var ek = ["onEntering"],
        tk = [
          "action",
          "anchorEl",
          "anchorOrigin",
          "anchorPosition",
          "anchorReference",
          "children",
          "className",
          "container",
          "elevation",
          "marginThreshold",
          "open",
          "PaperProps",
          "slots",
          "slotProps",
          "transformOrigin",
          "TransitionComponent",
          "transitionDuration",
          "TransitionProps",
        ],
        nk = ["slotProps"];
      function rk(e, t) {
        var n = 0;
        return (
          "number" === typeof t
            ? (n = t)
            : "center" === t
            ? (n = e.height / 2)
            : "bottom" === t && (n = e.height),
          n
        );
      }
      function ik(e, t) {
        var n = 0;
        return (
          "number" === typeof t
            ? (n = t)
            : "center" === t
            ? (n = e.width / 2)
            : "right" === t && (n = e.width),
          n
        );
      }
      function ak(e) {
        return [e.horizontal, e.vertical]
          .map(function (e) {
            return "number" === typeof e ? "".concat(e, "px") : e;
          })
          .join(" ");
      }
      function ok(e) {
        return "function" === typeof e ? e() : e;
      }
      var sk = (0, Yx.ZP)(XE, {
          name: "MuiPopover",
          slot: "Root",
          overridesResolver: function (e, t) {
            return t.root;
          },
        })({}),
        lk = (0, Yx.ZP)(JE, {
          name: "MuiPopover",
          slot: "Paper",
          overridesResolver: function (e, t) {
            return t.paper;
          },
        })({
          position: "absolute",
          overflowY: "auto",
          overflowX: "hidden",
          minWidth: 16,
          minHeight: 16,
          maxWidth: "calc(100% - 32px)",
          maxHeight: "calc(100% - 32px)",
          outline: 0,
        }),
        uk = a.forwardRef(function (e, t) {
          var n,
            r,
            s,
            l = (0, Kx.Z)({ props: e, name: "MuiPopover" }),
            u = l.action,
            c = l.anchorEl,
            d = l.anchorOrigin,
            f = void 0 === d ? { vertical: "top", horizontal: "left" } : d,
            h = l.anchorPosition,
            p = l.anchorReference,
            v = void 0 === p ? "anchorEl" : p,
            m = l.children,
            g = l.className,
            y = l.container,
            b = l.elevation,
            _ = void 0 === b ? 8 : b,
            x = l.marginThreshold,
            S = void 0 === x ? 16 : x,
            w = l.open,
            M = l.PaperProps,
            E = void 0 === M ? {} : M,
            k = l.slots,
            T = l.slotProps,
            A = l.transformOrigin,
            C = void 0 === A ? { vertical: "top", horizontal: "left" } : A,
            P = l.TransitionComponent,
            R = void 0 === P ? dE : P,
            L = l.transitionDuration,
            I = void 0 === L ? "auto" : L,
            N = l.TransitionProps,
            O = (void 0 === N ? {} : N).onEntering,
            D = (0, o.Z)(l.TransitionProps, ek),
            U = (0, o.Z)(l, tk),
            z = null != (n = null == T ? void 0 : T.paper) ? n : E,
            F = a.useRef(),
            B = (0, rS.Z)(F, z.ref),
            Z = (0, bm.Z)({}, l, {
              anchorOrigin: f,
              anchorReference: v,
              elevation: _,
              marginThreshold: S,
              externalPaperSlotProps: z,
              transformOrigin: C,
              TransitionComponent: R,
              transitionDuration: I,
              TransitionProps: D,
            }),
            H = (function (e) {
              var t = e.classes;
              return (0, qx.Z)({ root: ["root"], paper: ["paper"] }, QE, t);
            })(Z),
            V = a.useCallback(
              function () {
                if ("anchorPosition" === v) return h;
                var e = ok(c),
                  t = (
                    e && 1 === e.nodeType ? e : (0, RM.Z)(F.current).body
                  ).getBoundingClientRect();
                return {
                  top: t.top + rk(t, f.vertical),
                  left: t.left + ik(t, f.horizontal),
                };
              },
              [c, f.horizontal, f.vertical, h, v]
            ),
            G = a.useCallback(
              function (e) {
                return {
                  vertical: rk(e, C.vertical),
                  horizontal: ik(e, C.horizontal),
                };
              },
              [C.horizontal, C.vertical]
            ),
            W = a.useCallback(
              function (e) {
                var t = { width: e.offsetWidth, height: e.offsetHeight },
                  n = G(t);
                if ("none" === v)
                  return { top: null, left: null, transformOrigin: ak(n) };
                var r = V(),
                  i = r.top - n.vertical,
                  a = r.left - n.horizontal,
                  o = i + t.height,
                  s = a + t.width,
                  l = (0, XM.Z)(ok(c)),
                  u = l.innerHeight - S,
                  d = l.innerWidth - S;
                if (i < S) {
                  var f = i - S;
                  (i -= f), (n.vertical += f);
                } else if (o > u) {
                  var h = o - u;
                  (i -= h), (n.vertical += h);
                }
                if (a < S) {
                  var p = a - S;
                  (a -= p), (n.horizontal += p);
                } else if (s > d) {
                  var m = s - d;
                  (a -= m), (n.horizontal += m);
                }
                return {
                  top: "".concat(Math.round(i), "px"),
                  left: "".concat(Math.round(a), "px"),
                  transformOrigin: ak(n),
                };
              },
              [c, v, V, G, S]
            ),
            j = a.useState(w),
            X = (0, i.Z)(j, 2),
            q = X[0],
            Y = X[1],
            K = a.useCallback(
              function () {
                var e = F.current;
                if (e) {
                  var t = W(e);
                  null !== t.top && (e.style.top = t.top),
                    null !== t.left && (e.style.left = t.left),
                    (e.style.transformOrigin = t.transformOrigin),
                    Y(!0);
                }
              },
              [W]
            );
          a.useEffect(function () {
            w && K();
          }),
            a.useImperativeHandle(
              u,
              function () {
                return w
                  ? {
                      updatePosition: function () {
                        K();
                      },
                    }
                  : null;
              },
              [w, K]
            ),
            a.useEffect(
              function () {
                if (w) {
                  var e = (0, jM.Z)(function () {
                      K();
                    }),
                    t = (0, XM.Z)(c);
                  return (
                    t.addEventListener("resize", e),
                    function () {
                      e.clear(), t.removeEventListener("resize", e);
                    }
                  );
                }
              },
              [c, w, K]
            );
          var $ = I;
          "auto" !== I || R.muiSupportAuto || ($ = void 0);
          var J = y || (c ? (0, RM.Z)(ok(c)).body : void 0),
            Q = null != (r = null == k ? void 0 : k.root) ? r : sk,
            ee = null != (s = null == k ? void 0 : k.paper) ? s : lk,
            te = WM({
              elementType: ee,
              externalSlotProps: (0, bm.Z)({}, z, {
                style: q ? z.style : (0, bm.Z)({}, z.style, { opacity: 0 }),
              }),
              additionalProps: { elevation: _, ref: B },
              ownerState: Z,
              className: (0, Xx.Z)(H.paper, null == z ? void 0 : z.className),
            }),
            ne = WM({
              elementType: Q,
              externalSlotProps: (null == T ? void 0 : T.root) || {},
              externalForwardedProps: U,
              additionalProps: {
                ref: t,
                slotProps: { backdrop: { invisible: !0 } },
                container: J,
                open: w,
              },
              ownerState: Z,
              className: (0, Xx.Z)(H.root, g),
            }),
            re = ne.slotProps,
            ie = (0, o.Z)(ne, nk);
          return (0, hg.jsx)(
            Q,
            (0, bm.Z)({}, ie, !rw(Q) && { slotProps: re }, {
              children: (0, hg.jsx)(
                R,
                (0, bm.Z)(
                  {
                    appear: !0,
                    in: w,
                    onEntering: function (e, t) {
                      O && O(e, t), K();
                    },
                    onExited: function () {
                      Y(!1);
                    },
                    timeout: $,
                  },
                  D,
                  {
                    children: (0, hg.jsx)(
                      ee,
                      (0, bm.Z)({}, te, { children: m })
                    ),
                  }
                )
              ),
            })
          );
        }),
        ck = uk;
      function dk(e) {
        return (0, Jx.Z)("MuiMenu", e);
      }
      (0, $x.Z)("MuiMenu", ["root", "paper", "list"]);
      var fk = ["onEntering"],
        hk = [
          "autoFocus",
          "children",
          "disableAutoFocusItem",
          "MenuListProps",
          "onClose",
          "open",
          "PaperProps",
          "PopoverClasses",
          "transitionDuration",
          "TransitionProps",
          "variant",
        ],
        pk = { vertical: "top", horizontal: "right" },
        vk = { vertical: "top", horizontal: "left" },
        mk = (0, Yx.ZP)(ck, {
          shouldForwardProp: function (e) {
            return (0, Yx.FO)(e) || "classes" === e;
          },
          name: "MuiMenu",
          slot: "Root",
          overridesResolver: function (e, t) {
            return t.root;
          },
        })({}),
        gk = (0, Yx.ZP)(lk, {
          name: "MuiMenu",
          slot: "Paper",
          overridesResolver: function (e, t) {
            return t.paper;
          },
        })({
          maxHeight: "calc(100% - 96px)",
          WebkitOverflowScrolling: "touch",
        }),
        yk = (0, Yx.ZP)(FM, {
          name: "MuiMenu",
          slot: "List",
          overridesResolver: function (e, t) {
            return t.list;
          },
        })({ outline: 0 }),
        bk = a.forwardRef(function (e, t) {
          var n = (0, Kx.Z)({ props: e, name: "MuiMenu" }),
            r = n.autoFocus,
            i = void 0 === r || r,
            s = n.children,
            l = n.disableAutoFocusItem,
            u = void 0 !== l && l,
            c = n.MenuListProps,
            d = void 0 === c ? {} : c,
            f = n.onClose,
            h = n.open,
            p = n.PaperProps,
            v = void 0 === p ? {} : p,
            m = n.PopoverClasses,
            g = n.transitionDuration,
            y = void 0 === g ? "auto" : g,
            b = n.TransitionProps,
            _ = (void 0 === b ? {} : b).onEntering,
            x = n.variant,
            S = void 0 === x ? "selectedMenu" : x,
            w = (0, o.Z)(n.TransitionProps, fk),
            M = (0, o.Z)(n, hk),
            E = Zw(),
            k = "rtl" === E.direction,
            T = (0, bm.Z)({}, n, {
              autoFocus: i,
              disableAutoFocusItem: u,
              MenuListProps: d,
              onEntering: _,
              PaperProps: v,
              transitionDuration: y,
              TransitionProps: w,
              variant: S,
            }),
            A = (function (e) {
              var t = e.classes;
              return (0, qx.Z)(
                { root: ["root"], paper: ["paper"], list: ["list"] },
                dk,
                t
              );
            })(T),
            C = i && !u && h,
            P = a.useRef(null),
            R = -1;
          return (
            a.Children.map(s, function (e, t) {
              a.isValidElement(e) &&
                (e.props.disabled ||
                  ((("selectedMenu" === S && e.props.selected) || -1 === R) &&
                    (R = t)));
            }),
            (0, hg.jsx)(
              mk,
              (0, bm.Z)(
                {
                  onClose: f,
                  anchorOrigin: {
                    vertical: "bottom",
                    horizontal: k ? "right" : "left",
                  },
                  transformOrigin: k ? pk : vk,
                  slots: { paper: gk },
                  slotProps: {
                    paper: (0, bm.Z)({}, v, {
                      classes: (0, bm.Z)({}, v.classes, { root: A.paper }),
                    }),
                  },
                  className: A.root,
                  open: h,
                  ref: t,
                  transitionDuration: y,
                  TransitionProps: (0, bm.Z)(
                    {
                      onEntering: function (e, t) {
                        P.current && P.current.adjustStyleForScrollbar(e, E),
                          _ && _(e, t);
                      },
                    },
                    w
                  ),
                  ownerState: T,
                },
                M,
                {
                  classes: m,
                  children: (0, hg.jsx)(
                    yk,
                    (0, bm.Z)(
                      {
                        onKeyDown: function (e) {
                          "Tab" === e.key &&
                            (e.preventDefault(), f && f(e, "tabKeyDown"));
                        },
                        actions: P,
                        autoFocus: i && (-1 === R || u),
                        autoFocusItem: C,
                        variant: S,
                      },
                      d,
                      { className: (0, Xx.Z)(A.list, d.className), children: s }
                    )
                  ),
                }
              )
            )
          );
        });
      function _k(e) {
        return (0, Jx.Z)("MuiNativeSelect", e);
      }
      var xk = (0, $x.Z)("MuiNativeSelect", [
          "root",
          "select",
          "multiple",
          "filled",
          "outlined",
          "standard",
          "disabled",
          "icon",
          "iconOpen",
          "iconFilled",
          "iconOutlined",
          "iconStandard",
          "nativeInput",
          "error",
        ]),
        Sk = [
          "className",
          "disabled",
          "error",
          "IconComponent",
          "inputRef",
          "variant",
        ],
        wk = function (e) {
          var t,
            n = e.ownerState,
            r = e.theme;
          return (0, bm.Z)(
            ((t = {
              MozAppearance: "none",
              WebkitAppearance: "none",
              userSelect: "none",
              borderRadius: 0,
              cursor: "pointer",
              "&:focus": (0, bm.Z)(
                {},
                r.vars
                  ? {
                      backgroundColor: "rgba(".concat(
                        r.vars.palette.common.onBackgroundChannel,
                        " / 0.05)"
                      ),
                    }
                  : {
                      backgroundColor:
                        "light" === r.palette.mode
                          ? "rgba(0, 0, 0, 0.05)"
                          : "rgba(255, 255, 255, 0.05)",
                    },
                { borderRadius: 0 }
              ),
              "&::-ms-expand": { display: "none" },
            }),
            (0, l.Z)(t, "&.".concat(xk.disabled), { cursor: "default" }),
            (0, l.Z)(t, "&[multiple]", { height: "auto" }),
            (0, l.Z)(
              t,
              "&:not([multiple]) option, &:not([multiple]) optgroup",
              { backgroundColor: (r.vars || r).palette.background.paper }
            ),
            (0, l.Z)(t, "&&&", { paddingRight: 24, minWidth: 16 }),
            t),
            "filled" === n.variant && { "&&&": { paddingRight: 32 } },
            "outlined" === n.variant && {
              borderRadius: (r.vars || r).shape.borderRadius,
              "&:focus": { borderRadius: (r.vars || r).shape.borderRadius },
              "&&&": { paddingRight: 32 },
            }
          );
        },
        Mk = (0, Yx.ZP)("select", {
          name: "MuiNativeSelect",
          slot: "Select",
          shouldForwardProp: Yx.FO,
          overridesResolver: function (e, t) {
            var n = e.ownerState;
            return [
              t.select,
              t[n.variant],
              n.error && t.error,
              (0, l.Z)({}, "&.".concat(xk.multiple), t.multiple),
            ];
          },
        })(wk),
        Ek = function (e) {
          var t = e.ownerState,
            n = e.theme;
          return (0, bm.Z)(
            (0, l.Z)(
              {
                position: "absolute",
                right: 0,
                top: "calc(50% - .5em)",
                pointerEvents: "none",
                color: (n.vars || n).palette.action.active,
              },
              "&.".concat(xk.disabled),
              { color: (n.vars || n).palette.action.disabled }
            ),
            t.open && { transform: "rotate(180deg)" },
            "filled" === t.variant && { right: 7 },
            "outlined" === t.variant && { right: 7 }
          );
        },
        kk = (0, Yx.ZP)("svg", {
          name: "MuiNativeSelect",
          slot: "Icon",
          overridesResolver: function (e, t) {
            var n = e.ownerState;
            return [
              t.icon,
              n.variant && t["icon".concat((0, Tw.Z)(n.variant))],
              n.open && t.iconOpen,
            ];
          },
        })(Ek),
        Tk = a.forwardRef(function (e, t) {
          var n = e.className,
            r = e.disabled,
            i = e.error,
            s = e.IconComponent,
            l = e.inputRef,
            u = e.variant,
            c = void 0 === u ? "standard" : u,
            d = (0, o.Z)(e, Sk),
            f = (0, bm.Z)({}, e, { disabled: r, variant: c, error: i }),
            h = (function (e) {
              var t = e.classes,
                n = e.variant,
                r = e.disabled,
                i = e.multiple,
                a = e.open,
                o = {
                  select: [
                    "select",
                    n,
                    r && "disabled",
                    i && "multiple",
                    e.error && "error",
                  ],
                  icon: [
                    "icon",
                    "icon".concat((0, Tw.Z)(n)),
                    a && "iconOpen",
                    r && "disabled",
                  ],
                };
              return (0, qx.Z)(o, _k, t);
            })(f);
          return (0,
          hg.jsxs)(a.Fragment, { children: [(0, hg.jsx)(Mk, (0, bm.Z)({ ownerState: f, className: (0, Xx.Z)(h.select, n), disabled: r, ref: l || t }, d)), e.multiple ? null : (0, hg.jsx)(kk, { as: s, ownerState: f, className: h.icon })] });
        }),
        Ak = n(8744);
      function Ck(e) {
        return (0, Jx.Z)("MuiSelect", e);
      }
      var Pk,
        Rk = (0, $x.Z)("MuiSelect", [
          "select",
          "multiple",
          "filled",
          "outlined",
          "standard",
          "disabled",
          "focused",
          "icon",
          "iconOpen",
          "iconFilled",
          "iconOutlined",
          "iconStandard",
          "nativeInput",
          "error",
        ]),
        Lk = [
          "aria-describedby",
          "aria-label",
          "autoFocus",
          "autoWidth",
          "children",
          "className",
          "defaultOpen",
          "defaultValue",
          "disabled",
          "displayEmpty",
          "error",
          "IconComponent",
          "inputRef",
          "labelId",
          "MenuProps",
          "multiple",
          "name",
          "onBlur",
          "onChange",
          "onClose",
          "onFocus",
          "onOpen",
          "open",
          "readOnly",
          "renderValue",
          "SelectDisplayProps",
          "tabIndex",
          "type",
          "value",
          "variant",
        ],
        Ik = (0, Yx.ZP)("div", {
          name: "MuiSelect",
          slot: "Select",
          overridesResolver: function (e, t) {
            var n = e.ownerState;
            return [
              (0, l.Z)({}, "&.".concat(Rk.select), t.select),
              (0, l.Z)({}, "&.".concat(Rk.select), t[n.variant]),
              (0, l.Z)({}, "&.".concat(Rk.error), t.error),
              (0, l.Z)({}, "&.".concat(Rk.multiple), t.multiple),
            ];
          },
        })(
          wk,
          (0, l.Z)({}, "&.".concat(Rk.select), {
            height: "auto",
            minHeight: "1.4375em",
            textOverflow: "ellipsis",
            whiteSpace: "nowrap",
            overflow: "hidden",
          })
        ),
        Nk = (0, Yx.ZP)("svg", {
          name: "MuiSelect",
          slot: "Icon",
          overridesResolver: function (e, t) {
            var n = e.ownerState;
            return [
              t.icon,
              n.variant && t["icon".concat((0, Tw.Z)(n.variant))],
              n.open && t.iconOpen,
            ];
          },
        })(Ek),
        Ok = (0, Yx.ZP)("input", {
          shouldForwardProp: function (e) {
            return (0, Yx.Dz)(e) && "classes" !== e;
          },
          name: "MuiSelect",
          slot: "NativeInput",
          overridesResolver: function (e, t) {
            return t.nativeInput;
          },
        })({
          bottom: 0,
          left: 0,
          position: "absolute",
          opacity: 0,
          pointerEvents: "none",
          width: "100%",
          boxSizing: "border-box",
        });
      function Dk(e, t) {
        return "object" === typeof t && null !== t
          ? e === t
          : String(e) === String(t);
      }
      function Uk(e) {
        return null == e || ("string" === typeof e && !e.trim());
      }
      var zk = a.forwardRef(function (e, t) {
          var n = e["aria-describedby"],
            r = e["aria-label"],
            s = e.autoFocus,
            l = e.autoWidth,
            u = e.children,
            c = e.className,
            d = e.defaultOpen,
            f = e.defaultValue,
            h = e.disabled,
            p = e.displayEmpty,
            v = e.error,
            m = void 0 !== v && v,
            g = e.IconComponent,
            y = e.inputRef,
            b = e.labelId,
            _ = e.MenuProps,
            x = void 0 === _ ? {} : _,
            S = e.multiple,
            w = e.name,
            M = e.onBlur,
            E = e.onChange,
            k = e.onClose,
            T = e.onFocus,
            A = e.onOpen,
            C = e.open,
            P = e.readOnly,
            R = e.renderValue,
            L = e.SelectDisplayProps,
            I = void 0 === L ? {} : L,
            N = e.tabIndex,
            O = e.value,
            D = e.variant,
            U = void 0 === D ? "standard" : D,
            z = (0, o.Z)(e, Lk),
            F = (0, Ak.Z)({ controlled: O, default: f, name: "Select" }),
            B = (0, i.Z)(F, 2),
            Z = B[0],
            H = B[1],
            V = (0, Ak.Z)({ controlled: C, default: d, name: "Select" }),
            G = (0, i.Z)(V, 2),
            W = G[0],
            j = G[1],
            X = a.useRef(null),
            q = a.useRef(null),
            Y = a.useState(null),
            K = (0, i.Z)(Y, 2),
            $ = K[0],
            J = K[1],
            Q = a.useRef(null != C).current,
            ee = a.useState(),
            te = (0, i.Z)(ee, 2),
            ne = te[0],
            re = te[1],
            ie = (0, rS.Z)(t, y),
            ae = a.useCallback(function (e) {
              (q.current = e), e && J(e);
            }, []),
            oe = null == $ ? void 0 : $.parentNode;
          a.useImperativeHandle(
            ie,
            function () {
              return {
                focus: function () {
                  q.current.focus();
                },
                node: X.current,
                value: Z,
              };
            },
            [Z]
          ),
            a.useEffect(
              function () {
                d &&
                  W &&
                  $ &&
                  !Q &&
                  (re(l ? null : oe.clientWidth), q.current.focus());
              },
              [$, l]
            ),
            a.useEffect(
              function () {
                s && q.current.focus();
              },
              [s]
            ),
            a.useEffect(
              function () {
                if (b) {
                  var e = (0, RM.Z)(q.current).getElementById(b);
                  if (e) {
                    var t = function () {
                      getSelection().isCollapsed && q.current.focus();
                    };
                    return (
                      e.addEventListener("click", t),
                      function () {
                        e.removeEventListener("click", t);
                      }
                    );
                  }
                }
              },
              [b]
            );
          var se,
            le,
            ue = function (e, t) {
              e ? A && A(t) : k && k(t),
                Q || (re(l ? null : oe.clientWidth), j(e));
            },
            ce = a.Children.toArray(u),
            de = function (e) {
              return function (t) {
                var n;
                if (t.currentTarget.hasAttribute("tabindex")) {
                  if (S) {
                    n = Array.isArray(Z) ? Z.slice() : [];
                    var r = Z.indexOf(e.props.value);
                    -1 === r ? n.push(e.props.value) : n.splice(r, 1);
                  } else n = e.props.value;
                  if (
                    (e.props.onClick && e.props.onClick(t),
                    Z !== n && (H(n), E))
                  ) {
                    var i = t.nativeEvent || t,
                      a = new i.constructor(i.type, i);
                    Object.defineProperty(a, "target", {
                      writable: !0,
                      value: { value: n, name: w },
                    }),
                      E(a, e);
                  }
                  S || ue(!1, t);
                }
              };
            },
            fe = null !== $ && W;
          delete z["aria-invalid"];
          var he = [],
            pe = !1;
          (fM({ value: Z }) || p) && (R ? (se = R(Z)) : (pe = !0));
          var ve = ce.map(function (e) {
            if (!a.isValidElement(e)) return null;
            var t;
            if (S) {
              if (!Array.isArray(Z)) throw new Error((0, PM.Z)(2));
              (t = Z.some(function (t) {
                return Dk(t, e.props.value);
              })) &&
                pe &&
                he.push(e.props.children);
            } else (t = Dk(Z, e.props.value)) && pe && (le = e.props.children);
            return (
              t && !0,
              a.cloneElement(e, {
                "aria-selected": t ? "true" : "false",
                onClick: de(e),
                onKeyUp: function (t) {
                  " " === t.key && t.preventDefault(),
                    e.props.onKeyUp && e.props.onKeyUp(t);
                },
                role: "option",
                selected: t,
                value: void 0,
                "data-value": e.props.value,
              })
            );
          });
          pe &&
            (se = S
              ? 0 === he.length
                ? null
                : he.reduce(function (e, t, n) {
                    return e.push(t), n < he.length - 1 && e.push(", "), e;
                  }, [])
              : le);
          var me,
            ge = ne;
          !l && Q && $ && (ge = oe.clientWidth),
            (me = "undefined" !== typeof N ? N : h ? null : 0);
          var ye = I.id || (w ? "mui-component-select-".concat(w) : void 0),
            be = (0, bm.Z)({}, e, { variant: U, value: Z, open: fe, error: m }),
            _e = (function (e) {
              var t = e.classes,
                n = e.variant,
                r = e.disabled,
                i = e.multiple,
                a = e.open,
                o = {
                  select: [
                    "select",
                    n,
                    r && "disabled",
                    i && "multiple",
                    e.error && "error",
                  ],
                  icon: [
                    "icon",
                    "icon".concat((0, Tw.Z)(n)),
                    a && "iconOpen",
                    r && "disabled",
                  ],
                  nativeInput: ["nativeInput"],
                };
              return (0, qx.Z)(o, Ck, t);
            })(be);
          return (0, hg.jsxs)(a.Fragment, {
            children: [
              (0, hg.jsx)(
                Ik,
                (0, bm.Z)(
                  {
                    ref: ae,
                    tabIndex: me,
                    role: "button",
                    "aria-disabled": h ? "true" : void 0,
                    "aria-expanded": fe ? "true" : "false",
                    "aria-haspopup": "listbox",
                    "aria-label": r,
                    "aria-labelledby":
                      [b, ye].filter(Boolean).join(" ") || void 0,
                    "aria-describedby": n,
                    onKeyDown: function (e) {
                      if (!P) {
                        -1 !==
                          [" ", "ArrowUp", "ArrowDown", "Enter"].indexOf(
                            e.key
                          ) && (e.preventDefault(), ue(!0, e));
                      }
                    },
                    onMouseDown:
                      h || P
                        ? null
                        : function (e) {
                            0 === e.button &&
                              (e.preventDefault(),
                              q.current.focus(),
                              ue(!0, e));
                          },
                    onBlur: function (e) {
                      !fe &&
                        M &&
                        (Object.defineProperty(e, "target", {
                          writable: !0,
                          value: { value: Z, name: w },
                        }),
                        M(e));
                    },
                    onFocus: T,
                  },
                  I,
                  {
                    ownerState: be,
                    className: (0, Xx.Z)(I.className, _e.select, c),
                    id: ye,
                    children: Uk(se)
                      ? Pk ||
                        (Pk = (0, hg.jsx)("span", {
                          className: "notranslate",
                          children: "\u200b",
                        }))
                      : se,
                  }
                )
              ),
              (0, hg.jsx)(
                Ok,
                (0, bm.Z)(
                  {
                    "aria-invalid": m,
                    value: Array.isArray(Z) ? Z.join(",") : Z,
                    name: w,
                    ref: X,
                    "aria-hidden": !0,
                    onChange: function (e) {
                      var t = ce.find(function (t) {
                        return t.props.value === e.target.value;
                      });
                      void 0 !== t && (H(t.props.value), E && E(e, t));
                    },
                    tabIndex: -1,
                    disabled: h,
                    className: _e.nativeInput,
                    autoFocus: s,
                    ownerState: be,
                  },
                  z
                )
              ),
              (0, hg.jsx)(Nk, { as: g, className: _e.icon, ownerState: be }),
              (0, hg.jsx)(
                bk,
                (0, bm.Z)(
                  {
                    id: "menu-".concat(w || ""),
                    anchorEl: oe,
                    open: fe,
                    onClose: function (e) {
                      ue(!1, e);
                    },
                    anchorOrigin: { vertical: "bottom", horizontal: "center" },
                    transformOrigin: { vertical: "top", horizontal: "center" },
                  },
                  x,
                  {
                    MenuListProps: (0, bm.Z)(
                      {
                        "aria-labelledby": b,
                        role: "listbox",
                        disableListWrap: !0,
                      },
                      x.MenuListProps
                    ),
                    PaperProps: (0, bm.Z)({}, x.PaperProps, {
                      style: (0, bm.Z)(
                        { minWidth: ge },
                        null != x.PaperProps ? x.PaperProps.style : null
                      ),
                    }),
                    children: ve,
                  }
                )
              ),
            ],
          });
        }),
        Fk = zk,
        Bk = (0, n(9201).Z)(
          (0, hg.jsx)("path", { d: "M7 10l5 5 5-5z" }),
          "ArrowDropDown"
        ),
        Zk = n(3981),
        Hk = ["onChange", "maxRows", "minRows", "style", "value"];
      function Vk(e) {
        return parseInt(e, 10) || 0;
      }
      var Gk = {
        visibility: "hidden",
        position: "absolute",
        overflow: "hidden",
        height: 0,
        top: 0,
        left: 0,
        transform: "translateZ(0)",
      };
      function Wk(e) {
        return (
          void 0 === e ||
          null === e ||
          0 === Object.keys(e).length ||
          (0 === e.outerHeightStyle && !e.overflow)
        );
      }
      var jk = a.forwardRef(function (e, t) {
        var n = e.onChange,
          r = e.maxRows,
          s = e.minRows,
          l = void 0 === s ? 1 : s,
          u = e.style,
          c = e.value,
          d = (0, o.Z)(e, Hk),
          f = a.useRef(null != c).current,
          h = a.useRef(null),
          p = (0, BM.Z)(t, h),
          v = a.useRef(null),
          m = a.useRef(0),
          g = a.useState({ outerHeightStyle: 0 }),
          y = (0, i.Z)(g, 2),
          b = y[0],
          _ = y[1],
          x = a.useCallback(
            function () {
              var t = h.current,
                n = (0, yE.Z)(t).getComputedStyle(t);
              if ("0px" === n.width) return { outerHeightStyle: 0 };
              var i = v.current;
              (i.style.width = n.width),
                (i.value = t.value || e.placeholder || "x"),
                "\n" === i.value.slice(-1) && (i.value += " ");
              var a = n.boxSizing,
                o = Vk(n.paddingBottom) + Vk(n.paddingTop),
                s = Vk(n.borderBottomWidth) + Vk(n.borderTopWidth),
                u = i.scrollHeight;
              i.value = "x";
              var c = i.scrollHeight,
                d = u;
              return (
                l && (d = Math.max(Number(l) * c, d)),
                r && (d = Math.min(Number(r) * c, d)),
                {
                  outerHeightStyle:
                    (d = Math.max(d, c)) + ("border-box" === a ? o + s : 0),
                  overflow: Math.abs(d - u) <= 1,
                }
              );
            },
            [r, l, e.placeholder]
          ),
          S = function (e, t) {
            var n = t.outerHeightStyle,
              r = t.overflow;
            return m.current < 20 &&
              ((n > 0 && Math.abs((e.outerHeightStyle || 0) - n) > 1) ||
                e.overflow !== r)
              ? ((m.current += 1), { overflow: r, outerHeightStyle: n })
              : e;
          },
          w = a.useCallback(
            function () {
              var e = x();
              Wk(e) ||
                _(function (t) {
                  return S(t, e);
                });
            },
            [x]
          );
        a.useEffect(function () {
          var e,
            t = (0, Zk.Z)(function () {
              (m.current = 0),
                h.current &&
                  (function () {
                    var e = x();
                    Wk(e) ||
                      qM.flushSync(function () {
                        _(function (t) {
                          return S(t, e);
                        });
                      });
                  })();
            }),
            n = h.current,
            r = (0, yE.Z)(n);
          return (
            r.addEventListener("resize", t),
            "undefined" !== typeof ResizeObserver &&
              (e = new ResizeObserver(t)).observe(n),
            function () {
              t.clear(),
                r.removeEventListener("resize", t),
                e && e.disconnect();
            }
          );
        }),
          (0, vE.Z)(function () {
            w();
          }),
          a.useEffect(
            function () {
              m.current = 0;
            },
            [c]
          );
        return (0, hg.jsxs)(a.Fragment, {
          children: [
            (0, hg.jsx)(
              "textarea",
              (0, bm.Z)(
                {
                  value: c,
                  onChange: function (e) {
                    (m.current = 0), f || w(), n && n(e);
                  },
                  ref: p,
                  rows: l,
                  style: (0, bm.Z)(
                    {
                      height: b.outerHeightStyle,
                      overflow: b.overflow ? "hidden" : void 0,
                    },
                    u
                  ),
                },
                d
              )
            ),
            (0, hg.jsx)("textarea", {
              "aria-hidden": !0,
              className: e.className,
              readOnly: !0,
              ref: v,
              tabIndex: -1,
              style: (0, bm.Z)({}, Gk, u, { padding: 0 }),
            }),
          ],
        });
      });
      function Xk(e) {
        var t = e.styles,
          n = e.defaultTheme,
          r = void 0 === n ? {} : n,
          i =
            "function" === typeof t
              ? function (e) {
                  return t(
                    void 0 === (n = e) ||
                      null === n ||
                      0 === Object.keys(n).length
                      ? r
                      : e
                  );
                  var n;
                }
              : t;
        return (0, hg.jsx)(bS, { styles: i });
      }
      var qk = function (e) {
        var t = e.styles,
          n = e.themeId,
          r = e.defaultTheme,
          i = void 0 === r ? {} : r,
          a = (0, zw.Z)(i),
          o = "function" === typeof t ? t((n && a[n]) || a) : t;
        return (0, hg.jsx)(Xk, { styles: o });
      };
      var Yk = function (e) {
        return (0, hg.jsx)(
          qk,
          (0, bm.Z)({}, e, { defaultTheme: Fw.Z, themeId: Bw.Z })
        );
      };
      function Kk(e) {
        return (0, Jx.Z)("MuiInputBase", e);
      }
      var $k = (0, $x.Z)("MuiInputBase", [
          "root",
          "formControl",
          "focused",
          "disabled",
          "adornedStart",
          "adornedEnd",
          "error",
          "sizeSmall",
          "multiline",
          "colorSecondary",
          "fullWidth",
          "hiddenLabel",
          "readOnly",
          "input",
          "inputSizeSmall",
          "inputMultiline",
          "inputTypeSearch",
          "inputAdornedStart",
          "inputAdornedEnd",
          "inputHiddenLabel",
        ]),
        Jk = [
          "aria-describedby",
          "autoComplete",
          "autoFocus",
          "className",
          "color",
          "components",
          "componentsProps",
          "defaultValue",
          "disabled",
          "disableInjectingGlobalStyles",
          "endAdornment",
          "error",
          "fullWidth",
          "id",
          "inputComponent",
          "inputProps",
          "inputRef",
          "margin",
          "maxRows",
          "minRows",
          "multiline",
          "name",
          "onBlur",
          "onChange",
          "onClick",
          "onFocus",
          "onKeyDown",
          "onKeyUp",
          "placeholder",
          "readOnly",
          "renderSuffix",
          "rows",
          "size",
          "slotProps",
          "slots",
          "startAdornment",
          "type",
          "value",
        ],
        Qk = function (e, t) {
          var n = e.ownerState;
          return [
            t.root,
            n.formControl && t.formControl,
            n.startAdornment && t.adornedStart,
            n.endAdornment && t.adornedEnd,
            n.error && t.error,
            "small" === n.size && t.sizeSmall,
            n.multiline && t.multiline,
            n.color && t["color".concat((0, Tw.Z)(n.color))],
            n.fullWidth && t.fullWidth,
            n.hiddenLabel && t.hiddenLabel,
          ];
        },
        eT = function (e, t) {
          var n = e.ownerState;
          return [
            t.input,
            "small" === n.size && t.inputSizeSmall,
            n.multiline && t.inputMultiline,
            "search" === n.type && t.inputTypeSearch,
            n.startAdornment && t.inputAdornedStart,
            n.endAdornment && t.inputAdornedEnd,
            n.hiddenLabel && t.inputHiddenLabel,
          ];
        },
        tT = (0, Yx.ZP)("div", {
          name: "MuiInputBase",
          slot: "Root",
          overridesResolver: Qk,
        })(function (e) {
          var t = e.theme,
            n = e.ownerState;
          return (0,
          bm.Z)({}, t.typography.body1, (0, l.Z)({ color: (t.vars || t).palette.text.primary, lineHeight: "1.4375em", boxSizing: "border-box", position: "relative", cursor: "text", display: "inline-flex", alignItems: "center" }, "&.".concat($k.disabled), { color: (t.vars || t).palette.text.disabled, cursor: "default" }), n.multiline && (0, bm.Z)({ padding: "4px 0 5px" }, "small" === n.size && { paddingTop: 1 }), n.fullWidth && { width: "100%" });
        }),
        nT = (0, Yx.ZP)("input", {
          name: "MuiInputBase",
          slot: "Input",
          overridesResolver: eT,
        })(function (e) {
          var t,
            n = e.theme,
            r = e.ownerState,
            i = "light" === n.palette.mode,
            a = (0, bm.Z)(
              { color: "currentColor" },
              n.vars
                ? { opacity: n.vars.opacity.inputPlaceholder }
                : { opacity: i ? 0.42 : 0.5 },
              {
                transition: n.transitions.create("opacity", {
                  duration: n.transitions.duration.shorter,
                }),
              }
            ),
            o = { opacity: "0 !important" },
            s = n.vars
              ? { opacity: n.vars.opacity.inputPlaceholder }
              : { opacity: i ? 0.42 : 0.5 };
          return (0,
          bm.Z)(((t = { font: "inherit", letterSpacing: "inherit", color: "currentColor", padding: "4px 0 5px", border: 0, boxSizing: "content-box", background: "none", height: "1.4375em", margin: 0, WebkitTapHighlightColor: "transparent", display: "block", minWidth: 0, width: "100%", animationName: "mui-auto-fill-cancel", animationDuration: "10ms", "&::-webkit-input-placeholder": a, "&::-moz-placeholder": a, "&:-ms-input-placeholder": a, "&::-ms-input-placeholder": a, "&:focus": { outline: 0 }, "&:invalid": { boxShadow: "none" }, "&::-webkit-search-decoration": { WebkitAppearance: "none" } }), (0, l.Z)(t, "label[data-shrink=false] + .".concat($k.formControl, " &"), { "&::-webkit-input-placeholder": o, "&::-moz-placeholder": o, "&:-ms-input-placeholder": o, "&::-ms-input-placeholder": o, "&:focus::-webkit-input-placeholder": s, "&:focus::-moz-placeholder": s, "&:focus:-ms-input-placeholder": s, "&:focus::-ms-input-placeholder": s }), (0, l.Z)(t, "&.".concat($k.disabled), { opacity: 1, WebkitTextFillColor: (n.vars || n).palette.text.disabled }), (0, l.Z)(t, "&:-webkit-autofill", { animationDuration: "5000s", animationName: "mui-auto-fill" }), t), "small" === r.size && { paddingTop: 1 }, r.multiline && { height: "auto", resize: "none", padding: 0, paddingTop: 0 }, "search" === r.type && { MozAppearance: "textfield" });
        }),
        rT = (0, hg.jsx)(Yk, {
          styles: {
            "@keyframes mui-auto-fill": { from: { display: "block" } },
            "@keyframes mui-auto-fill-cancel": { from: { display: "block" } },
          },
        }),
        iT = a.forwardRef(function (e, t) {
          var n,
            r = (0, Kx.Z)({ props: e, name: "MuiInputBase" }),
            s = r["aria-describedby"],
            l = r.autoComplete,
            u = r.autoFocus,
            c = r.className,
            d = r.components,
            f = void 0 === d ? {} : d,
            h = r.componentsProps,
            p = void 0 === h ? {} : h,
            v = r.defaultValue,
            m = r.disabled,
            g = r.disableInjectingGlobalStyles,
            y = r.endAdornment,
            b = r.fullWidth,
            _ = void 0 !== b && b,
            x = r.id,
            S = r.inputComponent,
            w = void 0 === S ? "input" : S,
            M = r.inputProps,
            E = void 0 === M ? {} : M,
            k = r.inputRef,
            T = r.maxRows,
            A = r.minRows,
            C = r.multiline,
            P = void 0 !== C && C,
            R = r.name,
            L = r.onBlur,
            I = r.onChange,
            N = r.onClick,
            O = r.onFocus,
            D = r.onKeyDown,
            U = r.onKeyUp,
            z = r.placeholder,
            F = r.readOnly,
            B = r.renderSuffix,
            Z = r.rows,
            H = r.slotProps,
            V = void 0 === H ? {} : H,
            G = r.slots,
            W = void 0 === G ? {} : G,
            j = r.startAdornment,
            X = r.type,
            q = void 0 === X ? "text" : X,
            Y = r.value,
            K = (0, o.Z)(r, Jk),
            $ = null != E.value ? E.value : Y,
            J = a.useRef(null != $).current,
            Q = a.useRef(),
            ee = a.useCallback(function (e) {
              0;
            }, []),
            te = (0, rS.Z)(Q, k, E.ref, ee),
            ne = a.useState(!1),
            re = (0, i.Z)(ne, 2),
            ie = re[0],
            ae = re[1],
            oe = bM();
          var se = yM({
            props: r,
            muiFormControl: oe,
            states: [
              "color",
              "disabled",
              "error",
              "hiddenLabel",
              "size",
              "required",
              "filled",
            ],
          });
          (se.focused = oe ? oe.focused : ie),
            a.useEffect(
              function () {
                !oe && m && ie && (ae(!1), L && L());
              },
              [oe, m, ie, L]
            );
          var le = oe && oe.onFilled,
            ue = oe && oe.onEmpty,
            ce = a.useCallback(
              function (e) {
                fM(e) ? le && le() : ue && ue();
              },
              [le, ue]
            );
          (0, ow.Z)(
            function () {
              J && ce({ value: $ });
            },
            [$, ce, J]
          );
          a.useEffect(function () {
            ce(Q.current);
          }, []);
          var de = w,
            fe = E;
          P &&
            "input" === de &&
            ((fe = Z
              ? (0, bm.Z)({ type: void 0, minRows: Z, maxRows: Z }, fe)
              : (0, bm.Z)({ type: void 0, maxRows: T, minRows: A }, fe)),
            (de = jk));
          a.useEffect(
            function () {
              oe && oe.setAdornedStart(Boolean(j));
            },
            [oe, j]
          );
          var he = (0, bm.Z)({}, r, {
              color: se.color || "primary",
              disabled: se.disabled,
              endAdornment: y,
              error: se.error,
              focused: se.focused,
              formControl: oe,
              fullWidth: _,
              hiddenLabel: se.hiddenLabel,
              multiline: P,
              size: se.size,
              startAdornment: j,
              type: q,
            }),
            pe = (function (e) {
              var t = e.classes,
                n = e.color,
                r = e.disabled,
                i = e.error,
                a = e.endAdornment,
                o = e.focused,
                s = e.formControl,
                l = e.fullWidth,
                u = e.hiddenLabel,
                c = e.multiline,
                d = e.readOnly,
                f = e.size,
                h = e.startAdornment,
                p = e.type,
                v = {
                  root: [
                    "root",
                    "color".concat((0, Tw.Z)(n)),
                    r && "disabled",
                    i && "error",
                    l && "fullWidth",
                    o && "focused",
                    s && "formControl",
                    "small" === f && "sizeSmall",
                    c && "multiline",
                    h && "adornedStart",
                    a && "adornedEnd",
                    u && "hiddenLabel",
                    d && "readOnly",
                  ],
                  input: [
                    "input",
                    r && "disabled",
                    "search" === p && "inputTypeSearch",
                    c && "inputMultiline",
                    "small" === f && "inputSizeSmall",
                    u && "inputHiddenLabel",
                    h && "inputAdornedStart",
                    a && "inputAdornedEnd",
                    d && "readOnly",
                  ],
                };
              return (0, qx.Z)(v, Kk, t);
            })(he),
            ve = W.root || f.Root || tT,
            me = V.root || p.root || {},
            ge = W.input || f.Input || nT;
          return (
            (fe = (0, bm.Z)({}, fe, null != (n = V.input) ? n : p.input)),
            (0, hg.jsxs)(a.Fragment, {
              children: [
                !g && rT,
                (0, hg.jsxs)(
                  ve,
                  (0, bm.Z)(
                    {},
                    me,
                    !rw(ve) && { ownerState: (0, bm.Z)({}, he, me.ownerState) },
                    {
                      ref: t,
                      onClick: function (e) {
                        Q.current &&
                          e.currentTarget === e.target &&
                          Q.current.focus(),
                          N && !se.disabled && N(e);
                      },
                    },
                    K,
                    {
                      className: (0, Xx.Z)(
                        pe.root,
                        me.className,
                        c,
                        F && "MuiInputBase-readOnly"
                      ),
                      children: [
                        j,
                        (0, hg.jsx)(hM.Provider, {
                          value: null,
                          children: (0, hg.jsx)(
                            ge,
                            (0, bm.Z)(
                              {
                                ownerState: he,
                                "aria-invalid": se.error,
                                "aria-describedby": s,
                                autoComplete: l,
                                autoFocus: u,
                                defaultValue: v,
                                disabled: se.disabled,
                                id: x,
                                onAnimationStart: function (e) {
                                  ce(
                                    "mui-auto-fill-cancel" === e.animationName
                                      ? Q.current
                                      : { value: "x" }
                                  );
                                },
                                name: R,
                                placeholder: z,
                                readOnly: F,
                                required: se.required,
                                rows: Z,
                                value: $,
                                onKeyDown: D,
                                onKeyUp: U,
                                type: q,
                              },
                              fe,
                              !rw(ge) && {
                                as: de,
                                ownerState: (0, bm.Z)({}, he, fe.ownerState),
                              },
                              {
                                ref: te,
                                className: (0, Xx.Z)(
                                  pe.input,
                                  fe.className,
                                  F && "MuiInputBase-readOnly"
                                ),
                                onBlur: function (e) {
                                  L && L(e),
                                    E.onBlur && E.onBlur(e),
                                    oe && oe.onBlur ? oe.onBlur(e) : ae(!1);
                                },
                                onChange: function (e) {
                                  if (!J) {
                                    var t = e.target || Q.current;
                                    if (null == t)
                                      throw new Error((0, PM.Z)(1));
                                    ce({ value: t.value });
                                  }
                                  for (
                                    var n = arguments.length,
                                      r = new Array(n > 1 ? n - 1 : 0),
                                      i = 1;
                                    i < n;
                                    i++
                                  )
                                    r[i - 1] = arguments[i];
                                  E.onChange &&
                                    E.onChange.apply(E, [e].concat(r)),
                                    I && I.apply(void 0, [e].concat(r));
                                },
                                onFocus: function (e) {
                                  se.disabled
                                    ? e.stopPropagation()
                                    : (O && O(e),
                                      E.onFocus && E.onFocus(e),
                                      oe && oe.onFocus
                                        ? oe.onFocus(e)
                                        : ae(!0));
                                },
                              }
                            )
                          ),
                        }),
                        y,
                        B ? B((0, bm.Z)({}, se, { startAdornment: j })) : null,
                      ],
                    }
                  )
                ),
              ],
            })
          );
        }),
        aT = iT;
      function oT(e) {
        return (0, Jx.Z)("MuiInput", e);
      }
      var sT = (0, bm.Z)(
          {},
          $k,
          (0, $x.Z)("MuiInput", ["root", "underline", "input"])
        ),
        lT = [
          "disableUnderline",
          "components",
          "componentsProps",
          "fullWidth",
          "inputComponent",
          "multiline",
          "slotProps",
          "slots",
          "type",
        ],
        uT = (0, Yx.ZP)(tT, {
          shouldForwardProp: function (e) {
            return (0, Yx.FO)(e) || "classes" === e;
          },
          name: "MuiInput",
          slot: "Root",
          overridesResolver: function (e, t) {
            var n = e.ownerState;
            return [].concat((0, r.Z)(Qk(e, t)), [
              !n.disableUnderline && t.underline,
            ]);
          },
        })(function (e) {
          var t,
            n = e.theme,
            r = e.ownerState,
            i =
              "light" === n.palette.mode
                ? "rgba(0, 0, 0, 0.42)"
                : "rgba(255, 255, 255, 0.7)";
          return (
            n.vars &&
              (i = "rgba("
                .concat(n.vars.palette.common.onBackgroundChannel, " / ")
                .concat(n.vars.opacity.inputUnderline, ")")),
            (0, bm.Z)(
              { position: "relative" },
              r.formControl && { "label + &": { marginTop: 16 } },
              !r.disableUnderline &&
                ((t = {
                  "&:after": {
                    borderBottom: "2px solid ".concat(
                      (n.vars || n).palette[r.color].main
                    ),
                    left: 0,
                    bottom: 0,
                    content: '""',
                    position: "absolute",
                    right: 0,
                    transform: "scaleX(0)",
                    transition: n.transitions.create("transform", {
                      duration: n.transitions.duration.shorter,
                      easing: n.transitions.easing.easeOut,
                    }),
                    pointerEvents: "none",
                  },
                }),
                (0, l.Z)(t, "&.".concat(sT.focused, ":after"), {
                  transform: "scaleX(1) translateX(0)",
                }),
                (0, l.Z)(t, "&.".concat(sT.error), {
                  "&:before, &:after": {
                    borderBottomColor: (n.vars || n).palette.error.main,
                  },
                }),
                (0, l.Z)(t, "&:before", {
                  borderBottom: "1px solid ".concat(i),
                  left: 0,
                  bottom: 0,
                  content: '"\\00a0"',
                  position: "absolute",
                  right: 0,
                  transition: n.transitions.create("border-bottom-color", {
                    duration: n.transitions.duration.shorter,
                  }),
                  pointerEvents: "none",
                }),
                (0, l.Z)(
                  t,
                  "&:hover:not(."
                    .concat(sT.disabled, ", .")
                    .concat(sT.error, "):before"),
                  {
                    borderBottom: "2px solid ".concat(
                      (n.vars || n).palette.text.primary
                    ),
                    "@media (hover: none)": {
                      borderBottom: "1px solid ".concat(i),
                    },
                  }
                ),
                (0, l.Z)(t, "&.".concat(sT.disabled, ":before"), {
                  borderBottomStyle: "dotted",
                }),
                t)
            )
          );
        }),
        cT = (0, Yx.ZP)(nT, {
          name: "MuiInput",
          slot: "Input",
          overridesResolver: eT,
        })({}),
        dT = a.forwardRef(function (e, t) {
          var n,
            r,
            i,
            a,
            s = (0, Kx.Z)({ props: e, name: "MuiInput" }),
            l = s.disableUnderline,
            u = s.components,
            c = void 0 === u ? {} : u,
            d = s.componentsProps,
            f = s.fullWidth,
            h = void 0 !== f && f,
            p = s.inputComponent,
            v = void 0 === p ? "input" : p,
            m = s.multiline,
            g = void 0 !== m && m,
            y = s.slotProps,
            b = s.slots,
            _ = void 0 === b ? {} : b,
            x = s.type,
            S = void 0 === x ? "text" : x,
            w = (0, o.Z)(s, lT),
            M = (function (e) {
              var t = e.classes,
                n = {
                  root: ["root", !e.disableUnderline && "underline"],
                  input: ["input"],
                },
                r = (0, qx.Z)(n, oT, t);
              return (0, bm.Z)({}, t, r);
            })(s),
            E = { root: { ownerState: { disableUnderline: l } } },
            k = (null != y ? y : d) ? (0, Nw.Z)(null != y ? y : d, E) : E,
            T = null != (n = null != (r = _.root) ? r : c.Root) ? n : uT,
            A = null != (i = null != (a = _.input) ? a : c.Input) ? i : cT;
          return (0,
          hg.jsx)(aT, (0, bm.Z)({ slots: { root: T, input: A }, slotProps: k, fullWidth: h, inputComponent: v, multiline: g, ref: t, type: S }, w, { classes: M }));
        });
      dT.muiName = "Input";
      var fT = dT;
      function hT(e) {
        return (0, Jx.Z)("MuiFilledInput", e);
      }
      var pT = (0, bm.Z)(
          {},
          $k,
          (0, $x.Z)("MuiFilledInput", ["root", "underline", "input"])
        ),
        vT = [
          "disableUnderline",
          "components",
          "componentsProps",
          "fullWidth",
          "hiddenLabel",
          "inputComponent",
          "multiline",
          "slotProps",
          "slots",
          "type",
        ],
        mT = (0, Yx.ZP)(tT, {
          shouldForwardProp: function (e) {
            return (0, Yx.FO)(e) || "classes" === e;
          },
          name: "MuiFilledInput",
          slot: "Root",
          overridesResolver: function (e, t) {
            var n = e.ownerState;
            return [].concat((0, r.Z)(Qk(e, t)), [
              !n.disableUnderline && t.underline,
            ]);
          },
        })(function (e) {
          var t,
            n,
            r,
            i = e.theme,
            a = e.ownerState,
            o = "light" === i.palette.mode,
            s = o ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)",
            u = o ? "rgba(0, 0, 0, 0.06)" : "rgba(255, 255, 255, 0.09)",
            c = o ? "rgba(0, 0, 0, 0.09)" : "rgba(255, 255, 255, 0.13)",
            d = o ? "rgba(0, 0, 0, 0.12)" : "rgba(255, 255, 255, 0.12)";
          return (0,
          bm.Z)(((t = { position: "relative", backgroundColor: i.vars ? i.vars.palette.FilledInput.bg : u, borderTopLeftRadius: (i.vars || i).shape.borderRadius, borderTopRightRadius: (i.vars || i).shape.borderRadius, transition: i.transitions.create("background-color", { duration: i.transitions.duration.shorter, easing: i.transitions.easing.easeOut }), "&:hover": { backgroundColor: i.vars ? i.vars.palette.FilledInput.hoverBg : c, "@media (hover: none)": { backgroundColor: i.vars ? i.vars.palette.FilledInput.bg : u } } }), (0, l.Z)(t, "&.".concat(pT.focused), { backgroundColor: i.vars ? i.vars.palette.FilledInput.bg : u }), (0, l.Z)(t, "&.".concat(pT.disabled), { backgroundColor: i.vars ? i.vars.palette.FilledInput.disabledBg : d }), t), !a.disableUnderline && ((n = { "&:after": { borderBottom: "2px solid ".concat(null == (r = (i.vars || i).palette[a.color || "primary"]) ? void 0 : r.main), left: 0, bottom: 0, content: '""', position: "absolute", right: 0, transform: "scaleX(0)", transition: i.transitions.create("transform", { duration: i.transitions.duration.shorter, easing: i.transitions.easing.easeOut }), pointerEvents: "none" } }), (0, l.Z)(n, "&.".concat(pT.focused, ":after"), { transform: "scaleX(1) translateX(0)" }), (0, l.Z)(n, "&.".concat(pT.error), { "&:before, &:after": { borderBottomColor: (i.vars || i).palette.error.main } }), (0, l.Z)(n, "&:before", { borderBottom: "1px solid ".concat(i.vars ? "rgba(".concat(i.vars.palette.common.onBackgroundChannel, " / ").concat(i.vars.opacity.inputUnderline, ")") : s), left: 0, bottom: 0, content: '"\\00a0"', position: "absolute", right: 0, transition: i.transitions.create("border-bottom-color", { duration: i.transitions.duration.shorter }), pointerEvents: "none" }), (0, l.Z)(n, "&:hover:not(.".concat(pT.disabled, ", .").concat(pT.error, "):before"), { borderBottom: "1px solid ".concat((i.vars || i).palette.text.primary) }), (0, l.Z)(n, "&.".concat(pT.disabled, ":before"), { borderBottomStyle: "dotted" }), n), a.startAdornment && { paddingLeft: 12 }, a.endAdornment && { paddingRight: 12 }, a.multiline && (0, bm.Z)({ padding: "25px 12px 8px" }, "small" === a.size && { paddingTop: 21, paddingBottom: 4 }, a.hiddenLabel && { paddingTop: 16, paddingBottom: 17 }));
        }),
        gT = (0, Yx.ZP)(nT, {
          name: "MuiFilledInput",
          slot: "Input",
          overridesResolver: eT,
        })(function (e) {
          var t = e.theme,
            n = e.ownerState;
          return (0,
          bm.Z)({ paddingTop: 25, paddingRight: 12, paddingBottom: 8, paddingLeft: 12 }, !t.vars && { "&:-webkit-autofill": { WebkitBoxShadow: "light" === t.palette.mode ? null : "0 0 0 100px #266798 inset", WebkitTextFillColor: "light" === t.palette.mode ? null : "#fff", caretColor: "light" === t.palette.mode ? null : "#fff", borderTopLeftRadius: "inherit", borderTopRightRadius: "inherit" } }, t.vars && (0, l.Z)({ "&:-webkit-autofill": { borderTopLeftRadius: "inherit", borderTopRightRadius: "inherit" } }, t.getColorSchemeSelector("dark"), { "&:-webkit-autofill": { WebkitBoxShadow: "0 0 0 100px #266798 inset", WebkitTextFillColor: "#fff", caretColor: "#fff" } }), "small" === n.size && { paddingTop: 21, paddingBottom: 4 }, n.hiddenLabel && { paddingTop: 16, paddingBottom: 17 }, n.multiline && { paddingTop: 0, paddingBottom: 0, paddingLeft: 0, paddingRight: 0 }, n.startAdornment && { paddingLeft: 0 }, n.endAdornment && { paddingRight: 0 }, n.hiddenLabel && "small" === n.size && { paddingTop: 8, paddingBottom: 9 });
        }),
        yT = a.forwardRef(function (e, t) {
          var n,
            r,
            i,
            a,
            s = (0, Kx.Z)({ props: e, name: "MuiFilledInput" }),
            l = s.components,
            u = void 0 === l ? {} : l,
            c = s.componentsProps,
            d = s.fullWidth,
            f = void 0 !== d && d,
            h = s.inputComponent,
            p = void 0 === h ? "input" : h,
            v = s.multiline,
            m = void 0 !== v && v,
            g = s.slotProps,
            y = s.slots,
            b = void 0 === y ? {} : y,
            _ = s.type,
            x = void 0 === _ ? "text" : _,
            S = (0, o.Z)(s, vT),
            w = (0, bm.Z)({}, s, {
              fullWidth: f,
              inputComponent: p,
              multiline: m,
              type: x,
            }),
            M = (function (e) {
              var t = e.classes,
                n = {
                  root: ["root", !e.disableUnderline && "underline"],
                  input: ["input"],
                },
                r = (0, qx.Z)(n, hT, t);
              return (0, bm.Z)({}, t, r);
            })(s),
            E = { root: { ownerState: w }, input: { ownerState: w } },
            k = (null != g ? g : c) ? (0, Nw.Z)(null != g ? g : c, E) : E,
            T = null != (n = null != (r = b.root) ? r : u.Root) ? n : mT,
            A = null != (i = null != (a = b.input) ? a : u.Input) ? i : gT;
          return (0,
          hg.jsx)(aT, (0, bm.Z)({ slots: { root: T, input: A }, componentsProps: k, fullWidth: f, inputComponent: p, multiline: m, ref: t, type: x }, S, { classes: M }));
        });
      yT.muiName = "Input";
      var bT,
        _T = yT,
        xT = ["children", "classes", "className", "label", "notched"],
        ST = (0, Yx.ZP)("fieldset")({
          textAlign: "left",
          position: "absolute",
          bottom: 0,
          right: 0,
          top: -5,
          left: 0,
          margin: 0,
          padding: "0 8px",
          pointerEvents: "none",
          borderRadius: "inherit",
          borderStyle: "solid",
          borderWidth: 1,
          overflow: "hidden",
          minWidth: "0%",
        }),
        wT = (0, Yx.ZP)("legend")(function (e) {
          var t = e.ownerState,
            n = e.theme;
          return (0,
          bm.Z)({ float: "unset", width: "auto", overflow: "hidden" }, !t.withLabel && { padding: 0, lineHeight: "11px", transition: n.transitions.create("width", { duration: 150, easing: n.transitions.easing.easeOut }) }, t.withLabel && (0, bm.Z)({ display: "block", padding: 0, height: 11, fontSize: "0.75em", visibility: "hidden", maxWidth: 0.01, transition: n.transitions.create("max-width", { duration: 50, easing: n.transitions.easing.easeOut }), whiteSpace: "nowrap", "& > span": { paddingLeft: 5, paddingRight: 5, display: "inline-block", opacity: 0, visibility: "visible" } }, t.notched && { maxWidth: "100%", transition: n.transitions.create("max-width", { duration: 100, easing: n.transitions.easing.easeOut, delay: 50 }) }));
        });
      function MT(e) {
        return (0, Jx.Z)("MuiOutlinedInput", e);
      }
      var ET = (0, bm.Z)(
          {},
          $k,
          (0, $x.Z)("MuiOutlinedInput", ["root", "notchedOutline", "input"])
        ),
        kT = [
          "components",
          "fullWidth",
          "inputComponent",
          "label",
          "multiline",
          "notched",
          "slots",
          "type",
        ],
        TT = (0, Yx.ZP)(tT, {
          shouldForwardProp: function (e) {
            return (0, Yx.FO)(e) || "classes" === e;
          },
          name: "MuiOutlinedInput",
          slot: "Root",
          overridesResolver: Qk,
        })(function (e) {
          var t,
            n = e.theme,
            r = e.ownerState,
            i =
              "light" === n.palette.mode
                ? "rgba(0, 0, 0, 0.23)"
                : "rgba(255, 255, 255, 0.23)";
          return (0,
          bm.Z)(((t = { position: "relative", borderRadius: (n.vars || n).shape.borderRadius }), (0, l.Z)(t, "&:hover .".concat(ET.notchedOutline), { borderColor: (n.vars || n).palette.text.primary }), (0, l.Z)(t, "@media (hover: none)", (0, l.Z)({}, "&:hover .".concat(ET.notchedOutline), { borderColor: n.vars ? "rgba(".concat(n.vars.palette.common.onBackgroundChannel, " / 0.23)") : i })), (0, l.Z)(t, "&.".concat(ET.focused, " .").concat(ET.notchedOutline), { borderColor: (n.vars || n).palette[r.color].main, borderWidth: 2 }), (0, l.Z)(t, "&.".concat(ET.error, " .").concat(ET.notchedOutline), { borderColor: (n.vars || n).palette.error.main }), (0, l.Z)(t, "&.".concat(ET.disabled, " .").concat(ET.notchedOutline), { borderColor: (n.vars || n).palette.action.disabled }), t), r.startAdornment && { paddingLeft: 14 }, r.endAdornment && { paddingRight: 14 }, r.multiline && (0, bm.Z)({ padding: "16.5px 14px" }, "small" === r.size && { padding: "8.5px 14px" }));
        }),
        AT = (0, Yx.ZP)(
          function (e) {
            var t = e.className,
              n = e.label,
              r = e.notched,
              i = (0, o.Z)(e, xT),
              a = null != n && "" !== n,
              s = (0, bm.Z)({}, e, { notched: r, withLabel: a });
            return (0, hg.jsx)(
              ST,
              (0, bm.Z)({ "aria-hidden": !0, className: t, ownerState: s }, i, {
                children: (0, hg.jsx)(wT, {
                  ownerState: s,
                  children: a
                    ? (0, hg.jsx)("span", { children: n })
                    : bT ||
                      (bT = (0, hg.jsx)("span", {
                        className: "notranslate",
                        children: "\u200b",
                      })),
                }),
              })
            );
          },
          {
            name: "MuiOutlinedInput",
            slot: "NotchedOutline",
            overridesResolver: function (e, t) {
              return t.notchedOutline;
            },
          }
        )(function (e) {
          var t = e.theme,
            n =
              "light" === t.palette.mode
                ? "rgba(0, 0, 0, 0.23)"
                : "rgba(255, 255, 255, 0.23)";
          return {
            borderColor: t.vars
              ? "rgba(".concat(
                  t.vars.palette.common.onBackgroundChannel,
                  " / 0.23)"
                )
              : n,
          };
        }),
        CT = (0, Yx.ZP)(nT, {
          name: "MuiOutlinedInput",
          slot: "Input",
          overridesResolver: eT,
        })(function (e) {
          var t = e.theme,
            n = e.ownerState;
          return (0,
          bm.Z)({ padding: "16.5px 14px" }, !t.vars && { "&:-webkit-autofill": { WebkitBoxShadow: "light" === t.palette.mode ? null : "0 0 0 100px #266798 inset", WebkitTextFillColor: "light" === t.palette.mode ? null : "#fff", caretColor: "light" === t.palette.mode ? null : "#fff", borderRadius: "inherit" } }, t.vars && (0, l.Z)({ "&:-webkit-autofill": { borderRadius: "inherit" } }, t.getColorSchemeSelector("dark"), { "&:-webkit-autofill": { WebkitBoxShadow: "0 0 0 100px #266798 inset", WebkitTextFillColor: "#fff", caretColor: "#fff" } }), "small" === n.size && { padding: "8.5px 14px" }, n.multiline && { padding: 0 }, n.startAdornment && { paddingLeft: 0 }, n.endAdornment && { paddingRight: 0 });
        }),
        PT = a.forwardRef(function (e, t) {
          var n,
            r,
            i,
            s,
            l,
            u = (0, Kx.Z)({ props: e, name: "MuiOutlinedInput" }),
            c = u.components,
            d = void 0 === c ? {} : c,
            f = u.fullWidth,
            h = void 0 !== f && f,
            p = u.inputComponent,
            v = void 0 === p ? "input" : p,
            m = u.label,
            g = u.multiline,
            y = void 0 !== g && g,
            b = u.notched,
            _ = u.slots,
            x = void 0 === _ ? {} : _,
            S = u.type,
            w = void 0 === S ? "text" : S,
            M = (0, o.Z)(u, kT),
            E = (function (e) {
              var t = e.classes,
                n = (0, qx.Z)(
                  {
                    root: ["root"],
                    notchedOutline: ["notchedOutline"],
                    input: ["input"],
                  },
                  MT,
                  t
                );
              return (0, bm.Z)({}, t, n);
            })(u),
            k = bM(),
            T = yM({ props: u, muiFormControl: k, states: ["required"] }),
            A = (0, bm.Z)({}, u, {
              color: T.color || "primary",
              disabled: T.disabled,
              error: T.error,
              focused: T.focused,
              formControl: k,
              fullWidth: h,
              hiddenLabel: T.hiddenLabel,
              multiline: y,
              size: T.size,
              type: w,
            }),
            C = null != (n = null != (r = x.root) ? r : d.Root) ? n : TT,
            P = null != (i = null != (s = x.input) ? s : d.Input) ? i : CT;
          return (0, hg.jsx)(
            aT,
            (0, bm.Z)(
              {
                slots: { root: C, input: P },
                renderSuffix: function (e) {
                  return (0, hg.jsx)(AT, {
                    ownerState: A,
                    className: E.notchedOutline,
                    label:
                      null != m && "" !== m && T.required
                        ? l ||
                          (l = (0, hg.jsxs)(a.Fragment, {
                            children: [m, "\u2009", "*"],
                          }))
                        : m,
                    notched:
                      "undefined" !== typeof b
                        ? b
                        : Boolean(e.startAdornment || e.filled || e.focused),
                  });
                },
                fullWidth: h,
                inputComponent: v,
                multiline: y,
                ref: t,
                type: w,
              },
              M,
              { classes: (0, bm.Z)({}, E, { notchedOutline: null }) }
            )
          );
        });
      PT.muiName = "Input";
      var RT = PT,
        LT = [
          "autoWidth",
          "children",
          "classes",
          "className",
          "defaultOpen",
          "displayEmpty",
          "IconComponent",
          "id",
          "input",
          "inputProps",
          "label",
          "labelId",
          "MenuProps",
          "multiple",
          "native",
          "onClose",
          "onOpen",
          "open",
          "renderValue",
          "SelectDisplayProps",
          "variant",
        ],
        IT = {
          name: "MuiSelect",
          overridesResolver: function (e, t) {
            return t.root;
          },
          shouldForwardProp: function (e) {
            return (0, Yx.FO)(e) && "variant" !== e;
          },
          slot: "Root",
        },
        NT = (0, Yx.ZP)(fT, IT)(""),
        OT = (0, Yx.ZP)(RT, IT)(""),
        DT = (0, Yx.ZP)(_T, IT)(""),
        UT = a.forwardRef(function (e, t) {
          var n = (0, Kx.Z)({ name: "MuiSelect", props: e }),
            r = n.autoWidth,
            i = void 0 !== r && r,
            s = n.children,
            l = n.classes,
            u = void 0 === l ? {} : l,
            c = n.className,
            d = n.defaultOpen,
            f = void 0 !== d && d,
            h = n.displayEmpty,
            p = void 0 !== h && h,
            v = n.IconComponent,
            m = void 0 === v ? Bk : v,
            g = n.id,
            y = n.input,
            b = n.inputProps,
            _ = n.label,
            x = n.labelId,
            S = n.MenuProps,
            w = n.multiple,
            M = void 0 !== w && w,
            E = n.native,
            k = void 0 !== E && E,
            T = n.onClose,
            A = n.onOpen,
            C = n.open,
            P = n.renderValue,
            R = n.SelectDisplayProps,
            L = n.variant,
            I = void 0 === L ? "outlined" : L,
            N = (0, o.Z)(n, LT),
            O = k ? Tk : Fk,
            D = yM({
              props: n,
              muiFormControl: bM(),
              states: ["variant", "error"],
            }),
            U = D.variant || I,
            z = (0, bm.Z)({}, n, { variant: U, classes: u }),
            F = (function (e) {
              return e.classes;
            })(z),
            B =
              y ||
              {
                standard: (0, hg.jsx)(NT, { ownerState: z }),
                outlined: (0, hg.jsx)(OT, { label: _, ownerState: z }),
                filled: (0, hg.jsx)(DT, { ownerState: z }),
              }[U],
            Z = (0, rS.Z)(t, B.ref);
          return (0,
          hg.jsx)(a.Fragment, { children: a.cloneElement(B, (0, bm.Z)({ inputComponent: O, inputProps: (0, bm.Z)({ children: s, error: D.error, IconComponent: m, variant: U, type: void 0, multiple: M }, k ? { id: g } : { autoWidth: i, defaultOpen: f, displayEmpty: p, labelId: x, MenuProps: S, onClose: T, onOpen: A, open: C, renderValue: P, SelectDisplayProps: (0, bm.Z)({ id: g }, R) }, b, { classes: b ? (0, Nw.Z)(F, b.classes) : F }, y ? y.props.inputProps : {}) }, M && k && "outlined" === U ? { notched: !0 } : {}, { ref: Z, className: (0, Xx.Z)(B.props.className, c) }, !y && { variant: U }, N)) });
        });
      UT.muiName = "Select";
      var zT = UT;
      var FT = (0, $x.Z)("MuiDivider", [
        "root",
        "absolute",
        "fullWidth",
        "inset",
        "middle",
        "flexItem",
        "light",
        "vertical",
        "withChildren",
        "withChildrenVertical",
        "textAlignRight",
        "textAlignLeft",
        "wrapper",
        "wrapperVertical",
      ]);
      var BT = (0, $x.Z)("MuiListItemIcon", ["root", "alignItemsFlexStart"]);
      function ZT(e) {
        return (0, Jx.Z)("MuiMenuItem", e);
      }
      var HT = (0, $x.Z)("MuiMenuItem", [
          "root",
          "focusVisible",
          "dense",
          "disabled",
          "divider",
          "gutters",
          "selected",
        ]),
        VT = [
          "autoFocus",
          "component",
          "dense",
          "divider",
          "disableGutters",
          "focusVisibleClassName",
          "role",
          "tabIndex",
          "className",
        ],
        GT = (0, Yx.ZP)(jS, {
          shouldForwardProp: function (e) {
            return (0, Yx.FO)(e) || "classes" === e;
          },
          name: "MuiMenuItem",
          slot: "Root",
          overridesResolver: function (e, t) {
            var n = e.ownerState;
            return [
              t.root,
              n.dense && t.dense,
              n.divider && t.divider,
              !n.disableGutters && t.gutters,
            ];
          },
        })(function (e) {
          var t,
            n = e.theme,
            r = e.ownerState;
          return (0,
          bm.Z)({}, n.typography.body1, { display: "flex", justifyContent: "flex-start", alignItems: "center", position: "relative", textDecoration: "none", minHeight: 48, paddingTop: 6, paddingBottom: 6, boxSizing: "border-box", whiteSpace: "nowrap" }, !r.disableGutters && { paddingLeft: 16, paddingRight: 16 }, r.divider && { borderBottom: "1px solid ".concat((n.vars || n).palette.divider), backgroundClip: "padding-box" }, ((t = { "&:hover": { textDecoration: "none", backgroundColor: (n.vars || n).palette.action.hover, "@media (hover: none)": { backgroundColor: "transparent" } } }), (0, l.Z)(t, "&.".concat(HT.selected), (0, l.Z)({ backgroundColor: n.vars ? "rgba(".concat(n.vars.palette.primary.mainChannel, " / ").concat(n.vars.palette.action.selectedOpacity, ")") : (0, iw.Fq)(n.palette.primary.main, n.palette.action.selectedOpacity) }, "&.".concat(HT.focusVisible), { backgroundColor: n.vars ? "rgba(".concat(n.vars.palette.primary.mainChannel, " / calc(").concat(n.vars.palette.action.selectedOpacity, " + ").concat(n.vars.palette.action.focusOpacity, "))") : (0, iw.Fq)(n.palette.primary.main, n.palette.action.selectedOpacity + n.palette.action.focusOpacity) })), (0, l.Z)(t, "&.".concat(HT.selected, ":hover"), { backgroundColor: n.vars ? "rgba(".concat(n.vars.palette.primary.mainChannel, " / calc(").concat(n.vars.palette.action.selectedOpacity, " + ").concat(n.vars.palette.action.hoverOpacity, "))") : (0, iw.Fq)(n.palette.primary.main, n.palette.action.selectedOpacity + n.palette.action.hoverOpacity), "@media (hover: none)": { backgroundColor: n.vars ? "rgba(".concat(n.vars.palette.primary.mainChannel, " / ").concat(n.vars.palette.action.selectedOpacity, ")") : (0, iw.Fq)(n.palette.primary.main, n.palette.action.selectedOpacity) } }), (0, l.Z)(t, "&.".concat(HT.focusVisible), { backgroundColor: (n.vars || n).palette.action.focus }), (0, l.Z)(t, "&.".concat(HT.disabled), { opacity: (n.vars || n).palette.action.disabledOpacity }), (0, l.Z)(t, "& + .".concat(FT.root), { marginTop: n.spacing(1), marginBottom: n.spacing(1) }), (0, l.Z)(t, "& + .".concat(FT.inset), { marginLeft: 52 }), (0, l.Z)(t, "& .".concat(oM.root), { marginTop: 0, marginBottom: 0 }), (0, l.Z)(t, "& .".concat(oM.inset), { paddingLeft: 36 }), (0, l.Z)(t, "& .".concat(BT.root), { minWidth: 36 }), t), !r.dense && (0, l.Z)({}, n.breakpoints.up("sm"), { minHeight: "auto" }), r.dense && (0, bm.Z)({ minHeight: 32, paddingTop: 4, paddingBottom: 4 }, n.typography.body2, (0, l.Z)({}, "& .".concat(BT.root, " svg"), { fontSize: "1.25rem" })));
        }),
        WT = a.forwardRef(function (e, t) {
          var n = (0, Kx.Z)({ props: e, name: "MuiMenuItem" }),
            r = n.autoFocus,
            i = void 0 !== r && r,
            s = n.component,
            l = void 0 === s ? "li" : s,
            u = n.dense,
            c = void 0 !== u && u,
            d = n.divider,
            f = void 0 !== d && d,
            h = n.disableGutters,
            p = void 0 !== h && h,
            v = n.focusVisibleClassName,
            m = n.role,
            g = void 0 === m ? "menuitem" : m,
            y = n.tabIndex,
            b = n.className,
            _ = (0, o.Z)(n, VT),
            x = a.useContext(sw),
            S = a.useMemo(
              function () {
                return { dense: c || x.dense || !1, disableGutters: p };
              },
              [x.dense, c, p]
            ),
            w = a.useRef(null);
          (0, ow.Z)(
            function () {
              i && w.current && w.current.focus();
            },
            [i]
          );
          var M,
            E = (0, bm.Z)({}, n, {
              dense: S.dense,
              divider: f,
              disableGutters: p,
            }),
            k = (function (e) {
              var t = e.disabled,
                n = e.dense,
                r = e.divider,
                i = e.disableGutters,
                a = e.selected,
                o = e.classes,
                s = {
                  root: [
                    "root",
                    n && "dense",
                    t && "disabled",
                    !i && "gutters",
                    r && "divider",
                    a && "selected",
                  ],
                },
                l = (0, qx.Z)(s, ZT, o);
              return (0, bm.Z)({}, o, l);
            })(n),
            T = (0, rS.Z)(w, t);
          return (
            n.disabled || (M = void 0 !== y ? y : -1),
            (0, hg.jsx)(sw.Provider, {
              value: S,
              children: (0, hg.jsx)(
                GT,
                (0, bm.Z)(
                  {
                    ref: T,
                    role: g,
                    tabIndex: M,
                    component: l,
                    focusVisibleClassName: (0, Xx.Z)(k.focusVisible, v),
                    className: (0, Xx.Z)(k.root, b),
                  },
                  _,
                  { ownerState: E, classes: k }
                )
              ),
            })
          );
        }),
        jT = WT;
      function XT() {
        var e = (0, a.useState)(!1),
          t = (0, i.Z)(e, 2),
          n = t[0],
          o = t[1],
          s = new go(new Zr(0, 1, 0), 0),
          l = (0, a.useState)([]),
          u = (0, i.Z)(l, 2),
          c = u[0],
          d = u[1],
          f = (0, a.useState)(null),
          h = (0, i.Z)(f, 2),
          p = h[0],
          v = h[1],
          m = (0, a.useState)("Cat_color_1"),
          g = (0, i.Z)(m, 2),
          y = g[0],
          b = g[1],
          _ = ["Ball", "Box"],
          x = function (e) {
            d([].concat((0, r.Z)(c), [_[e]])), console.log(c);
          };
        return (0, hg.jsxs)(hg.Fragment, {
          children: [
            (0, hg.jsxs)(Jw, {
              container: !0,
              style: { height: "90%" },
              children: [
                (0, hg.jsxs)(Jw, {
                  item: !0,
                  xs: 12,
                  style: { height: "70%" },
                  children: [
                    (0, hg.jsxs)(gM, {
                      sx: { m: 1 },
                      variant: "standard",
                      children: [
                        (0, hg.jsx)(CM, {
                          id: "demo-simple-select-label",
                          children: "Texture",
                        }),
                        (0, hg.jsx)(zT, {
                          labelId: "demo-simple-select-label",
                          id: "demo-simple-select",
                          value: y,
                          label: "Texture",
                          onChange: function (e) {
                            b(e.target.value);
                          },
                          children: [
                            "Cat_color_1",
                            "Cat_color_2",
                            "Cat_color_3",
                            "Cat_color_4",
                            "Cat_color_5",
                            "Cat_color_6",
                            "Cat_color_7",
                            "Cat_color_8",
                            "Cat_color_9",
                            "Cat_color_10",
                            "Cat_color_11",
                            "Cat_color_12",
                            "Cat_color_13",
                            "Cat_color_14",
                          ].map(function (e, t) {
                            return (0,
                            hg.jsx)(jT, { value: e, children: e }, t);
                          }),
                        }),
                      ],
                    }),
                    (0, hg.jsx)(Xm, {
                      shadows: !0,
                      children: (0, hg.jsxs)(a.Suspense, {
                        fallback: null,
                        children: [
                          (0, hg.jsx)("ambientLight", {}),
                          (0, hg.jsx)(pg, { texture: y }),
                          c.map(function (e, t) {
                            return "Ball" === e
                              ? (0, hg.jsx)(jx, {
                                  setIsDragging: o,
                                  floorPlane: s,
                                })
                              : "Box" === e
                              ? (0, hg.jsx)(nw, {
                                  setIsDragging: o,
                                  floorPlane: s,
                                })
                              : void 0;
                          }),
                          (0, hg.jsx)("planeHelper", { args: [s, 5, "red"] }),
                          (0, hg.jsx)(Qm, {
                            minAzimuthAngle: -Math.PI / 4,
                            maxAzimuthAngle: Math.PI / 4,
                            minPolarAngle: Math.PI / 6,
                            maxPolarAngle: Math.PI - Math.PI / 6,
                            minZoom: 10,
                            maxZoom: 50,
                            enabled: !n,
                          }),
                        ],
                      }),
                    }),
                  ],
                }),
                (0, hg.jsx)(Jw, {
                  item: !0,
                  xs: 12,
                  style: { height: "30%", overflowY: "scroll" },
                  children: (0, hg.jsx)(kw, {
                    sx: { bgcolor: "background.paper" },
                    children: c.map(function (e, t) {
                      return (0, hg.jsx)(
                        xw,
                        {
                          disableGutters: !0,
                          secondaryAction: (0, hg.jsx)(Lw, {
                            "aria-label": "comment",
                            children: (0, hg.jsx)(cM.Z, {
                              onClick: function () {
                                return (function (e) {
                                  var t = (0, r.Z)(c);
                                  t.splice(e, 1), d(t);
                                })(t);
                              },
                            }),
                          }),
                          children: (0, hg.jsx)(uM, { primary: "".concat(e) }),
                        },
                        t
                      );
                    }),
                  }),
                }),
              ],
            }),
            (0, hg.jsxs)(nS, {
              showLabels: !0,
              value: p,
              onChange: function (e, t) {
                v(t);
              },
              children: [
                (0, hg.jsx)(JS, {
                  label: "Add balls",
                  color: "danger",
                  icon: (0, hg.jsx)(tw.Z, {}),
                  onClick: function () {
                    return x(0);
                  },
                }),
                (0, hg.jsx)(JS, {
                  label: "Add boxes",
                  color: "success",
                  icon: (0, hg.jsx)(QS.Z, {}),
                  onClick: function () {
                    return x(1);
                  },
                }),
                (0, hg.jsx)(JS, {
                  label: "Clear balls",
                  icon: (0, hg.jsx)(ew.Z, {}),
                  onClick: function () {
                    d([]);
                  },
                }),
              ],
            }),
          ],
        });
      }
      (0, t.s)(document.getElementById("root")).render((0, hg.jsx)(XT, {}));
    })();
})();
//# sourceMappingURL=main.300c1b59.js.map
